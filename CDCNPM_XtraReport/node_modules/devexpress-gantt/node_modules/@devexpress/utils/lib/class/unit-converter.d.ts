export declare class UnitConverter {
    static DPI: number;
    static CENTIMETERS_PER_INCH: number;
    static PICAS_PER_INCH: number;
    static hundredthsOfMillimeterToTwipsRound(value: number): number;
    static documentsToTwips(value: number): number;
    static pixelsToTwips(value: number): number;
    static pixelsToTwipsCustomDpi(value: number, dpi: number): number;
    static inchesToTwips(value: number): number;
    static pointsToTwips(value: number): number;
    static picasToTwips(value: number): number;
    static centimetersToTwips(value: number): number;
    static pixelsToTwipsF(value: number): number;
    static pixelsToTwipsFCustomDpi(value: number, dpi: number): number;
    static inchesToTwipsF(value: number): number;
    static pointsToTwipsF(value: number): number;
    static centimetersToTwipsF(value: number): number;
    static twipsToDegrees(value: number): number;
    static twipsToRadians(value: number): number;
    static degreesToTwips(value: number): number;
    static radiansToTwips(value: number): number;
    static radiansToDegrees(value: number): number;
    static twipsToFD(value: number): number;
    static fdToTwips(value: number): number;
    static emuToTwips(val: number): number;
    static twipsToPixels(value: number): number;
    static inchesToPixels(value: number): number;
    static centimeterToPixel(value: number): number;
    static centimeterToPixelF(value: number): number;
    static millimetersToPixel(value: number): number;
    static pointsToPixels(value: number): number;
    static pointsToPixelsF(value: number): number;
    static twipsToPixelsF(value: number): number;
    static pixelsToPoints(value: number): number;
    static pixelsToPointsF(value: number): number;
    static twipsToPoints(value: number): number;
    static twipsToPointsF(value: number): number;
    static twipsToInches(value: number): number;
    static pixelsToInches(value: number): number;
    static twipsToCentimeters(value: number): number;
    static pixelToCentimeters(value: number): number;
    static twipsToHundredthsOfMillimeter(value: number): number;
    static pixelsToHundredthsOfMillimeter(value: number): number;
    static hundredthsOfMillimeterToTwips(value: number): number;
    static twipsToEmu(val: number): number;
    static twipsToDegree(value: number): number;
}
//# sourceMappingURL=unit-converter.d.ts.map
