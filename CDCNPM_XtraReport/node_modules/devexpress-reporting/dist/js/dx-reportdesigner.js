/**
* DevExpress HTML/JS Reporting (dist\js\dx-reportdesigner.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 467);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Utils;

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = ko;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Internal;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = jQuery;

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Widgets;

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Elements;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var linesEditor_1 = __webpack_require__(268);
var metadata_1 = __webpack_require__(28);
var settings_1 = __webpack_require__(12);
var analytics_utils_1 = __webpack_require__(0);
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_metadata_1 = __webpack_require__(450);
var editorTemplates_1 = __webpack_require__(9);
exports.textAlignmentValues = [
    { value: 'TopLeft', displayValue: 'Top Left', localizationId: 'DevExpress.XtraPrinting.TextAlignment.TopLeft' },
    { value: 'MiddleLeft', displayValue: 'Middle Left', localizationId: 'DevExpress.XtraPrinting.TextAlignment.MiddleLeft' },
    { value: 'BottomLeft', displayValue: 'Bottom Left', localizationId: 'DevExpress.XtraPrinting.TextAlignment.BottomLeft' },
    { value: 'TopCenter', displayValue: 'Top Center', localizationId: 'DevExpress.XtraPrinting.TextAlignment.TopCenter' },
    { value: 'MiddleCenter', displayValue: 'Middle Center', localizationId: 'DevExpress.XtraPrinting.TextAlignment.MiddleCenter' },
    { value: 'BottomCenter', displayValue: 'Bottom Center', localizationId: 'DevExpress.XtraPrinting.TextAlignment.BottomCenter' },
    { value: 'TopJustify', displayValue: 'Top Justify', localizationId: 'DevExpress.XtraPrinting.TextAlignment.TopJustify' },
    { value: 'MiddleJustify', displayValue: 'Middle Justify', localizationId: 'DevExpress.XtraPrinting.TextAlignment.MiddleJustify' },
    { value: 'BottomJustify', displayValue: 'Bottom Justify', localizationId: 'DevExpress.XtraPrinting.TextAlignment.BottomJustify' },
    { value: 'TopRight', displayValue: 'Top Right', localizationId: 'DevExpress.XtraPrinting.TextAlignment.TopRight' },
    { value: 'MiddleRight', displayValue: 'Middle Right', localizationId: 'DevExpress.XtraPrinting.TextAlignment.MiddleRight' },
    { value: 'BottomRight', displayValue: 'Bottom Right', localizationId: 'DevExpress.XtraPrinting.TextAlignment.BottomRight' },
];
exports.borderDashStyleValues = [
    { value: 'Solid', displayValue: 'Solid', localizationId: 'DevExpress.XtraPrinting.BorderDashStyle.Solid' },
    { value: 'Dash', displayValue: 'Dash', localizationId: 'DevExpress.XtraPrinting.BorderDashStyle.Dash' },
    { value: 'Dot', displayValue: 'Dot', localizationId: 'DevExpress.XtraPrinting.BorderDashStyle.Dot' },
    { value: 'DashDot', displayValue: 'Dash-Dot', localizationId: 'DevExpress.XtraPrinting.BorderDashStyle.DashDot' },
    { value: 'DashDotDot', displayValue: 'Dash-Dot-Dot', localizationId: 'DevExpress.XtraPrinting.BorderDashStyle.DashDotDot' }
];
exports.stylePrioritySerializationInfo = [
    { propertyName: 'useBackColor', modelName: '@UseBackColor', defaultVal: true, from: analytics_utils_1.parseBool },
    { propertyName: 'useBorderColor', modelName: '@UseBorderColor', defaultVal: true, from: analytics_utils_1.parseBool },
    { propertyName: 'useBorderDashStyle', modelName: '@UseBorderDashStyle', defaultVal: true, from: analytics_utils_1.parseBool },
    { propertyName: 'useBorders', modelName: '@UseBorders', defaultVal: true, from: analytics_utils_1.parseBool },
    { propertyName: 'useBorderWidth', modelName: '@UseBorderWidth', defaultVal: true, from: analytics_utils_1.parseBool },
    { propertyName: 'useFont', modelName: '@UseFont', defaultVal: true, from: analytics_utils_1.parseBool },
    { propertyName: 'useForeColor', modelName: '@UseForeColor', defaultVal: true, from: analytics_utils_1.parseBool },
    { propertyName: 'usePadding', modelName: '@UsePadding', defaultVal: true, from: analytics_utils_1.parseBool },
    { propertyName: 'useTextAlignment', modelName: '@UseTextAlignment', defaultVal: true, from: analytics_utils_1.parseBool }
];
exports.xlsxFormatString = { propertyName: 'xlsxFormatString', modelName: '@XlsxFormatString', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('text'), displayName: 'Xlsx Format String', localizationId: 'DevExpress.XtraReports.UI.XRControl.XlsxFormatString' };
exports.name = { propertyName: 'name', modelName: '@Name', displayName: 'Name', localizationId: 'DevExpress.XtraReports.UI.XRControl.Name', editor: editorTemplates_1.designerEditorTemplates.getEditor('name'), validationRules: analytics_internal_1.nameValidationRules };
exports.displayName = { propertyName: 'displayNameObject', localizable: true, modelName: '@DisplayName', editor: analytics_widgets_1.editorTemplates.getEditor('text'), defaultVal: '', displayName: 'Display Name', localizationId: 'DevExpress.XtraReports.UI.XtraReport.DisplayName' };
exports.text = { propertyName: 'text', modelName: '@Text', defaultVal: '', displayName: 'Text', localizationId: 'DevExpress.XtraReports.UI.XRControl.Text', editor: analytics_widgets_1.editorTemplates.getEditor('text'), localizable: true };
exports.textArea = { propertyName: 'textArea', displayName: 'Text', localizationId: 'DevExpress.XtraReports.UI.XRControl.Text', defaultVal: '', localizable: true, editor: analytics_internal_1.extend({}, analytics_widgets_1.editorTemplates.getEditor('stringArray'), { editorType: linesEditor_1.LinesEditor }) };
exports.textTrimming = {
    propertyName: 'textTrimming', modelName: '@TextTrimming', displayName: 'Text Trimming', localizationId: 'DevExpress.XtraReports.UI.XRControl.TextTrimming', defaultVal: 'Character', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        { value: 'None', displayValue: 'None', localizationId: 'System.Drawing.StringTrimming.None' },
        { value: 'Character', displayValue: 'Character', localizationId: 'System.Drawing.StringTrimming.Character' },
        { value: 'Word', displayValue: 'Word', localizationId: 'System.Drawing.StringTrimming.Word' },
        { value: 'EllipsisCharacter', displayValue: 'Ellipsis Character', localizationId: 'System.Drawing.StringTrimming.EllipsisCharacter' },
        { value: 'EllipsisWord', displayValue: 'Ellipsis Word', localizationId: 'System.Drawing.StringTrimming.EllipsisWord' },
        { value: 'EllipsisPath', displayValue: 'Ellipsis Path', localizationId: 'System.Drawing.StringTrimming.EllipsisPath' }
    ]
};
exports.size = { propertyName: 'size', modelName: '@SizeF', from: analytics_elements_1.Size.fromString, displayName: 'Size', localizationId: 'DevExpress.XtraReports.UI.XRControl.Size', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizable: true };
exports.location = { propertyName: 'location', modelName: '@LocationFloat', from: analytics_elements_1.Point.fromString, displayName: 'Location', localizationId: 'DevExpress.XtraReports.UI.XRControl.Location', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizable: true };
exports.defaultBooleanValuesArray = [
    { value: 'True', displayValue: 'True', localizationId: 'DevExpress.Utils.DefaultBoolean.True' },
    { value: 'False', displayValue: 'False', localizationId: 'DevExpress.Utils.DefaultBoolean.False' },
    { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.Utils.DefaultBoolean.Default' }
];
exports.tag = { propertyName: 'tag', modelName: '@Tag', displayName: 'Tag', localizationId: 'DevExpress.XtraReports.UI.XRControl.Tag', editor: analytics_widgets_1.editorTemplates.getEditor('text'), defaultVal: '' };
exports.lockedInUserDesigner = { propertyName: '_lockedInUserDesigner', modelName: '@LockedInUserDesigner', defaultVal: false, from: analytics_utils_1.parseBool };
exports.visible = { propertyName: 'visible', modelName: '@Visible', localizable: true, defaultVal: true, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), displayName: 'Visible', localizationId: 'DevExpress.XtraReports.UI.XRControl.Visible' };
exports.backColor = analytics_internal_1.extend({ displayName: 'Background Color', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), localizationId: 'DevExpress.XtraReports.UI.XRControl.BackColor' }, metadata_1.previewBackColor);
exports.foreColor = analytics_internal_1.extend({ displayName: 'Foreground Color', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), localizationId: 'DevExpress.XtraReports.UI.XRControlStyle.ForeColor' }, metadata_1.previewForeColor);
exports.font = analytics_internal_1.extend({ displayName: 'Font', editor: analytics_widgets_1.editorTemplates.getEditor('font'), localizationId: 'DevExpress.XtraReports.UI.XRTableOfContentsLevelBase.Font', localizable: true }, metadata_1.previewFont);
exports.expressionableFont = analytics_internal_1.extend({}, exports.font, { editor: editorTemplates_1.designerEditorTemplates.getEditor('expressionableFont') });
exports.expressionableFontInfo = [
    analytics_widgets_metadata_1.fontName,
    analytics_widgets_metadata_1.fontSize,
    analytics_widgets_metadata_1.fontSizeUnit,
    {
        propertyName: 'modificators', editor: editorTemplates_1.designerEditorTemplates.getEditor('fontModificatorsHighlightable')
    },
];
exports.borderColor = analytics_internal_1.extend({ displayName: 'Border Color', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), localizationId: 'DevExpress.XtraReports.UI.XRControl.BorderColor' }, metadata_1.previewBorderColor);
exports.borders = { propertyName: 'borders', modelName: '@Borders', displayName: 'Borders', localizationId: 'DevExpress.XtraReports.UI.XRControl.Borders', editor: analytics_widgets_1.editorTemplates.getEditor('borders') };
exports.borderWidth = { propertyName: 'borderWidth', modelName: '@BorderWidth', displayName: 'Border Width', localizationId: 'DevExpress.XtraReports.UI.XRControl.BorderWidth', from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.borderDashStyle = analytics_internal_1.extend({
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'Border Dash Style', localizationId: 'DevExpress.XtraReports.UI.XRControl.BorderDashStyle',
    valuesArray: [].concat(exports.borderDashStyleValues, [{ value: 'Double', displayValue: 'Double', localizationId: 'DevExpress.XtraPrinting.BorderDashStyle.Double' }])
}, metadata_1.previewBorderDashStyle);
exports.paddingString = { propertyName: 'padding', modelName: '@Padding' };
exports.padding = { displayName: 'Padding', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), propertyName: 'paddingObj', localizationId: 'DevExpress.XtraReports.UI.XRBarCode.PaddingInfo' };
exports.textAlignment = analytics_internal_1.extend({
    displayName: 'Text Alignment',
    modelName: '@TextAlignment',
    editor: analytics_widgets_1.editorTemplates.getEditor('textAlignment'),
    localizationId: 'DevExpress.XtraReports.UI.XRControl.TextAlignment'
}, metadata_1.previewTextAlignment);
exports.textFitMode = {
    propertyName: 'textFitMode',
    modelName: '@TextFitMode', displayName: 'Text Fit Mode', localizationId: 'DevExpress.XtraReports.UI.XRLabel.TextFitMode', defaultVal: 'None',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.TextFitMode.None' },
        { value: 'GrowOnly', displayValue: 'Grow Only', localizationId: 'DevExpress.XtraReports.UI.TextFitMode.GrowOnly' },
        { value: 'ShrinkOnly', displayValue: 'Shrink Only', localizationId: 'DevExpress.XtraReports.UI.TextFitMode.ShrinkOnly' },
        { value: 'ShrinkAndGrow', displayValue: 'Shrink And Grow', localizationId: 'DevExpress.XtraReports.UI.TextFitMode.ShrinkAndGrow' }
    ]
};
exports.angle = { propertyName: 'angle', modelName: '@Angle', defaultVal: 0, from: analytics_utils_1.floatFromModel, displayName: 'Angle', localizationId: 'DevExpress.XtraReports.UI.XRLabel.Angle', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.canGrow = { propertyName: 'canGrow', modelName: '@CanGrow', defaultVal: true, from: analytics_utils_1.parseBool, displayName: 'Can Grow', localizationId: 'DevExpress.XtraReports.UI.XRControl.CanGrow', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.canShrink = { propertyName: 'canShrink', modelName: '@CanShrink', defaultVal: false, from: analytics_utils_1.parseBool, displayName: 'Can Shrink', localizationId: 'DevExpress.XtraReports.UI.XRControl.CanShrink', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.multiline = { propertyName: 'multiline', modelName: '@Multiline', defaultVal: false, from: analytics_utils_1.parseBool, displayName: 'Multiline', localizationId: 'DevExpress.XtraReports.UI.XRLabel.Multiline', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.wordWrap = { propertyName: 'wordWrap', modelName: '@WordWrap', defaultVal: true, from: analytics_utils_1.parseBool, displayName: 'Word Wrap', localizationId: 'DevExpress.XtraReports.UI.XRControl.WordWrap', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.allowMarkupText = { propertyName: 'allowMarkupText', modelName: '@AllowMarkupText', defaultVal: false, from: analytics_utils_1.parseBool, displayName: 'Allow Markup Text', localizationId: 'DevExpress.XtraReports.UI.XRLabel.AllowMarkupText', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.autoWidth = { propertyName: 'autoWidth', modelName: '@AutoWidth', defaultVal: false, from: analytics_utils_1.parseBool, displayName: 'Auto Width', localizationId: 'DevExpress.XtraReports.UI.XRLabel.AutoWidth', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.keepTogether = { propertyName: 'keepTogether', modelName: '@KeepTogether', defaultVal: true, from: analytics_utils_1.parseBool, displayName: 'Keep Together', localizationId: 'DevExpress.XtraReports.UI.XRControl.KeepTogether', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.keepTogetherDefaultValueFalse = { propertyName: 'keepTogether', modelName: '@KeepTogether', defaultVal: false, from: analytics_utils_1.parseBool, displayName: 'Keep Together', localizationId: 'DevExpress.XtraReports.UI.XRControl.KeepTogether', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.processDuplicatesTarget = {
    propertyName: 'processDuplicatesTarget', modelName: '@ProcessDuplicatesTarget', displayName: 'Process Duplicates Target', localizationId: 'DevExpress.XtraReports.UI.XRLabel.ProcessDuplicatesTarget',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Value', from: analytics_utils_1.fromEnum,
    valuesArray: [
        { value: 'Value', displayValue: 'Value', localizationId: 'DevExpress.XtraReports.UI.ProcessDuplicatesTarget.Value' },
        { value: 'Tag', displayValue: 'Tag', localizationId: 'DevExpress.XtraReports.UI.ProcessDuplicatesTarget.Tag' }
    ]
};
exports.processDuplicatesMode = {
    propertyName: 'processDuplicatesMode', modelName: '@ProcessDuplicatesMode', displayName: 'Process Duplicates Mode', localizationId: 'DevExpress.XtraReports.UI.XRLabel.ProcessDuplicatesMode',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Leave', from: analytics_utils_1.fromEnum,
    valuesArray: [
        { value: 'Leave', displayValue: 'Leave', localizationId: 'DevExpress.XtraReports.UI.ProcessDuplicatesMode.Leave' },
        { value: 'Merge', displayValue: 'Merge', localizationId: 'DevExpress.XtraReports.UI.ProcessDuplicatesMode.Merge' },
        { value: 'Suppress', displayValue: 'Suppress', localizationId: 'DevExpress.XtraReports.UI.ProcessDuplicatesMode.Suppress' },
        { value: 'SuppressAndShrink', displayValue: 'Suppress and Shrink', localizationId: 'DevExpress.XtraReports.UI.ProcessDuplicatesMode.SuppressAndShrink' }
    ]
};
exports.processNullValues = {
    propertyName: 'processNullValues',
    modelName: '@ProcessNullValues', displayName: 'Process Null Values', localizationId: 'DevExpress.XtraReports.UI.XRLabel.ProcessNullValues',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Leave', from: analytics_utils_1.fromEnum,
    valuesArray: [
        { value: 'Leave', displayValue: 'Leave', localizationId: 'DevExpress.XtraReports.UI.ValueSuppressType.Leave' },
        { value: 'Suppress', displayValue: 'Suppress', localizationId: 'DevExpress.XtraReports.UI.ValueSuppressType.Suppress' },
        { value: 'SuppressAndShrink', displayValue: 'Suppress and Shrink', localizationId: 'DevExpress.XtraReports.UI.ValueSuppressType.SuppressAndShrink' },
    ]
};
exports.reportPrintOptionsSerializationInfo = [
    { propertyName: 'printOnEmptyDataSource', defaultVal: true, from: analytics_utils_1.parseBool, modelName: '@PrintOnEmptyDataSource', displayName: 'Print when Data Source is Empty', localizationId: 'DevExpress.XtraReports.UI.ReportPrintOptions.PrintOnEmptyDataSource', editor: analytics_widgets_1.editorTemplates.getEditor('bool') },
    { propertyName: 'detailCountAtDesignTime', defaultVal: 0, from: analytics_utils_1.floatFromModel, modelName: '@DetailCountAtDesignTime', displayName: 'Detail Count at Design Time', localizationId: 'DevExpress.XtraReports.UI.ReportPrintOptions.DetailCountAtDesignTime', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') },
    { propertyName: 'detailCountOnEmptyDataSource', defaultVal: 1, from: analytics_utils_1.floatFromModel, modelName: '@DetailCountOnEmptyDataSource', displayName: 'Detail Count when Data Source is Empty', localizationId: 'DevExpress.XtraReports.UI.ReportPrintOptions.DetailCountOnEmptyDataSource', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') },
    { propertyName: 'blankDetailCount', defaultVal: 0, from: analytics_utils_1.floatFromModel, modelName: '@BlankDetailCount', displayName: 'Blank Detail Count', localizationId: 'DevExpress.XtraReports.UI.ReportPrintOptions.BlankDetailCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') },
    { propertyName: 'detailCount', defaultVal: 0, from: analytics_utils_1.floatFromModel, modelName: '@DetailCount', displayName: 'Detail Count', localizationId: 'DevExpress.XtraReports.UI.ReportPrintOptions.DetailCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }
];
exports.dataAdapter = { propertyName: 'dataAdapter', modelName: '@DataAdapter', link: true, editor: null };
exports.dataSource = { propertyName: 'dataSource', modelName: '@DataSource', displayName: 'Data Source', localizationId: 'DevExpress.XtraReports.UI.XtraReportBase.DataSource', link: true, editor: editorTemplates_1.designerEditorTemplates.getEditor('dataSource') };
exports.dataMember = { propertyName: 'dataMember', modelName: '@DataMember', displayName: 'Data Member', localizationId: 'DevExpress.XtraReports.UI.XtraReportBase.DataMember', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('dataMember') };
exports.filterString = { propertyName: '_filterString', modelName: '@FilterString' };
exports.filterStringEditable = { propertyName: 'filterString', displayName: 'Filter String', localizationId: 'DevExpress.XtraReports.UI.XtraReportBase.FilterString', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('filterEditor') };
exports.bookmark = { propertyName: 'bookmark', localizable: true, modelName: '@Bookmark', displayName: 'Bookmark', localizationId: 'DevExpress.XtraReports.UI.XRControl.Bookmark', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
exports.bookmarkParent = { propertyName: 'bookmarkParent', modelName: '@BookmarkParent', link: true, displayName: 'Parent Bookmark', localizationId: 'DevExpress.XtraReports.UI.XRControl.BookmarkParent', defaultVal: null, editor: editorTemplates_1.designerEditorTemplates.getEditor('reportExplorer') };
exports.navigateUrl = { propertyName: 'navigateUrl', modelName: '@NavigateUrl', displayName: 'Navigation URL', localizationId: 'DevExpress.XtraReports.UI.XRControl.NavigateUrl', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
exports.target = { propertyName: 'target', modelName: '@Target', displayName: 'Navigation Target', localizationId: 'DevExpress.XtraReports.UI.XRControl.Target', editor: analytics_widgets_1.editorTemplates.getEditor('text'), defaultVal: '' };
exports.nullValueText = { propertyName: 'nullValueText', modelName: '@NullValueText', localizable: true, displayName: 'Null Value Text', localizationId: 'DevExpress.XtraReports.UI.XRControl.NullValueText', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
function getSummaryFunctionValues() {
    if (settings_1.DataBindingMode() === 'Bindings') {
        var values = exports.summaryFunctionValues.concat([]);
        values.push({ value: 'Custom', displayValue: 'Custom', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.Custom' });
        return values;
    }
    return exports.summaryFunctionValues;
}
exports.getSummaryFunctionValues = getSummaryFunctionValues;
exports.summaryFunctionValues = [
    { value: 'Avg', displayValue: 'Average', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.Avg' },
    { value: 'Count', displayValue: 'Count', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.Count' },
    { value: 'Sum', displayValue: 'Sum', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.Sum' },
    { value: 'RunningSum', displayValue: 'Running Summary', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.RunningSum' },
    { value: 'Percentage', displayValue: 'Percentage', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.Percentage' },
    { value: 'Max', displayValue: 'Max', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.Max' },
    { value: 'Min', displayValue: 'Min', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.Min' },
    { value: 'Median', displayValue: 'Median', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.Median' },
    { value: 'Var', displayValue: 'Variance', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.Var' },
    { value: 'VarP', displayValue: 'Population Variance', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.VarP' },
    { value: 'StdDev', displayValue: 'Standard Deviation', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.StdDev' },
    { value: 'StdDevP', displayValue: 'Standard Population Deviation', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.StdDevP' },
    { value: 'DAvg', displayValue: 'Average (Distinct)', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.DAvg' },
    { value: 'DCount', displayValue: 'Count (Distinct)', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.DCount' },
    { value: 'DSum', displayValue: 'Summary (Distinct)', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.DSum' },
    { value: 'DVar', displayValue: 'Variance (Distinct)', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.DVar' },
    { value: 'DVarP', displayValue: 'Population Variance (Distinct)', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.DVarP' },
    { value: 'DStdDev', displayValue: 'Standard Deviation (Distinct)', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.DStdDev' },
    { value: 'DStdDevP', displayValue: 'Standard Population Deviation (Distinct)', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.DStdDevP' },
    { value: 'RecordNumber', displayValue: 'Record Number', localizationId: 'DevExpress.XtraReports.UI.SummaryFunc.RecordNumber' }
];
exports.textFormatString = { propertyName: 'textFormatString', localizable: true, modelName: '@TextFormatString', defaultVal: '', editor: editorTemplates_1.designerEditorTemplates.getEditor('formatEditor'), displayName: 'Text Format String', localizationId: 'DevExpress.XtraReports.UI.XRControl.TextFormatString' };
function createSummarySerializationInfo(summaryFunctions) {
    return [
        {
            propertyName: 'Running', modelName: '@Running', defaultVal: 'None',
            editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'Running', localizationId: 'DevExpress.XtraReports.UI.XRSummary.Running',
            valuesArray: [
                { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.SummaryRunning.None' },
                { value: 'Group', displayValue: 'Group', localizationId: 'DevExpress.XtraReports.UI.SummaryRunning.Group' },
                { value: 'Report', displayValue: 'Report', localizationId: 'DevExpress.XtraReports.UI.SummaryRunning.Report' },
                { value: 'Page', displayValue: 'Page', localizationId: 'DevExpress.XtraReports.UI.SummaryRunning.Page' }
            ]
        },
        {
            propertyName: 'Func', modelName: '@Func', defaultVal: 'Sum',
            editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'Function', localizationId: 'DevExpress.XtraReports.UI.XRSummary.Func',
            get valuesArray() {
                return summaryFunctions || getSummaryFunctionValues();
            }
        },
        { propertyName: 'formatString', visible: false, modelName: '@FormatString', defaultVal: '', editor: editorTemplates_1.designerEditorTemplates.getEditor('formatEditor'), displayName: 'Format String', localizationId: 'DevExpress.XtraReports.UI.XRSummary.FormatString' },
        { propertyName: 'ignoreNullValues', modelName: '@IgnoreNullValues', defaultVal: false, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), displayName: 'Ignore Null Values', localizationId: 'DevExpress.XtraReports.UI.XRSummary.IgnoreNullValues', },
        { propertyName: 'treatStringsAsNumerics', modelName: '@TreatStringsAsNumerics', defaultVal: true, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), displayName: 'Treat Strings As Numerics', localizationId: 'DevExpress.XtraReports.UI.XRSummary.TreatStringsAsNumerics' }
    ];
}
exports.createSummarySerializationInfo = createSummarySerializationInfo;
exports.summarySerializationInfo = createSummarySerializationInfo();
exports.summary = { propertyName: 'Summary', modelName: 'Summary', info: exports.summarySerializationInfo, editor: editorTemplates_1.designerEditorTemplates.getEditor('summaryEditor'), displayName: 'Summary', localizationId: 'DevExpress.XtraReports.UI.XRLabel.Summary' };
exports.reportPrintOptions = { propertyName: 'reportPrintOptions', modelName: 'ReportPrintOptions', info: exports.reportPrintOptionsSerializationInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), displayName: 'Report Print Options', localizationId: 'DevExpress.XtraReports.UI.XtraReport.ReportPrintOptions' };
exports.lineWidth = { propertyName: 'lineWidth', modelName: '@LineWidth', defaultVal: 1, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Line Width', localizationId: 'DevExpress.XtraReports.UI.XRLine.LineWidth' };
exports.lineStyle = {
    propertyName: 'lineStyle',
    modelName: '@LineStyle', defaultVal: 'Solid', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'Line Style', localizationId: 'DevExpress.XtraReports.UI.XRLine.LineStyle',
    valuesArray: [
        { value: 'Solid', displayValue: 'Solid', localizationId: 'DevExpress.XtraCharts.DashStyle.Solid' },
        { value: 'Dash', displayValue: 'Dash', localizationId: 'DevExpress.XtraCharts.DashStyle.Dash' },
        { value: 'Dot', displayValue: 'Dot', localizationId: 'DevExpress.XtraCharts.DashStyle.Dot' },
        { value: 'DashDot', displayValue: 'Dash-Dot', localizationId: 'DevExpress.XtraCharts.DashStyle.DashDot' },
        { value: 'DashDotDot', displayValue: 'Dash-Dot-Dot', localizationId: 'DevExpress.XtraCharts.DashStyle.DashDotDot' }
    ]
};
exports.dpi = { propertyName: 'dpi', modelName: '@Dpi', defaultVal: 100, from: analytics_utils_1.floatFromModel };
exports.canPublish = { propertyName: 'canPublish', modelName: '@CanPublish', displayName: 'Can Publish', localizationId: 'DevExpress.XtraReports.UI.XRControl.CanPublish', defaultVal: true, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.rtl = {
    propertyName: 'rightToLeft', modelName: '@RightToLeft', displayName: 'Right To Left', localizationId: 'DevExpress.XtraReports.UI.XRControl.RightToLeft', defaultVal: 'Inherit', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        { value: 'No', displayValue: 'No', localizationId: 'DevExpress.XtraReports.UI.RightToLeft.No' },
        { value: 'Yes', displayValue: 'Yes', localizationId: 'DevExpress.XtraReports.UI.RightToLeft.Yes' },
        { value: 'Inherit', displayValue: 'Inherit', localizationId: 'DevExpress.XtraReports.UI.RightToLeft.Inherit' }
    ]
};
exports.imageType = {
    propertyName: 'imageType', displayName: 'Image Type', localizationId: 'DevExpress.XtraReports.UI.XRChart.ImageType', modelName: '@ImageType', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Metafile', valuesArray: [
        { value: 'Metafile', displayValue: 'Metafile', localizationId: 'DevExpress.XtraReports.UI.ChartImageType.Metafile' },
        { value: 'Bitmap', displayValue: 'Bitmap', localizationId: 'DevExpress.XtraReports.UI.ChartImageType.Bitmap' }
    ]
};
exports.paddingGroup = [exports.paddingString, exports.padding];
exports.accessibleDescription = {
    propertyName: 'accessibleDescription', displayName: 'Accessible Description', localizationId: 'DevExpress.XtraReports.UI.XRControl.AccessibleDescription', modelName: '@AccessibleDescription', editor: analytics_widgets_1.editorTemplates.getEditor('text')
};
exports.cells = { propertyName: 'cells', modelName: 'Cells', array: true };
exports.sortOrder = {
    propertyName: 'sortOrder', modelName: '@SortOrder', displayName: 'Sort Order', localizationId: 'DevExpress.XtraReports.Parameters.DynamicListLookUpSettings.SortOrder', defaultVal: 'None', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        {
            value: 'None', displayValue: 'None', localizationId: 'DevExpress.Data.ColumnSortOrder.None'
        }, {
            value: 'Ascending', displayValue: 'Ascending', localizationId: 'DevExpress.Data.ColumnSortOrder.Ascending'
        }, {
            value: 'Descending', displayValue: 'Descending', localizationId: 'DevExpress.Data.ColumnSortOrder.Descending'
        }
    ]
};


/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Wizard;

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Widgets.Internal;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
exports.designerEditorTemplates = new analytics_widgets_1.EditorTemplates();


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrReportelement_1 = __webpack_require__(27);
var analytics_utils_1 = __webpack_require__(0);
var analytics_elements_1 = __webpack_require__(5);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_internal_1 = __webpack_require__(8);
var xrBand_1 = __webpack_require__(15);
var _dataBindingMode_1 = __webpack_require__(33);
var style_1 = __webpack_require__(21);
var _createObjectFromInfo_1 = __webpack_require__(123);
var xrVerticalBand_1 = __webpack_require__(25);
var anchoring_1 = __webpack_require__(187);
var sortingOptions_1 = __webpack_require__(279);
var xrReport_1 = __webpack_require__(16);
var getNearestBand_1 = __webpack_require__(127);
var XRControlViewModel = (function (_super) {
    __extends(XRControlViewModel, _super);
    function XRControlViewModel(control, parent, serializer) {
        var _a;
        var _this = _super.call(this, control, parent, serializer) || this;
        if (_this.text) {
            _this.textArea = _this.text;
        }
        _this.controls = analytics_internal_1.deserializeChildArray(control.Controls, _this, function (childControl) { return _this.createControl(childControl, serializer); });
        if (_this.anchorVertical || _this.anchorHorizontal) {
            _this.anchoring(parent);
            _this._disposables.push(_this.parentModel.subscribe(function (newParent) {
                if (_this.vertAnchoring && _this.horAnchoring && newParent) {
                    _this.vertAnchoring.start(newParent.size.height, _this);
                    _this.horAnchoring.start(newParent.size.width, _this);
                }
                else {
                    _this.anchoring(newParent);
                }
            }));
        }
        if (_this.interactiveSorting) {
            _this.interactiveSorting = new sortingOptions_1.SortingOptions(control['InteractiveSorting'], _this.root, serializer);
            _this._disposables.push(_this.interactiveSorting);
        }
        _this._disposables.push(_this.hasBindings = ko.pureComputed(function () {
            var bindings = _this.dataBindings && _this.dataBindings();
            return !!bindings && bindings.filter(function (dataBinding) { return !dataBinding.isEmpty(); }).length > 0 || _this.hasExpressionBindings();
        }));
        var stylesObject = _createObjectFromInfo_1.createObjectFromInfo(_this, style_1.stylesInfo);
        if (stylesObject) {
            _this[style_1.stylesObj.propertyName] = stylesObject;
        }
        if (_this['Summary'])
            _this['Summary'].isPropertyVisible = function (propertyName) {
                return propertyName === 'Func' ? _this.isPropertyVisible('dataBindings') : true;
            };
        if (_this.textFormatString) {
            var binding = _this['dataBindings'] && _this['dataBindings']().filter(function (binding) { return binding.propertyName() === 'Text'; })[0];
            var summaryFormatString = null;
            var bindingFormatString = null;
            _this['_textFormatString'] = ko.observable(_this.textFormatString.peek());
            _a = [_this['Summary'], binding].map(function (obj) {
                if (obj && obj['formatString']) {
                    obj['_formatString'] = ko.observable(obj['formatString'].peek());
                    _this._disposables.push(obj['formatString'] = ko.computed({
                        read: function () {
                            return _this['_textFormatString']() ||
                                obj['_formatString']();
                        },
                        write: function (x) { _this.textFormatString(x); }
                    }));
                    return obj['_formatString'];
                }
            }), summaryFormatString = _a[0], bindingFormatString = _a[1];
            _this._disposables.push(_this.textFormatString = ko.computed({
                read: function () {
                    return _this['_textFormatString']() ||
                        summaryFormatString && summaryFormatString() ||
                        bindingFormatString && bindingFormatString();
                },
                write: function (x) {
                    _this['_textFormatString'](x);
                    summaryFormatString && summaryFormatString(null);
                    bindingFormatString && bindingFormatString(null);
                }
            }));
        }
        _this.dataBindingsAreValid = ko.observable(true);
        _this._disposables.push(ko.computed(function () {
            var _a;
            var bindings = _this.dataBindings && _this.dataBindings();
            if (bindings) {
                if (bindings.length === 0)
                    _this.dataBindingsAreValid(true);
                else {
                    var report = _this.root;
                    if (!report || !(report instanceof xrReport_1.ReportViewModel))
                        return;
                    var dsHelper = report.dsHelperProvider();
                    var parameters = report.parameters();
                    var fieldListProvider = report.getControlFactory().fieldListProvider();
                    if (!dsHelper || !parameters || !fieldListProvider)
                        return;
                    var defaultDataSourceInfo = dsHelper.findDataSourceInfo(ko.unwrap(_createObjectFromInfo_1.findFirstParentWithPropertyName(_this, 'dataSource').dataSource));
                    var reqFinished = 0;
                    var reqCount = bindings.length;
                    var reqResult = true;
                    var deferred = $.Deferred();
                    for (var i = 0; i < bindings.length; i++) {
                        var binding = bindings[i], parameter = binding.parameter(), dataMember = binding.dataMember(), dataSource = binding.dataSource();
                        if (parameter) {
                            if (dataSource)
                                reqResult = false;
                            else
                                reqResult = reqResult && parameters.some(function (x) { return x.name === parameter.name; });
                            reqFinished++;
                        }
                        else if (dataMember) {
                            var dsInfo = null;
                            if (dataSource) {
                                dsInfo = dataSource['dataSourceInfo'];
                                if (dsHelper.usedDataSources().indexOf(dsInfo) < 0) {
                                    reqResult = false;
                                    reqFinished++;
                                }
                            }
                            else {
                                dsInfo = defaultDataSourceInfo;
                            }
                            if (dsInfo) {
                                var lastPart = dataMember.slice(dataMember.lastIndexOf('.') + 1);
                                fieldListProvider.getItems(new analytics_utils_1.PathRequest((_a = [dsInfo.id || dsInfo.ref]).concat.apply(_a, dataMember.split('.').slice(0, -1)).join('.')))
                                    .done(function (result) { if (result.every(function (x) { return x.isList || x.name !== lastPart; }))
                                    reqResult = false; })
                                    .fail(function () { reqResult = false; })
                                    .always(function () { if (++reqFinished === reqCount)
                                    deferred.resolve(reqResult); });
                            }
                            else {
                                reqResult = false;
                                reqFinished++;
                            }
                        }
                        else if (dataSource) {
                            reqResult = false;
                            reqFinished++;
                        }
                        else
                            reqFinished++;
                        if (!reqResult) {
                            reqFinished += reqCount - 1 - i;
                            break;
                        }
                    }
                    if (reqFinished === reqCount)
                        deferred.resolve(reqResult);
                    deferred.done(function (result) { _this.dataBindingsAreValid(result); });
                }
            }
        }));
        return _this;
    }
    XRControlViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.controls);
        this.resetObservableArray(this.controls);
    };
    XRControlViewModel.prototype.anchoring = function (parent) {
        if (parent) {
            this.vertAnchoring = new anchoring_1.VerticalAcnhoring(parent.size.height, this, this.anchorVertical);
            this.horAnchoring = new anchoring_1.HorizontalAnchoring(parent.size.width, this, this.anchorHorizontal);
            this._disposables.push(this.vertAnchoring);
            this._disposables.push(this.horAnchoring);
        }
    };
    XRControlViewModel.prototype.getNearestParent = function (target) {
        if (['XRPageBreak', 'XRPivotGrid', 'XRSubreport', 'XRTableOfContents', 'XRPdfContent'].indexOf(this.controlType) !== -1) {
            return getNearestBand_1.getNearestBand(target);
        }
        else {
            return _super.prototype.getNearestParent.call(this, target);
        }
    };
    XRControlViewModel.prototype.isPropertyDisabled = function (name) {
        if (name === 'textFitMode') {
            return this['canGrow']() || this['canShrink']() || (this.controlType === 'XRLabel' && this['autoWidth']());
        }
        else if (name === 'processNullValues') {
            return this['Summary'] && ko.unwrap(this['Summary']['Running']) !== 'None';
        }
        else if (name === 'allowMarkupText') {
            return this['textEditOptions'] && ko.unwrap(this['textEditOptions']['enabled']);
        }
        else if (name === 'textEditOptions' || name === 'angle') {
            return this['allowMarkupText'] && ko.unwrap(this['allowMarkupText']);
        }
        return _super.prototype.isPropertyDisabled.call(this, name);
    };
    XRControlViewModel.prototype.isPropertyVisible = function (name) {
        if (this.multiline && this.multiline()) {
            if (name === 'text')
                return false;
        }
        else {
            if (name === 'textArea')
                return false;
        }
        return _super.prototype.isPropertyVisible.call(this, name);
    };
    XRControlViewModel.prototype.hasExpressionBindings = function () {
        return !!(this.expressionBindings && this.expressionBindings().filter(function (binding) { return !!binding.expression(); })[0]);
    };
    XRControlViewModel.prototype.hasDataBindingByName = function (property) {
        if (property === void 0) { property = 'Text'; }
        var bindings = this.dataBindings && this.dataBindings() && this.dataBindings().filter(function (dataBinding) { return !dataBinding.isEmpty(); });
        if (!!bindings && bindings.length > 0) {
            var binding = this.dataBindings()['findBinding'](property);
            return !!binding && !binding.isEmpty();
        }
        return !!(this.expressionBindings && this.expressionBindings().filter(function (binding) { return binding.propertyName() === property; }).length > 0);
    };
    Object.defineProperty(XRControlViewModel.prototype, "hasDefaultBindingProperty", {
        get: function () {
            return !!this.getControlInfo().defaultBindingName;
        },
        enumerable: true,
        configurable: true
    });
    XRControlViewModel.prototype.getExpressionBinding = function (property, event) {
        if (property === void 0) { property = 'Text'; }
        if (event === void 0) { event = 'BeforePrint'; }
        if (!this.expressionBindings)
            return null;
        var binding = this.expressionBindings().filter(function (binding) { return binding.propertyName() === property && binding.eventName() === event; })[0];
        return binding && binding.expression();
    };
    XRControlViewModel.prototype.setExpressionBinding = function (value, property, event) {
        if (property === void 0) { property = 'Text'; }
        if (event === void 0) { event = 'BeforePrint'; }
        if (!this.expressionBindings)
            return;
        var binding = this.expressionBindings().filter(function (binding) { return binding.propertyName() === property && binding.eventName() === event; })[0];
        binding && binding.expression(value);
    };
    XRControlViewModel.prototype.getControlInfo = function () {
        return _super.prototype.getControlInfo.call(this);
    };
    XRControlViewModel.prototype.getDefaultBinding = function () {
        var bindingName = this.getControlInfo().defaultBindingName;
        if (this.dataBindingMode !== _dataBindingMode_1.DataBindingMode.Bindings) {
            return this.expressionObj.getExpression(bindingName, 'BeforePrint');
        }
        else {
            return this.dataBindings().filter(function (x) { return x.propertyName() === bindingName; })[0];
        }
    };
    return XRControlViewModel;
}(xrReportelement_1.XRReportElementViewModel));
exports.XRControlViewModel = XRControlViewModel;
var XRControlSurfaceBase = (function (_super) {
    __extends(XRControlSurfaceBase, _super);
    function XRControlSurfaceBase(control, context, unitProperties) {
        var _this = _super.call(this, control, context, unitProperties) || this;
        _this.delta = 0.5;
        _this.template = 'dxrd-control';
        _this.selectiontemplate = 'dxrd-control-selection';
        _this.contenttemplate = 'dxrd-control-content';
        _this.displayNameParameters = ko.pureComputed(function () {
            var control = _this.getControlModel();
            var parameters = {
                text: null,
                isExpression: true,
                dataSource: null,
                dataMember: null,
                dataMemberOffset: null,
                allowMarkupText: false,
                wordWrap: false,
                fontSize: 0,
                fontUnit: null
            };
            if (control['controls'] && control['controls']().length !== 0) {
                parameters.text = '';
                return parameters;
            }
            parameters.text = control['getExpressionBinding'] && control['getExpressionBinding']();
            parameters.isExpression = !!parameters.text;
            parameters.allowMarkupText = control['allowMarkupText'] && control['allowMarkupText']();
            parameters.wordWrap = control['wordWrap'] && control['wordWrap']();
            if (control['font']) {
                var _font = new analytics_widgets_internal_1.FontModel(control['font']);
                parameters.fontSize = _font.size();
                parameters.fontUnit = _font.unit();
                _font.dispose();
            }
            if (parameters.isExpression) {
                parameters.dataMember = control['getPath'] && control['getPath']('expression') || '';
                return parameters;
            }
            if (control['dataBindings'] && _this.hasBindings) {
                var textBinding = analytics_internal_1.getFirstItemByPropertyValue(control['dataBindings'](), 'propertyName', 'Text');
                if (textBinding && textBinding.dataMember()) {
                    var dataMember = textBinding.dataMember();
                    var dataSource = textBinding.dataSource();
                    var parentWithDS = _createObjectFromInfo_1.findFirstParentWithPropertyName(control, 'dataSource');
                    var rootDataMember = parentWithDS['dataMember'] && parentWithDS['dataMember']() || '';
                    var rootDataSource = parentWithDS['dataSource'] && parentWithDS['dataSource']() || null;
                    if ((!dataSource || dataSource === rootDataSource) && dataMember.indexOf(rootDataMember) === 0 && dataMember.charAt(rootDataMember.length) === '.') {
                        parameters.dataMemberOffset = rootDataMember;
                        parameters.dataMember = dataMember.substr(rootDataMember.length + 1);
                    }
                    else {
                        parameters.dataMemberOffset = '';
                        parameters.dataMember = textBinding.dataMember();
                    }
                    parameters.dataSource = dataSource || rootDataSource;
                    return parameters;
                }
            }
            parameters.text = _this.displayText();
            return parameters;
        });
        _this.displayName = ko.pureComputed(function () {
            var parameters = _this.displayNameParameters();
            return parameters.dataMember ? ('[' + parameters.dataMember + ']') : (parameters.text || '');
        });
        _this._disposables.push(_this.contentSizes = ko.pureComputed(function () { return _this.cssCalculator.contentSizeCss(_this.rect().width, _this.rect().height, _this._context.zoom()); }));
        _this._disposables.push(_this.contentHeightWithoutZoom = ko.pureComputed(function () { return _this.contentSizes().height / _this._context.zoom(); }));
        _this._disposables.push(_this.contentWidthWithoutZoom = ko.pureComputed(function () { return _this.contentSizes().width / _this._context.zoom(); }));
        _this._disposables.push(_this.borderCss = ko.pureComputed(function () {
            return (!control['borders'] || control['borders']() === 'None') ? { 'border': 'solid 1px Silver' } : _this.cssCalculator.borderCss(_this._context.zoom());
        }));
        _this._disposables.push(_this.isIntersect = ko.pureComputed(function () {
            return _this.isThereIntersectionWithUsefulArea() ||
                _this.isThereIntersectionWithCrossBandControls() ||
                _this.isThereIntersectionWithControls();
        }).extend({ deferred: true }));
        _this._disposables.push(_this.adorntemplate = ko.computed(function () { return _this.getAdornTemplate(); }));
        _this._disposables.push(_this.displayNameParameters);
        _this._disposables.push(_this.displayName);
        return _this;
    }
    XRControlSurfaceBase.prototype._isThereIntersectionWithUsefulArea = function (useFullWidth) {
        var right = ko.unwrap(this.getRoot().rtl) && this.container() ? (this.container().rect().width - this.rect().left) : this.rect().right;
        return right > useFullWidth && Math.abs(right - useFullWidth) > this.delta;
    };
    XRControlSurfaceBase._appendValue = function (accumulator, value, needToAppend) {
        if (needToAppend === void 0) { needToAppend = true; }
        if (needToAppend) {
            accumulator += accumulator ? (' ' + value) : value;
        }
        return accumulator;
    };
    Object.defineProperty(XRControlSurfaceBase.prototype, "_unitAbsoluteRect", {
        get: function () {
            var parentAbsoluteRect = this.parent && this.parent['_unitAbsoluteRect'];
            if (parentAbsoluteRect) {
                return {
                    top: parentAbsoluteRect.top + this._unitRect.top,
                    left: parentAbsoluteRect.left + this._unitRect.left,
                    right: parentAbsoluteRect.left + this._unitRect.left + this._unitRect.width,
                    bottom: parentAbsoluteRect.top + this._unitRect.top + this._unitRect.height,
                    width: this._unitRect.width,
                    height: this._unitRect.height
                };
            }
            else {
                return this._unitRect;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XRControlSurfaceBase.prototype, "_unitRect", {
        get: function () {
            var location = this._control['location'] || new analytics_elements_1.Point(0, 0), size = this._control['size'] || new analytics_elements_1.Size(0, 0);
            return {
                top: location.y(),
                left: location.x(),
                right: location.x() + size.width(),
                bottom: location.y() + size.height(),
                width: size.width(),
                height: size.height()
            };
        },
        enumerable: true,
        configurable: true
    });
    XRControlSurfaceBase.prototype.checkParent = function (surfaceParent) {
        var thisParent = this.parent instanceof xrBand_1.BandSurface || this.parent instanceof xrReport_1.ReportSurface ? null : this.parent;
        var anotherParent = surfaceParent instanceof xrBand_1.BandSurface || this.parent instanceof xrReport_1.ReportSurface ? null : surfaceParent;
        return thisParent === anotherParent;
    };
    XRControlSurfaceBase.prototype.isThereIntersection = function (rect1, rect2) {
        var rect1Right = rect1.right || rect1.left + rect1.width, rect2Right = rect2.right || rect2.left + rect2.width, rect1Bottom = rect1.bottom || rect1.top + rect1.height, rect2Bottom = rect2.bottom || rect2.top + rect2.height;
        return rect1Right > rect2.left && Math.abs(rect1Right - rect2.left) >= 0.0001 &&
            rect2Right > rect1.left && Math.abs(rect2Right - rect1.left) >= 0.0001 &&
            rect1Bottom > rect2.top && Math.abs(rect1Bottom - rect2.top) >= 0.0001 &&
            rect2Bottom > rect1.top && Math.abs(rect2Bottom - rect1.top) >= 0.0001;
    };
    XRControlSurfaceBase.prototype.isThereIntersectionWithParent = function (parentRect, childRect) {
        var rectWidhtElement = childRect.right || childRect.left + childRect.width, rectHeightElement = childRect.bottom || childRect.top + childRect.height;
        return rectWidhtElement > parentRect.width && Math.abs(rectWidhtElement - parentRect.width) > this.delta ||
            rectHeightElement > parentRect.height && Math.abs(rectHeightElement - parentRect.height) > this.delta;
    };
    XRControlSurfaceBase.prototype.isThereIntersectionWithUsefulArea = function () {
        var _container = this.container();
        if (_container instanceof xrBand_1.BandSurface && _container['getUsefulRect'] && _container['getUsefulRect']()) {
            return this._isThereIntersectionWithUsefulArea(this.container()['getUsefulRect']().width);
        }
        else if (_container instanceof xrVerticalBand_1.VerticalBandSurface) {
            return false;
        }
        else {
            var root = this.getRoot(), usefulPageWidth = root.pageWidth() - root.margins.left() - root.margins.right();
            return this._isThereIntersectionWithUsefulArea(usefulPageWidth);
        }
    };
    XRControlSurfaceBase.prototype.isThereIntersectionWithCrossBandControls = function (currentRect) {
        if (currentRect === void 0) { currentRect = this._unitAbsoluteRect; }
        if (!currentRect)
            return false;
        var isThereIntersection = false, crossBandControls = this.getRoot()['crossBandControls']();
        if (this.isThereIntersectionWithNeighborsCollection(currentRect, crossBandControls.filter(function (control) { return control.visible() && control.getControlModel().controlType === 'XRCrossBandLine'; }), '_unitAbsoluteRect')) {
            return true;
        }
        var crossBandBoxControls = crossBandControls.filter(function (control) { return control.visible() && control.getControlModel().controlType === 'XRCrossBandBox'; });
        for (var crossbandIndex = 0; crossbandIndex < crossBandBoxControls.length; crossbandIndex++) {
            var rects = crossBandBoxControls[crossbandIndex]._getCrossBandBoxSides();
            for (var rectIndex = 0; rectIndex < rects.length; rectIndex++) {
                if (this !== crossBandBoxControls[crossbandIndex] && this.isThereIntersection(currentRect, rects[rectIndex])) {
                    isThereIntersection = true;
                    break;
                }
            }
            if (isThereIntersection)
                break;
        }
        return isThereIntersection;
    };
    XRControlSurfaceBase.prototype.isThereIntersectionWithControls = function () {
        var collectionControls = this.parent && this.parent.getChildrenCollection() && this.parent.getChildrenCollection()().filter(function (control) { return !control.isIntersectionDeny; }) || [];
        return this.isThereIntersectionWithParentCollection(this._unitRect)
            || this.isThereIntersectionWithChildCollection()
            || this.isThereIntersectionWithNeighborsCollection(this._unitRect, collectionControls);
    };
    XRControlSurfaceBase.prototype.isThereIntersectionWithParentCollection = function (currentRect, controlRectProperty) {
        if (controlRectProperty === void 0) { controlRectProperty = '_unitRect'; }
        return this.parent && this.parent instanceof XRControlSurfaceBase &&
            this.parent[controlRectProperty] && this.isThereIntersectionWithParent(this.parent[controlRectProperty], currentRect);
    };
    XRControlSurfaceBase.prototype.isThereIntersectionWithChildCollection = function (controlRectProperty) {
        if (controlRectProperty === void 0) { controlRectProperty = '_unitRect'; }
        return this['controls'] && this['controls']().length > 0 &&
            this.isThereIntersectionWithChildControls(this['controls'](), controlRectProperty);
    };
    XRControlSurfaceBase.prototype.isThereIntersectionWithNeighborsCollection = function (currentRect, collectionControls, controlRectProperty) {
        if (controlRectProperty === void 0) { controlRectProperty = '_unitRect'; }
        for (var i = 0; i < collectionControls.length; i++) {
            if (this !== collectionControls[i] && this.isThereIntersection(currentRect, collectionControls[i][controlRectProperty])) {
                return true;
            }
        }
        return false;
    };
    XRControlSurfaceBase.prototype.isThereIntersectionWithChildControls = function (collectionControls, controlRectProperty) {
        if (controlRectProperty === void 0) { controlRectProperty = '_unitRect'; }
        var currentRect = this[controlRectProperty];
        for (var i = 0; i < collectionControls.length; i++) {
            if (this !== collectionControls[i] && this.isThereIntersectionWithParent(currentRect, collectionControls[i][controlRectProperty])) {
                return true;
            }
        }
        return false;
    };
    XRControlSurfaceBase.prototype.getAdornTemplate = function () {
        var result = XRControlSurface._appendValue('', 'dxrd-intersect', this.isIntersect());
        result = XRControlSurface._appendValue(result, 'dxrd-control-rtl', this._control.rtl());
        result = XRControlSurface._appendValue(result, 'dxrd-uiselected', this.selected());
        if (this.hasBindings) {
            if (this._context['validationMode'] && this._context['validationMode']()) {
                if (!this.bindingsIsValid) {
                    result = XRControlSurface._appendValue(result, 'dxrd-image-surface-bounded-notvalid', true);
                }
                else if (this.bindingsHasWarning) {
                    result = XRControlSurface._appendValue(result, 'dxrd-image-surface-bounded-warning', true);
                }
                else
                    result = XRControlSurface._appendValue(result, 'dxrd-image-surface-bounded', true);
            }
            else
                result = XRControlSurface._appendValue(result, 'dxrd-image-surface-bounded', true);
        }
        if (this._control['visible']) {
            result = XRControlSurface._appendValue(result, 'dxrd-surface-hidden', !this._control['visible']());
        }
        return result;
    };
    XRControlSurfaceBase.prototype.hasDataBindingByName = function (propertyName) {
        return !!(this._control['hasDataBindingByName'] && this._control['hasDataBindingByName'](propertyName));
    };
    Object.defineProperty(XRControlSurfaceBase.prototype, "hasBindings", {
        get: function () { return !!(this._control['hasBindings'] && this._control['hasBindings']()); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XRControlSurfaceBase.prototype, "bindingsIsValid", {
        get: function () {
            if (this._control['dataBindingMode'] !== 'Bindings') {
                if (!!this._control['expressionBindings']) {
                    return this._control['expressionObj'].validateExpression();
                }
                return true;
            }
            else {
                return this._control['dataBindingsAreValid']();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XRControlSurfaceBase.prototype, "bindingsHasWarning", {
        get: function () {
            if (this._control['dataBindingMode'] !== 'Bindings') {
                if (!!this._control['expressionBindings']) {
                    return this._control['expressionObj'].hasWarning();
                }
                return false;
            }
        },
        enumerable: true,
        configurable: true
    });
    XRControlSurfaceBase.prototype.displayText = function () {
        if (this._control.controlType == 'XRPanel')
            return analytics_utils_1.getLocalization('Place controls here to keep them together', 'ReportStringId.PanelDesignMsg');
        var text = this._control['text'] && this._control['text']() ? this._control['text']() : '';
        if (this._control['multiline'] && !this._control['multiline']()) {
            text = text.replace(/\r/g, '').replace(/\n/g, '');
        }
        return text;
    };
    return XRControlSurfaceBase;
}(analytics_elements_1.SurfaceElementBase));
exports.XRControlSurfaceBase = XRControlSurfaceBase;
var XRControlSurface = (function (_super) {
    __extends(XRControlSurface, _super);
    function XRControlSurface(control, context) {
        var _this = _super.call(this, control, context, XRControlSurface._unitProperties) || this;
        _this['multiline'] = control['multiline'] || false;
        _this.getUsefulRect = function () {
            var borderWidth = ko.unwrap(control['borderWidth']), borderFlags = control['borders']();
            var rect = { top: 0, left: 0, width: _this.rect().width, height: _this.rect().height };
            if (borderWidth) {
                if (borderFlags === 'All') {
                    rect.height -= 2 * borderWidth;
                    rect.width -= 2 * borderWidth;
                }
                else {
                    if (borderFlags.indexOf('Top') >= 0)
                        rect.height -= borderWidth;
                    if (borderFlags.indexOf('Right') >= 0)
                        rect.width -= borderWidth;
                    if (borderFlags.indexOf('Bottom') >= 0)
                        rect.height -= borderWidth;
                    if (borderFlags.indexOf('Left') >= 0)
                        rect.width -= borderWidth;
                }
            }
            return rect;
        };
        return _this;
    }
    XRControlSurface.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.controls);
        this.resetObservableArray(this.controls);
    };
    XRControlSurface._unitProperties = {
        _height: function (o) {
            return o.size.height;
        },
        _width: function (o) {
            return o.size.width;
        },
        _x: function (o) {
            return o.location.x;
        },
        _y: function (o) {
            return o.location.y;
        }
    };
    return XRControlSurface;
}(XRControlSurfaceBase));
exports.XRControlSurface = XRControlSurface;


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var expressionBinding_1 = __webpack_require__(184);
var formattingrules_1 = __webpack_require__(36);
var style_1 = __webpack_require__(21);
var sortingOptions_1 = __webpack_require__(88);
exports.sizeLocation = [metadata_1.size, metadata_1.location];
exports.bordersProperties = [metadata_1.borders, metadata_1.borderWidth, metadata_1.borderDashStyle, metadata_1.borderColor];
exports.baseControlProperties = [metadata_1.name, metadata_1.visible, metadata_1.dpi, metadata_1.lockedInUserDesigner, metadata_1.tag, expressionBinding_1.expressionBindings];
exports.commonBandProperties = [metadata_1.backColor, formattingrules_1.formattingRuleLinks].concat(exports.baseControlProperties, exports.bordersProperties, metadata_1.paddingGroup);
exports.commonControlProperties = [style_1.styleName, style_1.evenStyleName, metadata_1.accessibleDescription, style_1.oddStyleName, style_1.stylesObj, style_1.stylePriority, metadata_1.canPublish].concat(exports.commonBandProperties);
exports.fontGroup = [metadata_1.expressionableFont, metadata_1.foreColor];
exports.bookmarkGroup = [metadata_1.bookmark, metadata_1.bookmarkParent];
exports.navigationGroup = [metadata_1.navigateUrl, metadata_1.target].concat(exports.bookmarkGroup);
exports.datasourcePrintOptionsGroup = [metadata_1.dataSource, metadata_1.dataMember, metadata_1.dataAdapter, metadata_1.filterString, metadata_1.filterStringEditable, metadata_1.reportPrintOptions];
exports.processGroup = [metadata_1.processDuplicatesMode, metadata_1.processDuplicatesTarget, metadata_1.processNullValues];
exports.canGrowShrinkGroup = [metadata_1.canGrow, metadata_1.canShrink];
exports.labelGroup = [metadata_1.textAlignment, metadata_1.text, metadata_1.textArea, metadata_1.textFormatString, metadata_1.textFitMode, metadata_1.nullValueText,
    metadata_1.keepTogetherDefaultValueFalse, metadata_1.summary, metadata_1.multiline, metadata_1.angle, metadata_1.wordWrap, metadata_1.xlsxFormatString, metadata_1.rtl, sortingOptions_1.interactiveSorting
].concat(exports.commonControlProperties, exports.fontGroup, exports.navigationGroup, exports.canGrowShrinkGroup, exports.processGroup);
exports.unknownSerializationsInfo = [].concat(exports.baseControlProperties, exports.sizeLocation);


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
exports.controlsFactory = analytics_internal_1.createGlobalModuleVariableFunc(null);
exports.smartTagFactory = analytics_internal_1.createGlobalModuleVariableFunc({});
exports.DataBindingMode = analytics_internal_1.createGlobalModuleVariableFunc('Expressions');
exports.HandlerUri = analytics_internal_1.createGlobalModuleVariableFunc('DXXRD.axd');
exports.formatStringEditorCustomSet = analytics_internal_1.createGlobalModuleVariableFunc({});
exports.DefaultCrossTabControl = analytics_internal_1.createGlobalModuleVariableFunc('XRCrossTab');


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var editorTemplates_1 = __webpack_require__(9);
exports.afterPrint = { propertyName: 'onAfterPrint', modelName: '@OnAfterPrint', displayName: 'After Print', localizationId: 'DevExpress.XtraReports.UI.XRControlEvents.OnAfterPrint', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') };
exports.beforePrint = { propertyName: 'onBeforePrint', modelName: '@OnBeforePrint', displayName: 'Before Print', localizationId: 'DevExpress.XtraReports.UI.XRControlEvents.OnBeforePrint', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') };
exports.sizeChanged = { propertyName: 'onSizeChanged', modelName: '@OnSizeChanged', displayName: 'Size Changed', localizationId: 'DevExpress.XtraReports.UI.XRControlEvents.OnSizeChanged', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') };
exports.evaluateBinding = { propertyName: 'onEvaluateBinding', modelName: '@OnEvaluateBinding', displayName: 'Evaluate Binding', localizationId: 'DevExpress.XtraReports.UI.XRControlEvents.OnEvaluateBinding', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') };
exports.truncatedControlEventsSerializationInfo = [
    exports.afterPrint, exports.beforePrint,
    { propertyName: 'onLocationChanged', modelName: '@OnLocationChanged', displayName: 'Location Changed', localizationId: 'DevExpress.XtraReports.UI.XRControlEvents.OnLocationChanged', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onParentChanged', modelName: '@OnParentChanged', displayName: 'Parent Changed', localizationId: 'DevExpress.XtraReports.UI.XRControlEvents.OnParentChanged', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
];
exports.truncatedControlScripts = { propertyName: 'scripts', modelName: 'Scripts', displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.XRPageBreak.Scripts', info: exports.truncatedControlEventsSerializationInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var commonEventsSerializationInfo = exports.truncatedControlEventsSerializationInfo.concat([exports.sizeChanged,
    { propertyName: 'onDraw', modelName: '@OnDraw', displayName: 'Draw', localizationId: 'DevExpress.XtraReports.UI.XRControlEvents.OnDraw', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    exports.evaluateBinding,
    { propertyName: 'onPrintOnPage', modelName: '@OnPrintOnPage', displayName: 'Print on Page', localizationId: 'DevExpress.XtraReports.UI.XRControlEvents.OnPrintOnPage', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }
]);
exports.commonScripts = { propertyName: 'scripts', modelName: 'Scripts', displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.XRControl.Scripts', info: commonEventsSerializationInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var controlEventsSerializationInfo = commonEventsSerializationInfo.concat([
    { propertyName: 'onHtmlItemCreated', modelName: '@OnHtmlItemCreated', displayName: 'Html Item Created', localizationId: 'DevExpress.XtraReports.UI.XRControlEvents.OnHtmlItemCreated', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }
]);
exports.controlScripts = { propertyName: 'scripts', modelName: 'Scripts', displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.XRLine.Scripts', info: controlEventsSerializationInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var textControlEventsSerializationInfo = controlEventsSerializationInfo.concat([
    { propertyName: 'onTextChanged', modelName: '@OnTextChanged', displayName: 'Text Changed', localizationId: 'DevExpress.XtraReports.UI.XRControlEvents.OnTextChanged', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }
]);
exports.textControlScripts = { propertyName: 'scripts', modelName: 'Scripts', displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.XRLabel.Scripts', info: textControlEventsSerializationInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var labelEventsSerializationInfo = textControlEventsSerializationInfo.concat([
    { propertyName: 'onSummaryCalculated', modelName: '@OnSummaryCalculated', displayName: 'Summary Calculated', localizationId: 'DevExpress.XtraReports.UI.XRLabelScripts.OnSummaryCalculated', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onSummaryGetResult', modelName: '@OnSummaryGetResult', displayName: 'Summary Get Result', localizationId: 'DevExpress.XtraReports.UI.XRLabelScripts.OnSummaryGetResult', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onSummaryReset', modelName: '@OnSummaryReset', displayName: 'Summary Reset', localizationId: 'DevExpress.XtraReports.UI.XRLabelScripts.OnSummaryReset', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onSummaryRowChanged', modelName: '@OnSummaryRowChanged', displayName: 'Summary Row Changed', localizationId: 'DevExpress.XtraReports.UI.XRLabelScripts.OnSummaryRowChanged', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }
]);
exports.labelScripts = { propertyName: 'scripts', modelName: 'Scripts', displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.XRLabel.Scripts', info: labelEventsSerializationInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var specificChartEventsSerializationInfo = [
    { propertyName: 'onCustomDrawSeries', modelName: '@OnCustomDrawSeries', displayName: 'Custom Draw a Series', localizationId: 'DevExpress.XtraReports.UI.XRChartScripts.OnCustomDrawSeries', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onCustomDrawSeriesPoint', modelName: '@OnCustomDrawSeriesPoint', displayName: 'Custom Draw a Series Point', localizationId: 'DevExpress.XtraReports.UI.XRChartScripts.OnCustomDrawSeriesPoint', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onCustomDrawAxisLabel', modelName: '@OnCustomDrawAxisLabel', displayName: 'Custom Draw an Axis Label', localizationId: 'DevExpress.XtraReports.UI.XRChartScripts.OnCustomDrawAxisLabel', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onCustomPaint', modelName: '@OnCustomPaint', displayName: 'Custom Paint', localizationId: 'DevExpress.XtraReports.UI.XRChartScripts.OnCustomPaint', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onBoundDataChanged', modelName: '@OnBoundDataChanged', displayName: 'Bound Data Changed', localizationId: 'DevExpress.XtraReports.UI.XRChartScripts.OnBoundDataChanged', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onPieSeriesPointExploded', modelName: '@OnPieSeriesPointExploded', displayName: 'Pie Series Point Exploded', localizationId: 'DevExpress.XtraReports.UI.XRChartScripts.OnPieSeriesPointExploded', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onAxisScaleChanged', modelName: '@OnAxisScaleChanged', displayName: 'Axis Scale Changed', localizationId: 'DevExpress.XtraReports.UI.XRChartScripts.OnAxisScaleChanged', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onSmallChartTextShowing', modelName: '@OnSmallChartTextShowing', displayName: 'Small Chart Text Showing', localizationId: 'DevExpress.XtraReports.UI.XRChartScripts.OnSmallChartTextShowing', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }
], chartEventsSerializationInfo = controlEventsSerializationInfo.concat(specificChartEventsSerializationInfo);
exports.chartScripts = { propertyName: 'scripts', modelName: 'Scripts', info: chartEventsSerializationInfo, displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.XRChart.Scripts', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var specificPivotEventsSerializationInfo = [
    { propertyName: 'onCustomCellDisplayText', modelName: '@OnCustomCellDisplayText', displayName: 'Custom Cell Display Text', localizationId: 'DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomCellDisplayText', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onCustomCellValue', modelName: '@OnCustomCellValue', displayName: 'Custom Cell Value', localizationId: 'DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomCellValue', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onCustomColumnWidth', modelName: '@OnCustomColumnWidth', displayName: 'Custom Column Width', localizationId: 'DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomColumnWidth', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onCustomFieldSort', modelName: '@OnCustomFieldSort', displayName: 'Custom Field Sort', localizationId: 'DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomFieldSort', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onCustomFieldValueCells', modelName: '@OnCustomFieldValueCells', displayName: 'Custom Field Value Cells', localizationId: 'DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomFieldValueCells', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onCustomGroupInterval', modelName: '@OnCustomGroupInterval', displayName: 'Custom Group Interval', localizationId: 'DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomGroupInterval', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onCustomRowHeight', modelName: '@OnCustomRowHeight', displayName: 'Custom Row Height', localizationId: 'DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomRowHeight', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onCustomSummary', modelName: '@OnCustomSummary', displayName: 'Custom Summary', localizationId: 'DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomSummary', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onCustomUnboundFieldData', modelName: '@OnCustomUnboundFieldData', displayName: 'Custom Unbound Field Data', localizationId: 'DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomUnboundFieldData', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onFieldValueDisplayText', modelName: '@OnFieldValueDisplayText', displayName: 'Field Value Display Text', localizationId: 'DevExpress.XtraReports.UI.XRPivotGridScripts.OnFieldValueDisplayText', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onPrefilterCriteriaChanged', modelName: '@OnPrefilterCriteriaChanged', displayName: 'Prefilter Criteria Changed', localizationId: 'DevExpress.XtraReports.UI.XRPivotGridScripts.OnPrefilterCriteriaChanged', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onPrintCell', modelName: '@OnPrintCell', displayName: 'Print Cell', localizationId: 'DevExpress.XtraReports.UI.XRPivotGridScripts.OnPrintCell', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onPrintFieldValue', modelName: '@OnPrintFieldValue', displayName: 'Print Field Value', localizationId: 'DevExpress.XtraReports.UI.XRPivotGridScripts.OnPrintFieldValue', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') },
    { propertyName: 'onPrintHeader', modelName: '@OnPrintHeader', displayName: 'Print Header', localizationId: 'DevExpress.XtraReports.UI.XRPivotGridScripts.OnPrintHeader', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }
], pivotEventsSerializationInfo = exports.truncatedControlEventsSerializationInfo.concat([exports.sizeChanged], specificPivotEventsSerializationInfo);
exports.pivotScripts = { propertyName: 'scripts', modelName: 'Scripts', displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.XRPivotGrid.Scripts', info: pivotEventsSerializationInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.subreportScripts = { propertyName: 'scripts', modelName: 'Scripts', displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.SubreportBase.Scripts', info: exports.truncatedControlEventsSerializationInfo.concat(exports.sizeChanged), editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.pdfContentScripts = { propertyName: 'scripts', modelName: 'Scripts', displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.XRPdfContent.Scripts', info: exports.truncatedControlEventsSerializationInfo.concat(exports.evaluateBinding), editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var commonBandEventsSerializationInfo = [exports.afterPrint, exports.beforePrint];
exports.commonBandScripts = { propertyName: 'scripts', modelName: 'Scripts', displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.Band.Scripts', info: commonBandEventsSerializationInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var onBandLevelChanged = { propertyName: 'onBandLevelChanged', modelName: '@OnBandLevelChanged', displayName: 'Band Level Changed', localizationId: 'DevExpress.XtraReports.UI.GroupBandScripts.OnBandLevelChanged', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }, groupBandEventsSerializationInfo = commonBandEventsSerializationInfo.concat([onBandLevelChanged]);
exports.groupBandScripts = { propertyName: 'scripts', modelName: 'Scripts', displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.GroupHeaderBand.Scripts', info: groupBandEventsSerializationInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var onSortingSummaryGetResult = { propertyName: 'onSortingSummaryGetResult', modelName: '@OnSortingSummaryGetResult', displayName: 'Sorting Summary Get Result', localizationId: 'DevExpress.XtraReports.UI.GroupHeaderBandScripts.OnSortingSummaryGetResult', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }, onSortingSummaryReset = { propertyName: 'onSortingSummaryReset', modelName: '@OnSortingSummaryReset', displayName: 'Sorting Summary Reset', localizationId: 'DevExpress.XtraReports.UI.GroupHeaderBandScripts.OnSortingSummaryReset', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }, onSortingSummaryRowChanged = { propertyName: 'onSortingSummaryRowChanged', modelName: '@OnSortingSummaryRowChanged', displayName: 'Sorting Summary RowChanged', localizationId: 'DevExpress.XtraReports.UI.GroupHeaderBandScripts.OnSortingSummaryRowChanged', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }, groupHeaderBandEventsSerializationInfo = groupBandEventsSerializationInfo.concat([onSortingSummaryGetResult, onSortingSummaryReset, onSortingSummaryRowChanged]);
exports.groupHeaderBandScripts = { propertyName: 'scripts', modelName: 'Scripts', displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.GroupHeaderBand.Scripts', info: groupHeaderBandEventsSerializationInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var onBandHeightChanged = { propertyName: 'onBandHeightChanged', modelName: '@OnBandHeightChanged', displayName: "Band's Height Changed", localizationId: 'DevExpress.XtraReports.UI.XtraReportScripts.OnBandHeightChanged', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }, onDataSourceRowChanged = { propertyName: 'onDataSourceRowChanged', modelName: '@OnDataSourceRowChanged', displayName: "Data Source's Row Changed", localizationId: 'DevExpress.XtraReports.UI.XtraReportBase.DataSource', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }, onDataSourceDemanded = { propertyName: 'onDataSourceDemanded', modelName: '@OnDataSourceDemanded', displayName: 'Data Source Demanded', localizationId: 'DevExpress.XtraReports.UI.XtraReportScripts.OnDataSourceDemanded', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }, detailReportBandEventsSerializationInfo = commonBandEventsSerializationInfo.concat([onBandHeightChanged, onDataSourceRowChanged, onDataSourceDemanded]);
exports.detailReportBandScripts = { propertyName: 'scripts', modelName: 'Scripts', displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.DetailReportBand.Scripts', info: detailReportBandEventsSerializationInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var onFillEmptySpace = { propertyName: 'onFillEmptySpace', modelName: '@OnFillEmptySpace', displayName: 'Fill Empty Space', localizationId: 'DevExpress.XtraReports.UI.XtraReportScripts.OnFillEmptySpace', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }, onPrintProgress = { propertyName: 'onPrintProgress', modelName: '@OnPrintProgress', displayName: 'Print Progress', localizationId: 'DevExpress.XtraReports.UI.XtraReportScripts.OnPrintProgress', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }, onParametersRequestBeforeShow = { propertyName: 'onParametersRequestBeforeShow', modelName: '@OnParametersRequestBeforeShow', displayName: 'Parameters Request Before Show', localizationId: 'DevExpress.XtraReports.UI.XtraReportScripts.OnParametersRequestBeforeShow', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }, onParametersRequestValueChanged = { propertyName: 'onParametersRequestValueChanged', modelName: '@OnParametersRequestValueChanged', displayName: 'Parameters Changed', localizationId: 'DevExpress.XtraReports.UI.XtraReportScripts.OnParametersRequestValueChanged', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }, onParametersRequestSubmit = { propertyName: 'onParametersRequestSubmit', modelName: '@OnParametersRequestSubmit', displayName: 'Parameters Submitted', localizationId: 'DevExpress.XtraReports.UI.XtraReportScripts.OnParametersRequestSubmit', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }, reportEventsSerializationInfo = detailReportBandEventsSerializationInfo.concat([
    onFillEmptySpace, onPrintProgress, onParametersRequestBeforeShow, onParametersRequestValueChanged, onParametersRequestSubmit
]);
exports.reportScripts = { propertyName: 'scripts', modelName: 'Scripts', displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.XtraReport.Scripts', info: reportEventsSerializationInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.allScripts = {
    propertyName: 'scripts', displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.XRControl.Scripts', info: labelEventsSerializationInfo.concat(specificChartEventsSerializationInfo, specificPivotEventsSerializationInfo, [
        onBandLevelChanged, onSortingSummaryGetResult, onSortingSummaryReset, onSortingSummaryRowChanged, onBandHeightChanged, onDataSourceRowChanged, onDataSourceDemanded,
        onFillEmptySpace, onPrintProgress, onParametersRequestBeforeShow, onParametersRequestValueChanged, onParametersRequestSubmit
    ]), editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor')
};


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_wizard_1 = __webpack_require__(7);
exports.LegacyReportWizardPageId = {
    ChooseDataMemberPage: 'chooseDataMemberPage',
    SelectColumnsPage: 'selectColumnsPage',
    AddGroupingLevelPage: 'addGroupingLevelPage',
    ChooseSummaryOptionsPage: 'chooseSummaryOptionsPage',
    ChooseReportLayoutPage: 'chooseReportLayoutPage',
    ChooseReportStylePage: 'chooseReportStylePage'
};
exports.ReportWizardPageId = {
    SelectReportTypePage: 'selectReportTypePage',
    ChooseAvailableDataSourcePage: 'chooseAvailableDataSourcePage',
    SelectLabelTypePage: 'selectLabelTypePage',
    CustomizeLabelPage: 'customizeLabelPage',
    SelectDataMembersPage: 'selectDataMembersPage',
    AddGroupingLevelPage: 'addGroupingLevelPage',
    ChooseSummaryOptionsPage: 'chooseSummaryOptionsPage',
    ConfigureReportPageSettingsPage: 'configureReportPageSettingsPage',
    ChooseReportColorSchemePage: 'chooseReportColorSchemePage',
    SetReportTitlePage: 'setReportTitlePage',
};
exports.FullscreenReportWizardPageId = {
    SelectReportTypePage: exports.ReportWizardPageId.SelectReportTypePage,
    SelectDataSourcePage: 'selectDataSourcePage',
    SpecifySqlDataSourceSettingsPage: analytics_wizard_1.FullscreenDataSourceWizardPageId.SpecifySqlDataSourceSettingsPage,
    SpecifyJsonDataSourceSettingsPage: analytics_wizard_1.FullscreenDataSourceWizardPageId.SpecifyJsonDataSourceSettingsPage,
    DefineReportLayoutPage: 'defineReportLayoutPage',
    DefineCrossTabPage: 'defineCrossTabPage',
    SpecifyPageSettingsPage: 'specifyPageSettingsPage',
    SpecifyLabelSettingsPage: 'specifyLabelSettingsPage',
};
exports.FullscreenReportWizardSectionId = {
    ChooseAvailableDataSourcePage: exports.ReportWizardPageId.ChooseAvailableDataSourcePage,
    SelectLabelTypePage: exports.ReportWizardPageId.SelectLabelTypePage,
    CustomizeLabelPage: exports.ReportWizardPageId.CustomizeLabelPage,
    SelectDataMembersPage_Members: 'selectDataMembersPage_Members',
    SelectDataMembersPage_Fields: 'selectDataMembersPage_Fields',
    SelectSingleDataMemberPage: 'selectSingleDataMembersPage',
    AddGroupFieldsPage: exports.ReportWizardPageId.AddGroupingLevelPage,
    AddSummaryFieldsPage: exports.ReportWizardPageId.ChooseSummaryOptionsPage,
    ConfigurePageSettingsPage: exports.ReportWizardPageId.ConfigureReportPageSettingsPage,
    SpecifyReportTitlePage: exports.ReportWizardPageId.SetReportTitlePage,
    ChooseDataSourceTypePage: analytics_wizard_1.FullscreenDataSourceWizardPageId.ChooseDataSourceTypePage,
    ChooseJsonSchemaPage: analytics_wizard_1.FullscreenDataSourceWizardSectionId.ChooseJsonSchemaPage,
    SpecifyJsonConnectionPage: analytics_wizard_1.FullscreenDataSourceWizardSectionId.SpecifyJsonConnectionPage,
    ConfigureMasterDetailRelationshipsPage: analytics_wizard_1.FullscreenDataSourceWizardSectionId.ConfigureMasterDetailRelationshipsPage,
    ConfigureQueryParametersPage: analytics_wizard_1.FullscreenDataSourceWizardSectionId.ConfigureQueryParametersPage,
    ChooseSqlConnectionPage: analytics_wizard_1.FullscreenDataSourceWizardSectionId.ChooseSqlConnectionPage,
    ConfigureQueryPage: analytics_wizard_1.FullscreenDataSourceWizardSectionId.ConfigureQueryPage,
    ChooseJsonSourcePage: analytics_wizard_1.FullscreenDataSourceWizardSectionId.ChooseJsonSourcePage,
    ConfigureCrossTabColumnsPage: 'configureCrossTabColumnsPage',
    ConfigureCrossTabRowsPage: 'configureCrossTabRowsPage',
    ConfigureCrossTabDataPage: 'configureCrossTabDataPage'
};


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var xrReportelement_1 = __webpack_require__(27);
var BandViewModel = (function (_super) {
    __extends(BandViewModel, _super);
    function BandViewModel(band, parent, serializer) {
        var _this = _super.call(this, band, parent, serializer) || this;
        _this.preInit(band, parent, serializer);
        _this.createChildsArray(band, serializer);
        _this.initHeight();
        _this.size.height = _this.height;
        if (_this.level) {
            _this._disposables.push(_this.maxLevel = ko.pureComputed(function () { return _this.parentModel().bands().filter(function (x) { return x.controlType === _this.controlType; }).length - 1; }));
            _this._level = ko.observable(_this.level.peek());
            _this._disposables.push(_this.level = ko.pureComputed({
                read: function () { return _this._level(); },
                write: function (newVal) {
                    newVal > _this.maxLevel() && (newVal = _this.maxLevel());
                    var parentModel = _this.parentModel();
                    var parentBands = parentModel.bands;
                    var groupArray = _bandUtils_1.generateArray(parentBands(), _this.controlType, newVal);
                    groupArray.splice(newVal, 0, groupArray.splice(_this._level(), 1)[0]);
                    _this._level(newVal);
                    for (var i = newVal + 1, level = newVal + 1; i < groupArray.length; i++) {
                        groupArray[i] && groupArray[i]._level(level++);
                    }
                    for (var i = newVal - 1, level = newVal - 1; i >= 0; i--) {
                        groupArray[i] && groupArray[i]._level(level--);
                    }
                    parentBands.sort(function (left, right) {
                        if (left.controlType === _this.controlType && right.controlType === _this.controlType) {
                            return _this.controlType === 'GroupHeaderBand' ? right.level() - left.level() : left.level() - right.level();
                        }
                        return 0;
                    });
                }
            }));
        }
        var stylesObject = _createObjectFromInfo_1.createObjectFromInfo(_this, style_1.stylesInfo);
        if (stylesObject) {
            _this[style_1.stylesObj.propertyName] = stylesObject;
        }
        return _this;
    }
    BandViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.bands);
        this.disposeObservableArray(this.controls);
        this.resetObservableArray(this.bands);
        this.resetObservableArray(this.controls);
    };
    BandViewModel.prototype.createChildsArray = function (band, serializer) {
        var _this = this;
        var subBands = [];
        if (band.SubBands) {
            Object.keys(band.SubBands).forEach(function (key) {
                subBands.push(new xrSubband_1.SubBandViewModel(band.SubBands[key], _this, serializer));
            });
        }
        if (subBands) {
            _bandUtils_1.initLevels(subBands);
            subBands.sort(_bandUtils_1.sortBands);
        }
        this.bands = ko.observableArray(subBands);
        this.controls = analytics_internal_1.deserializeChildArray(band.Controls, this, function (control) { return _this.createControl(control, serializer); });
    };
    BandViewModel.prototype.initHeight = function () {
        var _this = this;
        var _heightFromControls = 0;
        this._disposables.push(this.heightFromControls = ko.pureComputed(function () {
            _heightFromControls = 0;
            if (analytics_internal_1.checkModelReady(_this.root)) {
                for (var i = 0; i < _this.controls().length; i++) {
                    if (!_this.controls()[i].update()) {
                        var controlY = _this.controls()[i].anchorVertical && _this.controls()[i].anchorVertical() === 'Bottom' && _this.controls()[i].vertAnchoring.state !== anchoring_1.Anchoring.states.fromControls ? 0 : _this.controls()[i].location.y(), controlHeight = _this.controls()[i].anchorVertical && _this.controls()[i].anchorVertical() === 'Both' && _this.controls()[i].vertAnchoring.state !== anchoring_1.Anchoring.states.fromControls ? 1 : _this.controls()[i].size.height(), controlBottom = controlY + controlHeight;
                        if (controlBottom > _heightFromControls) {
                            _heightFromControls = controlBottom;
                        }
                    }
                }
                _heightFromControls = analytics_internal_1.roundingXDecimals(_heightFromControls);
                _this.height(Math.max(_heightFromControls, _this.height()));
                _heightFromControls = _heightFromControls > 0 ? _heightFromControls : 0;
            }
            return _heightFromControls;
        }));
    };
    BandViewModel.prototype.preInit = function (band, parent, serializer) {
    };
    BandViewModel.prototype.addChild = function (control) {
        if (control instanceof BandViewModel && control.isAllowedParent(this)) {
            _bandUtils_1.insertBand(this.bands, control);
            return;
        }
        if (control.controlType === 'XRTableOfContents' && _tocUtils_1.isHeaderOrFooterBandType(this)) {
            var tocAlreadyExists = !!_tocUtils_1.getExistTableOfContents(this);
            if (tocAlreadyExists) {
                throw new Error('Only one TOC can be added!!!');
            }
        }
        _super.prototype.addChild.call(this, control);
    };
    BandViewModel.prototype.getPath = function (propertyName) {
        if (propertyName === 'dataMember') {
            return this.dsHelperProvider() && this.dsHelperProvider().getDataSourcePath(this['dataSource']());
        }
        else if (propertyName === 'groupFields') {
            return analytics_internal_1.getFullPath(this.parentModel().getPath('dataMember'), this.parentModel()['dataMember']());
        }
        return _super.prototype.getPath.call(this, propertyName);
    };
    BandViewModel.prototype.initSize = function () {
        var _this = this;
        this.size.height = this.height;
        this._disposables.push(this.size.width = ko.computed({
            read: function () {
                return _this.root.size.width() - (_this.root['margins'] ? ((_this.root['margins'].left && _this.root['margins'].left()) + (_this.root['margins'].right && _this.root['margins'].right())) : 0);
            }, write: function (newVal) { return void 0; }
        }));
        this.size.isPropertyDisabled = function (name) { return name === 'width' || name === 'height' && ko.unwrap(settings_1.controlsFactory().getPropertyInfo('DetailBand', 'height').disabled); };
        this.size.isPropertyVisible = function (name) { return name !== 'height' || ko.unwrap(settings_1.controlsFactory().getPropertyInfo('DetailBand', 'height').visible) !== false; };
    };
    BandViewModel.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        this.initSize();
    };
    BandViewModel.prototype.removeChild = function (control) {
        if (control instanceof BandViewModel) {
            if (this.bands().indexOf(control) !== -1) {
                this.bands.splice(this.bands().indexOf(control), 1);
            }
        }
        else {
            _super.prototype.removeChild.call(this, control);
        }
    };
    BandViewModel.isReorderingBand = function (control) {
        return ['GroupHeaderBand', 'GroupFooterBand', 'DetailReportBand', 'SubBand'].indexOf(control.controlType) > -1;
    };
    BandViewModel.prototype.isAllowedParent = function (target) {
        return false;
    };
    BandViewModel.prototype._isHeaderBandTypeOrThemSubBands = function (band) {
        var _isHeader = function (band) { return band.controlType === 'PageHeaderBand' || band.controlType === 'GroupHeaderBand'; };
        return _isHeader(band) || (this.controlType === 'SubBand' && _isHeader(band.parentModel()));
    };
    BandViewModel.prototype.isPropertyVisible = function (name) {
        if (name === bandsMetadata_1.printAcrossBands.propertyName) {
            return this._isHeaderBandTypeOrThemSubBands(this);
        }
        else if (name === bandsMetadata_1.pageBreak.propertyName) {
            return this.controlType === 'SubBand' || !this._isHeaderBandTypeOrThemSubBands(this) || this[bandsMetadata_1.printAcrossBands.propertyName];
        }
        else {
            return _super.prototype.isPropertyVisible.call(this, name);
        }
    };
    BandViewModel.prototype.isPropertyDisabled = function (name) {
        if (name === 'dataMember' && this['dataSource']) {
            return this['dataSource']() === null;
        }
        else if (name === bandsMetadata_1.repeatEveryPage.propertyName) {
            return this[bandsMetadata_1.printAcrossBands.propertyName] && this[bandsMetadata_1.printAcrossBands.propertyName]();
        }
        else if (name === bandsMetadata_1.printAcrossBands.propertyName) {
            return !!this[bandsMetadata_1.repeatEveryPage.propertyName] && this[bandsMetadata_1.repeatEveryPage.propertyName]() ||
                !!this.parentModel().bands().filter(function (x) { return x instanceof xrVerticalBand_1.VerticalBandViewModel; }).length ||
                (!!this[bandsMetadata_1.pageBreak.propertyName] && (this[bandsMetadata_1.pageBreak.propertyName]() === 'AfterBand' || this[bandsMetadata_1.pageBreak.propertyName]() === 'AfterBandExceptLastEntry'));
        }
        else {
            return _super.prototype.isPropertyDisabled.call(this, name);
        }
    };
    BandViewModel.unitProperties = ['height'];
    return BandViewModel;
}(xrReportelement_1.XRReportElementViewModel));
exports.BandViewModel = BandViewModel;
var BandSurface = (function (_super) {
    __extends(BandSurface, _super);
    function BandSurface(band, context, unitProperties) {
        if (unitProperties === void 0) { unitProperties = BandSurface._unitProperties; }
        var _this = _super.call(this, band, context, unitProperties) || this;
        _this.isSomeParentCollapsed = ko.observable(false);
        _this._resize = function (delta, oldDelta) {
            _this._height(_this._height() + delta - oldDelta);
            return delta;
        };
        _this.showMarker = true;
        _this.templateName = 'dxrd-band';
        _this.selectionTemplate = 'dxrd-band-selection';
        _this.vrulerTemplate = 'dxrd-band-vruler';
        _this.contentSelectionTemplate = 'dxrd-bandselection-content';
        _this.leftMarginTemplate = 'dxrd-band-coordinate-grid';
        _this.leftMarginSelectionTemplate = 'dxrd-band-coordinate-grid-selection';
        _this.allowMultiselect = false;
        _this.markerWidth = ko.observable(bandSurfaceCollapsedHeight_1.bandSurfaceCollapsedHeight);
        _this.collapsed = ko.observable(false);
        _this._disposables.push(ko.computed(function () {
            _this._width(context.pageWidth() - context.margins.left());
        }));
        _this._disposables.push(_this.collapsed = ko.pureComputed({
            read: function () {
                return !band.expanded();
            },
            write: function (newVal) {
                band.expanded(!newVal);
            }
        }));
        _this._disposables.push(_this._totalHeight = ko.pureComputed(function () { return _this.getTotalHeight(); }));
        _this.name = band.name;
        var subBandsHeight = 0;
        _this._disposables.push(_this.subBandsHeight = ko.pureComputed(function () { return _this.bandsHolder.getHeight(); }));
        _this._disposables.push(_this.heightWithoutSubBands = ko.pureComputed(function () {
            return _this.height() - _this.subBandsHeight();
        }));
        _this._disposables.push(_this.height = ko.pureComputed(function () { return _this.getHeight(); }));
        _this._initMultiColumn();
        _this.createChildCollection(band);
        _this.createUnderCursor();
        _this._disposables.push(_this.hasOwnRuler = ko.pureComputed(function () { return _this.getHasOwnRuler(); }));
        _this._disposables.push(_this.rulerHeight = ko.pureComputed(function () {
            return _this.collapsed() ? bandSurfaceCollapsedHeight_1.bandSurfaceCollapsedHeight : (_this.heightWithoutSubBands());
        }));
        var root = _this.getControlModel().root;
        var nearMarginWidth = function () { return root.margins.right() + root.margins.left(); };
        _this.coordinateGridOptions = {
            left: ko.pureComputed(function () {
                return _this.rtlLayout() ? _this._context.margins.right() : 0;
            }),
            height: _this.getControlModel().height,
            snapGridSize: root.snapGridSize,
            zoom: context.zoom,
            measureUnit: context.measureUnit,
            width: ko.pureComputed(function () {
                return root.pageWidth() - nearMarginWidth();
            }),
            flip: context.rtl
        };
        var oldDelta = 0;
        _this['resize'] = function (params) {
            oldDelta = _this._resize(params.delta.dh, oldDelta);
        };
        _this['resizeTheBand'] = function (params) {
            oldDelta = _this._resize(params.delta.dh, oldDelta);
        };
        _this['stopResize'] = function () {
            oldDelta = 0;
        };
        _this._disposables.push(_this['markerClass'] = ko.pureComputed(function () {
            var cssClass = 'dxrd-band-marker-body';
            if (band.controlType.toLowerCase().indexOf('header') !== -1 || band.controlType === 'TopMarginBand') {
                cssClass = 'dxrd-band-marker-header';
            }
            else if (band.controlType.toLowerCase().indexOf('footer') !== -1 || band.controlType === 'BottomMarginBand') {
                cssClass = 'dxrd-band-marker-footer';
            }
            if (_this.focused()) {
                return cssClass += '-focused';
            }
            return cssClass;
        }));
        _this._disposables.push(_this['leftMargin'] = ko.pureComputed(function () {
            return 0 - (context['margins'] && context.margins.left() || 0) + 10;
        }));
        _this._disposables.push(_this.canResize = ko.computed(function () {
            return _this.selected() && !_this.locked && !_this.collapsed() && !analytics_internal_1.DragDropHandler.started();
        }));
        _this._disposables.push(_this.minHeight = ko.computed(function () {
            var minHeight = (_this.heightFromControls && _this.heightFromControls() || 0) + _this.subBandsHeight();
            return minHeight || 1;
        }));
        _this.getUsefulRect = function () {
            var usefulWidth = _this.rect().width;
            var margins = _this.getControlModel().root['margins'];
            usefulWidth -= _this._getMarginWidth(margins, _this._context.rtl());
            if (_this.multiColumn && _this.multiColumn()) {
                usefulWidth -= _this.multiColumn().grayAreaWidth() + (_this.multiColumn().columnSpacing() || 0);
            }
            if (_this.rtlLayout()) {
                var nearMarginWidth = _this._getMarginWidth(margins, _this._context.rtl(), false);
                var left = _this.container().rect().width - usefulWidth - nearMarginWidth;
                return { top: 0, left: left, right: usefulWidth + nearMarginWidth, bottom: _this.height(), width: usefulWidth, height: _this.height() };
            }
            else {
                return { top: 0, left: 0, right: usefulWidth, bottom: _this.height(), width: usefulWidth, height: _this.height() };
            }
        };
        _this._disposables.push(_this.backgroundRect = ko.pureComputed(function () { return _this.getBackgroundRect(); }));
        if (_this._isHeaderBandTypeOrThemSubBands()) {
            _this.printAcrossBands = band['printAcrossBands'];
            _this._disposables.push(_this.printAcrossBandsPlaceHolder = new _printAcrossBandsPlaceHolder_1.PrintAcrossBandsPlaceHolder(_this));
        }
        return _this;
    }
    BandSurface.prototype._getMarginWidth = function (margins, rtl, isFarMargin) {
        if (isFarMargin === void 0) { isFarMargin = true; }
        var marginWidht = margins ? (isFarMargin && this._context.rtl() ? margins.left && margins.left() : margins.right && margins.right()) || 0 : 0;
        return analytics_internal_1.unitsToPixel(marginWidht, this._context.measureUnit(), this._context.zoom());
    };
    BandSurface.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.controls);
        this.resetObservableArray(this.controls);
    };
    BandSurface.prototype._isHeaderBandTypeOrThemSubBands = function () {
        var band = this.getControlModel();
        var _isHeader = function (band) { return band.controlType === 'PageHeaderBand' || band.controlType === 'GroupHeaderBand'; };
        return _isHeader(band) || (band.controlType === 'SubBand' && _isHeader(band.parentModel()));
    };
    BandSurface.prototype._getUnitPositionInParent = function () {
        var isVerticalBandTakenIntoAccount = false;
        var neighbors = this._control.parentModel().bands();
        var absoluteY = neighbors
            .slice(0, neighbors.indexOf(this._control))
            .reduce(function (sum, currentBandModel) {
            if (currentBandModel instanceof xrVerticalBand_1.VerticalBandViewModel && isVerticalBandTakenIntoAccount)
                return sum;
            else if (currentBandModel instanceof xrVerticalBand_1.VerticalBandViewModel)
                isVerticalBandTakenIntoAccount = true;
            return sum + currentBandModel.size.height();
        }, 0);
        return new analytics_elements_1.Point(0, absoluteY);
    };
    Object.defineProperty(BandSurface.prototype, "_unitAbsoluteRect", {
        get: function () {
            var _this = this;
            return _bandUtils_1._getUnitAbsoluteRect(this, function () { return _this._getUnitPositionInParent(); });
        },
        enumerable: true,
        configurable: true
    });
    BandSurface.prototype.createChildCollection = function (band) {
        this._disposables.push(this.bandsHolder = new _bandHolder_1.BandsHolder(this));
        this.bandsHolder.initialize(band.bands);
    };
    BandSurface.prototype.createUnderCursor = function () {
        this.underCursor = ko.observable(new analytics_internal_1.HoverInfo());
    };
    BandSurface.prototype.getTotalHeight = function () {
        return this._height() + this.bandsHolder.getTotalHeight();
    };
    BandSurface.prototype.getHeight = function () {
        if (this.collapsed())
            return bandSurfaceCollapsedHeight_1.bandSurfaceCollapsedHeight;
        else
            return this._height() + this.subBandsHeight();
    };
    BandSurface.prototype.getHasOwnRuler = function () {
        return true;
    };
    BandSurface.prototype.getBackgroundRect = function () {
        var top = 0, bottom, height = this._height();
        var parent = this.parent;
        if (!parent) {
            return { top: top, bottom: bottom, height: height };
        }
        var parentBands = ko.unwrap(parent.bandsHolder.bands);
        var parentBackgroundRect = ko.unwrap(parent.backgroundRect);
        if (parentBackgroundRect) {
            top += parentBackgroundRect.top;
            bottom = parentBackgroundRect.bottom;
        }
        else {
            var pageHeight = parent.pageHeight();
            var bottomMargin = parent.margins.bottom();
            var footer = parentBands.filter(function (x) { return x._control.controlType === 'PageFooterBand'; })[0];
            bottom = pageHeight - bottomMargin;
            if (footer)
                bottom -= footer._totalHeight();
        }
        var bandIndex = parentBands.indexOf(this);
        if (parent.bandsHolder.verticalBandsContainer.visible && parent.bandsHolder.verticalBandsContainer.bandPosition() <= bandIndex) {
            top += parent.bandsHolder.verticalBandsContainer._height();
        }
        for (var i = 0; i < bandIndex; i++) {
            top += parentBands[i]._totalHeight();
        }
        if (top > bottom)
            height = 0;
        else if (top + height > bottom)
            height = bottom - top;
        return { top: top, bottom: bottom, height: height };
    };
    BandSurface.prototype._initMultiColumn = function () {
        var _this = this;
        this._disposables.push(this.multiColumn = ko.computed(function () {
            var currentMultiColumn = _this.parent && _this.parent.bandsHolder.multiColumn();
            var parentMultiColumn = _this.parent && !(_this.parent instanceof xrReport_1.ReportSurface) && _this.parent.parent.bandsHolder.multiColumn();
            if (parentMultiColumn && parentMultiColumn.haveColumns())
                return parentMultiColumn;
            else if (currentMultiColumn && currentMultiColumn.haveColumns()
                && (_this.getControlModel().controlType === 'GroupHeaderBand' ||
                    _this.getControlModel().controlType === 'GroupFooterBand' ||
                    _this.getControlModel().controlType === 'DetailReportBand')) {
                return currentMultiColumn;
            }
        }));
    };
    BandSurface.prototype.getAbsolutePositionY = function () {
        return this.parent.bandsHolder.getBandAbsolutePositionY(this);
    };
    BandSurface.prototype.updateAbsolutePosition = function () {
        if (!this.parent)
            return;
        var parent = this.parent;
        this.absolutePosition.x(0);
        if (ko.unwrap(parent['collapsed'])) {
            this.absolutePosition.y(parent['absolutePosition'].y());
            return;
        }
        this.absolutePosition.y(this.getAbsolutePositionY());
    };
    BandSurface.prototype.markerClick = function (selection) {
        if (selection.expectClick) {
            selection.expectClick = false;
            return;
        }
        if (!this.focused() && !selection.disabled()) {
            selection.initialize(this);
        }
        else {
            this.collapsed(!this.collapsed());
        }
    };
    BandSurface.prototype.canDrop = function () { return _super.prototype.canDrop.call(this) && !this.collapsed(); };
    Object.defineProperty(BandSurface.prototype, "zoom", {
        get: function () { return this.getRoot().zoom; },
        enumerable: true,
        configurable: true
    });
    BandSurface.prototype.checkParent = function (surfaceParent) {
        return false;
    };
    BandSurface._unitProperties = {
        _height: function (o) { return o.height; },
        heightFromControls: function (o) { return o.heightFromControls; }
    };
    return BandSurface;
}(analytics_elements_1.SurfaceElementBase));
exports.BandSurface = BandSurface;
var xrVerticalBand_1 = __webpack_require__(25);
var xrSubband_1 = __webpack_require__(122);
var _createObjectFromInfo_1 = __webpack_require__(123);
var xrReport_1 = __webpack_require__(16);
var _bandHolder_1 = __webpack_require__(182);
var bandsMetadata_1 = __webpack_require__(26);
var _printAcrossBandsPlaceHolder_1 = __webpack_require__(277);
var anchoring_1 = __webpack_require__(187);
var style_1 = __webpack_require__(21);
var settings_1 = __webpack_require__(12);
var bandSurfaceCollapsedHeight_1 = __webpack_require__(51);
var _bandUtils_1 = __webpack_require__(65);
var _tocUtils_1 = __webpack_require__(67);


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrReportelement_1 = __webpack_require__(27);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_1 = __webpack_require__(4);
var ReportViewModel = (function (_super) {
    __extends(ReportViewModel, _super);
    function ReportViewModel(report, serializer) {
        var _this = this;
        serializer = serializer || new _serializer_1.ReportModelSerializer();
        report = report.XtraReportsLayoutSerializer || report;
        _this = _super.call(this, report, null, serializer) || this;
        if (_this.pageWidth() === xrReport_1.pageWidth.defaultVal) {
            _this.pageWidth(ReportViewModel.defaultPageSize.width);
        }
        if (_this.pageHeight() === xrReport_1.pageHeight.defaultVal) {
            _this.pageHeight(ReportViewModel.defaultPageSize.height);
        }
        _this._dataBindingMode = ko.observable('');
        _this._update = ko.observable(false);
        _this._disposables.push(_this.isModelReady = ko.pureComputed(function () { return !_this._update(); }));
        _this._disposables.push(_this.key = ko.pureComputed(function () { return _this.name(); }));
        _this._disposables.push(_this['displayName'] = ko.pureComputed({
            read: function () { return _this.displayNameObject(); },
            write: function (newValue) { _this.displayNameObject(newValue); }
        }));
        _this.dataSourceRefs = [];
        _this.dataSourceHelper = ko.observable();
        _this.stylesHelper = ko.observable();
        _this.dataBindingsProvider = ko.observable();
        _this.parameterHelper = new reportParameterHelper_1.ReportParameterHelper();
        _this._disposables.push(_this.measureUnit.subscribe(function (unitType) {
            _this._update(true);
            _this._recalculateUnits(unitType);
            _this._update(false);
        }));
        _this._disposables.push(_this.landscape.subscribe(function (newVal) {
            var width = _this.pageWidth();
            _this.pageWidth(_this.pageHeight());
            _this.pageHeight(width);
        }));
        _this._disposables.push(_this.dataSource.subscribe(function (newVal) {
            if (!newVal) {
                _this.dataMember(null);
            }
        }));
        _this.styles = analytics_utils_1.deserializeArray(report.StyleSheet, function (item) { return new style_1.StyleModel(item, serializer); });
        _this._objectStorage = analytics_utils_1.deserializeArray(report.ObjectStorage, function (item) { return objectItemCreation_1.createNewObjectItem(item, _this.dsHelperProvider, serializer); });
        _this._componentStorage = analytics_utils_1.deserializeArray(report.ComponentStorage, function (item) { return objectItemCreation_1.createNewObjectItem(item, _this.dsHelperProvider, serializer); });
        _this.objectStorage = ReportViewModel.createObjectStorage(_this._componentStorage, _this._objectStorage, function (subscription) { return _this._disposables.push(subscription); });
        _this.objectsStorageHelper = new objectStorage_1.ObjectsStorage(_this.objectStorage, _this.dsHelperProvider);
        _this._disposables.push(_this.objectsStorageHelper);
        _this.parameters = analytics_utils_1.deserializeArray(report.Parameters, function (item) { return new parameter_1.Parameter(item, _this, serializer); });
        _this.parameterPanelLayoutItems = analytics_utils_1.deserializeArray(report.ParameterPanelLayoutItems, function (item) { return new layoutItems_1.ParameterPanelLayoutItem(item, serializer); });
        _this.objectStorage().forEach(function (objectStorage) {
            if (objectStorage instanceof universalDataSource_1.UniversalDataSource) {
                objectStorage['tableInfoCollection']().forEach(function (tableInfoCollection) {
                    tableInfoCollection.filterString().helper.parameters = _this.parameters;
                });
            }
        });
        _this.bands = analytics_internal_1.deserializeChildArray(report.Bands, _this, function (item) { return _this.createControl(item, serializer); });
        _bandUtils_1.initLevels(_this.bands());
        _this.bands().sort(_bandUtils_1.sortBands);
        _this.extensions = analytics_utils_1.deserializeArray(report.Extensions, function (item) { return new extension_1.ExtensionModel(item, serializer); });
        _this.crossBandControls = analytics_utils_1.deserializeArray(report.CrossBandControls, function (item) { return _this.createControl(item, serializer); });
        _this.calculatedFields = analytics_utils_1.deserializeArray(report.CalculatedFields, function (item) { return new calculatedField_1.CalculatedField(item, serializer); });
        _this._initializeBands();
        _this.formattingRuleSheet = analytics_utils_1.deserializeArray(report.FormattingRuleSheet, function (item) { return new formattingrules_1.FormattingRule(item, _this, serializer); });
        _this.components = ko.observableArray([]);
        _this._disposables.push(_this.formattingRuleSheet.subscribe(function (args) {
            args.forEach(function (rule) {
                if (!rule.value.name()) {
                    rule.value.name(analytics_internal_1.getUniqueNameForNamedObjectsArray(_this.formattingRuleSheet(), 'formattingRule'));
                }
                if (!rule.value.parent) {
                    rule.value.parent = _this;
                }
            });
        }, null, 'arrayChange'));
        _this._disposables.push(_this.margins.left.subscribe(function (newVal) {
            if (_this.isModelReady() && newVal > _this.pageWidth() - _this.margins.right()) {
                _this.margins.right(_this.pageWidth() - _this.margins.left());
            }
        }));
        _this._disposables.push(_this.margins.right.subscribe(function (newVal) {
            if (_this.isModelReady() && newVal > _this.pageWidth() - _this.margins.left()) {
                _this.margins.left(_this.pageWidth() - _this.margins.right());
            }
        }));
        _this._disposables.push(_this.paperKind.subscribe(function (newVal) {
            if (newVal !== 'Custom') {
                var size = analytics_internal_1.papperKindMapper[newVal];
                _this.pageHeight(analytics_internal_1.roundingXDecimals((_this.landscape() ? size.width : size.height) * (_this._innerDpi.peek() / 100)));
                _this.pageWidth(analytics_internal_1.roundingXDecimals((_this.landscape() ? size.height : size.width) * (_this._innerDpi.peek() / 100)));
            }
        }));
        var dataMember = ko.pureComputed(function () {
            return analytics_internal_1.getFullPath(_this.getPath('dataMember'), _this.dataMember());
        });
        var dataSource = _this.dataSource;
        var disabled = ko.pureComputed(function () { return !dataSource(); });
        var filterString = new analytics_widgets_1.FilterStringOptions(_this['_filterString'], dataMember, disabled);
        _this._disposables.push(dataMember);
        _this._disposables.push(disabled);
        filterString.helper.parameters = ko.computed(function () {
            return _parameterUtils_1.collectAvailableParameters(_this.parameters());
        });
        _this._disposables.push(filterString.helper.parameters);
        _this['filterString'] = filterString;
        _this.watermark = new watermark_1.WatermarkModel(report['Watermark'], serializer);
        _this._scriptReferencesString = ko.observable(_this.scriptReferencesString());
        _this._disposables.push(_this.scriptReferencesString = ko.pureComputed({
            read: function () { return _this._scriptReferencesString(); },
            write: function (newVal) { _this._scriptReferencesString(_utils_1.transformNewLineCharacters(newVal)); }
        }));
        _this._localizationItems = analytics_utils_1.deserializeArray(report.LocalizationItems, function (item) { return new _localization_1.LocalizationItem(item, serializer); });
        _this._disposables.push(_this._localization = new _localization_1.ReportLocalizationEngine(_this));
        _this._localizationItems.removeAll();
        var currentLanguage = metadata_1.defaultCulture;
        _this.language = ko.observable(currentLanguage);
        _this._localization.apply(currentLanguage);
        _this._disposables.push(_this.language.subscribe(function (newVal) {
            _this._localization.save(currentLanguage);
            _this._localization.apply(newVal);
            currentLanguage = newVal;
        }));
        return _this;
    }
    ReportViewModel.createObjectStorage = function (_componentStorage, _objectStorage, collectSubscription) {
        if (collectSubscription === void 0) { collectSubscription = function (subscription) { return void 0; }; }
        var objectStorage = ko.observableArray(_objectStorage().concat(_componentStorage()));
        collectSubscription(objectStorage.subscribe(function (changeSet) {
            changeSet.forEach(function (change) {
                if (change.status === 'added') {
                    if (change.value.objectType && ReportViewModel.availableDataSourceTypes.some(function (x) { return change.value.objectType().indexOf(x) !== -1; })) {
                        _componentStorage.push(change.value);
                    }
                    else {
                        _objectStorage.push(change.value);
                    }
                }
                else if (change.status === 'deleted') {
                    if (change.value.objectType && ReportViewModel.availableDataSourceTypes.some(function (x) { return change.value.objectType().indexOf(x) !== -1; }) && _componentStorage().indexOf(change.value) !== -1) {
                        _componentStorage.remove(change.value);
                    }
                    else {
                        _objectStorage.remove(change.value);
                    }
                }
            });
        }, null, 'arrayChange'));
        return objectStorage;
    };
    ReportViewModel.prototype._getDpi = function (unitType) {
        switch (unitType) {
            case 'HundredthsOfAnInch': return 100;
            case 'TenthsOfAMillimeter': return 254;
            case 'Pixels': return 96;
        }
    };
    ReportViewModel.prototype._recalculateUnits = function (unitType) {
        var newDpi = this._getDpi(unitType), oldDpi = this._innerDpi(), coef = newDpi / oldDpi;
        var unitProperties = _initUtils_1.getUnitProperties(this);
        unitProperties && unitProperties.reCalculateObject(coef);
        this.enumerateComponents(function (target) {
            target().forEach(function (item) {
                var unitProperties = _initUtils_1.getUnitProperties(item);
                unitProperties && unitProperties.reCalculateObject(coef);
            });
        });
        this._localization.recalculateUnits(coef);
        this._innerDpi(newDpi);
    };
    ReportViewModel.prototype.enumerateComponents = function (process) {
        if (process === void 0) { process = function () { return void 0; }; }
        var controls = [];
        analytics_internal_1.collectionsVisitor(this, process, ['controls', 'bands', 'subBands', 'crossBandControls', 'rows', 'cells', 'parameters', 'fields', 'levels'], controls);
        return [].concat.apply([], controls);
    };
    ReportViewModel.prototype.createLocalizationProvider = function () {
        return new _localizationUtils_1.ReportLocalizationProvider(this);
    };
    ReportViewModel.prototype.findStyle = function (styleName) {
        var result = null;
        for (var i = 0; i < this.styles().length; i++) {
            if (this.styles()[i].name() === styleName) {
                return this.styles()[i];
            }
        }
        return result;
    };
    ReportViewModel.prototype._getBandForToc = function (bands) {
        var _this = this;
        var currentBand = null;
        bands.some(function (band) {
            if (!_tocUtils_1.getExistTableOfContents(band)) {
                currentBand = band;
            }
            else if (band.bands().length > 0) {
                currentBand = _this._getBandForToc(band.bands());
            }
            return !!currentBand;
        });
        return currentBand;
    };
    ReportViewModel.prototype.getOrCreateBandForToC = function (createNew) {
        if (createNew === void 0) { createNew = true; }
        var availableTypes = ['ReportHeaderBand', 'ReportFooterBand'];
        var bands = this.bands().filter(function (element) {
            var typesIndex = availableTypes.indexOf(element.controlType);
            if (typesIndex !== -1) {
                availableTypes.splice(typesIndex, 1);
                return true;
            }
            return false;
        });
        var currentBand = this._getBandForToc(bands);
        var canCreate = availableTypes.length > 0;
        if (createNew && !currentBand && canCreate) {
            currentBand = this.createChild({ '@ControlType': availableTypes[0] });
        }
        return { band: currentBand, canAdd: canCreate || currentBand };
    };
    ReportViewModel.prototype.canAddToC = function () {
        return this.getOrCreateBandForToC(false).canAdd;
    };
    ReportViewModel.prototype._initializeBands = function () {
        var traverse = function (xs) { return xs.reduce(function (res, x) { res.push.apply(res, [x].concat(traverse(ko.unwrap(x['bands']) || []))); return res; }, []); };
        var bandNames = traverse(this.bands()).map(function (x) { return x.name(); });
        if (this.bands().length === 0) {
            this.createChild({ '@ControlType': 'DetailBand', '@Name': 'Detail1' });
        }
        else if (analytics_internal_1.getFirstItemByPropertyValue(this.bands(), 'controlType', 'DetailBand') === null && analytics_internal_1.getFirstItemByPropertyValue(this.bands(), 'controlType', 'VerticalDetailBand') === null) {
            this.createChild({ '@ControlType': 'DetailBand', '@Name': analytics_internal_1.getUniqueName(bandNames, 'Detail') });
        }
        if (analytics_internal_1.getFirstItemByPropertyValue(this.bands(), 'controlType', 'TopMarginBand') === null) {
            this.createChild({ '@ControlType': 'TopMarginBand', '@Name': analytics_internal_1.getUniqueName(bandNames, 'TopMargin') });
        }
        if (analytics_internal_1.getFirstItemByPropertyValue(this.bands(), 'controlType', 'BottomMarginBand') === null) {
            this.createChild({ '@ControlType': 'BottomMarginBand', '@Name': analytics_internal_1.getUniqueName(bandNames, 'BottomMargin') });
        }
    };
    ReportViewModel.prototype.isPropertyDisabled = function (name) {
        if (name === 'pageWidth' || name === 'pageHeight') {
            return this.paperKind() !== 'Custom';
        }
        else if (name === 'dataMember') {
            return this.dataSource() === null;
        }
        return _super.prototype.isPropertyDisabled.call(this, name);
    };
    ReportViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.parameters);
        this.disposeObservableArray(this.calculatedFields);
        this.disposeObservableArray(this.crossBandControls);
        this.disposeObservableArray(this.formattingRuleSheet);
        this.disposeObservableArray(this.bands);
        this.disposeObservableArray(this.objectStorage);
        this.disposeObservableArray(this.styles);
        this.resetObservableArray(this.extensions);
        this.resetObservableArray(this.objectStorage);
        this.resetObservableArray(this.parameters);
        this.resetObservableArray(this.parameterPanelLayoutItems);
        this.resetObservableArray(this.calculatedFields);
        this.resetObservableArray(this.crossBandControls);
        this.resetObservableArray(this.formattingRuleSheet);
        this.resetObservableArray(this.bands);
        this.resetObservableArray(this.styles);
        this.resetObservableArray(this.components);
    };
    ReportViewModel.prototype.preInitProperties = function () {
        this.controlType = 'DevExpress.XtraReports.UI.XtraReport';
    };
    ReportViewModel.prototype.isLocalized = function () {
        return this._localization.isLocalized();
    };
    ReportViewModel.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        this.size.height = this.pageHeight;
        this.size.width = this.pageWidth;
    };
    ReportViewModel.prototype.getNearestParent = function (target) {
        return this;
    };
    ReportViewModel.prototype.addChild = function (control) {
        if (control instanceof xrCrossband_1.XRCrossBandControlViewModel) {
            control.parentModel(this);
            control.startBand(this.bands()[0]);
            control.endBand(this.bands()[0]);
            this.crossBandControls.push(control);
        }
        else if (control instanceof xrBand_1.BandViewModel) {
            _bandContainerUtils_1.addBandToContainer(this, control);
        }
        else {
            analytics_internal_1.NotifyAboutWarning('Attempt to add wrong child control.');
        }
    };
    ReportViewModel.prototype.removeChild = function (control) {
        if (control instanceof xrCrossband_1.XRCrossBandControlViewModel) {
            this.crossBandControls.splice(this.crossBandControls().indexOf(control), 1);
        }
        else if (control instanceof xrBand_1.BandViewModel) {
            if (this.bands().length > 1) {
                this.bands.splice(this.bands().indexOf(control), 1);
            }
        }
        else {
            analytics_internal_1.NotifyAboutWarning('Attempt to remove wrong child control.');
        }
    };
    ReportViewModel.prototype.clearLocalization = function (culture) {
        if (culture === void 0) { culture = this.language(); }
        this._localization.items.clear(culture);
        this._localization.apply(culture);
    };
    ReportViewModel.prototype.serialize = function () {
        this._localization.save();
        if (this.isLocalized()) {
            this._localizationItems(this._localization.serialize());
        }
        else {
            this._localization.apply(metadata_1.defaultCulture);
            this._localization.items.clear();
        }
        return new _serializer_1.ReportModelSerializer(this).serialize();
    };
    ReportViewModel.prototype.save = function () {
        var data = this.serialize();
        if (this.onSave) {
            this.onSave(data);
        }
        return data;
    };
    ReportViewModel.prototype.getPath = function (propertyName) {
        var helper = ko.unwrap(this.dataSourceHelper);
        if (!helper)
            return;
        var path = helper.getDataSourcePath(this.dataSource());
        if (propertyName === 'expression' && this.dataMember())
            path += '.' + this.dataMember();
        return path;
    };
    ReportViewModel.prototype.clone = function () {
        var _this = this;
        var dataSourceRefs = [];
        var collectStorages = function (storage, isComponentStorage) {
            if (isComponentStorage === void 0) { isComponentStorage = false; }
            storage.reduce(function (result, storageItem, index) {
                var dataSourceRef = _this.dataSourceRefs.filter(function (x) { return x.ref === storageItem['_model']['@Ref']; })[0];
                if (dataSourceRef) {
                    result.push({
                        index: index,
                        isComponentStorage: isComponentStorage,
                        dataSourceRef: analytics_internal_1.extend(true, {}, dataSourceRef)
                    });
                }
                return result;
            }, dataSourceRefs);
        };
        collectStorages(this._objectStorage());
        collectStorages(this._componentStorage(), true);
        var report = new ReportViewModel(this.save());
        report.dataSourceRefs = [];
        dataSourceRefs.forEach(function (item) {
            var storage = item.isComponentStorage ? report._componentStorage() : report._objectStorage();
            item.dataSourceRef.ref = storage[item.index]['_model']['@Ref'];
            report.dataSourceRefs.push(item.dataSourceRef);
        });
        return report;
    };
    ReportViewModel.prototype.isStyleProperty = function (propertyName) { return false; };
    Object.defineProperty(ReportViewModel.prototype, "dataBindingMode", {
        get: function () {
            return ko.unwrap(this._dataBindingMode);
        },
        enumerable: true,
        configurable: true
    });
    ReportViewModel.availableDataSourceTypes = ['DataSource', 'ObjectSource'];
    ReportViewModel.bandsTypeOrdering = ['TopMarginBand', 'ReportHeaderBand', 'PageHeaderBand', 'GroupHeaderBand', 'DetailBand', 'DetailReportBand', 'GroupFooterBand', 'ReportFooterBand', 'PageFooterBand', 'BottomMarginBand'];
    ReportViewModel.unitProperties = ['snapGridSize', 'margins', 'size'];
    ReportViewModel.defaultPageSize = {
        width: 850,
        height: 1100
    };
    return ReportViewModel;
}(xrReportelement_1.XRReportElementViewModel));
exports.ReportViewModel = ReportViewModel;
var ReportSurface = (function (_super) {
    __extends(ReportSurface, _super);
    function ReportSurface(report, zoom) {
        if (zoom === void 0) { zoom = ko.observable(1); }
        var _this = _super.call(this, report, {
            measureUnit: report.measureUnit, zoom: zoom
        }, ReportSurface._unitProperties) || this;
        _this.allowMultiselect = false;
        _this.locked = false;
        _this.focused = ko.observable(false);
        _this.selected = ko.observable(false);
        _this.templateName = ko.observable('dxrd-report');
        _this.underCursor = ko.observable(new analytics_internal_1.HoverInfo());
        _this.crossBandControls = ko.observableArray();
        _this.minHeight = ko.observable();
        _this.maxMarkerWidth = ko.observable();
        _this.validationMode = ko.observable(false);
        _this.parent = null;
        _this.zoom = zoom;
        _this.dpi = report.dpi;
        _this._disposables.push(_this.rtl = ko.pureComputed(function () { return report.rtl() && report.rtlLayout() === 'Yes'; }));
        _this.measureUnit = report.measureUnit;
        _this._context = _this;
        _this._watermarkImageNaturalSize = ko.observable({ width: 0, height: 0 });
        _this.drawWatermark = report.drawWatermark;
        _this.watermark = report.watermark;
        _this._disposables.push(report.watermark.imageSource.subscribe(function (newValue) {
            _this._updateWatermarkImageNaturalSize(newValue);
        }));
        _this._updateWatermarkImageNaturalSize(report.watermark.imageSource.peek());
        _this._disposables.push(_this._watermarkTextRenderingResult = ko.pureComputed(function () {
            var canvas = document.createElement('canvas');
            var originalWidthPx = analytics_internal_1.unitsToPixel(report.pageWidth(), _this.measureUnit());
            var originalHeightPx = analytics_internal_1.unitsToPixel(report.pageHeight(), _this.measureUnit());
            canvas.width = originalWidthPx;
            canvas.height = originalHeightPx;
            var context = canvas.getContext('2d');
            context.translate(originalWidthPx / 2, originalHeightPx / 2);
            switch (report.watermark.textDirection()) {
                case 'Vertical':
                    context.rotate(-Math.PI / 2);
                    break;
                case 'ForwardDiagonal':
                    context.rotate(-50 * Math.PI / 180);
                    break;
                case 'BackwardDiagonal':
                    context.rotate(50 * Math.PI / 180);
            }
            context.textAlign = 'center';
            context.textBaseline = 'middle';
            var font = new analytics_internal_1.CssCalculator(report.watermark, ko.observable(false)).fontCss();
            context.font = [font.fontStyle.toLowerCase(), font.fontWeight.toLowerCase(), font.fontSize, font.fontFamily].filter(function (x) { return x; }).join(' ');
            context.fillStyle = report.watermark.foreColor();
            context.fillText(report.watermark.text(), 0, 0);
            return canvas.toDataURL('image/png');
        }));
        _this._disposables.push(_this._width = ko.pureComputed({
            read: function () {
                return _this['pageWidth']();
            }
        }));
        _this._disposables.push(_this._height = ko.pureComputed({
            read: function () {
                return _this['pageHeight']();
            }
        }));
        _this.margins = {
            bottom: _this['_bottom'],
            left: _this._createMargin('_left', '_right'),
            right: _this._createMargin('_right', '_left'),
            top: _this['_top']
        };
        _this._disposables.push(_this.pageWidthWithoutMargins = ko.computed(function () {
            return _this.pageWidth() - _this.margins.left() - _this.margins.right();
        }));
        _this._disposables.push(_this.margins.left);
        _this._disposables.push(_this.margins.right);
        _this._disposables.push(_this.bandsHolder = new _bandHolder_1.BandsHolder(_this));
        _this.bandsHolder.initialize(report.bands);
        _this._disposables.push(ko.computed(function () {
            var levelCount = _bandUtils_1.getLevelCount(_this.bandsHolder);
            _bandUtils_1.setMarkerWidth(_this.bandsHolder, levelCount, 0);
            _this.maxMarkerWidth(bandSurfaceCollapsedHeight_1.bandSurfaceCollapsedHeight * levelCount + 22);
        }));
        _this._disposables.push(_this.effectiveHeight = ko.pureComputed(function () {
            var minHeight = _this.bandsHolder.getHeight();
            _this.minHeight(minHeight);
            return minHeight;
        }));
        _this._disposables.push(analytics_internal_1.createObservableArrayMapCollection(report.crossBandControls, _this.crossBandControls, _this._createSurface));
        _this._disposables.push(_this.ghostContainerOffset = ko.pureComputed(function () {
            return _this.rtl() ? 0 : _this.margins.left();
        }));
        var marginOptions = new SurfaceMarginResizeOptions(_this.margins, _this.rtl, _this.pageWidth);
        _this._disposables.push(marginOptions);
        _this.rightMarginOffset = marginOptions.rightMarginOffset;
        _this.leftMarginOffset = marginOptions.leftMarginOffset;
        _this.rightMarginResizableOffset = marginOptions.rightMarginResizableOffset;
        _this.leftMarginResizableOffset = marginOptions.leftMarginResizableOffset;
        _this.leftMarginResizeOptions = marginOptions.leftMarginOptions;
        _this.rightMarginResizeOptions = marginOptions.rightMarginOptions;
        return _this;
    }
    ReportSurface.prototype._createMargin = function (side, oppositeSide) {
        var _this = this;
        return ko.pureComputed({
            read: function () { return _this.rtl() ? _this[oppositeSide]() : _this[side](); },
            write: function (value) {
                _this.rtl() ? _this[oppositeSide](value) : _this[side](value);
            }
        });
    };
    ReportSurface.prototype._updateWatermarkImageNaturalSize = function (val) {
        var _this = this;
        if (!val)
            return;
        var image = new Image();
        image.src = val.getDataUrl();
        image.onload = function (e) {
            _this._watermarkImageNaturalSize({ width: image.naturalWidth, height: image.naturalHeight });
            image.onload = null;
        };
    };
    Object.defineProperty(ReportSurface.prototype, "_unitAbsoluteRect", {
        get: function () {
            return {
                top: 0, left: 0,
                right: this._control.size.width(), bottom: this._control.size.height(),
                width: this._control.size.width(), height: this._control.size.height(),
            };
        },
        enumerable: true,
        configurable: true
    });
    ReportSurface.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.crossBandControls);
        this.resetObservableArray(this.crossBandControls);
    };
    ReportSurface.prototype.getChildrenCollection = function () {
        return this.bandsHolder.bands;
    };
    ReportSurface.prototype.isFit = function (dropTarget) {
        return dropTarget.underCursor().y >= -0.1
            && dropTarget.underCursor().x >= 0
            && ((this === dropTarget) ? this.effectiveHeight() : dropTarget.rect().height) > dropTarget.underCursor().y
            && (this.pageWidth() - this.margins.left()) > dropTarget.underCursor().x;
    };
    ReportSurface.prototype.canDrop = function () { return true; };
    ReportSurface.prototype.wrapRtlProperty = function (data, undoEngine, element) {
        var _this = this;
        var wrapper = ko.computed({
            read: data.value,
            write: function (newValue) {
                undoEngine.peek().start();
                var prevValue = _this.rtl.peek();
                data.value(newValue);
                if (prevValue !== _this.rtl.peek()) {
                    var report = _this.getControlModel();
                    var left = report.margins.left();
                    report.margins.left(report.margins.right());
                    report.margins.right(left);
                }
                undoEngine.peek().end();
            }
        });
        analytics_internal_1.addDisposeCallback(element, function () { wrapper.dispose(); });
        return analytics_internal_1.extend({}, data, { value: wrapper });
    };
    ReportSurface.prototype.checkParent = function (surfaceParent) { return false; };
    ReportSurface._unitProperties = {
        _width: function (o) { return o.size.width; },
        _height: function (o) { return o.size.height; },
        pageWidth: function (o) { return o.size.width; },
        pageHeight: function (o) { return o.size.height; },
        snapGridSize: function (o) {
            return o.snapGridSize;
        },
        _bottom: function (o) { return o.margins.bottom; },
        _left: function (o) { return o.margins.left; },
        _right: function (o) { return o.margins.right; },
        _top: function (o) { return o.margins.top; }
    };
    return ReportSurface;
}(analytics_elements_1.SurfaceElementArea));
exports.ReportSurface = ReportSurface;
var SurfaceMarginResizeOptions = (function (_super) {
    __extends(SurfaceMarginResizeOptions, _super);
    function SurfaceMarginResizeOptions(margins, rtl, pageWidth) {
        var _this = _super.call(this) || this;
        _this.rtl = rtl;
        _this.handle = 'w';
        _this.oppositeHandle = 'e';
        var elements = [];
        _this._disposables.push(rtl.subscribe(function (value) {
            $(elements).find('.ui-resizable-e, .ui-resizable-w')
                .removeClass('ui-resizable-' + (value ? _this.handle : _this.oppositeHandle))
                .addClass('ui-resizable-' + (value ? _this.oppositeHandle : _this.handle));
        }));
        var rightOptions = null;
        var leftOptions = null;
        _this._disposables.push(_this.rightMarginOffset = ko.pureComputed(function () {
            return rtl() ? 0 : pageWidth() - margins.left() - margins.right();
        }));
        _this._disposables.push(_this.leftMarginOffset = ko.pureComputed(function () {
            return rtl() ? pageWidth() - margins.left() : 0;
        }));
        _this._disposables.push(_this.rightMarginResizableOffset = ko.pureComputed(function () {
            return rtl() ? margins.right() : _this.rightMarginOffset();
        }));
        _this._disposables.push(_this.leftMarginResizableOffset = ko.pureComputed(function () {
            return rtl() ? margins.right() : 0;
        }));
        _this.rightMarginOptions = function (undoEngine, element) {
            if (!rightOptions) {
                var margin = margins.right();
                var maxRightMargin = pageWidth() - margins.left() - 1;
                rightOptions = _this._createOptions(undoEngine, function (ui) {
                    margin = margins.right();
                    maxRightMargin = pageWidth() - margins.left() - 1;
                    $(ui.element).resizable('option', 'minWidth', 0);
                    $(ui.element).resizable('option', 'maxWidth', maxRightMargin);
                }, function (ui) {
                    margins.right(Math.min(Math.max(0, ui.size.width - ui.originalSize.width + margin), maxRightMargin));
                    if (!ui.element.hasClass('dxrd-ruler-shadow')) {
                        $(ui.element).css({ left: _this.rightMarginResizableOffset(), width: 0 });
                    }
                    else {
                        $(ui.element).css({ left: _this.rightMarginOffset() });
                    }
                });
                _this._disposables.push(rightOptions);
            }
            elements.push(element);
            return rightOptions;
        };
        _this.leftMarginOptions = function (undoEngine, element) {
            if (!leftOptions) {
                leftOptions = _this._createOptions(undoEngine, function (ui) {
                    $(ui.element).resizable('option', 'minWidth', 0);
                    $(ui.element).resizable('option', 'maxWidth', pageWidth() - margins.right() - 1);
                }, function (ui) {
                    margins.left(pageWidth() - Math.max(0, ui.size.width) - margins.right());
                    $(ui.element).css({ left: _this.leftMarginResizableOffset(), width: (pageWidth() - margins.left() - margins.right()) });
                });
                _this._disposables.push(leftOptions);
            }
            elements.push(element);
            return leftOptions;
        };
        return _this;
    }
    SurfaceMarginResizeOptions.prototype._createOptions = function (undoEngine, startDelegate, resizeDelegate) {
        var _this = this;
        return ko.computed(function () {
            return {
                handles: _this.rtl() ? _this.oppositeHandle : _this.handle,
                start: function (e, ui) {
                    startDelegate(ui);
                    undoEngine().start();
                },
                resize: function (e, ui) {
                    resizeDelegate(ui);
                },
                stop: function (e, ui) {
                    undoEngine().end();
                },
                disabled: analytics_internal_1.DragDropHandler.started
            };
        });
    };
    return SurfaceMarginResizeOptions;
}(analytics_utils_1.Disposable));
var _localizationUtils_1 = __webpack_require__(63);
var _serializer_1 = __webpack_require__(120);
var reportParameterHelper_1 = __webpack_require__(174);
var style_1 = __webpack_require__(37);
var objectStorage_1 = __webpack_require__(269);
var parameter_1 = __webpack_require__(29);
var universalDataSource_1 = __webpack_require__(179);
var extension_1 = __webpack_require__(180);
var calculatedField_1 = __webpack_require__(64);
var metadata_1 = __webpack_require__(28);
var xrBand_1 = __webpack_require__(15);
var xrReport_1 = __webpack_require__(39);
var xrCrossband_1 = __webpack_require__(54);
var _bandHolder_1 = __webpack_require__(182);
var watermark_1 = __webpack_require__(280);
var formattingrules_1 = __webpack_require__(45);
var _localization_1 = __webpack_require__(281);
var _bandUtils_1 = __webpack_require__(65);
var bandSurfaceCollapsedHeight_1 = __webpack_require__(51);
var _tocUtils_1 = __webpack_require__(67);
var objectItemCreation_1 = __webpack_require__(41);
var _parameterUtils_1 = __webpack_require__(46);
var _initUtils_1 = __webpack_require__(189);
var _bandContainerUtils_1 = __webpack_require__(186);
var _utils_1 = __webpack_require__(32);
var layoutItems_1 = __webpack_require__(282);


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editorTemplates_1 = __webpack_require__(9);
var dataBinding_1 = __webpack_require__(125);
var dataBindingInfo_1 = __webpack_require__(126);
exports.dataBindings = function (dataBindingsArray) {
    return {
        propertyName: 'dataBindings',
        modelName: 'DataBindings',
        array: true,
        info: dataBindingInfo_1.dataBindingSerializationInfo,
        displayName: 'Data Bindings', localizationId: 'DevExpress.XtraReports.UI.XRControl.DataBindings',
        editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBindings'),
        allDataBindings: dataBindingsArray,
        from: dataBinding_1.DataBinding.initialize
    };
};


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var xrReport_1 = __webpack_require__(39);
var analytics_internal_1 = __webpack_require__(2);
var $ = __webpack_require__(3);
var ReportType;
(function (ReportType) {
    ReportType[ReportType["Empty"] = 3] = "Empty";
    ReportType[ReportType["Databound"] = 0] = "Databound";
    ReportType[ReportType["Vertical"] = 1] = "Vertical";
    ReportType[ReportType["Label"] = 2] = "Label";
    ReportType[ReportType["CrossTab"] = 6] = "CrossTab";
})(ReportType = exports.ReportType || (exports.ReportType = {}));
var PivotSummaryType;
(function (PivotSummaryType) {
    PivotSummaryType[PivotSummaryType["Count"] = 0] = "Count";
    PivotSummaryType[PivotSummaryType["Sum"] = 1] = "Sum";
    PivotSummaryType[PivotSummaryType["Min"] = 2] = "Min";
    PivotSummaryType[PivotSummaryType["Max"] = 3] = "Max";
    PivotSummaryType[PivotSummaryType["Average"] = 4] = "Average";
    PivotSummaryType[PivotSummaryType["StdDev"] = 5] = "StdDev";
    PivotSummaryType[PivotSummaryType["StdDevp"] = 6] = "StdDevp";
    PivotSummaryType[PivotSummaryType["Var"] = 7] = "Var";
    PivotSummaryType[PivotSummaryType["Varp"] = 8] = "Varp";
    PivotSummaryType[PivotSummaryType["Custom"] = 9] = "Custom";
    PivotSummaryType[PivotSummaryType["CountDistinct"] = 10] = "CountDistinct";
    PivotSummaryType[PivotSummaryType["Median"] = 11] = "Median";
    PivotSummaryType[PivotSummaryType["Mode"] = 12] = "Mode";
})(PivotSummaryType = exports.PivotSummaryType || (exports.PivotSummaryType = {}));
var GraphicsUnit;
(function (GraphicsUnit) {
    GraphicsUnit[GraphicsUnit["World"] = 0] = "World";
    GraphicsUnit[GraphicsUnit["Display"] = 1] = "Display";
    GraphicsUnit[GraphicsUnit["Pixel"] = 2] = "Pixel";
    GraphicsUnit[GraphicsUnit["Point"] = 3] = "Point";
    GraphicsUnit[GraphicsUnit["Inch"] = 4] = "Inch";
    GraphicsUnit[GraphicsUnit["Document"] = 5] = "Document";
    GraphicsUnit[GraphicsUnit["Millimeter"] = 6] = "Millimeter";
})(GraphicsUnit = exports.GraphicsUnit || (exports.GraphicsUnit = {}));
exports.defaultPageSetupState = {
    paperKind: xrReport_1.paperKind.defaultVal,
    landscape: false,
    marginTop: 1,
    marginRight: 1,
    marginBottom: 1,
    marginLeft: 1,
    width: analytics_internal_1.papperKindMapper[xrReport_1.paperKind.defaultVal].width / 100,
    height: analytics_internal_1.papperKindMapper[xrReport_1.paperKind.defaultVal].height / 100,
    unit: GraphicsUnit.Inch
};
exports.defaultReportWizardState = {
    masterDetailInfoCollection: [],
    pageSetup: $.extend(true, {}, exports.defaultPageSetupState),
    colorScheme: {},
    ignoreNullValuesForSummary: false
};


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _series_1 = __webpack_require__(110);
var _utils_1 = __webpack_require__(62);
var _common_1 = __webpack_require__(35);
var _commonValue_1 = __webpack_require__(114);
var _series_2 = __webpack_require__(77);
var _label_1 = __webpack_require__(247);
var _dataFilter_1 = __webpack_require__(160);
var _point_1 = __webpack_require__(115);
var _view_1 = __webpack_require__(159);
var _summaryOptionsMetaData_1 = __webpack_require__(78);
var _summaryOptions_1 = __webpack_require__(248);
var _axis_1 = __webpack_require__(30);
var _template_1 = __webpack_require__(111);
var _dataContainer_1 = __webpack_require__(254);
var _legend_1 = __webpack_require__(255);
var _diagram_1 = __webpack_require__(117);
var _chart_1 = __webpack_require__(118);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var _settings_1 = __webpack_require__(31);
var _editorTemplates_1 = __webpack_require__(22);
var sideBySideEqualBarWidth = { propertyName: 'equalBarWidth', modelName: '@SideBySideEqualBarWidth', displayName: 'Side By Side Equal Bar Width', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, sideBySideBarDistanceFixed = { propertyName: 'barDistanceFixed', modelName: '@SideBySideBarDistanceFixed', defaultVal: 1 }, sideBySideBarDistance = { propertyName: 'barDistance', modelName: '@SideBySideBarDistance', defaultVal: 0.0 };
exports.commonSeriesPointsSortingKeys = [{ value: 'Argument', displayValue: 'Argument', localizationId: 'DevExpress.XtraCharts.SeriesSelectionMode.Argument' }, { value: 'Value_1', displayValue: 'Value', localizationId: 'ChartStringId.WizValueLevelValue' }], exports.bubbleSeriesPointsSortingKeys = [{ value: 'Argument', displayValue: 'Argument', localizationId: 'DevExpress.XtraCharts.SeriesSelectionMode.Argument' }, { value: 'Value_1', displayValue: 'Value', localizationId: 'ChartStringId.WizValueLevelValue' }, { value: 'Value_2', displayValue: 'Weight', localizationId: 'ChartStringId.WizValueLevelWeight' }], exports.rangeSeriesPointsSortingKeys = [{ value: 'Argument', displayValue: 'Argument', localizationId: 'DevExpress.XtraCharts.SeriesSelectionMode.Argument' }, { value: 'Value_1', displayValue: 'Value_1', localizationId: 'ChartStringId.WizValueLevelValue_1' }, { value: 'Value_2', displayValue: 'Value_2', localizationId: 'ChartStringId.WizValueLevelValue_2' }], exports.stockSeriesPointsSortingKeys = [{ value: 'Argument', displayValue: 'Argument', localizationId: 'DevExpress.XtraCharts.SeriesSelectionMode.Argument' }, { value: 'Value_1', displayValue: 'Low', localizationId: 'ChartStringId.WizValueLevelLow' }, { value: 'Value_2', displayValue: 'High', localizationId: 'ChartStringId.WizValueLevelHigh' }, { value: 'Value_3', displayValue: 'Open', localizationId: 'ChartStringId.WizValueLevelOpen' }, { value: 'Value_4', displayValue: 'Close', localizationId: 'ChartStringId.WizValueLevelClose' }];
exports.seriesPointsSorting = {
    propertyName: 'seriesPointsSorting', modelName: '@SeriesPointsSorting', displayName: 'Series Points Sorting', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.MultiColumnMode.None' }, { value: 'Ascending', displayValue: 'Ascending', localizationId: 'DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending' }, { value: 'Descending', displayValue: 'Descending', localizationId: 'DevExpress.XtraReports.UI.XRColumnSortOrder.Descending' }],
    localizationId: 'DevExpress.XtraCharts.SeriesBase.SeriesPointsSorting'
}, exports.seriesPointsSortingKey = {
    propertyName: 'seriesPointsSortingKey', modelName: '@SeriesPointsSortingKey', displayName: 'Series Points Sorting Key', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: exports.commonSeriesPointsSortingKeys, localizationId: 'DevExpress.XtraCharts.SeriesBase.SeriesPointsSortingKey'
}, exports.legendTextPattern = { propertyName: 'legendTextPattern', modelName: '@LegendTextPattern', displayName: 'Legend Text Pattern', editor: analytics_widgets_1.editorTemplates.getEditor('text'), localizationId: 'DevExpress.XtraCharts.SeriesBase.LegendTextPattern' }, exports._argumentScaleTypeValidatorOptions = {
    _seriesViewModel: null,
    onInitialized: function (e) { exports._argumentScaleTypeValidatorOptions._seriesViewModel = e.model._model; },
    validationRules: [{
            type: 'custom',
            reevaluate: true,
            validationCallback: function (params) {
                var model = exports._argumentScaleTypeValidatorOptions._seriesViewModel.peek();
                if (model instanceof _series_1.SeriesViewModel) {
                    var unconvertiblePoint = _utils_1._getUnconvertiblePoint('argumentSerializable', model.argumentScaleType.peek(), params.value, model.points.peek());
                    var stringFormat = analytics_utils_1.getLocalization("The type of the '{0}' point isn't compatible with the {1} scale.", 'ChartStringId.MsgIncompatiblePointType');
                    var argumentValue = unconvertiblePoint && unconvertiblePoint.argumentSerializable();
                    if (argumentValue && (argumentValue instanceof Date))
                        argumentValue = analytics_internal_1.formatDate(argumentValue);
                    params.rule.message = analytics_internal_1.formatUnicorn(stringFormat, (argumentValue !== null || argumentValue !== void 0) ? argumentValue : '', params.value);
                    return !unconvertiblePoint;
                }
                return true;
            }
        }]
}, exports.argumentScaleType = {
    propertyName: 'argumentScaleType', modelName: '@ArgumentScaleType', displayName: 'Argument Scale Type', defaultVal: 'Auto', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: _common_1.scaleTypeValues, localizationId: 'DevExpress.XtraCharts.SeriesBase.ArgumentScaleType', validatorOptions: exports._argumentScaleTypeValidatorOptions
}, exports.valueScaleType = {
    propertyName: 'valueScaleType', modelName: '@ValueScaleType', displayName: 'Value Scale Type', defaultVal: 'Numerical', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'Numerical', displayValue: 'Numerical', localizationId: 'DevExpress.XtraCharts.ScaleType.Numerical' },
        { value: 'DateTime', displayValue: 'DateTime', localizationId: 'DevExpress.XtraTreeList.Data.UnboundColumnType.DateTime' }
    ],
    localizationId: 'DevExpress.XtraCharts.SeriesBase.ValueScaleType'
}, exports.labelsVisibility = { propertyName: 'labelsVisibility', modelName: '@LabelsVisibility', displayName: 'Labels Visibility', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: _common_1.defaultBooleanValues, localizationId: 'DevExpress.XtraCharts.SeriesBase.LabelsVisibility' }, exports.argumentDataMember = { propertyName: 'argumentDataMember', modelName: '@ArgumentDataMember', displayName: 'Argument Data Member', defaultVal: '', editor: _editorTemplates_1.editorTemplates.getEditor('valueDataMember'), localizationId: 'DevExpress.XtraCharts.SeriesBase.ArgumentDataMember' }, exports.valueDataMembersSerializable = { propertyName: 'valueDataMembers', modelName: '@ValueDataMembersSerializable', displayName: 'Value Data Members', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), from: _commonValue_1.CommonValueDataMembers.from, toJsonObject: _commonValue_1.CommonValueDataMembers.toJson, localizationId: 'DevExpress.XtraCharts.SeriesBase.ValueDataMembers' };
var enabled = { propertyName: 'enabled', modelName: '@Enabled', displayName: 'Enabled', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraReports.UI.EditOptions.Enabled' }, mode = {
    propertyName: 'mode', modelName: '@Mode', displayName: 'Mode', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Count', valuesArray: [{ value: 'Count', displayValue: 'Count', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Count' }, { value: 'ThresholdValue', displayValue: 'Threshold Value', localizationId: 'DevExpress.XtraCharts.TopNMode.ThresholdValue' }, { value: 'ThresholdPercent', displayValue: 'Threshold Percent', localizationId: 'DevExpress.XtraCharts.TopNOptions.ThresholdPercent' }],
    localizationId: 'DevExpress.XtraReports.UI.MultiColumn.Mode'
}, count = { propertyName: 'count', modelName: '@Count', displayName: 'Count', defaultVal: 5, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Count' }, showOthers = { propertyName: 'showOthers', modelName: '@ShowOthers', displayName: 'Show Others', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.TopNOptions.ShowOthers' }, othersArgument = { propertyName: 'othersArgument', modelName: '@OthersArgument', displayName: 'Others Argument', editor: analytics_widgets_1.editorTemplates.getEditor('text'), localizationId: 'DevExpress.XtraCharts.TopNOptions.OthersArgument' }, thresholdValue = { propertyName: 'thresholdValue', modelName: '@ThresholdValue', displayName: 'Threshold Value', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.TopNMode.ThresholdValue' }, thresholdPercent = { propertyName: 'thresholdPercent', modelName: '@ThresholdPercent', displayName: 'Threshold Percent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.TopNOptions.ThresholdPercent' };
var textOrientation = {
    propertyName: 'textOrientation', modelName: '@TextOrientation', displayName: 'Text Orientation', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Horizontal ', displayValue: 'Horizontal', localizationId: 'DevExpress.XtraCharts.TextOrientation.Horizontal' }, { value: 'TopToBottom', displayValue: 'Top To Bottom', localizationId: 'DevExpress.XtraCharts.TextOrientation.TopToBottom' }, { value: 'BottomToTop', displayValue: 'Bottom To Top', localizationId: 'DevExpress.XtraCharts.TextOrientation.BottomToTop' }],
    localizationId: 'DevExpress.XtraCharts.SeriesLabelBase.TextOrientation'
}, resolveOverlappingMode = {
    propertyName: 'resolveOverlappingMode', modelName: '@ResolveOverlappingMode', displayName: 'Resolve Overlapping Mode', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.MultiColumnMode.None' }, { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }, { value: 'HideOverlapped', displayValue: 'Hide Overlapped', localizationId: 'DevExpress.XtraCharts.AxisLabelResolveOverlappingMode.HideOverlapped' }, { value: 'JustifyAroundPoint', displayValue: 'Justify Around Point', localizationId: 'DevExpress.XtraCharts.ResolveOverlappingMode.JustifyAroundPoint' }, { value: 'JustifyAllAroundPoint', displayValue: 'Justify All Around Point', localizationId: 'DevExpress.XtraCharts.ResolveOverlappingMode.JustifyAllAroundPoint' }],
    localizationId: 'DevExpress.XtraCharts.StackedBarTotalLabel.ResolveOverlappingMode'
}, lineColor = { propertyName: 'lineColor', modelName: '@LineColor', displayName: 'Line Color', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), localizationId: 'DevExpress.XtraCharts.SeriesLabelBase.LineColor' }, lineVisibility = { propertyName: 'lineVisibility', modelName: '@LineVisibility', displayName: 'Line Visibility', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: _common_1.defaultBooleanValues, localizationId: 'DevExpress.XtraCharts.SeriesLabelBase.LineVisibility' }, lineLength = { propertyName: 'lineLength', modelName: '@LineLength', displayName: 'Line Length', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.SeriesLabelBase.LineLength' }, showForZeroValues = { propertyName: 'showForZeroValues', modelName: '@ShowForZeroValues', displayName: 'Show for Zero Values', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.BarSeriesLabel.ShowForZeroValues' };
exports.barPositionValues = [
    { value: 'Top', displayValue: 'Top', localizationId: 'DevExpress.XtraReports.UI.XRDockStyle.Top' },
    { value: 'Center', displayValue: 'Center', localizationId: 'DevExpress.XtraCharts.FunnelSeriesLabelPosition.Center' },
    { value: 'TopInside', displayValue: 'Top Inside', localizationId: 'DevExpress.XtraCharts.BarSeriesLabelPosition.TopInside' },
    { value: 'BottomInside', displayValue: 'Bottom Inside', localizationId: 'DevExpress.XtraCharts.BarSeriesLabelPosition.BottomInside' }
];
exports.piePositionValues = [
    { value: 'Inside', displayValue: 'Inside', localizationId: 'ChartStringId.WizPieSeriesLabelPositionInside' },
    { value: 'Outside', displayValue: 'Outside', localizationId: 'ChartStringId.WizPieSeriesLabelPositionOutside' },
    { value: 'Radial', displayValue: 'Radial', localizationId: 'ChartStringId.WizPieSeriesLabelPositionRadial' },
    { value: 'Tangent', displayValue: 'Tangent', localizationId: 'ChartStringId.WizPieSeriesLabelPositionTangent' },
    { value: 'TwoColumns', displayValue: 'Two Columns', localizationId: 'ChartStringId.WizPieSeriesLabelPositionTwoColumns' }
];
exports.funnelPositionValues = [
    { value: 'LeftColumn', displayValue: 'Left Column', localizationId: 'ChartStringId.WizFunnelSeriesLabelPositionLeftColumn' },
    { value: 'Left', displayValue: 'Left', localizationId: 'ChartStringId.WizFunnelSeriesLabelPositionLeft' },
    { value: 'Center', displayValue: 'Center', localizationId: 'ChartStringId.WizFunnelSeriesLabelPositionCenter' },
    { value: 'Right', displayValue: 'Right', localizationId: 'ChartStringId.WizFunnelSeriesLabelPositionRight' },
    { value: 'RightColumn', displayValue: 'Right Column', localizationId: 'ChartStringId.WizFunnelSeriesLabelPositionRightColumn' }
];
exports.waterfallPositionValues = [
    { value: 'Auto', displayValue: 'Auto', localizationId: 'DevExpress.XtraCharts.WaterfallSeriesLabelPosition.Auto' },
    { value: 'Center', displayValue: 'Center', localizationId: 'DevExpress.XtraCharts.WaterfallSeriesLabelPosition.Center' },
    { value: 'InsideEnd', displayValue: 'Insid End', localizationId: 'DevExpress.XtraCharts.WaterfallSeriesLabelPosition.InsideEnd' },
    { value: 'InsideStart', displayValue: 'Inside Start', localizationId: 'DevExpress.XtraCharts.WaterfallSeriesLabelPosition.InsideStart' },
];
var position = {
    propertyName: 'seriesLabelPosition', modelName: '@Position', displayName: 'Position', editor: _editorTemplates_1.editorTemplates.getEditor('comboboxPositionSeriesLabel'), valuesArray: [],
    localizationId: 'DevExpress.XtraCharts.PointSeriesLabel.Position'
};
var dashStyle = {
    propertyName: 'dashStyle', modelName: '@DashStyle', displayName: 'Dash Style', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Empty', displayValue: 'Empty', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAppearances.Empty' }, { value: 'Solid', displayValue: 'Solid', localizationId: 'DevExpress.XtraCharts.FillMode3D.Solid' }, { value: 'Dash', displayValue: 'Dash', localizationId: 'DevExpress.XtraCharts.DashStyle.Dash' }, { value: 'Dot', displayValue: 'Dot', localizationId: 'DevExpress.XtraCharts.DashStyle.Dot' }, { value: 'DashDot', displayValue: 'Dash-Dot', localizationId: 'DevExpress.XtraPrinting.BorderDashStyle.DashDot' }, { value: 'DashDotDot', displayValue: 'Dash-Dot-Dot', localizationId: 'DevExpress.XtraPrinting.BorderDashStyle.DashDotDot' }],
    localizationId: 'DevExpress.XtraCharts.LineStyle.DashStyle'
};
var markerVisibility = { propertyName: 'markerVisibility', modelName: '@MarkerVisibility', displayName: 'Marker Visibility', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: _common_1.defaultBooleanValues, localizationId: 'DevExpress.XtraCharts.RadarLineSeriesView.MarkerVisibility' }, markerKind = {
    propertyName: 'kind', modelName: '@Kind', displayName: 'Kind', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Square', displayValue: 'Square', localizationId: 'DevExpress.XtraCharts.MarkerKind.Square' }, { value: 'Diamond', displayValue: 'Diamond', localizationId: 'DevExpress.XtraCharts.MarkerKind.Diamond' }, { value: 'Triangle', displayValue: 'Triangle', localizationId: 'DevExpress.XtraCharts.MarkerKind.Triangle' }, { value: 'InvertedTriangle', displayValue: 'Inverted Triangle', localizationId: 'DevExpress.XtraCharts.MarkerKind.InvertedTriangle' }, { value: 'Circle', displayValue: 'Circle', localizationId: 'DevExpress.XtraCharts.CircleEasingFunction' }, { value: 'Plus', displayValue: 'Plus', localizationId: 'DevExpress.XtraCharts.MarkerKind.Plus' }, { value: 'Cross', displayValue: 'Cross', localizationId: 'DevExpress.XtraCharts.MarkerKind.Cross' }, { value: 'Star', displayValue: 'Star', localizationId: 'DevExpress.XtraCharts.MarkerKind.Star' }, { value: 'Pentagon', displayValue: 'Pentagon', localizationId: 'DevExpress.XtraCharts.MarkerKind.Pentagon' }, { value: 'Hexagon', displayValue: 'Hexagon', localizationId: 'DevExpress.XtraCharts.MarkerKind.Hexagon' }],
    localizationId: 'DevExpress.XtraCharts.MarkerBase.Kind'
}, borderVisible = { propertyName: 'borderVisible', modelName: '@BorderVisible', displayName: 'Border Visible', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.MarkerBase.BorderVisible' };
var direction = {
    propertyName: 'direction', modelName: '@Direction', displayName: 'Direction', defaultVal: 'TopToBottom', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'TopToBottom', displayValue: 'Top To Bottom', localizationId: 'DevExpress.XtraCharts.TextOrientation.TopToBottom' }, { value: 'BottomToTop', displayValue: 'Bottom To Top', localizationId: 'DevExpress.XtraCharts.TextOrientation.BottomToTop' }, { value: 'LeftToRight', displayValue: 'Left To Right' }, { value: 'RightToLeft', displayValue: 'Right To Left' }],
    localizationId: 'DevExpress.XtraReports.UI.MultiColumn.Direction'
}, alignmentVertical = {
    propertyName: 'alignmentVertical', modelName: '@AlignmentVertical', displayName: 'Vertical Alignment', defaultVal: 'Top', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Top', displayValue: 'Top', localizationId: 'DevExpress.XtraReports.UI.XRDockStyle.Top' }, { value: 'TopOutside', displayValue: 'Top Outside', localizationId: 'DevExpress.XtraCharts.LegendAlignmentVertical.TopOutside' }, { value: 'Center', displayValue: 'Center', localizationId: 'DevExpress.XtraCharts.FunnelSeriesLabelPosition.Center' }, { value: 'Bottom', displayValue: 'Bottom', localizationId: 'DevExpress.XtraReports.UI.XRDockStyle.Bottom' }, { value: 'BottomOutside', displayValue: 'Bottom Outside', localizationId: 'DevExpress.XtraCharts.LegendAlignmentVertical.BottomOutside' }],
    localizationId: 'DevExpress.XtraCharts.Legend.AlignmentVertical'
}, alignmentHorizontal = {
    propertyName: 'alignmentHorizontal', modelName: '@AlignmentHorizontal', displayName: 'Horizontal Alignment', defaultVal: 'RightOutside', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Left', displayValue: 'Left', localizationId: 'DevExpress.XtraReports.UI.XRControl.Left' }, { value: 'LeftOutside', displayValue: 'Left Outside', localizationId: 'DevExpress.XtraCharts.LegendAlignmentHorizontal.LeftOutside' }, { value: 'Center', displayValue: 'Center', localizationId: 'DevExpress.XtraCharts.FunnelSeriesLabelPosition.Center' }, { value: 'Right', displayValue: 'Right', localizationId: 'DevExpress.XtraCharts.RectangleIndents.Right' }, { value: 'RightOutside', displayValue: 'Right Outside', localizationId: 'DevExpress.XtraCharts.LegendAlignmentHorizontal.RightOutside' }],
    localizationId: 'DevExpress.XtraCharts.Legend.AlignmentHorizontal'
};
var dock = {
    propertyName: 'dock', modelName: '@Dock', displayName: 'Dock', defaultVal: 'Top', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Top', displayValue: 'Top', localizationId: 'DevExpress.XtraReports.UI.XRDockStyle.Top' }, { value: 'Bottom', displayValue: 'Bottom', localizationId: 'DevExpress.XtraReports.UI.XRDockStyle.Bottom' }, { value: 'Left', displayValue: 'Left', localizationId: 'DevExpress.XtraReports.UI.XRControl.Left' }, { value: 'Right', displayValue: 'Right', localizationId: 'DevExpress.XtraCharts.RectangleIndents.Right' }],
    localizationId: 'DevExpress.XtraCharts.DockableTitle.Dock'
};
var chartTitleText = { propertyName: 'text', modelName: '@Text', localizable: true, displayName: 'Text', editor: analytics_widgets_1.editorTemplates.getEditor('text'), localizationId: 'ASPxReportsStringId.ExportName_txt' };
exports.padding = { propertyName: 'chartPadding', modelName: 'Padding', displayName: 'Padding', info: [_common_1.left, _common_1.right, _common_1.top, _common_1.bottom], editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraReports.UI.XRBarCode.PaddingInfo' };
var lineMarkerOptionsSerializationsInfo = [_common_1.color, _series_2.colorEach, markerVisibility], lineMarker = { propertyName: 'lineMarker', modelName: 'LineMarker', displayName: 'Line Marker', info: lineMarkerOptionsSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var topNOptionsSerializationsInfo = [enabled, mode, count, thresholdPercent, thresholdValue, showOthers, othersArgument], topNOptions = { propertyName: 'topNOptions', modelName: 'TopNOptions', displayName: 'Top N Options', info: topNOptionsSerializationsInfo, defaultVal: {}, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.SeriesBase.TopNOptions' };
var lineStyleSerializationsInfo = [_common_1.thickness, dashStyle], lineStyle = { propertyName: 'lineStyle', modelName: 'LineStyle', displayName: 'Line Style', info: lineStyleSerializationsInfo, defaultVal: {}, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraReports.UI.XRShape.LineStyle' };
exports.seriesLabelSerializationsInfo = [_common_1.typeNameNotShow, _common_1.textPattern, _common_1.textAlignment, _common_1.maxLineCount, _common_1.maxWidth, textOrientation, resolveOverlappingMode,
    lineColor, lineVisibility, lineLength, _common_1.antialiasing, _common_1.backColor, _common_1.textColor, position, showForZeroValues, _common_1.font8, lineStyle, _series_2.border];
exports.seriesLabel = { propertyName: 'label', modelName: 'Label', displayName: 'Label', info: exports.seriesLabelSerializationsInfo, defaultVal: {}, from: _label_1.SeriesLabelViewModel.from, toJsonObject: _label_1.SeriesLabelViewModel.toJson, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraReports.UI.XRLabel' };
var autoBindingSettingsEnabled = { propertyName: 'autoBindingSettingsEnabled', modelName: '@AutoBindingSettingsEnabled', displayName: 'Auto Binding Settings Enabled', localizationId: 'DevExpress.XtraCharts.PivotGridDataSourceOptions.AutoBindingSettingsEnabled', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool') }, autoLayoutSettingsEnabled = { propertyName: 'autoLayoutSettingsEnabled', modelName: '@AutoLayoutSettingsEnabled', displayName: 'Auto Layout Settings Enabled', localizationId: 'DevExpress.XtraCharts.PivotGridDataSourceOptions.AutoLayoutSettingsEnabled', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.pivotGridDataSourceOptions = { propertyName: 'pivotGridDataSourceOptions', modelName: 'PivotGridDataSourceOptions', displayName: 'Pivot Grid Data Source Options', localizationId: 'DevExpress.XtraReports.UI.XRChart.PivotGridDataSourceOptions', info: [autoBindingSettingsEnabled, autoLayoutSettingsEnabled], editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var dataFilters = {
    modelName: 'DataFilters', displayName: 'Data Filters', propertyName: 'dataFilters',
    editor: analytics_widgets_1.editorTemplates.getEditor('commonCollection'), array: true, addHandler: _dataFilter_1.DataFilterModel.createNew, template: '#dxrd-collectionItemWithAccordion',
    localizationId: 'DevExpress.XtraCharts.SeriesBase.DataFilters'
};
var dataFiltersConjunctionMode = {
    modelName: '@DataFiltersConjunctionMode', defaultVal: 'And', displayName: 'Conjunction Mode', propertyName: 'dataFiltersConjunctionMode', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [{ value: 'And', displayValue: 'And', localizationId: 'DevExpress.XtraCharts.ConjunctionTypes.And' }, { value: 'Or', displayValue: 'Or', localizationId: 'DevExpress.XtraCharts.ConjunctionTypes.Or' }],
    localizationId: 'DevExpress.XtraCharts.DataFilterCollection.ConjunctionMode'
};
var colorDataMember = { propertyName: 'colorDataMember', displayName: 'Color Data Member', defaultVal: '', modelName: '@ColorDataMember', editor: ko.bindingHandlers['displayNameExtender'] ? analytics_widgets_1.editorTemplates.getEditor('field') : _editorTemplates_1.editorTemplates.getEditor('fieldChart'), localizationId: 'DevExpress.XtraCharts.SeriesBase.ColorDataMember' };
exports.valuesSerializable = { propertyName: 'valuesSerializable', modelName: '@ValuesSerializable', from: function (val) { return ko.observable(val); }, toJsonObject: _point_1.SeriesPointModel.valueToJsonObject }, exports.argumentSerializable = { propertyName: 'argumentSerializable', modelName: '@ArgumentSerializable', displayName: 'Argument', localizationId: 'DevExpress.XtraCharts.SeriesPoint.Argument', editor: analytics_widgets_1.editorTemplates.getEditor('text') }, exports.colorSerializable = { propertyName: 'colorSerializable', modelName: '@ColorSerializable', displayName: 'Color', localizationId: 'DevExpress.XtraCharts.SeriesPoint.Color', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') };
exports.seriesPointSerializationsInfo = [exports.argumentSerializable, exports.valuesSerializable, exports.colorSerializable];
exports.points = {
    propertyName: 'points', modelName: 'Points', displayName: 'Points', localizationId: 'DevExpress.XtraCharts.Series.Points',
    editor: _editorTemplates_1.editorTemplates.getEditor('points'), array: true
};
exports.createViewsArray = function (limitation) {
    var array = [];
    array.push({ value: 'SideBySideBarSeriesView', displayValue: 'Bar', localizationId: 'DevExpress.Sparkline.SparklineViewType.Bar' });
    array.push({ value: 'StackedBarSeriesView', displayValue: 'Bar Stacked', localizationId: 'ChartStringId.SvnStackedBar' });
    array.push({ value: 'FullStackedBarSeriesView', displayValue: 'Bar Stacked 100%', localizationId: 'ChartStringId.SvnFullStackedBar' });
    array.push({ value: 'SideBySideStackedBarSeriesView', displayValue: 'Side By Side Bar Stacked', localizationId: 'ChartStringId.SvnSideBySideStackedBar' });
    array.push({ value: 'SideBySideFullStackedBarSeriesView', displayValue: 'Side By Side Bar Stacked 100%', localizationId: 'ChartStringId.SvnSideBySideFullStackedBar' });
    array.push({ value: 'WaterfallSeriesView', displayValue: 'Waterfall', localizationId: 'ChartStringId.SvnWaterfall' });
    if (!limitation) {
        array.push({ value: 'SideBySideBar3DSeriesView', displayValue: 'Bar 3D', localizationId: 'ChartStringId.SvnSideBySideBar3D' });
        array.push({ value: 'StackedBar3DSeriesView', displayValue: 'Bar 3D Stacked', localizationId: 'ChartStringId.SvnStackedBar3D' });
        array.push({ value: 'FullStackedBar3DSeriesView', displayValue: 'Bar 3D Stacked 100%', localizationId: 'ChartStringId.SvnFullStackedBar3D' });
        array.push({ value: 'SideBySideStackedBar3DSeriesView', displayValue: 'Side By Side Bar 3D Stacked ' });
        array.push({ value: 'SideBySideFullStackedBar3DSeriesView', displayValue: 'Side By Side Bar 3D Stacked 100%', localizationId: 'ChartStringId.SvnSideBySideFullStackedBar3D' });
        array.push({ value: 'ManhattanBarSeriesView', displayValue: 'Manhattan Bar', localizationId: 'ChartStringId.SvnManhattanBar' });
    }
    array.push({ value: 'PointSeriesView', displayValue: 'Point', localizationId: 'ASPxReportsStringId.ReportDesigner_FontOptions_Unit_Point' });
    array.push({ value: 'BubbleSeriesView', displayValue: 'Bubble', localizationId: 'ChartStringId.SvnBubble' });
    array.push({ value: 'LineSeriesView', displayValue: 'Line', localizationId: 'DevExpress.XtraReports.UI.XRLine' });
    array.push({ value: 'StackedLineSeriesView', displayValue: 'Line Stacked', localizationId: 'ChartStringId.SvnStackedLine' });
    array.push({ value: 'FullStackedLineSeriesView', displayValue: 'Line Stacked 100%', localizationId: 'ChartStringId.SvnFullStackedLine' });
    array.push({ value: 'StepLineSeriesView', displayValue: 'Step Line', localizationId: 'ChartStringId.SvnStepLine' });
    array.push({ value: 'SplineSeriesView', displayValue: 'Spline', localizationId: 'ChartStringId.SvnSpline' });
    array.push({ value: 'ScatterLineSeriesView', displayValue: 'Scatter Line', localizationId: 'ChartStringId.CmdCreateScatterLineChartMenuCaption' });
    array.push({ value: 'SwiftPlotSeriesView', displayValue: 'Swift Plot', localizationId: 'ChartStringId.SvnSwiftPlot' });
    if (!limitation) {
        array.push({ value: 'Line3DSeriesView', displayValue: 'Line 3D', localizationId: 'ChartStringId.SvnLine3D' });
        array.push({ value: 'StackedLine3DSeriesView', displayValue: 'Line 3D Stacked', localizationId: 'ChartStringId.SvnStackedLine3D' });
        array.push({ value: 'FullStackedLine3DSeriesView', displayValue: 'Line 3D Stacked 100%', localizationId: 'ChartStringId.SvnFullStackedLine3D' });
        array.push({ value: 'StepLine3DSeriesView', displayValue: 'Step Line 3D', localizationId: 'ChartStringId.SvnStepLine3D' });
        array.push({ value: 'Spline3DSeriesView', displayValue: 'Spline 3D', localizationId: 'ChartStringId.SvnSpline3D' });
    }
    array.push({ value: 'PieSeriesView', displayValue: 'Pie', localizationId: 'ChartStringId.CmdCreatePieChartMenuCaption' });
    array.push({ value: 'DoughnutSeriesView', displayValue: 'Doughnut', localizationId: 'ChartStringId.CmdCreateDoughnutChartMenuCaption' });
    array.push({ value: 'NestedDoughnutSeriesView', displayValue: 'Nested Doughnut', localizationId: 'ChartStringId.CmdCreateNestedDoughnutChartMenuCaption' });
    if (!limitation) {
        array.push({ value: 'Pie3DSeriesView', displayValue: 'Pie 3D', localizationId: 'ChartStringId.SvnPie3D' });
        array.push({ value: 'Doughnut3DSeriesView', displayValue: 'Doughnut 3D', localizationId: 'ChartStringId.SvnDoughnut3D' });
    }
    array.push({ value: 'FunnelSeriesView', displayValue: 'Funnel', localizationId: 'ChartStringId.SvnFunnel' });
    if (!limitation) {
        array.push({ value: 'Funnel3DSeriesView', displayValue: 'Funnel 3D', localizationId: 'ChartStringId.SvnFunnel3D' });
    }
    array.push({ value: 'AreaSeriesView', displayValue: 'Area', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsDataField.Area' });
    array.push({ value: 'StackedAreaSeriesView', displayValue: 'Area Stacked', localizationId: 'ChartStringId.SvnStackedArea' });
    array.push({ value: 'FullStackedAreaSeriesView', displayValue: 'Area Stacked 100%', localizationId: 'ChartStringId.SvnFullStackedArea' });
    array.push({ value: 'StepAreaSeriesView', displayValue: 'Step Area', localizationId: 'ChartStringId.SvnStepArea' });
    array.push({ value: 'SplineAreaSeriesView', displayValue: 'Spline Area', localizationId: 'ChartStringId.SvnSplineArea' });
    array.push({ value: 'StackedSplineAreaSeriesView', displayValue: 'Spline Area Stacked', localizationId: 'ChartStringId.SvnSplineStackedArea' });
    array.push({ value: 'FullStackedSplineAreaSeriesView', displayValue: 'Spline Area Stacked 100%', localizationId: 'ChartStringId.SvnSplineFullStackedArea' });
    if (!limitation) {
        array.push({ value: 'Area3DSeriesView', displayValue: 'Area 3D', localizationId: 'ChartStringId.SvnArea3D' });
        array.push({ value: 'StackedArea3DSeriesView', displayValue: 'Area 3D Stacked', localizationId: 'ChartStringId.SvnStackedArea3D' });
        array.push({ value: 'FullStackedArea3DSeriesView', displayValue: 'Area 3D Stacked 100%', localizationId: 'ChartStringId.SvnFullStackedArea3D' });
        array.push({ value: 'StepArea3DSeriesView', displayValue: 'Step 3D Area' });
        array.push({ value: 'SplineArea3DSeriesView', displayValue: 'Spline 3D Area' });
        array.push({ value: 'StackedSplineArea3DSeriesView', displayValue: 'Spline Area 3D Stacked', localizationId: 'ChartStringId.SvnSplineAreaStacked3D' });
        array.push({ value: 'FullStackedSplineArea3DSeriesView', displayValue: 'Spline Area 3D Stacked 100%', localizationId: 'ChartStringId.SvnSplineAreaFullStacked3D' });
    }
    array.push({ value: 'OverlappedRangeBarSeriesView', displayValue: 'Range Bar', localizationId: 'ChartStringId.SvnOverlappedRangeBar' });
    array.push({ value: 'SideBySideRangeBarSeriesView', displayValue: 'Side By Side Range Bar', localizationId: 'ChartStringId.SvnSideBySideRangeBar' });
    array.push({ value: 'RangeAreaSeriesView', displayValue: 'Range Area', localizationId: 'ChartStringId.SvnRangeArea' });
    if (!limitation) {
        array.push({ value: 'RangeArea3DSeriesView', displayValue: 'Range Area 3D', localizationId: 'ChartStringId.SvnRangeArea3D' });
    }
    array.push({ value: 'RadarPointSeriesView', displayValue: 'Radar Point', localizationId: 'ChartStringId.SvnRadarPoint' });
    array.push({ value: 'RadarLineSeriesView', displayValue: 'Radar Line', localizationId: 'ChartStringId.SvnRadarLine' });
    array.push({ value: 'RadarAreaSeriesView', displayValue: 'Radar Area', localizationId: 'ChartStringId.CmdCreateRadarAreaChartMenuCaption' });
    array.push({ value: 'PolarPointSeriesView', displayValue: 'Polar Point', localizationId: 'ChartStringId.SvnPolarPoint' });
    array.push({ value: 'PolarLineSeriesView', displayValue: 'Polar Line', localizationId: 'ChartStringId.CmdCreatePolarLineChartMenuCaption' });
    array.push({ value: 'PolarAreaSeriesView', displayValue: 'Polar Area', localizationId: 'ChartStringId.SvnPolarArea' });
    array.push({ value: 'StockSeriesView', displayValue: 'Stock Series' });
    array.push({ value: 'CandleStickSeriesView', displayValue: 'Candle Stick', localizationId: 'ChartStringId.CmdCreateCandleStickChartMenuCaption' });
    array.push({ value: 'OverlappedGanttSeriesView', displayValue: 'Gantt', localizationId: 'ChartStringId.CmdGanttGroupPlaceHolderMenuCaption' });
    array.push({ value: 'SideBySideGanttSeriesView', displayValue: 'Side By Side Gantt', localizationId: 'ChartStringId.SvnSideBySideGantt' });
    return array;
};
exports.view = {
    propertyName: 'view', modelName: 'View', displayName: 'View', defaultVal: {},
    from: _view_1.SeriesViewViewModel.from, toJsonObject: _view_1.SeriesViewViewModel.toJson,
    localizationId: 'DevExpress.XtraReports.UI.XRSparkline.View'
};
exports.viewBindableSerializationInfo = {
    propertyName: 'viewBindable', displayName: 'View', editor: _editorTemplates_1.editorTemplates.getEditor('views'), valuesArray: exports.createViewsArray(_settings_1.limitation()),
    localizationId: 'DevExpress.XtraReports.UI.XRSparkline.View'
};
exports.qualitativeSummaryOptions = { propertyName: 'qualitativeSummaryOptions', modelName: 'QualitativeSummaryOptions', displayName: 'Qualitative Summary Options', localizationId: 'DevExpress.XtraCharts.SeriesBase.QualitativeSummaryOptions', info: _summaryOptionsMetaData_1.summaryOptionsSerializationInfoArray, from: _summaryOptions_1.QualitativeSummaryOptionsModel.from, toJsonObject: _summaryOptions_1.QualitativeSummaryOptionsModel.toJson, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.numericSummaryOptions = { propertyName: 'numericSummaryOptions', modelName: 'NumericSummaryOptions', displayName: 'Numeric Summary Options', localizationId: 'DevExpress.XtraCharts.SeriesBase.NumericSummaryOptions', info: _summaryOptionsMetaData_1.numericSummaryOptionsSerializationInfoArray, from: _summaryOptions_1.NumericSummaryOptionsModel.from, toJsonObject: _summaryOptions_1.NumericSummaryOptionsModel.toJson, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.dateTimeSumaryOptions = { propertyName: 'dateTimeSummaryOptions', modelName: 'DateTimeSummaryOptions', displayName: 'Date-Time Summary Options', localizationId: 'DevExpress.XtraCharts.SeriesBase.DateTimeSummaryOptions', info: _summaryOptionsMetaData_1.dateTimeSummaryOptionsSerializationInfoArray, from: _summaryOptions_1.DateTimeSummaryOptionsModel.from, toJsonObject: _summaryOptions_1.DateTimeSummaryOptionsModel.toJson, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.seriesTemplateSerializationsInfo = [
    exports.viewBindableSerializationInfo, { propertyName: 'titles', displayName: 'Titles', localizationId: 'DevExpress.XtraReports.UI.XRChart.Titles' }, { propertyName: 'indicators', displayName: 'Indicators', localizationId: 'DevExpress.XtraReports.UI.XRChart.Indicators' }, exports.view, exports.argumentDataMember, exports.valueDataMembersSerializable, colorDataMember, exports.argumentScaleType, exports.valueScaleType, _common_1.filterString, _common_1.filterStringEditable, exports.seriesPointsSorting, exports.seriesPointsSortingKey, _common_1.showInLegend, _axis_1.legendName, exports.legendTextPattern, exports.labelsVisibility, exports.qualitativeSummaryOptions, exports.numericSummaryOptions, exports.dateTimeSumaryOptions, exports.seriesLabel, topNOptions, _common_1.visible
];
exports.seriesTemplate = { propertyName: 'seriesTemplate', modelName: 'SeriesTemplate', displayName: 'Series Template', localizationId: 'DevExpress.XtraReports.UI.XRChart.SeriesTemplate', info: exports.seriesTemplateSerializationsInfo, from: _template_1.SeriesTemplateViewModel.from, toJsonObject: _template_1.SeriesTemplateViewModel.toJson, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.seriesSerializationsInfo = [_common_1.name, exports.points].concat(exports.seriesTemplateSerializationsInfo);
exports.seriesSerializable = { propertyName: 'series', modelName: 'SeriesSerializable', displayName: 'Series', array: true, editor: _editorTemplates_1.editorTemplates.getEditor('collection'), localizationId: 'DevExpress.XtraReports.UI.XRChart.Series' };
exports.seriesDataMember = { propertyName: 'seriesDataMember', modelName: '@SeriesDataMember', displayName: 'Series Data Member', editor: ko.bindingHandlers['displayNameExtender'] ? analytics_widgets_1.editorTemplates.getEditor('field') : _editorTemplates_1.editorTemplates.getEditor('fieldChart'), localizationId: 'DevExpress.XtraReports.UI.XRChart.SeriesDataMember' };
exports.dataContainerSerializationsInfo = [exports.seriesDataMember, exports.seriesSerializable, exports.seriesTemplate, _common_1.dataMember, exports.pivotGridDataSourceOptions];
exports.dataContainer = { propertyName: 'dataContainer', modelName: 'DataContainer', displayName: 'Data Container', info: exports.dataContainerSerializationsInfo, from: _dataContainer_1.DataContainerViewModel.from, toJsonObject: _dataContainer_1.DataContainerViewModel.toJson, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditorCustom') };
var textArea = { propertyName: 'text', modelName: '@Text', displayName: 'Text', localizationId: 'DevExpress.XtraReports.UI.XRControl.Text', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('stringArray') };
var emptyChartEnableAntialiasing = { propertyName: 'enableAntialiasing', modelName: '@EnableAntialiasing', displayName: 'Enable Antialiasing', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: _common_1.defaultBooleanValues, localizationId: 'DevExpress.XtraCharts.TitleBase.EnableAntialiasing' };
exports.emptyChartTextSerializationsInfo = [textArea, _common_1.font12, _common_1.textColor, emptyChartEnableAntialiasing, _common_1.tag];
exports.emptyChartText = { propertyName: 'emptyChartText', modelName: 'EmptyChartText', displayName: 'Empty Chart Text', info: exports.emptyChartTextSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.titleSerializationsInfo = [chartTitleText, _common_1.textColor, dock, _common_1.titleAlignment, _common_1.visibility, _common_1.font18];
exports.titles = { propertyName: 'titles', modelName: 'Titles', displayName: 'Titles', localizationId: 'DevExpress.XtraReports.UI.XRChart.Titles', array: true, editor: _editorTemplates_1.editorTemplates.getEditor('collection') };
var markerMode = {
    propertyName: 'markerMode', modelName: '@MarkerMode', displayName: 'Marker Mode', localizationId: 'DevExpress.XtraCharts.Legend.MarkerMode', defaultVal: 'Marker', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Marker', displayValue: analytics_utils_1.getLocalization('Marker', 'DevExpress.XtraCharts.LegendMarkerMode.Marker') }, { value: 'CheckBox', displayValue: analytics_utils_1.getLocalization('Check Box', 'DevExpress.XtraCharts.LegendMarkerMode.CheckBox') }, { value: 'CheckBoxAndMarker', displayValue: analytics_utils_1.getLocalization('Check Box and Marker', 'DevExpress.XtraCharts.LegendMarkerMode.CheckBoxAndMarker') }, { value: 'MarkerAndCheckBox', displayValue: analytics_utils_1.getLocalization('Marker and Check Box', 'DevExpress.XtraCharts.LegendMarkerMode.MarkerAndCheckBox') }, { value: 'None', displayValue: analytics_utils_1.getLocalization('None', 'DevExpress.XtraCharts.LegendMarkerMode.None') }]
}, markerOffset = { propertyName: 'markerOffset', modelName: '@MarkerOffset', displayName: 'Marker Offset', localizationId: 'DevExpress.XtraCharts.Legend.MarkerOffset', defaultVal: 2, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.legendSerializationsInfo = [_common_1.textColor, _common_1.backColor, direction, alignmentVertical, alignmentHorizontal, _common_1.visibility, markerMode, markerOffset, _series_2.border, _common_1.margin, exports.padding, _common_1.font8];
exports.legend = { propertyName: 'legend', modelName: 'Legend', displayName: 'Legend', localizationId: 'DevExpress.XtraCharts.Legend', info: exports.legendSerializationsInfo, from: _legend_1.LegendViewModel.from, toJsonObject: _legend_1.LegendViewModel.toJson, defaultVal: {}, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.additionalLegendSerializationsInfo = [_common_1.name].concat(exports.legendSerializationsInfo);
exports.legends = { propertyName: 'legends', modelName: 'Legends', displayName: 'Legends', localizationId: 'DevExpress.XtraReports.UI.XRChart.Legends', array: true, editor: _editorTemplates_1.editorTemplates.getEditor('collection') };
exports.appearanceName = {
    propertyName: 'appearanceName', modelName: '@AppearanceNameSerializable', displayName: 'Appearance Name', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Nature Colors', displayValue: 'Nature Colors', localizationId: 'ChartStringId.AppNatureColors' }, { value: 'Pastel Kit', displayValue: 'Pastel Kit', localizationId: 'ChartStringId.AppPastelKit' }, { value: 'In A Fog', displayValue: 'In A Fog', localizationId: 'ChartStringId.AppInAFog' }, { value: 'Terracotta Pie', displayValue: 'Terracotta Pie', localizationId: 'ChartStringId.PltTerracottaPie' }, { value: 'Northern Lights', displayValue: 'Northern Lights', localizationId: 'ChartStringId.PltNorthernLights' }, { value: 'Chameleon', displayValue: 'Chameleon', localizationId: 'ChartStringId.AppChameleon' }, { value: 'The Trees', displayValue: 'The Trees', localizationId: 'ChartStringId.PltTheTrees' }, { value: 'Light', displayValue: 'Light', localizationId: 'ChartStringId.AppLight' }, { value: 'Gray', displayValue: 'Gray', localizationId: 'ChartStringId.AppGray' }, { value: 'Dark', displayValue: 'Dark', localizationId: 'ChartStringId.AppDark' }, { value: 'Dark Flat', displayValue: 'Dark Flat', localizationId: 'ChartStringId.AppDarkFlat' }, { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }],
    localizationId: 'DevExpress.XtraReports.UI.XRChart.AppearanceName'
};
exports.paletteName = {
    propertyName: 'paletteName', modelName: '@PaletteName', displayName: 'Palette Name', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }, { value: 'Nature Colors', displayValue: 'Nature Colors', localizationId: 'ChartStringId.AppNatureColors' }, { value: 'Pastel Kit', displayValue: 'Pastel Kit', localizationId: 'ChartStringId.AppPastelKit' }, { value: 'In A Fog', displayValue: 'In A Fog', localizationId: 'ChartStringId.AppInAFog' }, { value: 'Terracotta Pie', displayValue: 'Terracotta Pie', localizationId: 'ChartStringId.PltTerracottaPie' }, { value: 'Northern Lights', displayValue: 'Northern Lights', localizationId: 'ChartStringId.PltNorthernLights' }, { value: 'Chameleon', displayValue: 'Chameleon', localizationId: 'ChartStringId.AppChameleon' }, { value: 'The Trees', displayValue: 'The Trees', localizationId: 'ChartStringId.PltTheTrees' }, { value: 'Mixed', displayValue: 'Mixed', localizationId: 'ChartStringId.PltMixed' }, { value: 'Office', displayValue: 'Office', localizationId: 'ChartStringId.PltOffice' }, { value: 'Black and White', displayValue: 'Black and White', localizationId: 'ChartStringId.PltBlackAndWhite' }, { value: 'Grayscale', displayValue: 'Grayscale', localizationId: 'ChartStringId.PltGrayscale' }, { value: 'Apex', displayValue: 'Apex', localizationId: 'ChartStringId.PltApex' }, { value: 'Aspect', displayValue: 'Aspect', localizationId: 'ChartStringId.PltAspect' }, { value: 'Civic', displayValue: 'Civic', localizationId: 'ChartStringId.PltCivic' }, { value: 'Concourse', displayValue: 'Concourse', localizationId: 'ChartStringId.PltConcourse' }, { value: 'Equity', displayValue: 'Equity', localizationId: 'ChartStringId.PltEquity' }, { value: 'Flow', displayValue: 'Flow', localizationId: 'ChartStringId.PltFlow' }, { value: 'Foundry', displayValue: 'Foundry', localizationId: 'ChartStringId.PltFoundry' }, { value: 'Median', displayValue: 'Median', localizationId: 'DevExpress.XtraReports.UI.SortingSummaryFunction.Median' }, { value: 'Metro', displayValue: 'Metro', localizationId: 'ChartStringId.PltMetro' }, { value: 'Module', displayValue: 'Module', localizationId: 'DevExpress.XtraReports.UI.XRBarCode.Module' }, { value: 'Opulent', displayValue: 'Opulent', localizationId: 'ChartStringId.PltOpulent' }, { value: 'Oriel', displayValue: 'Oriel', localizationId: 'ChartStringId.PltOriel' }, { value: 'Origin', displayValue: 'Origin', localizationId: 'ChartStringId.PltOrigin' }, { value: 'Paper', displayValue: 'Paper', localizationId: 'ChartStringId.PltPaper' }, { value: 'Solstice', displayValue: 'Solstice', localizationId: 'ChartStringId.PltSolstice' }, { value: 'Technic', displayValue: 'Technic', localizationId: 'ChartStringId.PltTechnic' }, { value: 'Trek', displayValue: 'Trek', localizationId: 'ChartStringId.PltTrek' }, { value: 'Urban', displayValue: 'Urban', localizationId: 'ChartStringId.PltUrban' }, { value: 'Verve', displayValue: 'Verve', localizationId: 'ChartStringId.PltVerve' }, { value: 'Office 2013', displayValue: 'Office 2013', localizationId: 'ChartStringId.PltOffice2013' }, { value: 'Blue Warm', displayValue: 'Blue Warm', localizationId: 'ChartStringId.PltBlueWarm' }, { value: 'Blue', displayValue: 'Blue', localizationId: 'ChartStringId.PltBlue' }, { value: 'Blue II', displayValue: 'Blue II', localizationId: 'ChartStringId.PltBlueII' }, { value: 'Blue Green', displayValue: 'Blue Green', localizationId: 'ChartStringId.PltBlueGreen' }, { value: 'Green', displayValue: 'Green', localizationId: 'ChartStringId.PltGreen' }, { value: 'Green Yellow', displayValue: 'Green Yellow', localizationId: 'ChartStringId.PltGreenYellow' }, { value: 'Yellow', displayValue: 'Yellow', localizationId: 'ChartStringId.PltYellow' }, { value: 'Yellow Orange', displayValue: 'Yellow Orange', localizationId: 'ChartStringId.PltYellowOrange' }, { value: 'Orange', displayValue: 'Orange', localizationId: 'ChartStringId.PltOrange' }, { value: 'Orange Red', displayValue: 'Orange Red', localizationId: 'ChartStringId.PltOrangeRed' }, { value: 'Red Orange', displayValue: 'Red Orange', localizationId: 'ChartStringId.PltRedOrange' }, { value: 'Red', displayValue: 'Red', localizationId: 'ChartStringId.PltRed' }, { value: 'Red Violet', displayValue: 'Red Violet', localizationId: 'ChartStringId.PltRedViolet' }, { value: 'Violet', displayValue: 'Violet', localizationId: 'ChartStringId.PltViolet' }, { value: 'Violet II', displayValue: 'Violet II', localizationId: 'ChartStringId.PltVioletII' }, { value: 'Marquee', displayValue: 'Marquee', localizationId: 'ChartStringId.PltMarquee' }, { value: 'Slipstream', displayValue: 'Slipstream', localizationId: 'ChartStringId.PltSlipstream' }],
    localizationId: 'DevExpress.XtraReports.UI.XRChart.PaletteName'
};
exports.backImage = {
    propertyName: 'backImage', modelName: 'BackImage', displayName: 'Background Image', localizationId: 'DevExpress.XtraCharts.BackgroundImage', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: [
        { propertyName: 'tag', modelName: '@Tag', displayName: 'Tag', localizationId: 'DevExpress.XtraCharts.ChartElement.Tag', editor: analytics_widgets_1.editorTemplates.getEditor('text') },
        { propertyName: 'stretch', modelName: '@Stretch', displayName: 'Stretch', localizationId: 'DevExpress.XtraCharts.BackgroundImage.Stretch', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: 'false', from: analytics_utils_1.parseBool },
        { propertyName: 'image', modelName: '@Image', displayName: 'Image', localizationId: 'DevExpress.XtraCharts.ChartImage.Image', editor: analytics_widgets_1.editorTemplates.getEditor('image') }
    ]
};
exports.chartSerializationsInfo = [exports.appearanceName, exports.backImage, exports.paletteName, sideBySideBarDistanceFixed, sideBySideEqualBarWidth, sideBySideBarDistance, exports.dataContainer, _diagram_1.diagram, exports.titles, exports.legend, exports.legends, exports.emptyChartText];
exports.chart = { propertyName: 'chart', modelName: 'Chart', displayName: 'Chart', from: _chart_1.ChartViewModel.from, toJsonObject: _chart_1.ChartViewModel.toJson, localizationId: 'DevExpress.XtraReports.UI.XRChart' };
exports.chartDataMember = { propertyName: 'dataMember', displayName: 'Data Member', defaultVal: '', editor: _editorTemplates_1.editorTemplates.getEditor('dataMemberChart'), localizationId: 'DevExpress.XtraReports.UI.XRSparkline.DataMember' };
exports.chartSeriesDataMember = { propertyName: 'seriesDataMember', displayName: 'Series Data Member', defaultVal: '', editor: _editorTemplates_1.editorTemplates.getEditor('fieldChart'), localizationId: 'DevExpress.XtraReports.UI.XRChart.SeriesDataMember' };
exports.fakeChartSerializationInfo = [
    _editorTemplates_1.chartDataSource, exports.chartDataMember, exports.chartSeriesDataMember, exports.paletteName, exports.seriesTemplate, exports.seriesSerializable, _diagram_1.diagram, exports.titles, exports.legend, exports.legends, exports.emptyChartText, exports.backImage
];
exports.chartControlSerializationsInfo = [exports.chart];


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
exports.anchorVertical = {
    propertyName: 'anchorVertical',
    modelName: '@AnchorVertical', displayName: 'Anchor Vertically', localizationId: 'DevExpress.XtraReports.UI.XRControl.AnchorVertical', defaultVal: 'None',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.VerticalAnchorStyles.None' },
        { value: 'Top', displayValue: 'Top', localizationId: 'DevExpress.XtraReports.UI.VerticalAnchorStyles.Top' },
        { value: 'Bottom', displayValue: 'Bottom', localizationId: 'DevExpress.XtraReports.UI.VerticalAnchorStyles.Bottom' },
        { value: 'Both', displayValue: 'Both', localizationId: 'DevExpress.XtraReports.UI.VerticalAnchorStyles.Both' }
    ]
};
exports.anchorHorizontal = {
    propertyName: 'anchorHorizontal',
    modelName: '@AnchorHorizontal', displayName: 'Anchor Horizontally', localizationId: 'DevExpress.XtraReports.UI.XRControl.AnchorHorizontal', defaultVal: 'None',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.HorizontalAnchorStyles.None' },
        { value: 'Left', displayValue: 'Left', localizationId: 'DevExpress.XtraReports.UI.HorizontalAnchorStyles.Left' },
        { value: 'Right', displayValue: 'Right', localizationId: 'DevExpress.XtraReports.UI.HorizontalAnchorStyles.Right' },
        { value: 'Both', displayValue: 'Both', localizationId: 'DevExpress.XtraReports.UI.HorizontalAnchorStyles.Both' }
    ]
};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var analytics_widgets_1 = __webpack_require__(4);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var editorTemplates_1 = __webpack_require__(9);
var _backColor = { propertyName: '_backColor', modelName: '@BackColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString };
var _foreColor = { propertyName: '_foreColor', modelName: '@ForeColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString };
var _borderColor = { propertyName: '_borderColor', modelName: '@BorderColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString };
exports.styleSerializationInfo = [__assign({}, metadata_1.name)].concat(analytics_internal_1.extend(true, [], [
    analytics_internal_1.extend(true, {}, metadata_1.font, { localizable: false }), metadata_1.textAlignment,
    _foreColor,
    _backColor,
    _borderColor,
    { propertyName: 'backColor', displayName: 'Background Color', localizationId: 'DevExpress.XtraReports.UI.XRControlStyle.BackColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') },
    { propertyName: 'foreColor', displayName: 'Foreground Color', localizationId: 'DevExpress.XtraReports.UI.XRControlStyle.ForeColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') },
    { propertyName: 'borderColor', displayName: 'Border Color', localizationId: 'DevExpress.XtraReports.UI.XRControlStyle.BorderColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') },
    { propertyName: 'borders', modelName: '@Sides', displayName: 'Borders', localizationId: 'DevExpress.XtraReports.UI.XRControlStyle.Borders', editor: analytics_widgets_1.editorTemplates.getEditor('borders') },
    { propertyName: 'borderWidth', modelName: '@BorderWidthSerializable', displayName: 'Border Width', localizationId: 'DevExpress.XtraReports.UI.XRControlStyle.BorderWidth', from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }
])).concat([metadata_1.borderDashStyle], metadata_1.paddingGroup);
exports.styleSerializationInfo.forEach(function (item) { delete item.defaultVal; });
exports.styleName = { propertyName: 'styleName', modelName: '@StyleName', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), displayName: 'Style', localizationId: 'DevExpress.XtraReports.UI.ConditionFormatting.Style', defaultVal: null };
exports.evenStyleName = { propertyName: 'evenStyleName', modelName: '@EvenStyleName', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), displayName: 'Even Style', localizationId: 'DevExpress.XtraReports.UI.XRControl.XRControlStyles.EvenStyle', defaultVal: null };
exports.oddStyleName = { propertyName: 'oddStyleName', modelName: '@OddStyleName', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), displayName: 'Odd Style', localizationId: 'DevExpress.XtraReports.UI.XRControl.XRControlStyles.OddStyle', defaultVal: null };
exports.stylePriority = { propertyName: 'stylePriority', modelName: 'StylePriority', info: metadata_1.stylePrioritySerializationInfo };
var cellStyleName = { propertyName: 'cellStyleName', modelName: '@CellStyleName', displayName: 'Cell', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.Cell', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), defaultVal: null }, customTotalCellStyleName = { propertyName: 'customTotalCellStyleName', modelName: '@CustomTotalCellStyleName', displayName: 'Custom Total Cell', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.CustomTotalCell', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), defaultVal: null }, fieldHeaderStyleName = { propertyName: 'fieldHeaderStyleName', modelName: '@FieldHeaderStyleName', displayName: 'Field Header', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.FieldHeader', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), defaultVal: null }, fieldValueGrandTotalStyleName = { propertyName: 'fieldValueGrandTotalStyleName', modelName: '@FieldValueGrandTotalStyleName', displayName: 'Field Value Grand Total', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAppearancesBase.FieldValueGrandTotal', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), defaultVal: null }, fieldValueStyleName = { propertyName: 'fieldValueStyleName', modelName: '@FieldValueStyleName', displayName: 'Field Value', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.FieldValue', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), defaultVal: null }, fieldValueTotalStyleName = { propertyName: 'fieldValueTotalStyleName', modelName: '@FieldValueTotalStyleName', displayName: 'Field Value Total', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.FieldValueTotal', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), defaultVal: null }, filterSeparatorStyleName = { propertyName: 'filterSeparatorStyleName', modelName: '@FilterSeparatorStyleName', displayName: 'Filter Separator', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.FilterSeparator', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), defaultVal: null }, grandTotalCellStyleName = { propertyName: 'grandTotalCellStyleName', modelName: '@GrandTotalCellStyleName', displayName: 'Grand Total Cell', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.GrandTotalCell', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), defaultVal: null }, headerGroupLineStyleName = { propertyName: 'headerGroupLineStyleName', modelName: '@HeaderGroupLineStyleName', displayName: 'Header Group Line', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.HeaderGroupLine', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), defaultVal: null }, linesStyleName = { propertyName: 'linesStyleName', modelName: '@LinesStyleName', displayName: 'Lines', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.Lines', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), defaultVal: null }, totalCellStyleName = { propertyName: 'totalCellStyleName', modelName: '@TotalCellStyleName', displayName: 'Total Cell', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.TotalCell', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), defaultVal: null }, generalStyleName = { propertyName: 'generalStyleName', modelName: '@GeneralStyleName', displayName: 'General Style', localizationId: 'DevExpress.XtraReports.UI.XRCrossTab.GeneralStyleName', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), defaultVal: null }, dataAreaStyleName = { propertyName: 'dataAreaStyleName', modelName: '@DataAreaStyleName', displayName: 'Data Area Style', localizationId: 'DevExpress.XtraReports.UI.XRCrossTab.DataAreaStyleName', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), defaultVal: null }, headerAreaStyleName = { propertyName: 'headerAreaStyleName', modelName: '@HeaderAreaStyleName', displayName: 'Header Area Style', localizationId: 'DevExpress.XtraReports.UI.XRCrossTab.HeaderAreaStyleName', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), defaultVal: null }, totalAreaStyleName = { propertyName: 'totalAreaStyleName', modelName: '@TotalAreaStyleName', displayName: 'Total Area Style', localizationId: 'DevExpress.XtraReports.UI.XRCrossTab.TotalAreaStyleName', editor: editorTemplates_1.designerEditorTemplates.getEditor('style'), defaultVal: null };
exports.pivotGridStyles = [cellStyleName, customTotalCellStyleName, fieldHeaderStyleName, fieldValueGrandTotalStyleName, fieldValueStyleName, fieldValueTotalStyleName, filterSeparatorStyleName,
    grandTotalCellStyleName, headerGroupLineStyleName, linesStyleName, totalCellStyleName];
exports.crossTabStyles = [generalStyleName, headerAreaStyleName, dataAreaStyleName, totalAreaStyleName];
exports.crossTabStylesDefaults = {
    generalStyleName: { '@Name': 'crossTabGeneralStyle', '@BorderStyle': 'Inset', '@Padding': '2,2,0,0,100', '@Font': 'Arial, 9.75pt', '@ForeColor': 'Black', '@BackColor': 'White', '@BorderColor': '255,160,160,160', '@Sides': 'All', '@StringFormat': 'Near;Near;0;None;Character;Default' },
    dataAreaStyleName: { '@Name': 'crossTabDataStyle', '@BorderStyle': 'Inset', '@StringFormat': 'Far;Center;0;None;Character;Default', '@TextAlignment': 'MiddleRight' },
    headerAreaStyleName: { '@Name': 'crossTabHeaderStyle', '@BorderStyle': 'Inset', '@BackColor': '255,240,240,240', '@StringFormat': 'Near;Center;0;None;Character;Default', '@TextAlignment': 'MiddleLeft' },
    totalAreaStyleName: { '@Name': 'crossTabTotalStyle', '@BorderStyle': 'Inset', '@StringFormat': 'Far;Center;0;None;Character;Default', '@TextAlignment': 'MiddleRight' }
};
exports.stylesInfo = [exports.evenStyleName, exports.oddStyleName, exports.styleName].concat(exports.pivotGridStyles, exports.crossTabStyles);
exports.stylesObj = { propertyName: 'styleObj', displayName: 'Styles', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraReports.UI.XRPivotGrid.Styles' };


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
exports.editorTemplates = new analytics_widgets_1.EditorTemplates();
exports.chartDataSource = { propertyName: 'dataSource', displayName: 'Data Source', modelName: '@DataSource', link: true, editor: exports.editorTemplates.getEditor('chartDataSource'), localizationId: 'DevExpress.XtraReports.UI.XRSparkline.DataSource' };


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editorTemplates_1 = __webpack_require__(9);
var analytics_internal_1 = __webpack_require__(2);
exports.createSinglePopularBindingInfos = function (propertyName) {
    return [exports.createPopularBindingInfo({ bindingName: propertyName, propertyName: '' }, false), exports.createPopularBindingInfo({ bindingName: propertyName, propertyName: '' })];
};
exports.createPopularBindingInfos = function (options) {
    var dataBindingOptions = {
        propertyName: 'popularDataBinding' + options.propertyName,
        displayName: options.propertyName,
        localizationId: options.localizationId,
        bindingName: options.propertyName,
    };
    var expressionOptions = {
        propertyName: 'popularExpression' + options.propertyName,
        displayName: options.propertyName,
        localizationId: options.localizationId,
        bindingName: options.propertyName,
    };
    return [exports.createPopularBindingInfo(dataBindingOptions, false), exports.createPopularBindingInfo(expressionOptions)];
};
exports.createPopularBindingInfo = function (options, isExpression) {
    if (isExpression === void 0) { isExpression = true; }
    var newInfo = {
        propertyName: options.propertyName || (isExpression ? 'popularExpression' : 'popularDataBinding'),
        displayName: options.displayName || (isExpression ? 'Expression' : 'Data Binding'),
        localizationId: options.localizationId || (isExpression ? 'DevExpress.XtraReports.UI.CalculatedField.Expression' : 'ReportStringId.STag_Name_DataBinding'),
        editor: isExpression ? editorTemplates_1.designerEditorTemplates.getEditor('reportexpressionComplex') : editorTemplates_1.designerEditorTemplates.getEditor('dataBinding'),
    };
    if (isExpression)
        newInfo['expressionName'] = options.bindingName;
    else
        newInfo['bindingName'] = options.bindingName;
    return newInfo;
};
function valuesArrayAsEnumWithLocalizationId(info, prefix) {
    return info.valuesArray.map(function (item) {
        var subName = item.localizationId && item.localizationId.split('.').pop() || item.value;
        return analytics_internal_1.extend({}, item, { localizationId: prefix + subName });
    });
}
exports.valuesArrayAsEnumWithLocalizationId = valuesArrayAsEnumWithLocalizationId;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var analytics_wizard_1 = __webpack_require__(7);
var $ = __webpack_require__(3);
var objectItemCreation_1 = __webpack_require__(41);
var dataFederation_1 = __webpack_require__(55);
function _convertToStateDataSource(dataSource) {
    if (dataSource.data instanceof dataFederation_1.DataFederationDataSource) {
        var objStorageItem = dataSource.data.getSerializableModel().serialize();
    }
    else {
        var objStorageItem = new analytics_utils_1.ModelSerializer().serialize(dataSource.data);
    }
    return JSON.stringify($.extend(true, {}, dataSource, { data: JSON.stringify(objStorageItem) }));
}
exports._convertToStateDataSource = _convertToStateDataSource;
function _restoreDataSourceFromState(dataSource) {
    var dataSource = JSON.parse(dataSource);
    if (dataSource) {
        var parsedData = JSON.parse(dataSource.data);
        if (parsedData.dataSources) {
            var serializableModel = new dataFederation_1.SerializableDataFederationDataSource(null, parsedData);
            dataSource.data = serializableModel.dataSource;
        }
        else {
            dataSource.data = objectItemCreation_1.createNewObjectItem(JSON.parse(dataSource.data));
        }
    }
    return dataSource;
}
exports._restoreDataSourceFromState = _restoreDataSourceFromState;
var ChooseAvailableDataSourcePage = (function (_super) {
    __extends(ChooseAvailableDataSourcePage, _super);
    function ChooseAvailableDataSourcePage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChooseAvailableDataSourcePage.prototype.commit = function () {
        return $.Deferred().resolve({
            sqlDataSourceWizard: {},
            jsonDataSourceWizard: {},
            dataSource: this.selectedOperation().createNew ? null : _convertToStateDataSource(this.selectedItems()[0])
        }).promise();
    };
    ChooseAvailableDataSourcePage.prototype._getSelectedItem = function (state) {
        var availableDataSources = this.items() || [];
        if (state.dataSource) {
            var dataSource = _restoreDataSourceFromState(state.dataSource);
            return availableDataSources.filter(function (x) { return x.id === dataSource.id || x.ref === dataSource.ref; })[0];
        }
        else if (availableDataSources.length === 0) {
            return null;
        }
        else {
            return availableDataSources[0];
        }
    };
    Object.defineProperty(ChooseAvailableDataSourcePage.prototype, "createNewOperationText", {
        get: function () {
            return analytics_utils_1.getLocalization("No, I'd like to create a new data source", 'AnalyticsCoreStringId.Wizard_CreateNewDataSource');
        },
        enumerable: true,
        configurable: true
    });
    return ChooseAvailableDataSourcePage;
}(analytics_wizard_1.ChooseAvailableItemPage));
exports.ChooseAvailableDataSourcePage = ChooseAvailableDataSourcePage;
function _registerChooseAvailableDataSourcePage(factory, reportWizardOptions) {
    factory.registerMetadata(pageId_1.ReportWizardPageId.ChooseAvailableDataSourcePage, {
        setState: function (data, state) {
            state.dataSource = data.dataSource;
            state.sqlDataSourceWizard = data.sqlDataSourceWizard;
            state.jsonDataSourceWizard = data.jsonDataSourceWizard;
        },
        getState: function (state) {
            return state;
        },
        resetState: function (state, defaultState) {
            state.sqlDataSourceWizard = defaultState.sqlDataSourceWizard;
            state.jsonDataSourceWizard = defaultState.jsonDataSourceWizard;
            state.dataSource = defaultState.dataSource;
        },
        create: function () {
            return new ChooseAvailableDataSourcePage(reportWizardOptions.dataSources, reportWizardOptions.canCreateDataSource);
        },
        template: 'dxrd-page-selectitems',
        description: analytics_utils_1.getLocalization('Do you want to use an existing data source?', 'AnalyticsCoreStringId.Wizard_UseExisting_DataSource')
    });
}
exports._registerChooseAvailableDataSourcePage = _registerChooseAvailableDataSourcePage;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_elements_1 = __webpack_require__(5);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var xrBand_1 = __webpack_require__(15);
var VerticalBandViewModel = (function (_super) {
    __extends(VerticalBandViewModel, _super);
    function VerticalBandViewModel(band, parent, serializer) {
        var _this = _super.call(this, band, parent, serializer) || this;
        _this.preInit(band, parent, serializer);
        var _widthFromControls = 0;
        _this._disposables.push(_this.widthFromControls = ko.pureComputed(function () {
            _widthFromControls = 0;
            if (analytics_internal_1.checkModelReady(_this.root)) {
                _widthFromControls = _this.controls().length > 0 ? Math.max.apply(Math, _this.controls().filter(function (x) { return !x.update(); }).map(function (x) { return x.location.x() + x.size.width(); })) : 1;
                _widthFromControls = analytics_internal_1.roundingXDecimals(_widthFromControls);
                _this.width(Math.max(_widthFromControls, _this.width()));
                _widthFromControls = _widthFromControls > 0 ? _widthFromControls : 0;
            }
            return _widthFromControls;
        }));
        _this._disposables.push(_this.height.subscribe(function (newValue) {
            if (_this.update())
                return;
            var verticalBands = _this.parentModel() && (_this.parentModel()['bands']() || []).filter(function (x) { return x instanceof VerticalBandViewModel; });
            var minValue = Math.max.apply(Math, verticalBands.map(function (x) { return x.heightFromControls(); }));
            if (newValue < minValue)
                newValue = minValue;
            verticalBands.forEach(function (x) {
                x.update(true);
                x.height(newValue);
                x.update(false);
            });
        }));
        return _this;
    }
    VerticalBandViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.controls);
        this.resetObservableArray(this.controls);
    };
    VerticalBandViewModel.prototype.initSize = function () {
        this.size.height = this.height;
        this.size.width = this.width;
    };
    VerticalBandViewModel.prototype.preInit = function (band, parent, serializer) {
    };
    VerticalBandViewModel.unitProperties = [].concat(['width'], xrBand_1.BandViewModel.unitProperties);
    return VerticalBandViewModel;
}(xrBand_1.BandViewModel));
exports.VerticalBandViewModel = VerticalBandViewModel;
var VerticalBandSurface = (function (_super) {
    __extends(VerticalBandSurface, _super);
    function VerticalBandSurface(band, context, unitProperties) {
        if (unitProperties === void 0) { unitProperties = VerticalBandSurface._unitProperties; }
        var _this = _super.call(this, band, context, unitProperties) || this;
        _this.isSomeParentCollapsed = ko.observable(false);
        _this._resize = function (delta, oldDelta) {
            var width = Math.max(_this._width() + delta - oldDelta, _this.minimumWidth());
            _this._width(width);
            return delta;
        };
        _this.resizeHandles = ko.computed(function () {
            return _this.rtlLayout() ? 'w' : 'e';
        });
        _this.templateName = 'dxrd-vertical-band';
        _this.selectiontemplate = 'dxrd-vertical-band-selection';
        _this.contentSelectionTemplate = 'dxrd-vertical-band-selection-content';
        _this._disposables.push(_this.collapsed = ko.pureComputed({
            read: function () {
                return !band.expanded();
            },
            write: function (newVal) {
                band.expanded(!newVal);
            }
        }));
        _this.coordinateGridOptions = {
            height: band.height,
            snapGridSize: band.root.snapGridSize,
            width: band.width,
            zoom: context.zoom,
            measureUnit: context.measureUnit,
            flip: context.rtl
        };
        _this.name = band.name;
        _this.height = ko.pureComputed(function () {
            if (_this.collapsed())
                return bandSurfaceCollapsedHeight_1.bandSurfaceCollapsedHeight;
            return _this._height() + VerticalBandSurface.markerHeight;
        });
        _this._disposables.push(_this.backgroundRect = ko.pureComputed(function () {
            var top = _this.verticalBandsContainer._getTopOffset();
            return {
                top: top,
                left: _this.absolutePosition.x(),
                height: _this._height(),
                width: _this._width()
            };
        }));
        var oldDelta = 0;
        _this['resize'] = function (params) {
            if (_this.rtlLayout() && params.delta.dx) {
                oldDelta = _this._resize(-1 * params.delta.dx, oldDelta);
            }
            else if (params.delta.dh) {
                oldDelta = _this.verticalBandsContainer['_resize'](params.delta.dh, oldDelta);
            }
            else {
                oldDelta = _this._resize(params.delta.dw, oldDelta);
            }
        };
        _this['stopResize'] = function () {
            oldDelta = 0;
        };
        _this._disposables.push(_this.canResize = ko.computed(function () {
            return _this.selected() && !_this.locked && !analytics_internal_1.DragDropHandler.started();
        }));
        _this.getUsefulRect = function () {
            return {
                top: 0,
                left: 0,
                right: _this._width(),
                bottom: _this._height(),
                width: _this._width(),
                height: _this._height()
            };
        };
        var x = _this.underCursor().x;
        var self = _this;
        var createCursor = function (newCursor) {
            var cursor = $.extend(true, {}, newCursor);
            delete cursor.x;
            Object.defineProperty(cursor, 'x', {
                get: function () {
                    return x;
                },
                set: function (newVal) {
                    x = newVal + self.verticalBandsContainer.scrollOffset();
                },
                configurable: true
            });
            return cursor;
        };
        var underCursor = createCursor(_this.underCursor());
        _this.underCursor = (function (newVal) {
            if (!newVal)
                return underCursor;
            x = newVal.x;
            underCursor = createCursor(newVal);
        });
        _this._disposables.push(_this.resizeHandles);
        return _this;
    }
    VerticalBandSurface.prototype._getRtlAbsolutePositionX = function (bandIndex, bands) {
        var allBandsWidth = this.verticalBandsContainer.getBandsWidth(bands);
        if (bandIndex !== 0) {
            return bands[bandIndex - 1].absolutePosition.x() - bands[bandIndex]._width();
        }
        else if (allBandsWidth > this.verticalBandsContainer.width()) {
            return bands.reduce(function (acc, band, index) { return acc += (index === 0 ? 0 : band._width()); }, 0);
        }
        else {
            return this.verticalBandsContainer.width() - bands[bandIndex]._width();
        }
    };
    VerticalBandSurface.prototype._getUnitPositionInParent = function () {
        var neighbors = this._control.parentModel().bands();
        var position = neighbors
            .slice(0, neighbors.indexOf(this._control))
            .reduce(function (previousValue, currentBand) {
            if (currentBand instanceof VerticalBandViewModel)
                previousValue.x += currentBand.size.width();
            else
                previousValue.y += currentBand.size.height();
            return previousValue;
        }, { x: 0, y: 0 });
        return new analytics_elements_1.Point(position.x, position.y);
    };
    Object.defineProperty(VerticalBandSurface.prototype, "_unitAbsoluteRect", {
        get: function () {
            var _this = this;
            return _bandUtils_1._getUnitAbsoluteRect(this, function () { return _this._getUnitPositionInParent(); });
        },
        enumerable: true,
        configurable: true
    });
    VerticalBandSurface.prototype.getAbsolutePositionX = function () {
        var newX = 0;
        var bandIndex;
        var parentBands = ko.unwrap(this.verticalBandsContainer.verticalBands);
        if (parentBands && parentBands.length !== 0) {
            bandIndex = parentBands.indexOf(this);
            if (bandIndex === -1)
                return 0;
            if (this.rtlLayout()) {
                newX = this._getRtlAbsolutePositionX(bandIndex, parentBands);
            }
            else if (bandIndex > 0 && parentBands[bandIndex - 1])
                newX = parentBands[bandIndex - 1].absolutePosition.x() + parentBands[bandIndex - 1]._width();
        }
        return newX;
    };
    VerticalBandSurface.prototype.updateAbsolutePosition = function () {
        if (!this.parent)
            return;
        this.absolutePosition.x(this.getAbsolutePositionX());
        this.absolutePosition.y(this.verticalBandsContainer.topOffset() + VerticalBandSurface.markerHeight);
    };
    VerticalBandSurface.prototype.minimumHeight = function () {
        return this.verticalBandsContainer.minHeight && this.verticalBandsContainer.minHeight();
    };
    VerticalBandSurface.prototype.minimumWidth = function () {
        return this.widthFromControls && this.widthFromControls();
    };
    Object.defineProperty(VerticalBandSurface.prototype, "verticalBandsContainer", {
        get: function () {
            return this.parent.bandsHolder.verticalBandsContainer;
        },
        enumerable: true,
        configurable: true
    });
    VerticalBandSurface.markerHeight = 29;
    VerticalBandSurface._unitProperties = {
        _width: function (x) { return x.width; },
        _height: function (x) { return x.height; },
        heightFromControls: function (o) { return o.heightFromControls; },
        widthFromControls: function (o) { return o.widthFromControls; }
    };
    return VerticalBandSurface;
}(analytics_elements_1.SurfaceElementBase));
exports.VerticalBandSurface = VerticalBandSurface;
var bandSurfaceCollapsedHeight_1 = __webpack_require__(51);
var _bandUtils_1 = __webpack_require__(65);


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var editorTemplates_1 = __webpack_require__(9);
exports.drillDownDetailReportExpanded = { propertyName: 'drillDownDetailReportExpanded', modelName: '@DrillDownExpanded', displayName: 'Drill-Down Expanded', localizationId: 'DevExpress.XtraReports.UI.Band.DrillDownExpanded', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, defaultVal: true };
exports.printAtBottom = { propertyName: 'printAtBottom', modelName: '@PrintAtBottom', defaultVal: false, from: analytics_utils_1.parseBool, displayName: 'Print at Bottom', localizationId: 'DevExpress.XtraReports.UI.ReportFooterBand.PrintAtBottom', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.printAcrossBands = { propertyName: 'printAcrossBands', modelName: '@PrintAcrossBands', defaultVal: false, from: analytics_utils_1.parseBool, displayName: 'Print Across Bands', localizationId: 'DevExpress.XtraReports.UI.Band.PrintAcrossBands', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.repeatEveryPage = { propertyName: 'repeatEveryPage', modelName: '@RepeatEveryPage', displayName: 'Repeat Every Page', localizationId: 'DevExpress.XtraReports.UI.GroupBand.RepeatEveryPage', defaultVal: false, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.pageBreakWithoutAfterValues = [
    { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.PageBreak.None' },
    { value: 'BeforeBand', displayValue: 'Before the Band', localizationId: 'DevExpress.XtraReports.UI.PageBreak.BeforeBand' },
    { value: 'BeforeBandExceptFirstEntry', displayValue: 'Before the Band, Except for the First Entry', localizationId: 'DevExpress.XtraReports.UI.PageBreak.BeforeBandExceptFirstEntry' },
];
exports.pageBreakValues = [].concat(exports.pageBreakWithoutAfterValues, [
    { value: 'AfterBand', displayValue: 'After the Band', localizationId: 'DevExpress.XtraReports.UI.PageBreak.AfterBand' },
    { value: 'AfterBandExceptLastEntry', displayValue: 'After the Band, Except for the Last Entry', localizationId: 'DevExpress.XtraReports.UI.PageBreak.AfterBandExceptLastEntry' }
]);
exports.pageBreak = {
    propertyName: 'pageBreak',
    modelName: '@PageBreak', displayName: 'Page Break', localizationId: 'DevExpress.XtraReports.UI.Band.PageBreak', defaultVal: 'None', from: analytics_utils_1.fromEnum,
    editor: editorTemplates_1.designerEditorTemplates.getEditor('comboboxPageBreak'),
    valuesArray: exports.pageBreakValues
};
exports.keepTogetherWithDetailReports = { propertyName: 'keepTogetherWithDetailReports', modelName: '@KeepTogetherWithDetailReports', defaultVal: false, from: analytics_utils_1.parseBool, displayName: 'Keep Together with Detail Reports', localizationId: 'DevExpress.XtraReports.UI.DetailBand.KeepTogetherWithDetailReports', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.height = { propertyName: 'height', modelName: '@HeightF', defaultVal: '100', displayName: 'Height', localizationId: 'DevExpress.XtraReports.UI.Band.Height', from: analytics_utils_1.floatFromModel, localizable: true };
exports.level = { propertyName: 'level', modelName: '@Level', displayName: 'Level', localizationId: 'DevExpress.XtraReports.UI.GroupBand.Level', defaultVal: 0, from: analytics_utils_1.floatFromModel, editor: editorTemplates_1.designerEditorTemplates.getEditor('bandLevel') };
exports.drillDownControl = { propertyName: 'drillDownControl', modelName: '@DrillDownControl', displayName: 'Drill-Down Control', localizationId: 'DevExpress.XtraReports.UI.Band.DrillDownControl', link: true, defaultVal: null, editor: editorTemplates_1.designerEditorTemplates.getEditor('drillDownControls') };


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var XRReportElementViewModel = (function (_super) {
    __extends(XRReportElementViewModel, _super);
    function XRReportElementViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, parent, serializer || new _serializer_1.ReportModelSerializer()) || this;
        _this._expressionActions = {};
        _this.initialize();
        _this.formattingRuleLinks = analytics_utils_1.deserializeArray(model.FormattingRuleLinks, function (item) { return new formattingrules_1.FormattingRuleLink(item, serializer); });
        var _generateProperty = function (propertyName, stylePriorityName) {
            _this['_' + propertyName] = ko.observable(_this[propertyName]());
            _this._disposables.push(_this[propertyName] = ko.computed({
                read: function () { return _this._getStyleProperty(propertyName, stylePriorityName, _this.root); },
                write: function (val) {
                    if (_this._getStyleProperty(propertyName, stylePriorityName, _this.root) !== val) {
                        if (_this.stylePriority && _this.stylePriority[stylePriorityName]) {
                            _this.stylePriority[stylePriorityName](false);
                        }
                        _this['_' + propertyName](val);
                    }
                }
            }));
        };
        _this.dsHelperProvider = function () { return _this.root['dataSourceHelper'] && _this.root['dataSourceHelper'](); };
        _this.initBindings();
        _this.getStyleProperty = function (propertyName, stylePriorityName) { return _this._getStyleProperty(propertyName, stylePriorityName, _this.root); };
        for (var i = 0; i < _styleHelper_1.stylesProperties.length; i++) {
            if (_this[_styleHelper_1.stylesProperties[i]]) {
                var stylePriorityName = _this._getStylePriorityPropertyName(_styleHelper_1.stylesProperties[i]);
                _generateProperty(_styleHelper_1.stylesProperties[i], stylePriorityName);
            }
        }
        if (_this.padding) {
            _this._createPaddingDependencies();
        }
        _this.toggleUseStyle = function (propertyName) {
            var styleName = _this._getStylePriorityPropertyName(propertyName);
            _this.stylePriority[styleName](!_this.stylePriority[styleName]());
        };
        _this.actions.push({ action: _this.toggleUseStyle, title: analytics_utils_1.getLocalization('Style Priority', 'DevExpress.XtraReports.UI.XRControl.StylePriority'), visible: function (name) { return _this.isStyleProperty(name); } });
        _this.actionProviders.push({ getActions: function (name) { return _this._getExpressionActions(name); } });
        _this._disposables.push(_this.lockedInUserDesigner = ko.computed({
            read: function () {
                var parent = _this.parentModel(), parentLocked = (parent && parent['lockedInUserDesigner']) ? parent['lockedInUserDesigner']() : false;
                return _this._lockedInUserDesigner() || parentLocked;
            },
            write: function (newValue) { return _this._lockedInUserDesigner(newValue); }
        }));
        return _this;
    }
    Object.defineProperty(XRReportElementViewModel.prototype, "_localizationProvider", {
        get: function () {
            if (!this.__localizationProvider) {
                this.__localizationProvider = this.createLocalizationProvider();
            }
            return this.__localizationProvider;
        },
        enumerable: true,
        configurable: true
    });
    XRReportElementViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.dataBindings);
        this.resetObservableArray(this.formattingRuleLinks);
        this.resetObservableArray(this.dataBindings);
        this.__localizationProvider = null;
    };
    XRReportElementViewModel.prototype.createLocalizationProvider = function () {
        return new _localizationUtils_1.DefaultLocalizationProvider(this);
    };
    XRReportElementViewModel.prototype.getLocalizationProperty = function (propertyName) {
        return this._localizationProvider.getLocalizationProperty(propertyName);
    };
    XRReportElementViewModel.prototype.getLocalizationProperties = function () {
        return this._localizationProvider.getLocalizationProperties();
    };
    XRReportElementViewModel.prototype.applyLocalization = function (propertyName, propertyValue) {
        this._localizationProvider.applyLocalization(propertyName, propertyValue);
    };
    XRReportElementViewModel.prototype._resetProperty = function (propertyName) {
        _super.prototype._resetProperty.call(this, propertyName);
        this._resetExpressions(propertyName);
    };
    XRReportElementViewModel.prototype._getControlPropertyName = function (propertyName) {
        propertyName = propertyName === 'paddingObj' ? 'padding' : propertyName;
        propertyName = propertyName === 'textArea' ? 'text' : propertyName;
        return propertyName;
    };
    XRReportElementViewModel.prototype._getStylePriorityPropertyName = function (propertyName) {
        propertyName = this._getControlPropertyName(propertyName);
        return 'use' + propertyName.charAt(0).toUpperCase() + propertyName.substr(1);
    };
    XRReportElementViewModel.prototype._getStyle = function (root) {
        var styleName = this.styleName && this.styleName(), style = styleName && root && root.findStyle && root.findStyle(styleName);
        return style;
    };
    XRReportElementViewModel.prototype._checkStylePropertyModify = function (target, propertyName) {
        var property = ko.unwrap(target && (target['_' + propertyName] || target[propertyName]));
        return property != null && target.isPropertyModified(propertyName);
    };
    XRReportElementViewModel.prototype._getStyleProperty = function (propertyName, stylePriorityName, root) {
        if (this.stylePriority && this.stylePriority[stylePriorityName] && this.stylePriority[stylePriorityName]() || !this._checkStylePropertyModify(this, propertyName)) {
            var style = this._getStyle(root);
            if (style && this._checkStylePropertyModify(style, propertyName)) {
                return style[propertyName]();
            }
        }
        if (this._checkStylePropertyModify(this, propertyName)) {
            return this['_' + propertyName]();
        }
        var defaultValue = this.getPropertyDefaultValue(propertyName);
        if (defaultValue && !(defaultValue instanceof Object)) {
            return defaultValue;
        }
        var parent = this.parentModel();
        if (parent) {
            return parent.getStyleProperty(propertyName, stylePriorityName);
        }
    };
    XRReportElementViewModel.prototype._zOrderChange = function (bringToFront) {
        var parent = this.parentModel(), controlContainer = parent && parent[this.getControlContainerName()];
        if (controlContainer) {
            var itemIndex = controlContainer().indexOf(this);
            var items = controlContainer();
            items.splice(itemIndex, 1);
            items.splice((bringToFront ? 0 : controlContainer().length), 0, this);
            controlContainer.valueHasMutated();
        }
    };
    XRReportElementViewModel.prototype._createPaddingDependencies = function () {
        var _this = this;
        this.paddingObj = new analytics_elements_1.PaddingModel();
        this.paddingObj['isPropertyHighlighted'] = function (propertyName) {
            return _this.isPropertyHighlighted(propertyName, 'padding');
        };
        this._disposables.push(this.paddingObj);
        this.paddingObj.applyFromString(this['padding']());
        this._disposables.push(this.paddingObj.dpi = ko.computed(function () { return _this.dpi && _this.dpi(); }));
        var lock = new _locker_1.Locker().lock;
        this._disposables.push(this.padding.subscribe(function (newVal) { return lock(function () { return _this.paddingObj.applyFromString(newVal); }); }));
        ['left', 'right', 'top', 'bottom'].forEach(function (name) {
            _this._disposables.push(_this.paddingObj[name].subscribe(function (newVal) {
                if (_this.root['isModelReady'] && _this.root['isModelReady']() || !_this.root['isModelReady'])
                    lock(function () { return _this.padding(_this.paddingObj.toString()); });
            }));
        });
        this._disposables.push(this.paddingObj.dpi.subscribe(function (newVal) { return lock(function () {
            if (_this['_padding']())
                _this['_padding'](_this.paddingObj.toString());
        }); }));
        this.paddingObj['resetValue'] = function () {
            lock(function () {
                ['left', 'right', 'top', 'bottom'].forEach(function (name) { return _this.paddingObj[name](null); });
                _this.padding(_this.paddingObj.toString());
                _this.paddingObj.applyFromString(_this.padding());
            });
        };
    };
    XRReportElementViewModel.prototype._getExpressionActions = function (name) {
        if (!this._expressionActions[name]) {
            this._expressionActions[name] = this._addExpressionActions(name);
        }
        return this._expressionActions[name];
    };
    XRReportElementViewModel.prototype._getExpressionEvents = function () {
        var events = [
            { name: 'BeforePrint', localizationId: 'DevExpress.XtraReports.UI.XRControlEvents.OnBeforePrint', displayName: 'BeforePrint' }
        ];
        if (this.dataBindingMode === _dataBindingMode_1.DataBindingMode.ExpressionsAdvanced) {
            events.push({ name: 'PrintOnPage', localizationId: 'DevExpress.XtraReports.UI.XRControlEvents.OnPrintOnPage', displayName: 'PrintOnPage' });
        }
        return events;
    };
    XRReportElementViewModel.prototype._addExpressionActions = function (propertyName) {
        var _this = this;
        if (this.dataBindingMode === _dataBindingMode_1.DataBindingMode.Bindings) {
            return [];
        }
        var expressionName = this._getExpressionNameByPropertyName(propertyName);
        if (!expressionName)
            return [];
        var events = this._getExpressionEvents();
        var allExpressionsTreeItems = this.expressionObj.getExpressionsTreeItems(expressionName);
        if (!allExpressionsTreeItems || !allExpressionsTreeItems.length)
            return [];
        var expressionForLocalizedString = analytics_utils_1.getLocalization('{0} Expression', 'ReportStringId.UD_PropertyGrid_Menu_ItemExpression');
        var convertToMenuAction = function (item) {
            var hasInnerItems = item.innerItems && !!item.innerItems.length;
            var expressionEditor = hasInnerItems ? null : new reportExpressionEditorWrapper_1.ReportExpressionEditorWrapper(ko.observable(_this), ko.observable(item.expressionObj));
            var currentEventInfo = events.filter(function (x) { return x.name === item.eventName; })[0];
            var eventLocalizedName = currentEventInfo ? analytics_utils_1.getLocalization(currentEventInfo.displayName, currentEventInfo.localizationId) : item.eventName;
            var expressionLocalizedName = !item.displayName && !item.localizationId ? item.expressionName : analytics_utils_1.getLocalization(item.displayName, item.localizationId);
            var menuAction = {
                id: 'dxrd-expression',
                action: hasInnerItems ?
                    function (propertyName) { } :
                    function (propertyName) { expressionEditor.popupVisible(true); },
                title: item.eventName ? eventLocalizedName : analytics_internal_1.formatUnicorn(expressionForLocalizedString, expressionLocalizedName),
                hint: ko.computed(function () {
                    return item.expressionObj && item.expressionObj.value();
                }),
                weight: 50,
                customTemplate: hasInnerItems ? null : {
                    name: 'dxrd-expressioneditor-popup',
                    data: expressionEditor
                },
                visible: function (name) { return true; }
            };
            menuAction.items = (item.innerItems || []).map(convertToMenuAction);
            _this._disposables.push(menuAction.hint);
            return menuAction;
        };
        return allExpressionsTreeItems.map(convertToMenuAction);
    };
    XRReportElementViewModel.prototype.getControlFactory = function () {
        return settings_1.controlsFactory();
    };
    XRReportElementViewModel.prototype.addChild = function (control) {
        if (control.controlType === 'XRTableOfContents' && !_tocUtils_1.isHeaderOrFooterBandType(this)) {
            var band = getNearestBand_1.getNearestBand(this);
            if (band) {
                if (_tocUtils_1.isHeaderOrFooterBandType(band)) {
                    band.addChild(control);
                }
                return;
            }
            else {
                throw new Error('TOC can be added only to ReportHeaderBand or ReportFooterBand!!!');
            }
        }
        _super.prototype.addChild.call(this, control);
    };
    XRReportElementViewModel.prototype.initDataBindingProperties = function () {
        var _this = this;
        var bindingInfos = this.getInfo().filter(function (info) { return 'bindingName' in info; });
        bindingInfos.forEach(function (info) {
            _this[info.propertyName] = _this.dataBindings()['findBinding'](info['bindingName']);
        });
    };
    XRReportElementViewModel.prototype.initExpressionProperties = function () {
        var _this = this;
        if (!this.expressionBindings)
            return;
        var path = ko.pureComputed(function () {
            return _this.getPath('expression');
        });
        this._disposables.push(path);
        this.expressionObj = this.getControlFactory()._createExpressionObject(this.controlType, this.expressionBindings, path, function (name) { return _this['Summary'] && _this['Summary']['Running'] && _this.getControlInfo().defaultBindingName === name && ko.computed(function () {
            return _this['Summary']['Running']() != 'None';
        }); });
        if (!this.expressionObj)
            return;
        this._disposables.push(this.expressionObj);
        var expressionInfos = this.getInfo().filter(function (info) { return 'expressionName' in info; });
        expressionInfos.forEach(function (info) {
            var expression = _this.expressionObj.getExpression(info['expressionName'], 'BeforePrint');
            if (expression)
                _this[info.propertyName] = expression;
        });
    };
    XRReportElementViewModel.prototype._resetExpressions = function (propertyName) {
        var _this = this;
        var modelName = this._getExpressionNameByPropertyName(propertyName);
        if (!modelName)
            return;
        this._getExpressionEvents().forEach(function (event) {
            var expressionPropertyInfo = _this.expressionObj.getExpression(modelName, event.name);
            if (!expressionPropertyInfo)
                return;
            if (expressionPropertyInfo['getInfo']) {
                (expressionPropertyInfo['getInfo']() || []).forEach(function (info) {
                    var value = expressionPropertyInfo[info.propertyName].value;
                    value && value('');
                });
            }
            else {
                expressionPropertyInfo.value && expressionPropertyInfo.value('');
            }
        });
    };
    XRReportElementViewModel.prototype._hasAnyExpressions = function (propertyName, predicateFunc) {
        var _this = this;
        if (predicateFunc === void 0) { predicateFunc = function (value) { return !!ko.unwrap(value); }; }
        var modelName = this._getExpressionNameByPropertyName(propertyName);
        if (!modelName)
            return false;
        var returnValue = false;
        var events = this._getExpressionEvents();
        events.forEach(function (event) {
            var expressionPropertyInfo = _this.expressionObj.getExpression(modelName, event.name);
            if (!expressionPropertyInfo)
                return;
            var getInfoAction = expressionPropertyInfo['getInfo'];
            var expressionExists = false;
            if (getInfoAction) {
                var info = getInfoAction() || [];
                expressionExists = info.filter(function (info) {
                    return predicateFunc(expressionPropertyInfo[info.propertyName].value, info.propertyName);
                }).length > 0;
            }
            else {
                expressionExists = predicateFunc(expressionPropertyInfo.value);
            }
            returnValue = returnValue || expressionExists;
        });
        return returnValue;
    };
    XRReportElementViewModel.prototype._getExpressionNameByPropertyName = function (propertyName, info) {
        if (info === void 0) { info = this.getInfo(); }
        if (this.dataBindingMode === _dataBindingMode_1.DataBindingMode.Bindings) {
            return '';
        }
        propertyName = this._getControlPropertyName(propertyName);
        var propInfo = this.getInfo().filter(function (info) { return info.propertyName === propertyName; })[0];
        if (!propInfo || !propInfo.modelName) {
            return '';
        }
        return propInfo.modelName.substring(propInfo.modelName.lastIndexOf('@') + 1);
    };
    XRReportElementViewModel.prototype.initBindings = function () {
        this.initDataBindingProperties();
        this.initExpressionProperties();
    };
    XRReportElementViewModel.prototype.isStyleProperty = function (propertyName) {
        var _this = this;
        return this.stylePriority && metadata_1.stylePrioritySerializationInfo.some(function (info) { return info.propertyName == _this._getStylePriorityPropertyName(propertyName); });
    };
    XRReportElementViewModel.prototype.isResettableProperty = function (propertyName) {
        return _super.prototype.isResettableProperty.call(this, propertyName) && propertyName !== 'dataBindings';
    };
    XRReportElementViewModel.prototype.getActionClassName = function (propertyName) {
        var result = {};
        result['dxrd-editormenu-usestyle'] = this.isStyleProperty(propertyName) && this.stylePriority[this._getStylePriorityPropertyName(propertyName)]();
        result['dxrd-editormenu-modified'] = this.isPropertyModified(propertyName);
        var hasExpression = this._hasAnyExpressions(propertyName);
        result['dxrd-editormenu-expressions'] = hasExpression;
        result['dxd-icon-accented'] = hasExpression;
        return result;
    };
    XRReportElementViewModel.prototype.getMenuBoxTemplate = function (propertyName) {
        if (this._hasAnyExpressions(propertyName))
            return 'dxrd-svg-tabs-expressions';
        return '';
    };
    XRReportElementViewModel.prototype.className = function () {
        return this.controlType.toLowerCase();
    };
    XRReportElementViewModel.prototype.initialize = function () {
        if (!this.size) {
            this.size = new analytics_elements_1.Size(0, 0);
        }
    };
    XRReportElementViewModel.prototype.getPath = function (propertyName) {
        if (propertyName === 'expression' && this.dsHelperProvider()) {
            var firstParentWithDS = _createObjectFromInfo_1.findFirstParentWithPropertyName(this, 'dataSource');
            var rootDataSourceName = this.dsHelperProvider().getDataSourcePath(ko.unwrap(firstParentWithDS['dataSource']));
            var rootDataMember = ko.unwrap(firstParentWithDS['dataMember']) || '';
            if (!!rootDataSourceName) {
                return !!rootDataMember ? [rootDataSourceName, rootDataMember].join('.') : rootDataSourceName;
            }
            else {
                return '';
            }
        }
        return '';
    };
    XRReportElementViewModel.prototype.isPropertyDisabled = function (name) {
        return this.lockedInUserDesigner();
    };
    XRReportElementViewModel.prototype.isPropertyVisible = function (name) {
        if (this.dataBindingMode !== _dataBindingMode_1.DataBindingMode.Bindings) {
            return name !== 'dataBindings'
                && name !== 'formattingRuleLinks'
                && name !== 'formattingRuleSheet'
                && name.indexOf('popularDataBinding') !== 0;
        }
        else {
            return name.indexOf('popularExpression') !== 0;
        }
    };
    XRReportElementViewModel.prototype.isPropertyHighlighted = function (propertyName, parentPropertyName) {
        if (!parentPropertyName) {
            return this._hasAnyExpressions(propertyName);
        }
        var parentExpressionName = this._getExpressionNameByPropertyName(parentPropertyName);
        var subPropertyName = propertyName[0].toUpperCase() + propertyName.substr(1);
        return parentExpressionName && this._hasAnyExpressions(parentPropertyName, function (value, subExpressionName) {
            var unwrappedValue = !!ko.unwrap(value);
            return subExpressionName === (parentExpressionName + '.' + subPropertyName) && unwrappedValue;
        });
    };
    XRReportElementViewModel.prototype.sendToBack = function () {
        this._zOrderChange(false);
    };
    XRReportElementViewModel.prototype.bringToFront = function () {
        this._zOrderChange(true);
    };
    XRReportElementViewModel.prototype.getControlContainerName = function () { return 'controls'; };
    Object.defineProperty(XRReportElementViewModel.prototype, "dataBindingMode", {
        get: function () {
            return this.root !== this ? this.root.dataBindingMode : _dataBindingMode_1.DataBindingMode.Expressions;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XRReportElementViewModel.prototype, "dpi", {
        get: function () {
            return this.root !== this ? this.root.dpi : this._innerDpi;
        },
        set: function (value) {
            this._innerDpi = value;
        },
        enumerable: true,
        configurable: true
    });
    XRReportElementViewModel.prototype.rtl = function () {
        var rtl = ko.unwrap(this['rightToLeft']);
        if (rtl === 'Yes')
            return true;
        if (this.parentModel() && (!rtl || rtl === 'Inherit'))
            return this.parentModel().rtl();
        return false;
    };
    XRReportElementViewModel.unitProperties = ['size', 'location', 'paddingObj'];
    return XRReportElementViewModel;
}(analytics_elements_1.ElementViewModel));
exports.XRReportElementViewModel = XRReportElementViewModel;
var reportExpressionEditorWrapper_1 = __webpack_require__(79);
var metadata_1 = __webpack_require__(6);
var _locker_1 = __webpack_require__(32);
var settings_1 = __webpack_require__(12);
var formattingrules_1 = __webpack_require__(45);
var _serializer_1 = __webpack_require__(120);
var _dataBindingMode_1 = __webpack_require__(33);
var _createObjectFromInfo_1 = __webpack_require__(123);
var _localizationUtils_1 = __webpack_require__(63);
var _tocUtils_1 = __webpack_require__(67);
var getNearestBand_1 = __webpack_require__(127);
var _styleHelper_1 = __webpack_require__(91);


/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = DevExpress.Reporting.Metadata;

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _localizationUtils_1 = __webpack_require__(63);
var parameterTypesHelper_1 = __webpack_require__(175);
var analytics_widgets_1 = __webpack_require__(4);
var parameterExpressionBinding_1 = __webpack_require__(176);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_widgets_internal_1 = __webpack_require__(8);
var EditableParameterMode = {
    _ignoreEditors: ['valueSourceSettings', 'valueSourceSettingsType'],
    _displayNamePatcher: {
        'isMultiValue': function (info) { return info.displayName = 'Allow Multiple Value'; },
        'allowNull': function (info) { return info.displayName = 'Allow Null Value'; },
        'valueSourceSettingsType': function (info) { return info.displayName = 'Value Source'; },
    }
};
var Parameter = (function (_super) {
    __extends(Parameter, _super);
    function Parameter(model, _report, serializer) {
        var _this = _super.call(this) || this;
        _this._report = _report;
        _this.templateName = 'dx-treelist-item';
        _this.actionProviders = [];
        _this._expressionActions = {};
        _this.expressionObj = {};
        _this.info = $.extend(true, [], parameter_1.parameterSerializationInfo);
        _this.propertyExpressionMapper = new propertyExpressionMapper_1.PropertyExpressionMapper();
        _this._isEditing = ko.observable(false);
        _this.collapsed = ko.observable(false);
        _this.valueSourceSettingsType = ko.observable('None');
        _this.valueInfo = ko.observable();
        _this.multiValueInfo = ko.observable();
        _this.parameterTypesHelper = new parameterTypesHelper_1.ParameterTypesHelper();
        _this.appendExpressionObjInfo(_this.info);
        _this.actionProviders.push({ getActions: function (name) { return _this._getExpressionActions(name); } });
        _this._disposables.push(_this._localizationProvider);
        var objectsStorage = _report.objectsStorageHelper;
        var parameterHelper = _report.parameterHelper;
        _this._preDeserialize(model);
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(_this, model);
        _this.valueSourceSettingsHelper = new valueSourceSettingsHelper_1.ValueSourceSettingsHelper(_this);
        _this.objectsStorage = objectsStorage;
        _this._parameterHelper = parameterHelper;
        _this['_name'] = ko.observable(_this.parameterName());
        _this['change'] = function (e, parameters) {
            if (parameters.filter(function (x) { return x.parameterName() === e.value; }).length === 1) {
                _this['_name'](e.value);
            }
            else {
                _this.parameterName(_this['_name']());
            }
        };
        if (!_this._type()) {
            _this._type(objectsStorage.getType('System.String'));
        }
        _this._processObsoleteProperties();
        _this.type = ko.pureComputed({
            read: function () {
                return _this._type().content();
            },
            write: function (val) {
                var oldVal = _this._type().content();
                if (val !== oldVal) {
                    var editorValue = _this.value();
                    if (_this.isMultiValue())
                        _this.value([]);
                    else
                        _this.value(null);
                    _this.valueSourceSettingsHelper.updateSettingValues(undefined, null);
                    setTimeout(function () {
                        _this._type(objectsStorage.getType(val));
                        if (_this.isMultiValue())
                            return;
                        if (val === 'System.DateTime') {
                            _this.value(_this.defaultValue);
                        }
                        else {
                            _this.value(_this.parameterTypesHelper.convertSingleValue(editorValue, _this.type()));
                        }
                        _this.valueSourceSettingsHelper.updateSettingValues(_this._type().content(), _this.defaultValue);
                    }, 1);
                }
            }
        });
        _this.expressionObj = {
            getInfo: function () {
                var info = _this.getInfo().filter(function (x) { return x.propertyName.indexOf(parameterExpressionBinding_1.ParameterExpressionBinding.expressionSuff) != -1; });
                info.filter(function (x) { return x.propertyName == 'ValueExpressionObj'; })[0].displayName = 'Value';
                return info;
            }
        };
        _this.info.forEach(function (property) {
            var index = property.propertyName.indexOf(parameterExpressionBinding_1.ParameterExpressionBinding.expressionSuff);
            if (index !== -1) {
                _this.expressionObj[property.propertyName] = parameterExpressionBinding_1.createExpressionProperty(_this, property.propertyName.substr(0, index));
            }
        });
        _this._initializeValue();
        _this._disposables.push(_this.isMultiValue.subscribe(function (newMultiValue) {
            if (newMultiValue) {
                _this.value = ko.observableArray([_this._parameterHelper.createMultiValue(_this, _this.value())]);
            }
            else {
                _this.value = ko.observable(_this.defaultValue);
                _this.selectAllValues(false);
            }
        }));
        _this._disposables.push(_this.selectAllValues.subscribe(function (newValue) {
            if (newValue) {
                _this.value = ko.observableArray([]);
            }
            else if (_this.isMultiValue()) {
                _this.value = ko.observableArray([_this._parameterHelper.createMultiValue(_this, _this.value())]);
            }
            else {
                _this.value = ko.observable(_this.defaultValue);
            }
            _this[parameter_1.parameterExpressionSerializationInfo.propertyName].value('');
        }));
        _this._disposables.push(_this.valueSourceSettingsType.subscribe(function (newVal) {
            if (newVal === 'None') {
                _this.selectAllValues(false);
            }
        }));
        _this._disposables.push(_this._isEditing.subscribe(function (newVal) {
            var settigns = _this.valueSourceSettings();
            if (settigns instanceof rangeSettings_1.RangeParametersSettings || settigns instanceof lookupSettings_1.StaticListLookUpSettings) {
                settigns._isEditing(newVal);
            }
        }));
        _this.valueInfo = ko.pureComputed(function () {
            var result = $.extend(true, {}, parameter_1.parameterValueSerializationInfo, parameterHelper.getParameterInfo(_this));
            result.propertyName = 'value';
            if (_this.type() === 'System.String' || _this.isMultiValue()) {
                result.defaultVal = '';
            }
            return result;
        });
        _this.valueSourceSettingsHelper.initializeParameterSettingsType();
        _this.valueSourceSettingsHelper.initializeLookupValueSubscribe(_report);
        _this.viewmodel = new analytics_widgets_1.ObjectProperties(ko.observable(_this));
        return _this;
    }
    Object.defineProperty(Parameter.prototype, "_localizationProvider", {
        get: function () {
            if (!this.__localizationProvider) {
                this.__localizationProvider = new _localizationUtils_1.DefaultLocalizationProvider(this);
            }
            return this.__localizationProvider;
        },
        enumerable: true,
        configurable: true
    });
    Parameter.prototype.getLocalizationProperty = function (propertyName) {
        return this._localizationProvider.getLocalizationProperty(propertyName);
    };
    Parameter.prototype.getLocalizationProperties = function () {
        return this._localizationProvider.getLocalizationProperties();
    };
    Parameter.prototype.applyLocalization = function (propertyName, propertyValue) {
        this._localizationProvider.applyLocalization(propertyName, propertyValue);
    };
    Parameter.prototype._initializeValue = function () {
        var _this = this;
        var value = this.value();
        if (this.isMultiValue()) {
            typeof value === 'string'
                ? this.value = this._parameterHelper.createMultiValueArray(value.split(parameterSettings_1.parameterSeparator), this, function (part) { return _this.parameterTypesHelper.convertSingleValue(part, _this.type()); })
                : this.value = ko.observableArray();
        }
        else if (this.allowNull() && !value) {
            this.value(null);
        }
        else {
            this.value(this.parameterTypesHelper.convertSingleValue(value, this.type()));
        }
    };
    Parameter.prototype._preDeserialize = function (model) {
        if (model['@LookUpSettings']) {
            model['@ValueSourceSettings'] = model['@LookUpSettings'];
            delete model['@LookUpSettings'];
        }
    };
    Parameter.prototype._processObsoleteProperties = function () {
        if (this._obsoleteValue()) {
            this.value(this._obsoleteValue().content());
            this._obsoleteValue(null);
        }
        delete this._obsoleteValue;
    };
    Parameter.prototype._getExpressionActions = function (name) {
        if (Parameter.propertiesWithExpressions.indexOf(name) === -1)
            return;
        var propertyInfo = this.info.filter(function (x) { return x.propertyName === name; })[0];
        var expression = this[this.propertyExpressionMapper.getExpressionPropertyName(name)];
        var expressionLocalizedName = analytics_internal_1.getLocalization(propertyInfo.displayName, propertyInfo.localizationId);
        var expressionForLocalizedString = analytics_internal_1.getLocalization('{0} Expression', 'ReportStringId.UD_PropertyGrid_Menu_ItemExpression');
        var expressionHint = ko.pureComputed(function () { return expression.value(); });
        this._disposables.push(expressionHint);
        if (!this._expressionActions[name]) {
            var expressionEditor = new reportExpressionEditorWrapper_1.ReportExpressionEditorWrapper(ko.observable(this), ko.observable(expression));
            this._disposables.push(expressionEditor);
            this._expressionActions[name] = [{
                    id: 'dxrd-expression',
                    action: function (propertyName) { expressionEditor.popupVisible(true); },
                    title: analytics_internal_1.formatUnicorn(expressionForLocalizedString, expressionLocalizedName),
                    hint: expressionHint,
                    weight: 50,
                    customTemplate: {
                        name: 'dxrd-expressioneditor-popup',
                        data: expressionEditor
                    },
                    visible: function (name) { return true; }
                }];
        }
        return this._expressionActions[name];
    };
    Parameter.prototype.preprocessInfo = function (info) {
        if (this._isEditing()) {
            info.forEach(function (x) {
                if (EditableParameterMode._ignoreEditors.indexOf(x.propertyName) !== -1) {
                    x.editor = undefined;
                }
                else if (x.editor && x.editor.header === analytics_widgets_1.editorTemplates.getEditor('bool').header) {
                    x.editor = editorTemplates_1.designerEditorTemplates.getEditor('parametersCheckbox');
                }
                else if (x.editor && x.editor.custom === editorTemplates_2.viewerEditorTemplates.multiValueEditable.custom) {
                    x.editor = { custom: 'dxrd-multivalue-editing' };
                }
                EditableParameterMode._displayNamePatcher[x.propertyName] && EditableParameterMode._displayNamePatcher[x.propertyName](x);
            });
        }
    };
    Parameter.prototype.getInfo = function () {
        var info = this.info;
        if (this.type) {
            var newInfo = $.extend(true, [], this.info);
            newInfo.splice(newInfo.indexOf(newInfo.filter(function (prop) { return prop.propertyName === 'value'; })[0]), 1, this.valueInfo());
            if (Parameter.availableRangeSettingTypes.indexOf(this.type()) !== -1) {
                var parameterSettingsTypeInfo = newInfo.filter(function (prop) { return prop.propertyName === 'valueSourceSettingsType'; })[0];
                if (parameterSettingsTypeInfo)
                    parameterSettingsTypeInfo.valuesArray = parameter_1.extendValueSourceSettingsTypes;
            }
            if (this.valueSourceSettings() && this.valueSourceSettings() instanceof rangeSettings_1.RangeParametersSettings) {
                var typeInfo = newInfo.filter(function (prop) { return prop.propertyName === 'type'; })[0];
                if (typeInfo) {
                    typeInfo.valuesArray = parameterTypesHelper_1.ParameterTypesHelper.typeValues.filter(function (typeValue) { return Parameter.availableRangeSettingTypes.indexOf(typeValue.value) !== -1; });
                }
            }
            info = newInfo;
        }
        this.preprocessInfo(info);
        return info;
    };
    Parameter.prototype.appendExpressionObjInfo = function (info) {
        for (var i = 0; i < info.length; i++) {
            if (info[i].propertyName == 'value')
                continue;
            var property = info[i];
            if (Parameter.propertiesWithExpressions.indexOf(property.propertyName) != -1) {
                var newProperty = this.propertyExpressionMapper.registerExpressionProperty(property);
                info.splice(i + 1, 0, newProperty);
                i++;
            }
        }
    };
    Parameter.prototype.getActionClassName = function (propertyName) {
        var expressionPropertyName = this.propertyExpressionMapper.getExpressionPropertyName(propertyName);
        var hasExpressions = !!this[expressionPropertyName].value();
        return {
            'dxrd-editormenu-expressions': hasExpressions,
            'dxd-icon-accented': hasExpressions
        };
    };
    Parameter.prototype.isPropertyVisible = function (name) {
        if (name === 'valueSourceSettings') {
            return !!this.valueSourceSettings();
        }
        else if (name === parameter_1.parameterValueSerializationInfo.propertyName) {
            return !(this.valueSourceSettings() instanceof rangeSettings_1.RangeParametersSettings);
        }
        else if (name == parameter_1.parameterExpressionSerializationInfo.propertyName) {
            return this._isEditing() || this.isMultiValue();
        }
        return this.propertyExpressionMapper.isPropertyVisible(name, this._isEditing());
    };
    Parameter.prototype.getParameterDescriptor = function () {
        return {
            description: this.description.peek(),
            displayName: 'Value',
            localizationId: 'DevExpress.XtraReports.Parameters.Parameter.Value',
            name: this.parameterName.peek(),
            type: this.type.peek(),
            value: this.value.peek(),
            visible: this.visible.peek(),
            enabled: this.enabled.peek(),
            multiValue: this.isMultiValue.peek(),
            allowNull: this.allowNull.peek(),
            selectAllValues: this.selectAllValues.peek(),
            tag: this.tag.peek()
        };
    };
    Parameter.prototype.assign = function (parameter) {
        var _this = this;
        this.getInfo().forEach(function (info) {
            if (_this[info.propertyName] && ko.isWritableObservable(_this[info.propertyName]))
                _this[info.propertyName](parameter[info.propertyName]());
        });
    };
    Parameter.prototype.getRangeParameters = function () {
        var result = [];
        if (this.isList) {
            var settings = (this.valueSourceSettings());
            result = [
                settings.startParameter(),
                settings.endParameter()
            ];
        }
        return result;
    };
    Object.defineProperty(Parameter.prototype, "name", {
        get: function () {
            return this.parameterName();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Parameter.prototype, "specifics", {
        get: function () {
            return this.isList ? analytics_widgets_internal_1.RangeSpecific : this.parameterTypesHelper.getSpecifics(this.type());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Parameter.prototype, "icon", {
        get: function () {
            return this.parameterTypesHelper.getIcon(this.type());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Parameter.prototype, "defaultValue", {
        get: function () {
            return this.parameterTypesHelper.getDefaultValue(this.type());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Parameter.prototype, "displayName", {
        get: function () {
            return this.parameterName();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Parameter.prototype, "isList", {
        get: function () {
            return this.valueSourceSettings() instanceof rangeSettings_1.RangeParametersSettings;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Parameter.prototype, "dragData", {
        get: function () {
            return { noDragable: this.isList };
        },
        enumerable: true,
        configurable: true
    });
    Parameter.prototype.isPropertyDisabled = function (propertyName) {
        if (propertyName === 'allowNull' || propertyName === 'isMultiValue') {
            return this.valueSourceSettings() instanceof rangeSettings_1.RangeParametersSettings;
        }
        if (propertyName === 'selectAllValues') {
            return !(this.isMultiValue() && (this.valueSourceSettings() instanceof lookupSettings_1.StaticListLookUpSettings ||
                this.valueSourceSettings() instanceof lookupSettings_1.DynamicListLookUpSettings));
        }
        if (propertyName === parameter_1.parameterValueSerializationInfo.propertyName || propertyName === parameter_1.parameterExpressionSerializationInfo.propertyName)
            return this.selectAllValues() && !this.isPropertyDisabled('selectAllValues');
        return false;
    };
    Parameter.propertiesWithExpressions = ['visible', 'enabled', 'value'];
    Parameter.ParametersRefString = 'Parameters';
    Parameter.defaultGuidValue = parameterTypesHelper_1.ParameterTypesHelper.defaultGuidValue;
    Parameter.availableRangeSettingTypes = ['System.DateTime'];
    return Parameter;
}(analytics_utils_1.Disposable));
exports.Parameter = Parameter;
var parameter_1 = __webpack_require__(81);
var valueSourceSettingsHelper_1 = __webpack_require__(274);
var rangeSettings_1 = __webpack_require__(83);
var lookupSettings_1 = __webpack_require__(85);
var editorTemplates_1 = __webpack_require__(9);
var editorTemplates_2 = __webpack_require__(480);
var parameterSettings_1 = __webpack_require__(82);
var propertyExpressionMapper_1 = __webpack_require__(275);
var analytics_internal_1 = __webpack_require__(2);
var reportExpressionEditorWrapper_1 = __webpack_require__(79);


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _common_1 = __webpack_require__(35);
var _stripLimit_1 = __webpack_require__(249);
var _fillStyle_1 = __webpack_require__(162);
var _view_1 = __webpack_require__(116);
var _axisXYViewModel_1 = __webpack_require__(164);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var _editorTemplates_1 = __webpack_require__(22);
var minValue = { propertyName: 'minValue', modelName: '@MinValueSerializable', displayName: 'Min Value', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.AxisRange.MinValue' }, maxValue = { propertyName: 'maxValue', modelName: '@MaxValueSerializable', displayName: 'Max Value', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.Range.MaxValue' }, auto = { propertyName: 'auto', modelName: '@Auto', displayName: 'Auto', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraReports.UI.DocumentExportMode.Auto' }, autoSideMargins = { propertyName: 'autoSideMargins', modelName: '@AutoSideMargins', displayName: 'Auto Side Margins', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.Range.AutoSideMargins' }, sideMarginsValue = { propertyName: 'sideMarginsValue', modelName: '@SideMarginsValue', displayName: 'Side Margins Value', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.Range.SideMarginsValue' };
var visualRangeSerializationsInfo = [auto, autoSideMargins, minValue, maxValue, sideMarginsValue], visualRange = { propertyName: 'visualRange', modelName: 'VisualRange', displayName: 'Visual Range', info: visualRangeSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.AxisBase.VisualRange' };
var alwaysShowZeroLevel = { propertyName: 'alwaysShowZeroLevel', modelName: '@AlwaysShowZeroLevel', displayName: 'Always Show Zero Level', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.WholeRange.AlwaysShowZeroLevel' };
var wholeRangeSerializationsInfo = visualRangeSerializationsInfo.concat(alwaysShowZeroLevel), wholeRange = { propertyName: 'wholeRange', modelName: 'WholeRange', displayName: 'Whole Range', info: wholeRangeSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.AxisBase.WholeRange' };
var radarWholeRange = { propertyName: 'radarWholeRange', modelName: 'WholeRange', displayName: 'Whole Range', info: visualRangeSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.AxisBase.WholeRange' };
var dashStyle = {
    propertyName: 'dashStyle', modelName: '@DashStyle', displayName: 'Dash Style', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [{ value: 'Empty', displayValue: 'Empty', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAppearances.Empty' }, { value: 'Solid', displayValue: 'Solid', localizationId: 'DevExpress.XtraCharts.FillMode3D.Solid' }, { value: 'Dash', displayValue: 'Dash', localizationId: 'DevExpress.XtraCharts.DashStyle.Dash' }, { value: 'Dot', displayValue: 'Dot', localizationId: 'DevExpress.XtraCharts.DashStyle.Dot' }, { value: 'DashDot', displayValue: 'DashDot' }, { value: 'DashDotDot', displayValue: 'DashDotDot' }],
    localizationId: 'DevExpress.XtraCharts.LineStyle.DashStyle'
};
var lineStyleSerializationsInfo = [_common_1.thickness, dashStyle], lineStyle = { propertyName: 'lineStyle', modelName: 'LineStyle', displayName: 'Line Style', info: lineStyleSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraReports.UI.XRShape.LineStyle' }, minorLineStyle = { propertyName: 'minorLineStyle', modelName: 'MinorLineStyle', displayName: 'Minor Line Style', info: lineStyleSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.GridLines.MinorLineStyle' };
var scaleMode = {
    propertyName: 'scaleName', modelName: '@ScaleMode', displayName: 'Scale Mode', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [{ value: 'Automatic', displayValue: 'Automatic', localizationId: 'DevExpress.XtraCharts.ScaleMode.Automatic' }, { value: 'Manual', displayValue: 'Manual', localizationId: 'DevExpress.XtraCharts.ChartRangeControlClientSnapMode.Manual' }, { value: 'Continuous', displayValue: 'Continuous', localizationId: 'DevExpress.XtraCharts.ScaleMode.Continuous' }],
    localizationId: 'DevExpress.XtraCharts.ScaleOptionsBase.ScaleMode'
}, aggregateFunction = {
    propertyName: 'aggregateFunction', modelName: '@AggregateFunction', displayName: 'Aggregate Function',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.MultiColumnMode.None' }, { value: 'Average', displayValue: 'Average', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Average' }, { value: 'Sum', displayValue: 'Sum', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Sum' }, { value: 'Minimum', displayValue: 'Minimum', localizationId: 'DevExpress.XtraReports.UI.XRGauge.Minimum' }, { value: 'Maximum', displayValue: 'Maximum', localizationId: 'DevExpress.XtraReports.UI.XRGauge.Maximum' }, { value: 'Count', displayValue: 'Count', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Count' }, { value: 'Financial', displayValue: 'Financial', localizationId: 'DevExpress.XtraCharts.SeriesAggregateFunction.Financial' }],
    localizationId: 'DevExpress.XtraCharts.XYDiagram3DSeriesViewBase.AggregateFunction'
}, gridSpacing = { propertyName: 'gridSpacing', modelName: '@GridSpacing', displayName: 'Grid Spacing', localizationId: 'DevExpress.XtraCharts.ScaleGridOptionsBase.GridSpacing', defaultVal: 1.0, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, autoGrid = { propertyName: 'autoGrid', modelName: '@AutoGrid', displayName: 'Auto Grid', localizationId: 'DevExpress.XtraCharts.ScaleGridOptionsBase.AutoGrid', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool }, gridOffset = { propertyName: 'gridOffset', modelName: '@GridOffset', displayName: 'Grid Offset', localizationId: 'DevExpress.XtraCharts.ScaleGridOptionsBase.GridOffset', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
var scaleOptionsBaseSerializationsInfo = [autoGrid, aggregateFunction, gridOffset, gridSpacing, scaleMode];
var numericMeasureUnit = {
    propertyName: 'measureUnit', modelName: '@MeasureUnit', displayName: 'Measure Unit',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Ones', displayValue: 'Ones', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Ones' }, { value: 'Tens', displayValue: 'Tens', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Tens' }, { value: 'Hundreds', displayValue: 'Hundreds', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Hundreds' }, { value: 'Thousands', displayValue: 'Thousands', localizationId: 'DevExpress.XtraCharts.NumericGridAlignment.Thousands' }, { value: 'Millions', displayValue: 'Millions', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Millions' }, { value: 'Billions', displayValue: 'Billions', localizationId: 'DevExpress.XtraCharts.NumericGridAlignment.Billions' }, { value: 'Custom', displayValue: 'Custom', localizationId: 'DevExpress.XtraReports.UI.SortingSummaryFunction.Custom' }],
    localizationId: 'DevExpress.XtraCharts.DateTimeScaleOptions.MeasureUnit'
}, numericGridAlignment = {
    propertyName: 'gridAlignment', modelName: '@GridAlignment', displayName: 'Grid Alignment',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Ones', displayValue: 'Ones', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Ones' }, { value: 'Tens', displayValue: 'Tens', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Tens' }, { value: 'Hundreds', displayValue: 'Hundreds', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Hundreds' }, { value: 'Thousands', displayValue: 'Thousands', localizationId: 'DevExpress.XtraCharts.NumericGridAlignment.Thousands' }, { value: 'Millions', displayValue: 'Millions', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Millions' }, { value: 'Billions', displayValue: 'Billions', localizationId: 'DevExpress.XtraCharts.NumericGridAlignment.Billions' }, { value: 'Custom', displayValue: 'Custom', localizationId: 'DevExpress.XtraReports.UI.SortingSummaryFunction.Custom' }],
    localizationId: 'DevExpress.XtraCharts.ChartRangeControlClientDateTimeGridOptions.GridAlignment'
}, customGridAlignment = { propertyName: 'customGridAlignment', modelName: '@CustomGridAlignment', defaultVal: null, displayName: 'Custom Grid Alignment', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.NumericScaleOptions.CustomGridAlignment' }, customMeasureUnit = { propertyName: 'customMeasureUnit', modelName: '@CustomMeasureUnit', defaultVal: null, displayName: 'Custom Measure Unit', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.NumericScaleOptions.CustomMeasureUnit' };
var numericScaleOptionsSerializationsInfo = [numericMeasureUnit, numericGridAlignment, customGridAlignment, customMeasureUnit].concat(scaleOptionsBaseSerializationsInfo), numericScaleOptions = { propertyName: 'numericScaleOptions', modelName: 'NumericScaleOptions', displayName: 'Numeric Scale Options', info: numericScaleOptionsSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.NumericScaleOptions' };
var radarAxisYNumericScaleOptionsSerializationsInfo = [autoGrid, numericGridAlignment, gridOffset, gridSpacing], radarAxisYNumericScaleOptions = { propertyName: 'radarAxisYNumericScaleOptions', modelName: 'NumericScaleOptions', displayName: 'Numeric Scale Options', info: radarAxisYNumericScaleOptionsSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.NumericScaleOptions' };
var radarAxisXNumericScaleOptionsSerializationsInfo = radarAxisYNumericScaleOptionsSerializationsInfo.concat(scaleMode), radarAxisXNumericScaleOptions = { propertyName: 'radarAxisXNumericScaleOptions', modelName: 'NumericScaleOptions', displayName: 'Numeric Scale Options', info: radarAxisXNumericScaleOptionsSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.NumericScaleOptions' };
var dateMeasureUnit = {
    propertyName: 'measureUnit', modelName: '@MeasureUnit', displayName: 'Measure Unit',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Millisecond', displayValue: 'Millisecond', localizationId: 'DevExpress.XtraCharts.DateTimeMeasureUnit.Millisecond' }, { value: 'Second ', displayValue: 'Second', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Second' }, { value: 'Minute', displayValue: 'Minute', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Minute' }, { value: 'Hour', displayValue: 'Hour', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Hour' }, { value: 'Day', displayValue: 'Day', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateDay' }, { value: 'Week', displayValue: 'Week', localizationId: 'DevExpress.XtraCharts.DateTimeGridAlignment.Week' }, { value: 'Month', displayValue: 'Month', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateMonth' }, { value: 'Quarter', displayValue: 'Quarter', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateQuarter' }, { value: 'Year', displayValue: 'Year', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateYear' }],
    localizationId: 'DevExpress.XtraCharts.DateTimeScaleOptions.MeasureUnit'
}, dateGridAlignment = {
    propertyName: 'gridAlignment', modelName: '@GridAlignment', displayName: 'Grid Alignment',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Millisecond', displayValue: 'Millisecond', localizationId: 'DevExpress.XtraCharts.DateTimeMeasureUnit.Millisecond' }, { value: 'Second ', displayValue: 'Second', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Second' }, { value: 'Minute', displayValue: 'Minute', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Minute' }, { value: 'Hour', displayValue: 'Hour', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Hour' }, { value: 'Day', displayValue: 'Day', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateDay' }, { value: 'Week', displayValue: 'Week', localizationId: 'DevExpress.XtraCharts.DateTimeGridAlignment.Week' }, { value: 'Month', displayValue: 'Month', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateMonth' }, { value: 'Quarter', displayValue: 'Quarter', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateQuarter' }, { value: 'Year', displayValue: 'Year', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateYear' }],
    localizationId: 'DevExpress.XtraCharts.ChartRangeControlClientDateTimeGridOptions.GridAlignment'
}, workdaysOnly = { propertyName: 'workdaysOnly', modelName: '@WorkdaysOnly', displayName: 'Workdays Only', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false, from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.DateTimeScaleOptions.WorkdaysOnly' };
var dateTimeScaleOptionsSerializationsInfo = [dateGridAlignment, dateMeasureUnit, workdaysOnly].concat(scaleOptionsBaseSerializationsInfo), dateTimeScaleOptions = { propertyName: 'dateTimeScaleOptions', modelName: 'DateTimeScaleOptions', displayName: 'Date-Time Scale Options', info: dateTimeScaleOptionsSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.DateTimeScaleOptions' };
var qualitativeScaleOptionsSerializationInfo = [autoGrid, gridOffset, gridSpacing], qualitativeScaleOptions = { propertyName: 'qualitativeScaleOptions', modelName: 'QualitativeScaleOptions', displayName: 'Qualitative Scale Options', localizationId: 'DevExpress.XtraCharts.AxisX3D.QualitativeScaleOptions', info: qualitativeScaleOptionsSerializationInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var visibleInPanesSerializable = { propertyName: 'visibleInPanesSerializable', modelName: '@VisibleInPanesSerializable', displayName: 'Visible In Panes Serializable', editor: analytics_widgets_1.editorTemplates.getEditor('text') }, minorVisible = { propertyName: 'minorVisible', modelName: '@MinorVisible', displayName: 'Minor Visible', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.TickmarksBase.MinorVisible' }, minorColor = { propertyName: 'minorColor', modelName: '@MinorColor', displayName: 'Minor Color', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), localizationId: 'DevExpress.XtraCharts.GridLines.MinorColor' };
var gridLinesAxisBaseSerializationsInfo = [_common_1.visible, minorVisible, _common_1.color, minorColor, lineStyle, minorLineStyle];
var gridLinesAxisX = { propertyName: 'gridLinesAxisX', modelName: 'GridLines', displayName: 'Grid Lines', info: gridLinesAxisBaseSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.AxisBase.GridLines' }, gridLinesAxisY = { propertyName: 'gridLinesAxisY', modelName: 'GridLines', displayName: 'Grid Lines', info: gridLinesAxisBaseSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.AxisBase.GridLines' };
var straggered = { propertyName: 'straggered', modelName: '@Staggered', displayName: 'Staggered', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false, from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.AxisLabel.Staggered' }, allowStagger = { propertyName: 'allowStagger', modelName: '@AllowStagger', displayName: 'Allow Stagger', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.AxisLabelResolveOverlappingOptions.AllowStagger' }, allowRotate = { propertyName: 'allowRotate', modelName: '@AllowRotate', displayName: 'Allow Rotate', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.AxisLabelResolveOverlappingOptions.AllowRotate' }, allowHide = { propertyName: 'allowHide', modelName: '@AllowHide', displayName: 'Allow Hide', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.AxisLabelResolveOverlappingOptions.AllowHide' }, minIndent = { propertyName: 'minIndent', modelName: '@MinIndent', displayName: 'Min Indent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.AxisLabelResolveOverlappingOptions.MinIndent' }, axisLabelResolveOverlappingOptionsSerializationsInfo = [allowStagger, allowRotate, allowHide, minIndent], axisLabelResolveOverlappingOptions = { propertyName: 'resolveOverlappingOptions', modelName: 'ResolveOverlappingOptions', displayName: 'Resolve Overlapping Options', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: axisLabelResolveOverlappingOptionsSerializationsInfo, localizationId: 'DevExpress.XtraCharts.AxisLabel.ResolveOverlappingOptions' }, enableAntialiasing = { propertyName: 'enableAntialiasing', modelName: '@EnableAntialiasing', displayName: 'Enable Antialiasing', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: _common_1.defaultBooleanValues, localizationId: 'DevExpress.XtraCharts.TitleBase.EnableAntialiasing' };
var axisLabelBaseSerializationsInfo = [enableAntialiasing, _common_1.font, _common_1.maxLineCount, _common_1.maxWidth, axisLabelResolveOverlappingOptions, _common_1.textAlignment, _common_1.textColor, _common_1.textPattern];
var axisLabelSerializationsInfo = [_common_1.angle, straggered, _common_1.visibility].concat(axisLabelBaseSerializationsInfo), axisLabel = { propertyName: 'axisLabel', modelName: 'Label', displayName: 'Label', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: axisLabelSerializationsInfo, localizationId: 'DevExpress.XtraReports.UI.XRLabel' };
var minorCount = { propertyName: 'minorCount', modelName: '@MinorCount', displayName: 'Minor Count', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.AxisBase.MinorCount' }, interlaced = { propertyName: 'interlaced', modelName: '@Interlaced', displayName: 'Interlaced', from: analytics_utils_1.parseBool, defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), localizationId: 'DevExpress.XtraCharts.AxisBase.Interlaced' }, interlacedColor = { propertyName: 'interlacedColor', modelName: '@InterlacedColor', displayName: 'Interlaced Color', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, localizationId: 'DevExpress.XtraCharts.AxisBase.InterlacedColor' };
var axisBaseSerializationsInfo = [visualRange, wholeRange, numericScaleOptions, dateTimeScaleOptions, minorCount, interlacedColor];
var axisFillMode = {
    propertyName: 'fillMode', modelName: '@FillMode', displayName: 'Fill Mode',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Empty', displayValue: 'Empty', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAppearances.Empty' }, { value: 'Solid', displayValue: 'Solid', localizationId: 'DevExpress.XtraCharts.FillMode3D.Solid' }, { value: 'Gradient', displayValue: 'Gradient', localizationId: 'DevExpress.XtraCharts.FillMode3D.Gradient' }, { value: 'Hatch', displayValue: 'Hatch', localizationId: 'DevExpress.XtraCharts.FillMode.Hatch' }],
    localizationId: 'DevExpress.XtraCharts.FillStyle3D.FillMode'
}, fillStyle2D = [axisFillMode];
var rectangleFillStyleSerializationsInfo = [].concat(fillStyle2D), interlacedFillStyle = { propertyName: 'InterlacedFillStyle', modelName: 'InterlacedFillStyle', displayName: 'Interlaced Fill Style', info: rectangleFillStyleSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.RadarAxis.InterlacedFillStyle' };
var crossAxis = { propertyName: 'crossAxis', modelName: '@CrossAxis', displayName: 'Cross Axis', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false, from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.TickmarksBase.CrossAxis' }, minorThickness = { propertyName: 'minorThickness', modelName: '@MinorThickness', displayName: 'Minor Thickness', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1, localizationId: 'DevExpress.XtraCharts.TickmarksBase.MinorThickness' }, minorLength = { propertyName: 'minorLength', modelName: '@MinorLength', displayName: 'Minor Length', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 2, localizationId: 'DevExpress.XtraCharts.TickmarksBase.MinorLength' }, lengthinfo = { propertyName: 'length', modelName: '@Length', displayName: 'Length', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 5, localizationId: 'DevExpress.XtraCharts.TickmarksBase.Length' }, tickmarksMinorVisible = { propertyName: 'minorVisible', modelName: '@MinorVisible', displayName: 'Minor Visible', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.TickmarksBase.MinorVisible' }, tickmarksBaseSerializationsInfo = [_common_1.visible, tickmarksMinorVisible, crossAxis, _common_1.thickness, minorThickness, lengthinfo, minorLength], tickmarksSerializationsInfo = [].concat(tickmarksBaseSerializationsInfo);
var tickmarks = { propertyName: 'tickmarks', modelName: 'Tickmarks', displayName: 'Tickmarks', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: tickmarksSerializationsInfo, localizationId: 'DevExpress.XtraCharts.RadarAxisY.Tickmarks' };
var axisAlignment = {
    propertyName: 'axisAlignment', modelName: '@Alignment',
    displayName: 'Alignment', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [{ value: 'Near', displayValue: 'Near', localizationId: 'DevExpress.XtraCharts.ConstantLineTitleAlignment.Near' }, { value: 'Zero', displayValue: 'Zero', localizationId: 'DevExpress.XtraCharts.AxisAlignment.Zero' }, { value: 'Far', displayValue: 'Far', localizationId: 'DevExpress.XtraCharts.ConstantLineTitleAlignment.Far' }],
    localizationId: 'DevExpress.XtraReports.UI.XRBarCode.Alignment'
};
var pattern = { propertyName: 'pattern', modelName: '@Pattern', displayName: 'Pattern', editor: analytics_widgets_1.editorTemplates.getEditor('text'), localizationId: 'DevExpress.XtraCharts.CrosshairAxisLabelOptions.Pattern' }, crosshairAxisLabelOptionsSerializationsInfo = [_common_1.visibility, pattern, _common_1.backColor, _common_1.textColor, _common_1.font];
var crosshairAxisLabelOptions = { propertyName: 'crosshairAxisLabelOptions', modelName: 'CrosshairAxisLabelOptions', displayName: 'Crosshair Axis Label Options', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: crosshairAxisLabelOptionsSerializationsInfo, localizationId: 'DevExpress.XtraCharts.Axis2D.CrosshairAxisLabelOptions' };
var axisTitleVisibility = { propertyName: 'axisTitleVisibility', modelName: '@Visibility', displayName: 'Visibility', defaultVal: 'False', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: _common_1.defaultBooleanValues, localizationId: 'DevExpress.XtraCharts.BorderBase.Visibility' };
var axisTitleSerializationsInfo = [_common_1.text, _common_1.titleAlignment, _common_1.antialiasing, axisTitleVisibility, _common_1.textColor, _common_1.font12], axisTitle = { propertyName: 'axisTitle', modelName: 'Title', displayName: 'Title', defaultVal: {}, info: axisTitleSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Title' };
var crosshairLabelVisibility = { propertyName: 'crosshairLabelVisibility', modelName: '@CrosshairLabelVisibility', displayName: 'Crosshair Label Visibility', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: _common_1.defaultBooleanValues, localizationId: 'DevExpress.XtraCharts.SeriesBase.CrosshairLabelVisibility' };
var axis2DSerializationsInfo = [interlaced, interlacedFillStyle, tickmarks, axisTitle, _common_1.visibility, axisAlignment, axisLabel, _common_1.thickness,
    _common_1.color, crosshairLabelVisibility, visibleInPanesSerializable, crosshairAxisLabelOptions].concat(axisBaseSerializationsInfo);
var axisY3DInterlaced = { propertyName: 'axisY3DInterlaced', modelName: '@Interlaced', displayName: 'Interlaced', from: analytics_utils_1.parseBool, defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), localizationId: 'DevExpress.XtraCharts.AxisBase.Interlaced' };
var axisFillMode3D = {
    propertyName: 'fillMode', modelName: '@FillMode', displayName: 'Fill Mode',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Empty', displayValue: 'Empty', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAppearances.Empty' }, { value: 'Solid', displayValue: 'Solid', localizationId: 'DevExpress.XtraCharts.FillMode3D.Solid' }, { value: 'Gradient', displayValue: 'Gradient', localizationId: 'DevExpress.XtraCharts.FillMode3D.Gradient' }],
    localizationId: 'DevExpress.XtraCharts.FillStyle3D.FillMode'
}, fillStyle3D = [axisFillMode];
var rectangleFillStyle3DSerializationsInfo = [].concat(fillStyle3D), rectangleFillStyle3D = { propertyName: 'interlacedFillStyle', modelName: 'InterlacedFillStyle', displayName: 'Interlaced Fill Style', info: rectangleFillStyle3DSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.RadarAxis.InterlacedFillStyle' }, axisLabel3DPosition = {
    propertyName: 'axisLabel3DPosition', modelName: '@AxisLabel3DPosition', displayName: 'Axis Label 3D Position',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Bottom', displayValue: 'Bottom', localizationId: 'DevExpress.XtraReports.UI.XRDockStyle.Bottom' }, { value: 'Left', displayValue: 'Left', localizationId: 'DevExpress.XtraReports.UI.XRControl.Left' }, { value: 'Right', displayValue: 'Right', localizationId: 'DevExpress.XtraCharts.RectangleIndents.Right' }, { value: 'Top', displayValue: 'Top', localizationId: 'DevExpress.XtraReports.UI.XRDockStyle.Top' }, { value: 'Auto', displayValue: 'Auto', localizationId: 'DevExpress.XtraReports.UI.DocumentExportMode.Auto' }]
};
var axisLabel3DSerializationsInfo = [axisLabel3DPosition].concat(axisLabelSerializationsInfo), axisLabel3D = { propertyName: 'axisLabel3D', modelName: 'Label', displayName: 'Label', info: axisLabel3DSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraReports.UI.XRLabel' };
var axis3DSerializationsInfo = [rectangleFillStyle3D, axisLabel3D].concat(axisBaseSerializationsInfo);
var sizeInPixels = { propertyName: 'sizeInPixels', modelName: '@SizeInPixels', displayName: 'Size In Pixels', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.XYDiagramPaneBase.SizeInPixels' }, scaleBreakStyle = {
    propertyName: 'style', modelName: '@Style', displayName: 'Style', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [{ value: 'Straight', displayValue: 'Straight', localizationId: 'DevExpress.XtraCharts.ScaleBreakStyle.Straight' }, { value: 'Ragged', displayValue: 'Ragged', localizationId: 'DevExpress.XtraCharts.ScaleBreakStyle.Ragged' }, { value: 'Waved', displayValue: 'Waved', localizationId: 'DevExpress.XtraCharts.ScaleBreakStyle.Waved' }],
    localizationId: 'DevExpress.XtraReports.UI.ConditionFormatting.Style'
}, scaleBreaksOptionsSerializationsInfo = [sizeInPixels, _common_1.color, scaleBreakStyle];
var scaleBreaksOptions = { propertyName: 'scaleBreakOptions', modelName: 'ScaleBreakOptions', displayName: 'Scale Break Options', info: scaleBreaksOptionsSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.Axis.ScaleBreakOptions' };
var enabled = { propertyName: 'enabled', modelName: '@Enabled', displayName: 'Enabled', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraReports.UI.EditOptions.Enabled' }, maxCount = { propertyName: 'maxCount', modelName: '@MaxCount', displayName: 'Max Count', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.AutoScaleBreaks.MaxCount' }, autoScaleBreaksSerializationsInfo = [enabled, maxCount];
var edge1 = { propertyName: 'edge1', modelName: '@Edge1Serializable', displayName: 'Edge1', localizationId: 'DevExpress.XtraCharts.ScaleBreak.Edge1', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, edge2 = { propertyName: 'edge2', modelName: '@Edge2Serializable', displayName: 'Edge2', localizationId: 'DevExpress.XtraCharts.ScaleBreak.Edge2', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
var scaleBreaks = { propertyName: 'scaleBreaks', modelName: 'ScaleBreaks', displayName: 'Scale Breaks', localizationId: 'DevExpress.XtraCharts.Axis.ScaleBreaks', array: true, editor: _editorTemplates_1.editorTemplates.getEditor('collection') };
exports.scaleBreakSerializationsInfo = [edge1, edge2, _common_1.visible, _common_1.name, _common_1.tag];
var autoScaleBreaks = { propertyName: 'autoScaleBreaks', modelName: 'AutoScaleBreaks', displayName: 'Auto Scale Breaks', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: autoScaleBreaksSerializationsInfo, localizationId: 'DevExpress.XtraCharts.Axis.AutoScaleBreaks' }, reverse = { propertyName: 'axisReverse', modelName: '@Reverse', displayName: 'Reverse', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.Axis.Reverse' };
var axisValueSerializable = { propertyName: '_axisValue', modelName: '@AxisValueSerializable' }, axisValue = { propertyName: 'axisValue', displayName: 'Axis Value', localizationId: 'DevExpress.XtraCharts.AxisCoordinate.AxisValue', editor: analytics_widgets_1.editorTemplates.getEditor('text') }, showBehind = { propertyName: 'showBehind', modelName: '@ShowBehind', from: analytics_utils_1.parseBool, displayName: 'Show Behind', localizationId: 'DevExpress.XtraCharts.ConstantLine.ShowBehind', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.legendName = { propertyName: 'legendName', modelName: '@LegendName', displayName: 'Legend', localizationId: 'DevExpress.XtraCharts.ConstantLine.Legend', defaultVal: analytics_utils_1.getLocalization('Default Legend', 'ChartStringId.DefaultLegend'), editor: _editorTemplates_1.editorTemplates.getEditor('legends') };
var stripLimitEnable = { propertyName: 'enabled', modelName: '@Enabled', displayName: 'Enabled', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.StripLimit.Enabled' };
exports.stripLimitSerializationsInfo = [axisValueSerializable, axisValue, stripLimitEnable, _common_1.tag];
var stripMinLimitInfo = { propertyName: 'minLimit', modelName: 'MinLimit', displayName: 'Min Limit', from: _stripLimit_1.StripLimitViewModel.from, toJsonObject: _stripLimit_1.StripLimitViewModel.toJson, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.Strip.MinLimit' }, stripMaxLimitInfo = { propertyName: 'maxLimit', modelName: 'MaxLimit', displayName: 'Max Limit', from: _stripLimit_1.StripLimitViewModel.from, toJsonObject: _stripLimit_1.StripLimitViewModel.toJson, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.Strip.MaxLimit' };
var showAxisLabel = { propertyName: 'showAxisLabel', modelName: '@ShowAxisLabel', displayName: 'Show Axis Label', localizationId: 'DevExpress.XtraCharts.Strip.ShowAxisLabel', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, axisLabelText = { propertyName: 'axisLabelText', modelName: '@AxisLabelText', displayName: 'Axis Label Text', localizationId: 'DevExpress.XtraCharts.Strip.AxisLabelText', editor: analytics_widgets_1.editorTemplates.getEditor('text') }, stripFillStyle = { propertyName: 'fillStyle', modelName: 'FillStyle', displayName: 'Fill Style', localizationId: 'DevExpress.XtraCharts.Strip.FillStyle', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), from: _fillStyle_1.FillStyle.from(_view_1.fillStyleInfo, 'RectangleGradientFillOptions'), toJsonObject: _fillStyle_1.FillStyle.toJson };
var strips = { propertyName: 'strips', modelName: 'Strips', displayName: 'Strips', localizationId: 'DevExpress.XtraCharts.Axis2D.Strips', array: true, editor: _editorTemplates_1.editorTemplates.getEditor('collection') };
exports.stripSerializationsInfo = [_common_1.visible, _common_1.color, _common_1.showInLegend, exports.legendName, _common_1.legendText, showAxisLabel, axisLabelText, _common_1.name, _common_1.tag, stripFillStyle, stripMinLimitInfo, stripMaxLimitInfo];
exports.constantLineSerializationsInfo = [axisValueSerializable, axisValue, _common_1.name, _common_1.visible, _common_1.color, _common_1.showInLegend, exports.legendName, _common_1.legendText, showBehind, _common_1.tag];
var constantLines = { propertyName: 'constantLines', modelName: 'ConstantLines', displayName: 'Constant Lines', localizationId: 'DevExpress.XtraCharts.Axis2D.ConstantLines', array: true, editor: _editorTemplates_1.editorTemplates.getEditor('collection') };
var axisSerializationsInfo = [reverse, scaleBreaksOptions, autoScaleBreaks].concat(axis2DSerializationsInfo);
exports.axisXYSerializationsInfo = [constantLines, scaleBreaks, strips].concat(axisSerializationsInfo);
var axisID = { propertyName: 'axisID', modelName: '@AxisID' };
exports.secondaryAxisXYSerializationsInfo = [_common_1.name, axisID].concat(exports.axisXYSerializationsInfo);
var topLevel = { propertyName: 'topLevel', modelName: '@TopLevel', displayName: 'Top Level', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.RadarAxisY.TopLevel' }, radarAxisXLabelTextDirection = {
    propertyName: 'textDirection', modelName: 'TextDirection', displayName: 'Text Direction', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [{ value: 'LeftToRight', displayValue: 'LeftToRight', localizationId: 'ChartStringId.WizGradientLeftToRight' }, { value: 'TopToBottom', displayValue: 'TopToBottom', localizationId: 'ChartStringId.WizSeriesLabelTextOrientationTopToBottom' }, { value: 'BottomToTop', displayValue: 'BottomToTop', localizationId: 'ChartStringId.WizSeriesLabelTextOrientationBottomToTop' }, { value: 'Radial', displayValue: 'Radial', localizationId: 'DevExpress.XtraCharts.PieSeriesLabelPosition.Radial' }, { value: 'Tangent', displayValue: 'Tangent', localizationId: 'DevExpress.XtraCharts.PieSeriesLabelPosition.Tangent' }],
    localizationId: 'DevExpress.XtraCharts.RadarAxisXLabel.TextDirection'
};
var radarAxisXLabelSerializationsInfo = axisLabelBaseSerializationsInfo.concat(radarAxisXLabelTextDirection), radarAxisXLabel = { propertyName: 'radarAxisXLabel', modelName: 'Label', displayName: 'Label', info: radarAxisXLabelSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraReports.UI.XRLabel' }, radarAxisYLabel = { propertyName: 'radarAxisYLabel', modelName: 'Label', displayName: 'Label', info: axisLabelBaseSerializationsInfo.concat([_common_1.angle, _common_1.visible]), editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraReports.UI.XRLabel' };
var radarAxisSerializationsInfo = [interlaced, interlacedColor, interlacedFillStyle, visualRange, minorCount], radarAxisXSerializationsInfo = [radarAxisXNumericScaleOptions, radarWholeRange, gridLinesAxisX, radarAxisXLabel, qualitativeScaleOptions].concat(radarAxisSerializationsInfo), radarAxisYSerializationsInfo = [_common_1.color, _common_1.thickness, _common_1.visible, radarAxisYNumericScaleOptions, topLevel, wholeRange, gridLinesAxisY, radarAxisYLabel, tickmarks].concat(radarAxisSerializationsInfo);
exports.radarAxisX = { propertyName: 'axisX', modelName: 'AxisX', displayName: 'Axis X', info: radarAxisXSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.GanttAxisX' };
exports.radarAxisY = { propertyName: 'axisY', modelName: 'AxisY', displayName: 'Axis Y', info: radarAxisYSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.SeparatePaneIndicator.AxisY' };
exports.axisX3D = { propertyName: 'axisX', modelName: 'AxisX', displayName: 'Axis X', info: [gridLinesAxisX, interlaced, qualitativeScaleOptions].concat(axis3DSerializationsInfo), editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.GanttAxisX' };
exports.axisY3D = { propertyName: 'axisY', modelName: 'AxisY', displayName: 'Axis Y', info: [gridLinesAxisY, axisY3DInterlaced].concat(axis3DSerializationsInfo), editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.SeparatePaneIndicator.AxisY' };
exports.axisX = { propertyName: 'axisX', modelName: 'AxisX', displayName: 'Primary Axis X', localizationId: 'DevExpress.XtraCharts.AxisX', defaultVal: {}, from: _axisXYViewModel_1.AxisXYViewModel.from([gridLinesAxisX, qualitativeScaleOptions].concat(exports.axisXYSerializationsInfo)), toJsonObject: _axisXYViewModel_1.AxisXYViewModel.toJson, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.axisY = { propertyName: 'axisY', modelName: 'AxisY', displayName: 'Primary Axis Y', localizationId: 'DevExpress.XtraCharts.AxisY', defaultVal: {}, from: _axisXYViewModel_1.AxisXYViewModel.from([gridLinesAxisY].concat(exports.axisXYSerializationsInfo)), toJsonObject: _axisXYViewModel_1.AxisXYViewModel.toJson, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_elements_1 = __webpack_require__(5);
var select_box_1 = __webpack_require__(449);
var analytics_internal_1 = __webpack_require__(2);
exports.reportStorageWebIsRegister = analytics_internal_1.createGlobalModuleVariableFunc(false);
exports.limitation = analytics_internal_1.createGlobalModuleVariableFunc(false);
var orig_optionValuesEqual = select_box_1.default.prototype['_optionValuesEqual'];
select_box_1.default['redefine']({
    _optionValuesEqual: function (optionName, oldValue, newValue) {
        if (optionName === 'value' && (oldValue instanceof analytics_elements_1.ElementViewModel) && (newValue instanceof analytics_elements_1.ElementViewModel)) {
            return oldValue === newValue;
        }
        return orig_optionValuesEqual.apply(this, arguments);
    }
});


/***/ }),
/* 32 */
/***/ (function(module, exports) {

module.exports = DevExpress.Reporting.Internal;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DataBindingMode;
(function (DataBindingMode) {
    DataBindingMode["Bindings"] = "Bindings";
    DataBindingMode["Expressions"] = "Expressions";
    DataBindingMode["ExpressionsAdvanced"] = "ExpressionsAdvanced";
})(DataBindingMode = exports.DataBindingMode || (exports.DataBindingMode = {}));


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var xrReport_1 = __webpack_require__(16);
var _utils_1 = __webpack_require__(42);
var _settings_1 = __webpack_require__(31);
var settings_1 = __webpack_require__(12);
var types_1 = __webpack_require__(40);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var $ = __webpack_require__(3);
var ReportStorageWeb = (function () {
    function ReportStorageWeb() {
    }
    ReportStorageWeb.getErrorMessageHandler = function (defaultErrorMessage) {
        return function (message, jqXHR, textStatus) {
            var error = analytics_internal_1.getErrorMessage(jqXHR);
            analytics_internal_1.NotifyAboutWarning(error || defaultErrorMessage || message || 'Internal Server Error', true);
        };
    };
    ReportStorageWeb.getReportByUrl = function (url) {
        var $deferred = $.Deferred();
        ReportStorageWeb.getData(url).done(function (result) {
            if (result) {
                var model = new xrReport_1.ReportViewModel(JSON.parse(result.reportLayout));
                _utils_1.updateDataSourceRefs(model, result.dataSourceRefInfo);
                $deferred.resolve(model);
            }
            else {
                $deferred.reject();
            }
        }).fail(function () { return $deferred.reject(); });
        return $deferred.promise();
    };
    ReportStorageWeb.getData = function (url) {
        if (_settings_1.reportStorageWebIsRegister()) {
            return analytics_internal_1.ajax(settings_1.HandlerUri(), 'getData', encodeURIComponent(JSON.stringify({
                reportUrl: url
            })), ReportStorageWeb.getErrorMessageHandler());
        }
        else {
            return $.Deferred().promise();
        }
    };
    ReportStorageWeb.setData = function (layout, url) {
        if (_settings_1.reportStorageWebIsRegister()) {
            return analytics_internal_1.ajax(settings_1.HandlerUri(), 'setData', encodeURIComponent(JSON.stringify({
                reportLayout: JSON.stringify({
                    'XtraReportsLayoutSerializer': layout
                }),
                reportUrl: url
            })), ReportStorageWeb.getErrorMessageHandler(analytics_utils_1.getLocalization('Cannot save the report.', 'ASPxReportsStringId.ReportDesigner_SaveReport_Error')));
        }
        else {
            return $.Deferred().promise();
        }
    };
    ReportStorageWeb.setNewData = function (layout, url) {
        if (_settings_1.reportStorageWebIsRegister()) {
            return analytics_internal_1.ajax(settings_1.HandlerUri(), 'setNewData', encodeURIComponent(JSON.stringify({
                reportLayout: JSON.stringify({
                    'XtraReportsLayoutSerializer': layout
                }),
                reportUrl: url
            })), ReportStorageWeb.getErrorMessageHandler(analytics_utils_1.getLocalization('Cannot save the report.', 'ASPxReportsStringId.ReportDesigner_SaveReport_Error')));
        }
        else {
            return $.Deferred().promise();
        }
    };
    ReportStorageWeb.getUrls = function (subreports) {
        if (_settings_1.reportStorageWebIsRegister()) {
            return analytics_internal_1.ajax(settings_1.HandlerUri(), 'getUrls', encodeURIComponent('true'));
        }
        else {
            return $.Deferred().resolve(types_1.convertMapToKeyValuePair(subreports)).promise();
        }
    };
    return ReportStorageWeb;
}());
exports.ReportStorageWeb = ReportStorageWeb;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
exports.defaultBooleanValues = [
    { value: 'True', displayValue: 'True', localizationId: 'StringId.DefaultBooleanTrue' },
    { value: 'False', displayValue: 'False', localizationId: 'StringId.DefaultBooleanFalse' },
    { value: 'Default', displayValue: 'Default', localizationId: 'StringId.DefaultBooleanDefault' }
];
exports.scaleTypeValues = [
    { value: 'Qualitative', displayValue: 'Qualitative', localizationId: 'DevExpress.XtraCharts.ScaleType.Qualitative' },
    { value: 'Numerical', displayValue: 'Numerical', localizationId: 'DevExpress.XtraCharts.ScaleType.Numerical' },
    { value: 'DateTime', displayValue: 'DateTime', localizationId: 'DevExpress.XtraCharts.ScaleType.DateTime' },
    { value: 'Auto', displayValue: 'Auto', localizationId: 'DevExpress.XtraCharts.ScaleType.Auto' }
];
exports.stringAlignmentValues = [
    { value: 'Near', displayValue: 'Near', localizationId: 'ChartStringId.WizStringAlignmentNear' },
    { value: 'Center', displayValue: 'Center', localizationId: 'ChartStringId.WizStringAlignmentCenter' },
    { value: 'Far', displayValue: 'Far', localizationId: 'ChartStringId.WizStringAlignmentFar' }
];
exports.angle = { propertyName: 'angle', modelName: '@Angle', defaultVal: 0, from: analytics_utils_1.floatFromModel, displayName: 'Angle', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraReports.UI.XRLabel.Angle' };
exports.borderColor = { propertyName: 'borderColor', modelName: '@BorderColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, displayName: 'Border Color', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), localizationId: 'DevExpress.XtraReports.UI.XRControl.BorderColor' };
exports.backColor = { propertyName: 'backColor', modelName: '@BackColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, displayName: 'Background Color', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), localizationId: 'DevExpress.XtraReports.UI.XRControl.BackColor' };
exports.dataMember = { propertyName: 'dataMember', modelName: '@DataMember' };
exports.text = { propertyName: 'text', modelName: '@Text', defaultVal: '', displayName: 'Text', editor: analytics_widgets_1.editorTemplates.getEditor('text'), localizationId: 'ASPxReportsStringId.ExportName_txt' };
exports.visible = { propertyName: 'visible', modelName: '@Visible', defaultVal: true, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), displayName: 'Visible', localizationId: 'DevExpress.XtraReports.UI.XRControl.Visible' };
exports.name = { propertyName: 'name', modelName: '@Name', displayName: 'Name', editor: analytics_widgets_1.editorTemplates.getEditor('text'), localizationId: 'DevExpress.XtraReports.UI.XRControl.Name' };
exports.tag = { propertyName: 'tag', modelName: '@Tag', displayName: 'Tag', editor: analytics_widgets_1.editorTemplates.getEditor('text'), localizationId: 'DevExpress.XtraReports.UI.XRControl.Tag' };
exports.legendText = { propertyName: 'legendText', modelName: '@LegendText', displayName: 'Legend Text', editor: analytics_widgets_1.editorTemplates.getEditor('text'), localizationId: 'DevExpress.XtraCharts.Strip.LegendText' };
exports.showInLegend = { propertyName: 'showInLegend', modelName: '@ShowInLegend', displayName: 'Show In Legend', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.Indicator.ShowInLegend' };
exports.thickness = { propertyName: 'thickness', modelName: '@Thickness', displayName: 'Thickness', defaultVal: 1, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.TickmarksBase.Thickness' };
exports.visibility = { propertyName: 'visibility', modelName: '@Visibility', displayName: 'Visibility', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: exports.defaultBooleanValues, localizationId: 'DevExpress.XtraCharts.BorderBase.Visibility' };
exports.color = { propertyName: 'color', modelName: '@Color', displayName: 'Color', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), localizationId: 'DevExpress.XtraCharts.SeriesViewBase.Color' };
exports.titleAlignment = { propertyName: 'titleAlignment', modelName: '@Alignment', displayName: 'Alignment', defaultVal: 'Center', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: exports.stringAlignmentValues, localizationId: 'DevExpress.XtraReports.UI.XRBarCode.Alignment' };
exports.textPattern = { propertyName: 'textPattern', modelName: '@TextPattern', displayName: 'Text Pattern', editor: analytics_widgets_1.editorTemplates.getEditor('text'), localizationId: 'DevExpress.XtraCharts.TotalLabel.TextPattern' };
exports.textAlignment = { propertyName: 'textAlignment', modelName: '@TextAlignment', displayName: 'Text Alignment', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: exports.stringAlignmentValues, localizationId: 'DevExpress.XtraReports.UI.XRControl.TextAlignment' };
exports.maxLineCount = { propertyName: 'maxLineCount', modelName: '@MaxLineCount', displayName: 'Max Line Count', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.SeriesLabelBase.MaxLineCount' };
exports.maxWidth = { propertyName: 'maxWidth', modelName: '@MaxWidth', displayName: 'Max Width', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsSelection.MaxWidth' };
exports.textColor = { propertyName: 'textColor', modelName: '@TextColor', displayName: 'Text Color', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), localizationId: 'DevExpress.XtraCharts.TotalLabel.TextColor' };
exports.antialiasing = { propertyName: 'antialiasing', modelName: '@Antialiasing', displayName: 'Antialiasing', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.SwiftPlotSeriesView.Antialiasing' };
exports.font = { propertyName: 'font', modelName: '@Font', displayName: 'Font', defaultVal: 'Tahoma, 8pt', editor: analytics_widgets_1.editorTemplates.getEditor('font'), localizationId: 'DevExpress.XtraReports.UI.XRTableOfContentsLevelBase.Font' };
exports.enableAxisXZooming = { propertyName: 'enableAxisXZooming', modelName: '@EnableAxisXZooming', displayName: 'Enable Axis X Zooming' };
exports.enableAxisXScrolling = { propertyName: 'enableAxisXScrolling', modelName: '@EnableAxisXScrolling', displayName: 'Enable Axis X Scrolling' };
exports.enableAxisYZooming = { propertyName: 'enableAxisYZooming', modelName: '@EnableAxisYZooming', displayName: 'Enable Axis Y Zooming' };
exports.enableAxisYScrolling = { propertyName: 'enableAxisYScrolling', modelName: '@EnableAxisYScrolling', displayName: 'Enable Axis Y Scrolling' };
exports.rotated = { propertyName: 'rotated', modelName: '@Rotated', displayName: 'Rotated', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.XYDiagram.Rotated' };
exports.typeNameNotShow = { propertyName: 'typeNameSerializable', modelName: '@TypeNameSerializable' };
exports.left = { propertyName: 'left', modelName: '@Left', displayName: 'Left', localizationId: 'AnalyticsCoreStringId.PaddingInfo.Left', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.right = { propertyName: 'right', modelName: '@Top', displayName: 'Top', localizationId: 'AnalyticsCoreStringId.PaddingInfo.Top', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.top = { propertyName: 'top', modelName: '@Right', displayName: 'Right', localizationId: 'AnalyticsCoreStringId.PaddingInfo.Right', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.bottom = { propertyName: 'bottom', modelName: '@Bottom', displayName: 'Bottom', localizationId: 'AnalyticsCoreStringId.PaddingInfo.Bottom', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.margin = { propertyName: 'chartMargins', modelName: 'Margins', displayName: 'Margins', info: [exports.left, exports.right, exports.top, exports.bottom], editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraReports.UI.XtraReport.Margins' };
exports.font18 = { propertyName: 'font18', modelName: '@Font', displayName: 'Font', defaultVal: 'Tahoma, 18pt', editor: analytics_widgets_1.editorTemplates.getEditor('font'), localizationId: 'DevExpress.XtraReports.UI.XRTableOfContentsLevelBase.Font' };
exports.font12 = { propertyName: 'font12', modelName: '@Font', displayName: 'Font', defaultVal: 'Tahoma, 12pt', editor: analytics_widgets_1.editorTemplates.getEditor('font'), localizationId: 'DevExpress.XtraReports.UI.XRTableOfContentsLevelBase.Font' };
exports.font8 = { propertyName: 'font8', modelName: '@Font', displayName: 'Font', defaultVal: 'Tahoma, 8pt', editor: analytics_widgets_1.editorTemplates.getEditor('font'), localizationId: 'DevExpress.XtraReports.UI.XRTableOfContentsLevelBase.Font' };
exports.paneSerializationsInfo = [exports.enableAxisXScrolling, exports.enableAxisYScrolling, exports.enableAxisYZooming, exports.enableAxisXZooming, exports.backColor, exports.borderColor];
exports.defaultPane = { propertyName: 'defaultPane', modelName: 'DefaultPane', displayName: 'Default Pane', localizationId: 'ChartStringId.DefaultPaneName', info: exports.paneSerializationsInfo, defaultVal: {}, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.additionalPaneSerializationsInfo = [exports.name].concat(exports.paneSerializationsInfo);
exports.filterString = { propertyName: '_filterString', modelName: '@FilterString' };
exports.filterStringEditable = { propertyName: 'filterString', displayName: 'Filter String', localizationId: 'DevExpress.XtraReports.UI.XtraReportBase.FilterString', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('filterEditor') };


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var formattingrules_1 = __webpack_require__(45);
var metadata_1 = __webpack_require__(6);
var metadata_2 = __webpack_require__(28);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var editorTemplates_1 = __webpack_require__(9);
exports.formattingRuleLinkSerializationsInfo = [
    { propertyName: 'value', modelName: '@Value', link: true }
];
exports.formattingRuleLinks = {
    propertyName: 'formattingRuleLinks', modelName: 'FormattingRuleLinks', displayName: 'Formatting Rules', localizationId: 'DevExpress.XtraReports.UI.XRControl.FormattingRules', array: true,
    editor: editorTemplates_1.designerEditorTemplates.getEditor('formattingRule'), addHandler: formattingrules_1.FormattingRule.createNew,
    displayPropertyName: 'name'
};
exports.defaultBooleanVisible = {
    propertyName: 'visible', modelName: '@Visible', displayName: 'Visible', localizationId: 'DevExpress.XtraReports.UI.Formatting.Visible', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: metadata_1.defaultBooleanValuesArray
};
var borderWidthSerializable = { propertyName: 'borderWidthSerializable', modelName: '@BorderWidthSerializable', displayName: 'Border Width', localizationId: 'DevExpress.XtraReports.UI.Formatting.BorderWidthSerializable', from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, sides = analytics_internal_1.extend({ displayName: 'Borders', editor: analytics_widgets_1.editorTemplates.getEditor('borders'), localizationId: 'DevExpress.XtraReports.UI.XRControl.Borders' }, metadata_2.previewSides);
exports.formattingSerializationsInfo = [metadata_1.backColor, sides, metadata_1.borderColor, metadata_1.borderDashStyle, borderWidthSerializable,
    metadata_1.foreColor, metadata_1.font, metadata_1.textAlignment, exports.defaultBooleanVisible
].concat(metadata_1.paddingGroup);
exports.conditionObj = { propertyName: 'conditionObj', displayName: 'Condition', localizationId: 'DevExpress.XtraReports.UI.FormattingRule.Condition', editor: analytics_widgets_1.editorTemplates.getEditor('expressionEditor') };
exports.formatting = { propertyName: 'formatting', modelName: 'Formatting', displayName: 'Formatting', localizationId: 'DevExpress.XtraReports.UI.FormattingRule.Formatting', info: exports.formattingSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.formattingRuleSerializationsInfo = [
    { propertyName: 'name', modelName: '@Name', displayName: 'Name', localizationId: 'DevExpress.XtraReports.UI.FormattingRule.Name', editor: analytics_widgets_1.editorTemplates.getEditor('text'), validationRules: analytics_internal_1.nameValidationRules },
    { propertyName: 'condition', modelName: '@Condition', displayName: 'Condition', localizationId: 'DevExpress.XtraReports.UI.FormattingRule.Condition', defaultVal: '' },
    exports.conditionObj,
    metadata_1.dataSource, metadata_1.dataMember,
    exports.formatting
];


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var style_1 = __webpack_require__(21);
var _locker_1 = __webpack_require__(32);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_elements_1 = __webpack_require__(5);
var StyleModel = (function (_super) {
    __extends(StyleModel, _super);
    function StyleModel(model, serializer) {
        var _this = _super.call(this) || this;
        _this.className = function () {
            return 'stylemodel';
        };
        _this.controlType = 'XRStyleModel';
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(_this, model);
        ['backColor', 'foreColor', 'borderColor'].forEach(function (propertyName) {
            _this._disposables.push(_this[propertyName] = ko.pureComputed({
                read: function () { return _this['_' + propertyName] && _this['_' + propertyName]() || StyleModel.defaults[propertyName]; },
                write: function (val) { _this['_' + propertyName](val); }
            }));
        });
        _this._disposables.push(_this.paddingObj = new analytics_elements_1.PaddingModel());
        _this.paddingObj.applyFromString(_this['padding']());
        var lock = new _locker_1.Locker().lock;
        _this._disposables.push(_this.padding.subscribe(function (newVal) {
            lock(function () { return _this.paddingObj.applyFromString(newVal); });
        }));
        ['left', 'right', 'top', 'bottom'].forEach(function (name) {
            _this._disposables.push(_this.paddingObj[name].subscribe(function (newVal) {
                lock(function () { return _this.padding(_this.paddingObj.toString()); });
            }));
        });
        return _this;
    }
    StyleModel.prototype.getInfo = function () {
        return style_1.styleSerializationInfo;
    };
    StyleModel.prototype.isPropertyModified = function (name) {
        var needName = this['_' + name] ? '_' + name : name;
        var property = ko.unwrap(this[needName]);
        if (property instanceof Object) {
            return !property.isEmpty();
        }
        else {
            return !!property;
        }
    };
    StyleModel.prototype.displayType = function () {
        return analytics_utils_1.getLocalization('Control Style', 'DevExpress.XtraReports.UI.XRControlStyle');
    };
    StyleModel.defaults = {
        'backColor': 'transparent',
        'foreColor': 'Black',
        'borderColor': 'Black'
    };
    return StyleModel;
}(analytics_utils_1.Disposable));
exports.StyleModel = StyleModel;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var $ = __webpack_require__(3);
var ObjectItem = (function (_super) {
    __extends(ObjectItem, _super);
    function ObjectItem(model, dsHelperProvider, serializer) {
        var _this = _super.call(this) || this;
        _this.dsHelperProvider = dsHelperProvider;
        _this.preInitProperties(model, dsHelperProvider, serializer);
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(_this, model);
        _this.afterDeserialization(model, serializer);
        return _this;
    }
    ObjectItem.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.dsHelperProvider = null;
    };
    ObjectItem.prototype.getInfo = function () {
        return [{ propertyName: 'objectType', modelName: '@ObjectType' }];
    };
    ObjectItem.prototype.afterDeserialization = function (model, serializer) {
        analytics_internal_1.cutRefs(model);
    };
    ObjectItem.prototype.preInitProperties = function (model, dsHelperProvider, serializer) { };
    return ObjectItem;
}(analytics_utils_1.Disposable));
exports.ObjectItem = ObjectItem;
var ObjectStorageItem = (function (_super) {
    __extends(ObjectStorageItem, _super);
    function ObjectStorageItem(model, dsHelperProvider, serializer) {
        return _super.call(this, $.extend({ '@ObjectType': 'DevExpress.XtraReports.Serialization.ObjectStorageInfo' }, model), dsHelperProvider, serializer) || this;
    }
    ObjectStorageItem.prototype._getInfo = function () {
        return _super.prototype.getInfo.call(this).concat([{ propertyName: 'content', modelName: '@Content' }, { propertyName: 'type', modelName: '@Type' },
            { propertyName: 'name', modelName: '@Name', defaultVal: '' }]);
    };
    ObjectStorageItem.prototype.preInitProperties = function (model) {
        var _this = this;
        this.getInfo = (model && model['@Base64']) ? function () {
            return _this._getInfo().concat({ propertyName: 'base64', modelName: '@Base64' });
        } : function () { return _this._getInfo(); };
    };
    ObjectStorageItem.prototype.isEmpty = function () {
        return this.type && this.type() === 'System.DateTime'
            && this.content && (this.content() === undefined || this.content() === null);
    };
    return ObjectStorageItem;
}(ObjectItem));
exports.ObjectStorageItem = ObjectStorageItem;
var ObjectStorageParameter = (function (_super) {
    __extends(ObjectStorageParameter, _super);
    function ObjectStorageParameter(model, serializer) {
        return _super.call(this, model, serializer, [{ propertyName: '_type', modelName: '@Type', link: true }, parameter_1.parameterLookUpSettingsSerializationInfo]) || this;
    }
    return ObjectStorageParameter;
}(analytics_elements_1.SerializableModel));
exports.ObjectStorageParameter = ObjectStorageParameter;
var parameter_1 = __webpack_require__(81);


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var exportOptions_1 = __webpack_require__(481);
var watermark_1 = __webpack_require__(188);
var metadata_1 = __webpack_require__(28);
var analytics_widgets_1 = __webpack_require__(4);
var metadata_2 = __webpack_require__(6);
var formattingrules_1 = __webpack_require__(36);
var scriptMetadata_1 = __webpack_require__(13);
var metadataGroups_1 = __webpack_require__(11);
var analytics_utils_1 = __webpack_require__(0);
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var editorTemplates_1 = __webpack_require__(9);
var analytics_widgets_internal_1 = __webpack_require__(8);
exports.paperKind = {
    propertyName: 'paperKind', modelName: '@PaperKind', localizable: true, defaultVal: 'Letter', displayName: 'Paper Kind', localizationId: 'DevExpress.XtraReports.UI.XtraReport.PaperKind',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'A2', displayValue: 'A2', localizationId: 'System.Drawing.Printing.PaperKind.A2' },
        { value: 'A3', displayValue: 'A3', localizationId: 'System.Drawing.Printing.PaperKind.A3' },
        { value: 'A3Extra', displayValue: 'A3Extra', localizationId: 'System.Drawing.Printing.PaperKind.A3Extra' },
        { value: 'A3ExtraTransverse', displayValue: 'A3ExtraTransverse', localizationId: 'System.Drawing.Printing.PaperKind.A3ExtraTransverse' },
        { value: 'A3Rotated', displayValue: 'A3Rotated', localizationId: 'System.Drawing.Printing.PaperKind.A3Rotated' },
        { value: 'A3Transverse', displayValue: 'A3Transverse', localizationId: 'System.Drawing.Printing.PaperKind.A3Transverse' },
        { value: 'A4', displayValue: 'A4', localizationId: 'System.Drawing.Printing.PaperKind.A4' },
        { value: 'A4Extra', displayValue: 'A4Extra', localizationId: 'System.Drawing.Printing.PaperKind.A4Extra' },
        { value: 'A4Plus', displayValue: 'A4Plus', localizationId: 'System.Drawing.Printing.PaperKind.A4Plus' },
        { value: 'A4Rotated', displayValue: 'A4Rotated', localizationId: 'System.Drawing.Printing.PaperKind.A4Rotated' },
        { value: 'A4Small', displayValue: 'A4Small', localizationId: 'System.Drawing.Printing.PaperKind.A4Small' },
        { value: 'A4Transverse', displayValue: 'A4Transverse', localizationId: 'System.Drawing.Printing.PaperKind.A4Transverse' },
        { value: 'A5', displayValue: 'A5', localizationId: 'System.Drawing.Printing.PaperKind.A5' },
        { value: 'A5Extra', displayValue: 'A5Extra', localizationId: 'System.Drawing.Printing.PaperKind.A5Extra' },
        { value: 'A5Rotated', displayValue: 'A5Rotated', localizationId: 'System.Drawing.Printing.PaperKind.A5Rotated' },
        { value: 'A5Transverse', displayValue: 'A5Transverse', localizationId: 'System.Drawing.Printing.PaperKind.A5Transverse' },
        { value: 'A6', displayValue: 'A6', localizationId: 'System.Drawing.Printing.PaperKind.A6' },
        { value: 'A6Rotated', displayValue: 'A6Rotated', localizationId: 'System.Drawing.Printing.PaperKind.A6Rotated' },
        { value: 'APlus', displayValue: 'APlus', localizationId: 'System.Drawing.Printing.PaperKind.APlus' },
        { value: 'B4', displayValue: 'B4', localizationId: 'System.Drawing.Printing.PaperKind.B4' },
        { value: 'B4Envelope', displayValue: 'B4Envelope', localizationId: 'System.Drawing.Printing.PaperKind.B4Envelope' },
        { value: 'B4JisRotated', displayValue: 'B4JisRotated', localizationId: 'System.Drawing.Printing.PaperKind.B4JisRotated' },
        { value: 'B5', displayValue: 'B5', localizationId: 'System.Drawing.Printing.PaperKind.B5' },
        { value: 'B5Envelope', displayValue: 'B5Envelope', localizationId: 'System.Drawing.Printing.PaperKind.B5Envelope' },
        { value: 'B5Extra', displayValue: 'B5Extra', localizationId: 'System.Drawing.Printing.PaperKind.B5Extra' },
        { value: 'B5JisRotated', displayValue: 'B5JisRotated', localizationId: 'System.Drawing.Printing.PaperKind.B5JisRotated' },
        { value: 'B5Transverse', displayValue: 'B5Transverse', localizationId: 'System.Drawing.Printing.PaperKind.B5Transverse' },
        { value: 'B6Envelope', displayValue: 'B6Envelope', localizationId: 'System.Drawing.Printing.PaperKind.B6Envelope' },
        { value: 'B6Jis', displayValue: 'B6Jis', localizationId: 'System.Drawing.Printing.PaperKind.B6Jis' },
        { value: 'B6JisRotated', displayValue: 'B6JisRotated', localizationId: 'System.Drawing.Printing.PaperKind.B6JisRotated' },
        { value: 'BPlus', displayValue: 'BPlus', localizationId: 'System.Drawing.Printing.PaperKind.BPlus' },
        { value: 'C3Envelope', displayValue: 'C3Envelope', localizationId: 'System.Drawing.Printing.PaperKind.C3Envelope' },
        { value: 'C4Envelope', displayValue: 'C4Envelope', localizationId: 'System.Drawing.Printing.PaperKind.C4Envelope' },
        { value: 'C5Envelope', displayValue: 'C5Envelope', localizationId: 'System.Drawing.Printing.PaperKind.C5Envelope' },
        { value: 'C65Envelope', displayValue: 'C65Envelope', localizationId: 'System.Drawing.Printing.PaperKind.C65Envelope' },
        { value: 'C6Envelope', displayValue: 'C6Envelope', localizationId: 'System.Drawing.Printing.PaperKind.C6Envelope' },
        { value: 'CSheet', displayValue: 'CSheet', localizationId: 'System.Drawing.Printing.PaperKind.CSheet' },
        { value: 'Custom', displayValue: 'Custom', localizationId: 'System.Drawing.Printing.PaperKind.Custom' },
        { value: 'DLEnvelope', displayValue: 'DLEnvelope', localizationId: 'System.Drawing.Printing.PaperKind.DLEnvelope' },
        { value: 'DSheet', displayValue: 'DSheet', localizationId: 'System.Drawing.Printing.PaperKind.DSheet' },
        { value: 'ESheet', displayValue: 'ESheet', localizationId: 'System.Drawing.Printing.PaperKind.ESheet' },
        { value: 'Executive', displayValue: 'Executive', localizationId: 'System.Drawing.Printing.PaperKind.Executive' },
        { value: 'Folio', displayValue: 'Folio', localizationId: 'System.Drawing.Printing.PaperKind.Folio' },
        { value: 'GermanLegalFanfold', displayValue: 'GermanLegalFanfold', localizationId: 'System.Drawing.Printing.PaperKind.GermanLegalFanfold' },
        { value: 'GermanStandardFanfold', displayValue: 'GermanStandardFanfold', localizationId: 'System.Drawing.Printing.PaperKind.GermanStandardFanfold' },
        { value: 'InviteEnvelope', displayValue: 'InviteEnvelope', localizationId: 'System.Drawing.Printing.PaperKind.InviteEnvelope' },
        { value: 'IsoB4', displayValue: 'IsoB4', localizationId: 'System.Drawing.Printing.PaperKind.IsoB4' },
        { value: 'ItalyEnvelope', displayValue: 'ItalyEnvelope', localizationId: 'System.Drawing.Printing.PaperKind.ItalyEnvelope' },
        { value: 'JapaneseDoublePostcard', displayValue: 'JapaneseDoublePostcard', localizationId: 'System.Drawing.Printing.PaperKind.JapaneseDoublePostcard' },
        { value: 'JapaneseDoublePostcardRotated', displayValue: 'JapaneseDoublePostcardRotated', localizationId: 'System.Drawing.Printing.PaperKind.JapaneseDoublePostcardRotated' },
        { value: 'JapanesePostcard', displayValue: 'JapanesePostcard', localizationId: 'System.Drawing.Printing.PaperKind.JapanesePostcard' },
        { value: 'Ledger', displayValue: 'Ledger', localizationId: 'System.Drawing.Printing.PaperKind.Ledger' },
        { value: 'Legal', displayValue: 'Legal', localizationId: 'System.Drawing.Printing.PaperKind.Legal' },
        { value: 'LegalExtra', displayValue: 'LegalExtra', localizationId: 'System.Drawing.Printing.PaperKind.LegalExtra' },
        { value: 'Letter', displayValue: 'Letter', localizationId: 'System.Drawing.Printing.PaperKind.Letter' },
        { value: 'LetterExtra', displayValue: 'LetterExtra', localizationId: 'System.Drawing.Printing.PaperKind.LetterExtra' },
        { value: 'LetterExtraTransverse', displayValue: 'LetterExtraTransverse', localizationId: 'System.Drawing.Printing.PaperKind.LetterExtraTransverse' },
        { value: 'LetterPlus', displayValue: 'LetterPlus', localizationId: 'System.Drawing.Printing.PaperKind.LetterPlus' },
        { value: 'LetterRotated', displayValue: 'LetterRotated', localizationId: 'System.Drawing.Printing.PaperKind.LetterRotated' },
        { value: 'LetterSmall', displayValue: 'LetterSmall', localizationId: 'System.Drawing.Printing.PaperKind.LetterSmall' },
        { value: 'LetterTransverse', displayValue: 'LetterTransverse', localizationId: 'System.Drawing.Printing.PaperKind.LetterTransverse' },
        { value: 'MonarchEnvelope', displayValue: 'MonarchEnvelope', localizationId: 'System.Drawing.Printing.PaperKind.MonarchEnvelope' },
        { value: 'Note', displayValue: 'Note', localizationId: 'System.Drawing.Printing.PaperKind.Note' },
        { value: 'Number10Envelope', displayValue: 'Number10Envelope', localizationId: 'System.Drawing.Printing.PaperKind.Number10Envelope' },
        { value: 'Number11Envelope', displayValue: 'Number11Envelope', localizationId: 'System.Drawing.Printing.PaperKind.Number11Envelope' },
        { value: 'Number12Envelope', displayValue: 'Number12Envelope', localizationId: 'System.Drawing.Printing.PaperKind.Number12Envelope' },
        { value: 'Number14Envelope', displayValue: 'Number14Envelope', localizationId: 'System.Drawing.Printing.PaperKind.Number14Envelope' },
        { value: 'Number9Envelope', displayValue: 'Number9Envelope', localizationId: 'System.Drawing.Printing.PaperKind.Number9Envelope' },
        { value: 'PersonalEnvelope', displayValue: 'PersonalEnvelope', localizationId: 'System.Drawing.Printing.PaperKind.PersonalEnvelope' },
        { value: 'Prc16K', displayValue: 'Prc16K', localizationId: 'System.Drawing.Printing.PaperKind.Prc16K' },
        { value: 'Prc16KRotated', displayValue: 'Prc16KRotated', localizationId: 'System.Drawing.Printing.PaperKind.Prc16KRotated' },
        { value: 'Prc32K', displayValue: 'Prc32K', localizationId: 'System.Drawing.Printing.PaperKind.Prc32K' },
        { value: 'Prc32KBig', displayValue: 'Prc32KBig', localizationId: 'System.Drawing.Printing.PaperKind.Prc32KBig' },
        { value: 'Prc32KBigRotated', displayValue: 'Prc32KBigRotated', localizationId: 'System.Drawing.Printing.PaperKind.Prc32KBigRotated' },
        { value: 'Prc32KRotated', displayValue: 'Prc32KRotated', localizationId: 'System.Drawing.Printing.PaperKind.Prc32KRotated' },
        { value: 'PrcEnvelopeNumber1', displayValue: 'PrcEnvelopeNumber1', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1' },
        { value: 'PrcEnvelopeNumber10', displayValue: 'PrcEnvelopeNumber10', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10' },
        { value: 'PrcEnvelopeNumber10Rotated', displayValue: 'PrcEnvelopeNumber10Rotated', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10Rotated' },
        { value: 'PrcEnvelopeNumber1Rotated', displayValue: 'PrcEnvelopeNumber1Rotated', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1Rotated' },
        { value: 'PrcEnvelopeNumber2', displayValue: 'PrcEnvelopeNumber2', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2' },
        { value: 'PrcEnvelopeNumber2Rotated', displayValue: 'PrcEnvelopeNumber2Rotated', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2Rotated' },
        { value: 'PrcEnvelopeNumber3', displayValue: 'PrcEnvelopeNumber3', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3' },
        { value: 'PrcEnvelopeNumber3Rotated', displayValue: 'PrcEnvelopeNumber3Rotated', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3Rotated' },
        { value: 'PrcEnvelopeNumber4', displayValue: 'PrcEnvelopeNumber4', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4' },
        { value: 'PrcEnvelopeNumber4Rotated', displayValue: 'PrcEnvelopeNumber4Rotated', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4Rotated' },
        { value: 'PrcEnvelopeNumber5', displayValue: 'PrcEnvelopeNumber5', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5' },
        { value: 'PrcEnvelopeNumber5Rotated', displayValue: 'PrcEnvelopeNumber5Rotated', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5Rotated' },
        { value: 'PrcEnvelopeNumber6', displayValue: 'PrcEnvelopeNumber6', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6' },
        { value: 'PrcEnvelopeNumber6Rotated', displayValue: 'PrcEnvelopeNumber6Rotated', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6Rotated' },
        { value: 'PrcEnvelopeNumber7', displayValue: 'PrcEnvelopeNumber7', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7' },
        { value: 'PrcEnvelopeNumber7Rotated', displayValue: 'PrcEnvelopeNumber7Rotated', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7Rotated' },
        { value: 'PrcEnvelopeNumber8', displayValue: 'PrcEnvelopeNumber8', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8' },
        { value: 'PrcEnvelopeNumber8Rotated', displayValue: 'PrcEnvelopeNumber8Rotated', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8Rotated' },
        { value: 'PrcEnvelopeNumber9', displayValue: 'PrcEnvelopeNumber9', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9' },
        { value: 'PrcEnvelopeNumber9Rotated', displayValue: 'PrcEnvelopeNumber9Rotated', localizationId: 'System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9Rotated' },
        { value: 'Quarto', displayValue: 'Quarto', localizationId: 'System.Drawing.Printing.PaperKind.Quarto' },
        { value: 'Standard10x11', displayValue: 'Standard10x11', localizationId: 'System.Drawing.Printing.PaperKind.Standard10x11' },
        { value: 'Standard10x14', displayValue: 'Standard10x14', localizationId: 'System.Drawing.Printing.PaperKind.Standard10x14' },
        { value: 'Standard11x17', displayValue: 'Standard11x17', localizationId: 'System.Drawing.Printing.PaperKind.Standard11x17' },
        { value: 'Standard12x11', displayValue: 'Standard12x11', localizationId: 'System.Drawing.Printing.PaperKind.Standard12x11' },
        { value: 'Standard15x11', displayValue: 'Standard15x11', localizationId: 'System.Drawing.Printing.PaperKind.Standard15x11' },
        { value: 'Standard9x11', displayValue: 'Standard9x11', localizationId: 'System.Drawing.Printing.PaperKind.Standard9x11' },
        { value: 'Statement', displayValue: 'Statement', localizationId: 'System.Drawing.Printing.PaperKind.Statement' },
        { value: 'Tabloid', displayValue: 'Tabloid', localizationId: 'System.Drawing.Printing.PaperKind.Tabloid' },
        { value: 'TabloidExtra', displayValue: 'TabloidExtra', localizationId: 'System.Drawing.Printing.PaperKind.TabloidExtra' },
        { value: 'USStandardFanfold', displayValue: 'USStandardFanfold', localizationId: 'System.Drawing.Printing.PaperKind.USStandardFanfold' }
    ]
};
exports.landscape = { propertyName: 'landscape', modelName: '@Landscape', displayName: 'Landscape', localizationId: 'DevExpress.XtraReports.UI.XtraReport.Landscape', defaultVal: false, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.margins = { propertyName: 'margins', modelName: '@Margins', localizable: true, from: analytics_elements_1.Margins.fromString, displayName: 'Margins', localizationId: 'DevExpress.XtraReports.UI.XtraReport.Margins', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.pageColor = { propertyName: 'pageColor', modelName: '@PageColor', defaultVal: 'White', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, displayName: 'Page Color', localizationId: 'DevExpress.XtraReports.UI.XtraReport.PageColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') };
exports.measureUnit = {
    propertyName: 'measureUnit',
    modelName: '@ReportUnit', defaultVal: 'HundredthsOfAnInch', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'Measure Units', localizationId: 'DevExpress.XtraReports.UI.XtraReport.ReportUnit', from: analytics_utils_1.fromEnum,
    valuesArray: [
        { value: 'HundredthsOfAnInch', displayValue: 'Hundredths of an Inch', localizationId: 'DevExpress.XtraReports.UI.ReportUnit.HundredthsOfAnInch' },
        { value: 'TenthsOfAMillimeter', displayValue: 'Tenths of a Millimeter', localizationId: 'DevExpress.XtraReports.UI.ReportUnit.TenthsOfAMillimeter' },
        { value: 'Pixels', displayValue: 'Pixels', localizationId: 'DevExpress.XtraReports.UI.ReportUnit.Pixels' }
    ]
};
exports.snapGridSize = { propertyName: 'snapGridSize', modelName: '@SnapGridSize', defaultVal: 12.5, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), editorOptions: { min: 0.1 }, displayName: 'Snap Grid Size', localizationId: 'DevExpress.XtraReports.UI.XtraReport.SnapGridSize' };
exports.drawWatermark = { propertyName: 'drawWatermark', modelName: '@DrawWatermark', displayName: 'Draw the Watermark', localizationId: 'DevExpress.XtraReports.UI.XtraReport.DrawWatermark', defaultVal: false, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.showPreviewMarginLines = { propertyName: 'showPreviewMarginLines', modelName: '@ShowPreviewMarginLines', displayName: 'Show Margin Lines in Preview', localizationId: 'DevExpress.XtraReports.UI.XtraReport.ShowPreviewMarginLines', defaultVal: true, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.verticalContentSplitting = {
    propertyName: 'verticalContentSplitting',
    modelName: '@VerticalContentSplitting', displayName: 'Vertical Content Splitting', localizationId: 'DevExpress.XtraReports.UI.XtraReport.VerticalContentSplitting', defaultVal: 'Exact', from: analytics_utils_1.fromEnum,
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        { value: 'Exact', displayValue: 'Exact', localizationId: 'DevExpress.XtraPrinting.VerticalContentSplitting.Exact' },
        { value: 'Smart', displayValue: 'Smart', localizationId: 'DevExpress.XtraPrinting.VerticalContentSplitting.Smart' }
    ]
};
exports.reportExportOptionsSerializationInfo = { propertyName: 'exportOptions', modelName: 'ExportOptions', displayName: 'Export Options', localizationId: 'DevExpress.XtraReports.UI.XtraReport.ExportOptions', from: exportOptions_1.ExportOptions.from, toJsonObject: exportOptions_1.ExportOptions.toJson, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.watermark = { propertyName: 'watermark', modelName: 'Watermark', displayName: 'Watermark', localizationId: 'DevExpress.XtraReports.UI.XtraReport.Watermark', info: watermark_1.watermarkSerializationsInfo, asRef: true, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.rollPaper = { propertyName: 'rollPaper', modelName: '@RollPaper', displayName: 'Roll Paper', localizationId: 'DevExpress.XtraReports.UI.XtraReport.RollPaper', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool };
exports.requestParameters = { propertyName: 'requestParameters', modelName: '@RequestParameters', displayName: 'Request Parameters', localizationId: 'DevExpress.XtraReports.UI.XtraReport.RequestParameters', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool };
exports.formattingRuleSheet = { propertyName: 'formattingRuleSheet', modelName: 'FormattingRuleSheet', displayName: 'Formatting Rule Sheet', localizationId: 'DevExpress.XtraReports.UI.XtraReport.FormattingRuleSheet', array: true };
exports.pageWidth = { propertyName: 'pageWidth', modelName: '@PageWidth', displayName: 'Page Width', localizationId: 'DevExpress.XtraReports.UI.XtraReport.PageWidth', defaultVal: -1, from: analytics_utils_1.floatFromModel, toJsonObject: analytics_utils_1.saveAsInt, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.pageHeight = { propertyName: 'pageHeight', modelName: '@PageHeight', displayName: 'Page Height', localizationId: 'DevExpress.XtraReports.UI.XtraReport.PageHeight', defaultVal: -1, from: analytics_utils_1.floatFromModel, toJsonObject: analytics_utils_1.saveAsInt, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.localizationItems = { propertyName: '_localizationItems', modelName: 'LocalizationItems', array: true };
exports.language = {
    propertyName: 'language', displayName: 'Language', defaultVal: metadata_1.defaultCulture, localizationId: 'DevExpress.XtraReports.UI.XtraReport.XRLanguage', localizable: true, editor: editorTemplates_1.designerEditorTemplates.getEditor('localizationSelectBox'), values: metadata_1.availableCultures
};
exports.scriptLanguage = {
    propertyName: 'scriptLanguage', modelName: '@ScriptLanguage', displayName: 'Script Language', localizationId: 'DevExpress.XtraReports.UI.XtraReport.ScriptLanguage', defaultVal: 'CSharp', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        { value: 'CSharp', displayValue: 'C#', localizationId: 'DevExpress.XtraReports.ScriptLanguage.CSharp' },
        { value: 'VisualBasic', displayValue: 'Visual Basic', localizationId: 'DevExpress.XtraReports.ScriptLanguage.VisualBasic' },
        { value: 'JScript', displayValue: 'JScript', localizationId: 'DevExpress.XtraReports.ScriptLanguage.JScript' }
    ]
};
exports.scriptReferencesString = { propertyName: 'scriptReferencesString', modelName: '@ScriptReferencesString', defaultVal: '', displayName: 'Script References', localizationId: 'DevExpress.XtraReports.UI.XtraReport.ScriptReferences', editor: analytics_widgets_1.editorTemplates.getEditor('stringArray') };
exports.calculatedFields = {
    propertyName: 'calculatedFields', modelName: 'CalculatedFields', displayName: 'Calculated Fields', localizationId: 'DevExpress.XtraReports.UI.XtraReport.CalculatedFields', array: true,
    template: '#dxrd-collectionItemWithAccordion',
    editor: editorTemplates_1.designerEditorTemplates.getEditor('calculatedFields')
};
exports.parametersInfo = {
    propertyName: 'parameters', modelName: 'Parameters', displayName: 'Parameters', localizationId: 'DevExpress.XtraReports.UI.XtraReport.Parameters', array: true,
    template: '#dxrd-collectionItemWithAccordion',
    editor: editorTemplates_1.designerEditorTemplates.getEditor('parameters')
};
exports.bookmarkDuplicateSuppress = { propertyName: 'bookmarkDuplicateSuppress', modelName: '@BookmarkDuplicateSuppress', displayName: 'Bookmark Duplicate Suppress', localizationId: 'DevExpress.XtraReports.UI.XtraReport.BookmarkDuplicateSuppress', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool };
exports.horizontalContentSplitting = {
    propertyName: 'horizontalContentSplitting', modelName: '@HorizontalContentSplitting', displayName: 'Horizontal Content Splitting', localizationId: 'DevExpress.XtraReports.UI.XtraReport.HorizontalContentSplitting', defaultVal: 'Exact', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        { value: 'Exact', displayValue: 'Exact', localizationId: 'DevExpress.XtraPrinting.HorizontalContentSplitting.Exact' },
        { value: 'Smart', displayValue: 'Smart', localizationId: 'DevExpress.XtraPrinting.HorizontalContentSplitting.Smart' }
    ]
};
exports.rtlLayout = {
    propertyName: 'rtlLayout', modelName: '@RightToLeftLayout', displayName: 'Right To Left Layout', localizationId: 'DevExpress.XtraReports.UI.XtraReport.RightToLeftLayout', defaultVal: 'No', editor: editorTemplates_1.designerEditorTemplates.getEditor('reportRtlProperty'),
    valuesArray: [
        { value: 'No', displayValue: 'No', localizationId: 'DevExpress.XtraReports.UI.RightToLeftLayout.No' },
        { value: 'Yes', displayValue: 'Yes', localizationId: 'DevExpress.XtraReports.UI.RightToLeftLayout.Yes' }
    ]
};
exports.rtlReport = analytics_internal_1.extend({}, metadata_2.rtl, { defaultVal: 'No', editor: editorTemplates_1.designerEditorTemplates.getEditor('reportRtlProperty') });
exports.reportSerializationInfo = [
    analytics_internal_1.extend({}, metadata_2.backColor, { defaultVal: 'transparent' }),
    analytics_internal_1.extend({}, metadata_2.foreColor, { defaultVal: 'Black' }),
    analytics_internal_1.extend({}, metadata_2.borderColor, { defaultVal: 'Black' }),
    analytics_internal_1.extend({}, metadata_2.expressionableFont, { defaultVal: analytics_widgets_internal_1.defaultFontSerialization() }),
    analytics_internal_1.extend({}, metadata_2.textAlignment, { defaultVal: 'TopLeft' }),
    analytics_internal_1.extend({}, metadata_2.borderWidth, { defaultVal: 1 }),
    analytics_internal_1.extend({}, metadata_2.borderDashStyle, { defaultVal: 'Solid' }),
    analytics_internal_1.extend({}, metadata_2.borders, { defaultVal: 'None' }),
    { propertyName: 'size', visible: false },
    exports.landscape,
    exports.paperKind,
    exports.pageColor,
    metadata_2.bookmark,
    exports.margins, exports.rollPaper, exports.requestParameters,
    exports.measureUnit,
    exports.snapGridSize,
    exports.drawWatermark,
    exports.watermark,
    metadata_2.displayName, exports.verticalContentSplitting, exports.showPreviewMarginLines,
    exports.calculatedFields,
    { propertyName: 'scriptsSource', modelName: '@ScriptsSource' },
    exports.pageWidth,
    exports.pageHeight,
    exports.language,
    exports.localizationItems,
    {
        propertyName: 'bands',
        modelName: 'Bands',
        array: true
    },
    { propertyName: 'crossBandControls', modelName: 'CrossBandControls', array: true },
    { propertyName: 'styles', modelName: 'StyleSheet', array: true },
    { propertyName: '_objectStorage', modelName: 'ObjectStorage', array: true },
    { propertyName: '_componentStorage', modelName: 'ComponentStorage', array: true },
    { propertyName: 'objectStorage' },
    { propertyName: 'extensions', modelName: 'Extensions', array: true },
    { propertyName: 'parameterPanelLayoutItems', modelName: 'ParameterPanelLayoutItems', array: true },
    exports.formattingRuleSheet,
    formattingrules_1.formattingRuleLinks,
    exports.parametersInfo,
    { propertyName: 'version', modelName: '@Version' },
    exports.reportExportOptionsSerializationInfo, scriptMetadata_1.reportScripts, exports.scriptLanguage, exports.scriptReferencesString,
    exports.rtlReport, exports.rtlLayout, exports.bookmarkDuplicateSuppress, exports.horizontalContentSplitting
].concat(metadataGroups_1.baseControlProperties, metadataGroups_1.datasourcePrintOptionsGroup, metadata_2.paddingGroup);
exports.popularPropertiesReport = ['dataSource', 'dataMember', 'filterString', 'measureUnit', exports.language.propertyName];


/***/ }),
/* 40 */
/***/ (function(module, exports) {

module.exports = DevExpress.Reporting;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var lookupSettings_1 = __webpack_require__(85);
var rangeSettings_1 = __webpack_require__(83);
var universalDataSource_1 = __webpack_require__(179);
var dataFederation_1 = __webpack_require__(55);
var objectStorageItem_1 = __webpack_require__(38);
function createNewObjectItem(model, dsHelperProvider, serializer) {
    var objectType = model['@ObjectType'] || '';
    if (objectType.indexOf('StaticListLookUpSettings') !== -1) {
        return new lookupSettings_1.StaticListLookUpSettings(model, dsHelperProvider, serializer);
    }
    else if (objectType.indexOf('DynamicListLookUpSettings') !== -1) {
        return new lookupSettings_1.DynamicListLookUpSettings(model, dsHelperProvider, serializer);
    }
    else if (objectType.indexOf('RangeParametersSettings') !== -1) {
        return new rangeSettings_1.RangeParametersSettings(model, dsHelperProvider, serializer);
    }
    else if (objectType.indexOf('RangeStartParameter') !== -1) {
        return new rangeSettings_1.RangeStartParameter(model, dsHelperProvider, serializer);
    }
    else if (objectType.indexOf('RangeEndParameter') !== -1) {
        return new rangeSettings_1.RangeEndParameter(model, dsHelperProvider, serializer);
    }
    else if (objectType.indexOf('ReportServer') !== -1 && model['@ObjectType'].indexOf('DataSource') !== -1) {
        return new universalDataSource_1.UniversalDataSource(model, dsHelperProvider, serializer);
    }
    else if (objectType.indexOf('DataFederation') !== -1) {
        return new dataFederation_1.DataFederationDataSource(model, dsHelperProvider, serializer);
    }
    return new objectStorageItem_1.ObjectStorageItem(model, dsHelperProvider, serializer);
}
exports.createNewObjectItem = createNewObjectItem;


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _subreportUtils_1 = __webpack_require__(296);
var parameter_1 = __webpack_require__(29);
var style_1 = __webpack_require__(37);
var formattingrules_1 = __webpack_require__(45);
var components_1 = __webpack_require__(128);
var $ = __webpack_require__(3);
function recalculateUnit(value, dpi) {
    return Math.round(value * dpi) / 100;
}
exports.recalculateUnit = recalculateUnit;
exports.PromptBoolean = {
    'False': 'False',
    'True': 'True',
    'Prompt': 'Prompt'
};
function correctModel(model) {
    if (Array.isArray(model)) {
        for (var i = 0; i < model.length; i++) {
            if (model[i]['@Ref'] !== undefined) {
                model = model[i];
                break;
            }
        }
    }
    else {
        Object.keys(model).forEach(function (name) {
            if (model[name] instanceof Object)
                model[name] = correctModel(model[name]);
        });
    }
    return model;
}
exports.correctModel = correctModel;
function createReportViewModel(newReportInfo, oldReport) {
    var reportModel = JSON.parse(newReportInfo.reportModel);
    var report = new xrReport_1.ReportViewModel(reportModel);
    if (oldReport) {
        var nextRef = Math.max.apply(Math, report.objectStorage().map(function (data) { return parseInt(data['_model']['@Ref']); })) + 1;
        oldReport.dsHelperProvider().usedDataSources()
            .filter(function (dsInfo) { return !!dsInfo.data && !newReportInfo.dataSourceRefs.some(function (ref) { return ref.name === dsInfo.name; }); })
            .forEach(function (dsInfo) {
            dsInfo.data['_model']['@Ref'] = nextRef.toString();
            newReportInfo.dataSourceRefs.push({
                name: dsInfo.name,
                ref: nextRef.toString(),
                isSqlDataSource: dsInfo.isSqlDataSource,
                isJsonDataSource: dsInfo.isJsonDataSource,
                isObjectDataSource: dsInfo.isObjectDataSource,
                dataSerializer: dsInfo.dataSerializer,
                hasParams: dsInfo['hasParams']
            });
            report.objectStorage.push(dsInfo.data);
            nextRef++;
        });
    }
    report.dataSourceRefs = newReportInfo.dataSourceRefs;
    return report;
}
exports.createReportViewModel = createReportViewModel;
function updateDataSourceRefs(report, dataSourceRefs) {
    var getDataSourceRefs = function (key) {
        var resultRefs = (dataSourceRefs || []).filter(function (ds) { return ds.Key === key; })[0];
        return resultRefs && resultRefs.Value || [];
    };
    report.dataSourceRefs = getDataSourceRefs(report.key());
    var subreportControls = _subreportUtils_1.subreportControlCollector(report);
    subreportControls.forEach(function (subreport) {
        if (subreport.reportSource) {
            subreport.reportSource.dataSourceRefs = getDataSourceRefs(subreport.key());
        }
    });
}
exports.updateDataSourceRefs = updateDataSourceRefs;
function isNotParameter(control) {
    return !(control instanceof parameter_1.Parameter);
}
exports.isNotParameter = isNotParameter;
function isControl(control) {
    return isNotParameter(control) && !(control instanceof style_1.StyleModel || control instanceof formattingrules_1.FormattingRule || control instanceof components_1.ComponentsModel || control instanceof calculatedField_1.CalculatedField);
}
exports.isControl = isControl;
function updateSurfaceContentSizeLocalizationMode(surfaceSize, root, rtl) {
    return function () {
        var $root = $(root).find('.dxrd-designer').eq(0);
        var leftLocalizationPanel = $(root).find('.dxrd-left-localization-panel:visible').outerWidth() || 0;
        var otherWidth = leftLocalizationPanel + 50;
        var surfaceWidth = $root.width() - (otherWidth);
        $root.find('.dxrd-surface-wrapper').eq(0).css({
            'left': rtl ? '50px' : otherWidth,
            'right': !rtl ? otherWidth : '50px',
            'width': surfaceWidth,
            'bottom': 0
        });
        surfaceSize(surfaceWidth);
    };
}
exports.updateSurfaceContentSizeLocalizationMode = updateSurfaceContentSizeLocalizationMode;
var xrReport_1 = __webpack_require__(16);
var calculatedField_1 = __webpack_require__(64);


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var _tableComponentSurface_1 = __webpack_require__(196);
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var editOptions_1 = __webpack_require__(90);
var XRTableCellViewModel = (function (_super) {
    __extends(XRTableCellViewModel, _super);
    function XRTableCellViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, parent, serializer) || this;
        _this._disposables.push(_this.width = ko.pureComputed({
            read: function () {
                var result = parent.width() * _this.weight() / parent.cellsTotalWeight();
                return analytics_internal_1.roundingXDecimals(result, false, 3);
            },
            write: function (newWidth) {
                var currentIndex = parent.cells().indexOf(_this);
                if (parent.hasCalculationNode(currentIndex))
                    return;
                var diff = newWidth - _this.width();
                if (currentIndex < parent.cells().length - 1) {
                    parent.addCellToCalculation(currentIndex, diff);
                    parent.addCellToCalculation(currentIndex + 1, diff * -1);
                }
                else {
                    parent.addColumnToCalculation(diff, true);
                    parent.addTableOffset(diff);
                }
            }
        }).extend({ deferred: true }));
        _this.textEditOptions = new editOptions_1.ContainerEditOptions(model['EditOptions'] || {}, _this, serializer);
        _this.height = parent.height;
        _this.size = new analytics_elements_1.Size(0, 0);
        _this.size.isPropertyDisabled = function (name) { return name === 'height'; };
        _this._disposables.push(_this.size.height = ko.pureComputed({ read: function () { return _this.height(); }, write: function (newVal) { if (analytics_internal_1.checkModelReady(_this.root)) {
                _this.height(newVal);
            } } }));
        _this._disposables.push(_this.size.width = ko.pureComputed({ read: function () { return _this.width(); }, write: function (newVal) { if (analytics_internal_1.checkModelReady(_this.root)) {
                _this.width(newVal);
            } } }));
        _this._disposables.push(_this.controls.subscribe(function (value) { return value.length > 0 && _this.textEditOptions.enabled(false); }));
        _this._disposables.push(_this.left = ko.pureComputed({
            read: function () {
                var index = parent.cells().indexOf(_this);
                if (index > 0) {
                    var previousCell = parent.cells()[index - 1];
                    return previousCell.left() + previousCell.width();
                }
                else {
                    return 0;
                }
            },
            write: function (val) {
                if (val === _this.left())
                    return;
                var index = parent.cells().indexOf(_this);
                var diff = val - _this.left();
                if (index > 0) {
                    parent.addCellToCalculation(index - 1, diff);
                    parent.addCellToCalculation(index, diff * -1);
                }
                else {
                    parent.addColumnToCalculation(diff * -1);
                    parent.addTableOffset(diff * -1, diff);
                }
            }
        }).extend({ deferred: true }));
        return _this;
    }
    XRTableCellViewModel.unitProperties = ['paddingObj'];
    return XRTableCellViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRTableCellViewModel = XRTableCellViewModel;
var XRTableCellSurface = (function (_super) {
    __extends(XRTableCellSurface, _super);
    function XRTableCellSurface(control, context) {
        var _this = _super.call(this, control, context, XRTableCellSurface._unitProperties) || this;
        _this._row = _this.parent.getControlModel();
        _this._table = _this._row.parentModel();
        _this._cellIndex = function () { return _this._row.cells().indexOf(_this.getControlModel()); };
        _this._rowIndex = function () { return _this._table.rows().indexOf(_this._row); };
        _this.direction = _tableComponentSurface_1.TableActionDirection.horizontal;
        _this['multiline'] = control['multiline'];
        _this._disposables.push(_this.contentSizes = ko.pureComputed(function () {
            if (_this._isShowBorder('Left')) {
                return _this.cssCalculator.contentSizeCss(_this.rect().width, _this.heightWithRowSpan(), _this._context.zoom());
            }
            var bordersArray = control.borders().indexOf('All') === -1 ? control.borders().split(/\s*,\s*/g) : ['Left', 'Top', 'Right', 'Bottom'];
            var index = bordersArray.indexOf('Left');
            var width = _this.rect().width;
            if (index !== -1) {
                bordersArray.splice(index, 1);
                width += 1;
            }
            return _this.cssCalculator.contentSizeCss(width, _this.heightWithRowSpan(), _this._context.zoom(), bordersArray.join(','));
        }));
        _this._disposables.push(_this.css = ko.pureComputed(function () {
            var bottom = _this.cssCalculator.cellBorder('Bottom', _this._context.zoom());
            var right = _this.cssCalculator.cellBorder('Right', _this._context.zoom());
            var left = _this._isShowBorder('Left') ? _this.cssCalculator.cellBorder('Left', _this._context.zoom()) : _this.cssCalculator.createControlBorder('', 0, 'transparent', ['Left'], 'Left');
            var top = _this._isShowBorder('Top') ? _this.cssCalculator.cellBorder('Top', _this._context.zoom()) : { borderTop: '' };
            return $.extend({}, _this.cssCalculator.fontCss(), _this.cssCalculator.backGroundCss(), right, bottom, top, left, _this.cssCalculator.foreColorCss(), _this.cssCalculator.textAlignmentCss());
        }));
        _this._disposables.push(_this.rowSpan = ko.pureComputed(function () {
            if (_this.controls().length > 0) {
                return 1;
            }
            for (var i = 1; i <= _this._rowIndex() && _this._rowIndex() - i >= 0; i++) {
                var cell = _this._getAdjacentCellByRowIndex(_this._rowIndex() - i);
                if (cell && cell.surface.rowSpan() > i)
                    return 0;
            }
            var rowSpan = control['rowSpan']();
            var lastRowSpan = 1;
            var rowCount = _this._table.rows().length;
            for (var i = 1; i < rowSpan && i + _this._rowIndex() < rowCount; i++, lastRowSpan++) {
                var nextCell = _this._getAdjacentCellByRowIndex(_this._rowIndex() + i);
                if (nextCell && (nextCell.width() != control.width() || nextCell['rowSpan']() > 1 || nextCell.controls().length > 0)) {
                    return lastRowSpan;
                }
            }
            return lastRowSpan;
        }));
        _this._disposables.push(_this.heightWithRowSpan = ko.pureComputed(function () {
            var _height = _this.rect().height;
            if (_this.rowSpan() > 1) {
                for (var i = 1; i < _this.rowSpan(); i++) {
                    var cell = _this._getAdjacentCellByRowIndex(_this._rowIndex() + i);
                    if (cell && cell.surface)
                        _height += cell.surface.rect().height;
                }
            }
            else if (_this.rowSpan() === 0) {
                return 0;
            }
            return _height;
        }));
        _this.offsetZIndex = function () {
            var hasRowSpan = _this.rowSpan() > 1;
            return hasRowSpan && (_this.selected() || _this.focused()) && 2 || hasRowSpan && 1 || null;
        };
        _this.getUsefulRect = function () {
            var borderWidth = ko.unwrap(control['borderWidth']), borderFlags = control.borders();
            var rect = { top: 0, left: 0, width: _this.rect().width, height: _this.rect().height };
            if (borderWidth) {
                var allBorders = borderFlags === 'All';
                if ((allBorders || borderFlags.indexOf('Top') >= 0) && _this._isShowBorder('Top')) {
                    rect.top += borderWidth;
                    rect.height -= borderWidth;
                }
                if (allBorders || borderFlags.indexOf('Right') >= 0)
                    rect.width -= borderWidth;
                if (allBorders || borderFlags.indexOf('Bottom') >= 0)
                    rect.height -= borderWidth;
                if ((allBorders || borderFlags.indexOf('Left') >= 0) && _this._isShowBorder('Left')) {
                    rect.left += borderWidth;
                    rect.width -= borderWidth;
                }
            }
            return rect;
        };
        return _this;
    }
    XRTableCellSurface.prototype._getAdjacentCellByRowIndex = function (rowIndex) {
        var nextRow = this._table.rows()[rowIndex];
        return nextRow && nextRow.cells && nextRow.cells()[this._cellIndex()];
    };
    XRTableCellSurface.prototype._isShowBorder = function (side) {
        if (side === 'Top') {
            var prevCell = this._getAdjacentCellByRowIndex(this._rowIndex() - 1);
            var borders = prevCell && prevCell['borders']();
            return (this._rowIndex() === 0) || (borders && borders !== 'All' && borders.indexOf('Bottom') === -1);
        }
        if (side === 'Left') {
            var prevCell = this._row.cells()[this._cellIndex() - 1], borders = prevCell && prevCell.borders();
            return (this._cellIndex() === 0) || (borders && borders !== 'All' && borders.indexOf('Right') === -1);
        }
    };
    XRTableCellSurface.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.controls);
        this.resetObservableArray(this.controls);
    };
    XRTableCellSurface.prototype.selectColumn = function (selection) {
        (this.parent.parent).selectColumn(selection, this);
    };
    XRTableCellSurface.prototype.checkParent = function (surfaceParent) {
        return this.parent.parent === surfaceParent;
    };
    XRTableCellSurface.prototype.isThereIntersectionWithUsefulArea = function () {
        return false;
    };
    XRTableCellSurface.prototype.isThereIntersectionWithCrossBandControls = function () {
        return false;
    };
    XRTableCellSurface.prototype.isThereIntersectionWithNeighborsCollection = function () {
        return false;
    };
    XRTableCellSurface.prototype.isThereIntersectionWithParentCollection = function () {
        return false;
    };
    XRTableCellSurface.prototype.beforeRectUpdated = function (rect) {
        var _rowSpan = this.rowSpan.peek();
        for (var i = 1; i < _rowSpan; i++) {
            var nextCell = this._getAdjacentCellByRowIndex(this._rowIndex() + i);
            nextCell && nextCell.surface.rect(rect);
        }
        return _super.prototype.beforeRectUpdated.call(this, rect);
    };
    XRTableCellSurface.prototype.canDrop = function () {
        return _super.prototype.canDrop.call(this) && this.rowSpan() === 1;
    };
    XRTableCellSurface.prototype.getAdornTemplate = function () {
        var result = _super.prototype.getAdornTemplate.call(this);
        result = xrControl_1.XRControlSurface._appendValue(result, 'dxrd-surface-hidden', !this._control['visible']() || (this._control.parentModel() && !this._control.parentModel()['visible']()));
        return result;
    };
    XRTableCellSurface._unitProperties = {
        _height: function (o) {
            return o.height;
        },
        _width: function (o) {
            return o.width;
        },
        _x: function (o) {
            return o.left;
        }
    };
    return XRTableCellSurface;
}(_tableComponentSurface_1.TableComponentSurface));
exports.XRTableCellSurface = XRTableCellSurface;


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _axis_1 = __webpack_require__(113);
var analytics_elements_1 = __webpack_require__(5);
var ChartElementCollectionItemBase = (function (_super) {
    __extends(ChartElementCollectionItemBase, _super);
    function ChartElementCollectionItemBase(model, parent, serializer, info) {
        var _this = _super.call(this, model, serializer, info) || this;
        _axis_1.initCollectionItem(_this, parent)();
        return _this;
    }
    ChartElementCollectionItemBase.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, null, refs);
    };
    return ChartElementCollectionItemBase;
}(analytics_elements_1.SerializableModel));
exports.ChartElementCollectionItemBase = ChartElementCollectionItemBase;


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var customFunctions_1 = __webpack_require__(80);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var FormattingRule = (function (_super) {
    __extends(FormattingRule, _super);
    function FormattingRule(model, parent, serializer) {
        var _this = _super.call(this) || this;
        _this.className = function () {
            return 'formattingrule';
        };
        _this.controlType = 'XRFormattingRule';
        _this.selected = ko.observable(false);
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(_this, model);
        _this.parent = parent || null;
        var path = ko.pureComputed(function () {
            var dsPath = _this.getPath('');
            if (!!dsPath) {
                return analytics_internal_1.getFullPath(dsPath, _this.dataMember() || parent.dataMember());
            }
            else {
                return dsPath;
            }
        });
        _this._disposables.push(path);
        _this['conditionObj'] = {
            value: _this.condition,
            path: path,
            functions: customFunctions_1.reportFunctionDisplay,
            customizeCategories: function (_, categories, __) { _addVariablesToExpressionEditor_1.addVariablesToExpressionEditor(categories); }
        };
        return _this;
    }
    FormattingRule.createNew = function (report) {
        return new FormattingRule({}, report);
    };
    FormattingRule.prototype.getInfo = function () {
        return formattingrules_1.formattingRuleSerializationsInfo;
    };
    FormattingRule.prototype.getPath = function (propertyName) {
        return this.parent && this.parent.dsHelperProvider() && this.parent.dsHelperProvider().getDataSourcePath(this['dataSource']() || this.parent.dataSource());
    };
    FormattingRule.prototype.displayType = function () {
        return analytics_utils_1.getLocalization('Formatting Rule', 'DevExpress.XtraReports.UI.FormattingRule');
    };
    return FormattingRule;
}(analytics_utils_1.Disposable));
exports.FormattingRule = FormattingRule;
var FormattingRuleLink = (function () {
    function FormattingRuleLink(model, serializer) {
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(this, model);
    }
    FormattingRuleLink.createNew = function (rule) {
        var link = new FormattingRuleLink({});
        link.value = ko.observable(rule);
        return link;
    };
    FormattingRuleLink.prototype.getInfo = function () {
        return formattingrules_1.formattingRuleLinkSerializationsInfo;
    };
    return FormattingRuleLink;
}());
exports.FormattingRuleLink = FormattingRuleLink;
var formattingrules_1 = __webpack_require__(36);
var _addVariablesToExpressionEditor_1 = __webpack_require__(173);


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var reportParameterHelper_1 = __webpack_require__(174);
var analytics_utils_1 = __webpack_require__(0);
var parameterSettings_1 = __webpack_require__(82);
function parameterValueToJsonObject(value) {
    var result = reportParameterHelper_1.ReportParameterHelper.getSerializationValue(value, analytics_utils_1.serializeDate);
    return (result instanceof Array) ? result.join(parameterSettings_1.parameterSeparator) : result;
}
exports.parameterValueToJsonObject = parameterValueToJsonObject;
function collectAvailableParameters(parameters) {
    return parameters.reduce(function (result, parameter) {
        if (parameter.isList)
            result.push.apply(result, parameter.getRangeParameters());
        else
            result.push(parameter);
        return result;
    }, []);
}
exports.collectAvailableParameters = collectAvailableParameters;


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editOptions_1 = __webpack_require__(90);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var analytics_internal_1 = __webpack_require__(2);
exports.editOptionsSerializationInfo = [
    { propertyName: 'enabled', modelName: '@Enabled', displayName: 'Enabled', localizationId: 'DevExpress.XtraReports.UI.EditOptions.Enabled', defaultVal: false, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('boolSelect') },
    { propertyName: 'id', modelName: '@ID', displayName: 'ID', localizationId: 'DevExpress.XtraReports.UI.EditOptions.ID', editor: analytics_widgets_1.editorTemplates.getEditor('text') },
    { propertyName: 'readOnly', modelName: '@ReadOnly', displayName: 'Read Only', localizationId: 'DevExpress.XtraReports.UI.EditOptions.ReadOnly', defaultVal: false, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('boolSelect') }
];
exports.editOptions = {
    propertyName: 'editOptions',
    modelName: 'EditOptions',
    displayName: 'Edit Options', localizationId: 'DevExpress.XtraReports.UI.XRLabel.EditOptions',
    editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'),
    from: function (model, serializer) { return new editOptions_1.EditOptions(model, serializer); },
    toJsonObject: function (value, serializer) { return serializer.serialize(value); }
};
exports.textEditOptions = analytics_internal_1.extend({}, exports.editOptions, {
    propertyName: 'textEditOptions',
    from: function (model, serializer) { return new editOptions_1.TextEditOptions(model, serializer); }
});


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var xrTableCell_1 = __webpack_require__(43);
var _tableComponentSurface_1 = __webpack_require__(196);
var analytics_elements_1 = __webpack_require__(5);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var XRTableRowViewModel = (function (_super) {
    __extends(XRTableRowViewModel, _super);
    function XRTableRowViewModel(control, parent, serializer) {
        var _this = _super.call(this, control, parent, serializer) || this;
        _this.top = ko.observable(0);
        _this.width = parent.size.width;
        _this.cells = ko.observableArray();
        _this._disposables.push(_this.cellsTotalWeight = ko.pureComputed(function () {
            var result = 0;
            _this.cells().forEach(function (cell) {
                result += cell.weight();
            });
            return result;
        }));
        _this._disposables.push(_this.pixelWidthWeight = ko.pureComputed(function () {
            return parent.size.width() !== 0 ? _this.cellsTotalWeight() / parent.size.width() : 0;
        }));
        _this._disposables.push(_this.height = ko.pureComputed({
            read: function () {
                var result = parent.size.height() * _this.weight() / parent.rowsTotalWeight();
                return analytics_internal_1.roundingXDecimals(result);
            },
            write: function (newHeight) {
                var dHeight = newHeight - _this.height(), newWeight = parent.pixelHeightWeight() * newHeight, dWeight = newWeight - _this.weight(), thisRowIndex = parent.rows().indexOf(_this);
                _this.weight(newWeight);
                if (thisRowIndex < parent.rows().length - 1) {
                    parent.rows()[thisRowIndex + 1].weight(parent.rows()[thisRowIndex + 1].weight() - dWeight);
                }
                else {
                    parent.size.height(parent.size.height() + dHeight);
                }
            }
        }));
        _this.size = new analytics_elements_1.Size(0, 0);
        _this._disposables.push(_this.size.height = ko.pureComputed({ read: function () { return _this.height(); }, write: function (newVal) { if (analytics_internal_1.checkModelReady(_this.root)) {
                _this.height(newVal);
            } } }));
        _this._disposables.push(_this.size.width = ko.pureComputed({ read: function () { return _this.width(); }, write: function (newVal) { if (analytics_internal_1.checkModelReady(_this.root)) {
                _this.width(newVal);
            } } }));
        var deserializedCells = analytics_utils_1.deserializeArray(control.Cells, function (item) { return _this.getControlFactory().createControl(item, _this, serializer); });
        _this.cells(deserializedCells());
        var _top = ko.observable(null);
        _this._disposables.push(_this.top = ko.pureComputed({
            read: function () {
                var index = parent.rows().indexOf(_this);
                if (index > 0) {
                    var previousRow = parent.rows()[index - 1];
                    _top(previousRow.top() + previousRow.height());
                }
                else {
                    _top(0);
                }
                return _top();
            },
            write: function (val) {
                parent.updateRowLocation(_this, _top() - val);
                _top(val);
            }
        }));
        return _this;
    }
    XRTableRowViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.cells);
        this.resetObservableArray(this.cells);
    };
    XRTableRowViewModel.prototype.hasCalculationNode = function (cellIndex) {
        return this.parentModel().tableCalculationProvider.hasCalculationNode(this.parentModel().rows().indexOf(this), cellIndex);
    };
    XRTableRowViewModel.prototype.addCellToCalculation = function (cellIndex, delta) {
        var cell = this.cells()[cellIndex];
        var newWeight = this.pixelWidthWeight() * (cell.width() + delta);
        this.parentModel().tableCalculationProvider.addCalculationNode({
            column: cellIndex,
            row: this.parentModel().rows().indexOf(this),
            calc: function () {
                cell.weight(newWeight);
            }
        });
    };
    XRTableRowViewModel.prototype.addColumnToCalculation = function (diff, last) {
        this.parentModel().addColumnToCalculation(diff, last);
    };
    XRTableRowViewModel.prototype.addTableOffset = function (width, left) {
        this.parentModel().tableCalculationProvider.addTableOffset(width, left);
    };
    XRTableRowViewModel.prototype.addChild = function (control, position, onComponentAdded) {
        if (control instanceof xrTableCell_1.XRTableCellViewModel) {
            if (this.cells().indexOf(control) === -1) {
                control.parentModel(this);
                if (position != null) {
                    this.cells.splice(position, 0, control);
                }
                else {
                    this.cells.push(control);
                }
                if ($.isFunction(onComponentAdded))
                    onComponentAdded({ parent: this, model: control });
            }
        }
        else {
            throw new Error('Trying to add non a cell to the table row.');
        }
    };
    XRTableRowViewModel.prototype.insertCellCopy = function (selectedCell, isRight, onComponentAdded) {
        var newCellWeight = selectedCell.weight() / 2, newCell = new xrTableCell_1.XRTableCellViewModel({ '@ControlType': 'XRTableCell', '@Weight': newCellWeight, '@Padding': selectedCell.padding(), '@Multiline': 'true' }, this), indexSelectedCell = this.cells.indexOf(selectedCell);
        this.addChild(newCell, indexSelectedCell + (isRight ? 1 : 0), onComponentAdded);
        if (newCell['text']) {
            newCell['text'](newCell.name());
        }
        selectedCell.weight(newCellWeight);
    };
    XRTableRowViewModel.prototype.removeChild = function (selectedCell) {
        if (this.cells().length > 0 && this.cells().indexOf(selectedCell) !== -1) {
            var index = this.cells().indexOf(selectedCell), selectedCellWeight = selectedCell.weight();
            this.cells.splice(index, 1);
            if (this.cells()[index]) {
                this.cells()[index].weight(this.cells()[index].weight() + selectedCellWeight);
            }
            else if (this.cells()[index - 1]) {
                this.cells()[index - 1].weight(this.cells()[index - 1].weight() + selectedCellWeight);
            }
            if (this.cells().length === 0) {
                this.parentModel().removeChild(this);
            }
        }
    };
    XRTableRowViewModel.unitProperties = [];
    return XRTableRowViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRTableRowViewModel = XRTableRowViewModel;
var XRTableRowSurface = (function (_super) {
    __extends(XRTableRowSurface, _super);
    function XRTableRowSurface(control, context) {
        var _this = _super.call(this, control, context, XRTableRowSurface._unitProperties) || this;
        _this.direction = _tableComponentSurface_1.TableActionDirection.vertical;
        _this._disposables.push(_this.css = ko.pureComputed(function () {
            return $.extend({}, _this.cssCalculator.backGroundCss());
        }));
        _this._disposables.push(_this.contentCss = ko.pureComputed(function () {
            return {};
        }));
        return _this;
    }
    XRTableRowSurface.prototype._getChildrenHolderName = function () { return 'cells'; };
    XRTableRowSurface.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.cells);
        this.resetObservableArray(this.cells);
    };
    XRTableRowSurface.prototype.getAdornTemplate = function () {
        var result = XRTableRowSurface._appendValue('', 'dxrd-image-surface-bounded', this.hasBindings);
        result = XRTableRowSurface._appendValue(result, 'dxrd-uiselected', this.selected());
        return result;
    };
    XRTableRowSurface._unitProperties = {
        _height: function (o) {
            return o.height;
        },
        _width: function (o) {
            return o.width;
        },
        _y: function (o) {
            return o.top;
        }
    };
    return XRTableRowSurface;
}(_tableComponentSurface_1.TableComponentSurface));
exports.XRTableRowSurface = XRTableRowSurface;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
exports._masterDetailWizardHeight = '600';
exports._masterDetailWizardWidth = '840';
exports._masterDetailScrollViewHeight = '100%';
function overrideFullscreenDataSourceWizardPageMetadata(factory, pageId, create) {
    var meta = factory.getMetadata(pageId);
    meta.canNext = function (page) { return page.canFinish() || page.canNext(); };
    meta.canFinish = function (page) { return page.canFinish(); };
    meta.create = create;
    var oldSetState = meta.setState;
    meta.setState = function (data, state) {
        oldSetState(data, state);
        state.newDataSource = data.newDataSource;
    };
    var oldResetState = meta.resetState;
    meta.resetState = function (state, defaultState) {
        oldResetState(state, defaultState);
        state.newDataSource = defaultState.newDataSource;
    };
}
exports.overrideFullscreenDataSourceWizardPageMetadata = overrideFullscreenDataSourceWizardPageMetadata;
var FieldInfo = (function (_super) {
    __extends(FieldInfo, _super);
    function FieldInfo(data) {
        var _this = _super.call(this) || this;
        _this.field = ko.observable(null);
        _this.selectedItems = ko.observableArray([]);
        _this.functionValue = ko.observable();
        _this.visible = ko.observable(true);
        _this.value = {
            value: _this.functionValue,
            dataSource: data,
            showDropDownButton: true,
            selectedItems: _this.selectedItems,
            displayExpr: function (value) {
                if (!value)
                    return value;
                return analytics_internal_1.getLocalization(value.displayValue, value.localizationId);
            }
        };
        return _this;
    }
    FieldInfo.prototype.getOptions = function (options) { return options; };
    return FieldInfo;
}(analytics_utils_1.Disposable));
exports.FieldInfo = FieldInfo;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
function getSeriesClassName(typeName) {
    return typeName.toLowerCase().split('seriesview')[0];
}
exports.getSeriesClassName = getSeriesClassName;
function deserializeModelArray(model, creator, prefix) {
    var array = ko.observableArray();
    array(analytics_utils_1.deserializeArray(model || {}, function (item) { return creator(item, array); })());
    array()['innerActions'] = [{
            text: analytics_utils_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'),
            imageClassName: 'dxrd-image-add',
            imageTemplateName: 'dxrd-svg-operations-add',
            disabled: ko.observable(false),
            visible: true,
            clickAction: function () {
                array.push(creator({ '@Name': analytics_internal_1.getUniqueName(array().map(function (x) { return x['name'] && x['name'](); }), prefix) }, array));
            }
        }];
    return array;
}
exports.deserializeModelArray = deserializeModelArray;


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.bandSurfaceCollapsedHeight = 27;


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var groupfield_1 = __webpack_require__(87);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var editorTemplates_1 = __webpack_require__(9);
exports.groupFields = {
    propertyName: 'groupFields',
    modelName: 'GroupFields', displayName: 'Group Fields', localizationId: 'DevExpress.XtraReports.UI.GroupHeaderBand.GroupFields', array: true, editor: analytics_widgets_1.editorTemplates.getEditor('commonCollection'),
    addHandler: groupfield_1.GroupFieldModel.createNew, template: '#dxrd-collection-item-group',
    getChildCaption: function (index) {
        if (index === 0)
            return analytics_utils_1.getLocalization('Group By', 'DataAccessUIStringId.QueryBuilderColumns_GroupBy');
        return analytics_utils_1.getLocalization('Then By', 'ASPxReportsStringId.ReportDesigner_SortFields_ThenBy');
    }
};
exports.sortFields = {
    propertyName: 'sortFields',
    modelName: 'SortFields', displayName: 'Sort Fields', localizationId: 'DevExpress.XtraReports.UI.DetailBand.SortFields', array: true, editor: analytics_widgets_1.editorTemplates.getEditor('commonCollection'),
    addHandler: groupfield_1.GroupFieldModel.createNew, template: '#dxrd-collection-item-group',
    getChildCaption: function (index) {
        if (index === 0)
            return analytics_utils_1.getLocalization('Sort By', 'ASPxReportsStringId.ReportDesigner_SortFields_SortBy');
        return analytics_utils_1.getLocalization('Then By', 'ASPxReportsStringId.ReportDesigner_SortFields_ThenBy');
    }
};
exports.groupFieldSerializationInfo = [
    { propertyName: 'fieldName', modelName: '@FieldName', displayName: 'Field Name', localizationId: 'DevExpress.XtraReports.UI.GroupField.FieldName', editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBinding') },
    { propertyName: 'sortOrder', modelName: '@SortOrder', displayName: 'Sort Order', localizationId: 'DevExpress.XtraReports.UI.GroupField.SortOrder', defaultVal: 'Ascending' }
];


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var metadataGroups_1 = __webpack_require__(11);
var style_1 = __webpack_require__(21);
var bandsMetadata_1 = __webpack_require__(26);
var scriptMetadata_1 = __webpack_require__(13);
var analytics_utils_1 = __webpack_require__(0);
exports.expanded = { propertyName: 'expanded', modelName: '@Expanded', from: analytics_utils_1.parseBool, defaultVal: true };
exports.commonBandSerializationInfo = [
    metadata_1.textAlignment, exports.expanded,
    { propertyName: 'controls', modelName: 'Controls', array: true },
    { propertyName: 'bands', modelName: 'SubBands', array: true },
].concat(metadataGroups_1.commonBandProperties, metadataGroups_1.fontGroup);
exports.bandSerializationInfo = [
    style_1.styleName, style_1.stylesObj, style_1.stylePriority, bandsMetadata_1.height, bandsMetadata_1.printAcrossBands
].concat(exports.commonBandSerializationInfo);
exports.reportHeaderBandSerializationInfo = [metadata_1.keepTogetherDefaultValueFalse, bandsMetadata_1.pageBreak, scriptMetadata_1.commonBandScripts].concat(exports.bandSerializationInfo);
exports.reportFooterBandSerializationInfo = [bandsMetadata_1.printAtBottom].concat(exports.reportHeaderBandSerializationInfo);
exports.popularPropertiesReportHeader = [bandsMetadata_1.pageBreak.propertyName, 'keepTogether'];
exports.popularPropertiesReportFooter = [bandsMetadata_1.pageBreak.propertyName, 'keepTogether', 'printAtBottom'];


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrReportelement_1 = __webpack_require__(27);
var xrControl_1 = __webpack_require__(10);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
function findBandByPositionY(bandsHolder, position) {
    var result = null;
    bandsHolder.bands().forEach(function (band) {
        if (band.absolutePosition.y.peek() <= position) {
            if (band) {
                result = findBandByPositionY(band.bandsHolder, position) || band;
                return false;
            }
        }
    });
    return result;
}
var XRCrossBandControlViewModel = (function (_super) {
    __extends(XRCrossBandControlViewModel, _super);
    function XRCrossBandControlViewModel(control, parent, serializer) {
        var _this = _super.call(this, control, parent, serializer) || this;
        _this.isCrossbandShow = ko.computed(function () {
            return !!(_this.startBand() && _this.endBand());
        });
        var originalEndBand = _this.endBand;
        _this._disposables.push(_this.endPoint.x = ko.pureComputed({
            read: function () {
                return _this.startPoint.x();
            },
            write: function (val) {
                if (analytics_internal_1.checkModelReady(_this.root)) {
                    _this.startPoint.x(val);
                }
            }
        }));
        _this._disposables.push(_this.locationF.x = ko.pureComputed({
            read: function () {
                return _this.startPoint.x();
            },
            write: function (val) {
                if (analytics_internal_1.checkModelReady(_this.root)) {
                    _this.startPoint.x(val);
                }
            }
        }));
        _this._disposables.push(_this.locationF.y = ko.pureComputed({
            read: function () {
                return _this.startPoint.y();
            },
            write: function (val) {
                if (analytics_internal_1.checkModelReady(_this.root)) {
                    _this.startPoint.y(val);
                }
            }
        }));
        if (_this.parentModel()) {
            _this._subscribeBands(_this.parentModel());
        }
        else {
            _this._disposables.push(_this.parentModel.subscribe(function (report) {
                if (report)
                    _this._subscribeBands(report);
            }));
        }
        _this._disposables.push(_this.isCrossbandShow);
        return _this;
    }
    XRCrossBandControlViewModel.prototype._subscribeBands = function (report) {
        var _this = this;
        this._disposables.push(report.bands.subscribe(function (changes) {
            for (var i = 0; i < changes.length; i++) {
                var change = changes[i];
                if (change.status === 'deleted') {
                    if (change.value === _this.startBand() && change.value === _this.endBand()) {
                        report.crossBandControls.remove(_this);
                    }
                    else if (change.value === _this.endBand()) {
                        _this.endBand(report.bands()[change.index - 1]);
                        _this.endPoint.y(report.bands()[change.index - 1].height());
                    }
                    else if (change.value === _this.startBand()) {
                        var saveEndBand = _this.endBand(), saveEndPointY = _this.endPoint.y();
                        _this.startBand(report.bands()[change.index]);
                        _this.startPoint.y(0);
                        _this.endBand(saveEndBand);
                        _this.endPoint.y(saveEndPointY);
                    }
                }
            }
        }, null, 'arrayChange'));
    };
    XRCrossBandControlViewModel.prototype.getNearestParent = function (target) {
        var result = target;
        while (result.parentModel()) {
            result = result.parentModel();
        }
        return result;
    };
    XRCrossBandControlViewModel.prototype.isResettableProperty = function (propertyName) {
        return _super.prototype.isResettableProperty.call(this, propertyName) && ['startPoint', 'endPoint', 'startBand', 'endBand'].indexOf(propertyName) === -1;
    };
    XRCrossBandControlViewModel.prototype.isPropertyVisible = function (name) {
        if (name === 'size')
            return false;
        return _super.prototype.isPropertyVisible.call(this, name);
    };
    XRCrossBandControlViewModel.prototype.getControlContainerName = function () { return 'crossBandControls'; };
    XRCrossBandControlViewModel.unitProperties = ['width', 'locationF', 'startPoint', 'endPoint'];
    return XRCrossBandControlViewModel;
}(xrReportelement_1.XRReportElementViewModel));
exports.XRCrossBandControlViewModel = XRCrossBandControlViewModel;
var XRCrossBandSurface = (function (_super) {
    __extends(XRCrossBandSurface, _super);
    function XRCrossBandSurface(control, context) {
        var _this = _super.call(this, control, context, XRCrossBandSurface._unitProperties) || this;
        _this.edgeUnderCursor = ko.observable({ isOver: false, x: 0, y: 0, isNotDropTarget: true });
        _this.underCursor = ko.observable({ isOver: false, x: 0, y: 0, isNotDropTarget: true });
        _this._disposables.push(_this['_x'].subscribe(function (newVal) {
            _this['_endX'](newVal);
        }));
        _this.visible = control.isCrossbandShow;
        var currentAbsoluteStartY = _this['_startY']();
        var currentAbsoluteEndY = _this['_endY']();
        _this._disposables.push(ko.computed(function () {
            if (control.startBand()) {
                var startBandSurface = analytics_internal_1.findSurface(control.startBand.peek());
                currentAbsoluteStartY = _this._isBandCollapsed(startBandSurface) ? startBandSurface.absolutePosition.y() : _this['_startY']() + startBandSurface.absolutePosition.y();
            }
            _this['_y'](currentAbsoluteStartY);
        }));
        _this._disposables.push(ko.computed(function () {
            if (control.endBand()) {
                var endBandSurface = analytics_internal_1.findSurface(control.endBand.peek());
                currentAbsoluteEndY = _this._isBandCollapsed(endBandSurface) ? endBandSurface.absolutePosition.y() : _this['_endY']() + endBandSurface.absolutePosition.y();
            }
            _this['_height'](currentAbsoluteEndY - currentAbsoluteStartY);
        }));
        _this._disposables.push(ko.computed(function () {
            var absoluteStartY = _this['_y']();
            if (absoluteStartY < 0) {
                _this['_y'](0);
                return;
            }
            if (absoluteStartY !== currentAbsoluteStartY) {
                var startBandSurface = findBandByPositionY(_this.parent.bandsHolder, absoluteStartY);
                control.startBand(startBandSurface.getControlModel());
                currentAbsoluteStartY = absoluteStartY;
                _this['_startY'](currentAbsoluteStartY - startBandSurface.absolutePosition.y());
                _this._updateEndPoint(_this['_height'](), currentAbsoluteEndY, currentAbsoluteStartY);
            }
        }));
        _this._disposables.push(ko.computed(function () {
            var height = _this['_height']();
            if (height !== currentAbsoluteEndY - currentAbsoluteStartY) {
                _this._updateEndPoint(height, currentAbsoluteEndY, currentAbsoluteStartY);
            }
        }));
        _this.template = control.controlType === 'XRCrossBandLine' ? 'dxrd-crossband-line' : 'dxrd-crossband';
        if (_this.getControlModel().controlType === 'XRCrossBandLine') {
            _this._disposables.push(_this.lineCss = ko.pureComputed(function () {
                return $.extend({}, _this.cssCalculator.stroke(), _this.cssCalculator.strokeWidthWithWidth(), _this.cssCalculator.strokeDashArrayWithWidth());
            }));
            _this._disposables.push(_this.lineWidthCss = ko.pureComputed(function () {
                return $.extend({}, _this.cssCalculator.strokeWidthWithWidth());
            }));
        }
        else {
            _this._disposables.push(_this.leftCss = ko.pureComputed(function () { return _this.cssCalculator.crossBandBorder('Left'); }));
            _this._disposables.push(_this.rightCss = ko.pureComputed(function () { return _this.cssCalculator.crossBandBorder('Right'); }));
            _this._disposables.push(_this.topCss = ko.pureComputed(function () { return _this.cssCalculator.crossBandBorder('Top'); }));
            _this._disposables.push(_this.bottomCss = ko.pureComputed(function () { return _this.cssCalculator.crossBandBorder('Bottom'); }));
        }
        _this._disposables.push(control.startBand.subscribe(function (newBand) {
            if (newBand) {
                var bandSurface = analytics_internal_1.findSurface(newBand);
                _this['_y'](bandSurface.absolutePosition.y());
            }
        }));
        _this._disposables.push(control.endBand.subscribe(function (newBand) {
            if (newBand) {
                var bandSurface = analytics_internal_1.findSurface(newBand);
                var newHeight = bandSurface.absolutePosition.y() - _this['_y']();
                if (control.startBand() === newBand) {
                    newHeight += _this['_endY']();
                }
                _this['_height'](newHeight);
            }
        }));
        _this._disposables.push(_this.borderWidth = ko.pureComputed(function () {
            return control['borderWidth'] && Math.floor(control['borderWidth']());
        }));
        return _this;
    }
    XRCrossBandSurface.prototype._isBandCollapsed = function (bandSurface) {
        return bandSurface && (bandSurface.collapsed() || bandSurface.isSomeParentCollapsed());
    };
    XRCrossBandSurface.prototype._updateEndPoint = function (height, currentAbsoluteEndY, currentAbsoluteStartY) {
        currentAbsoluteEndY = currentAbsoluteStartY + height;
        var endBandSurface = findBandByPositionY(this.parent.bandsHolder, currentAbsoluteEndY);
        if (!endBandSurface) {
            return;
        }
        if (endBandSurface.absolutePosition.y.peek() + endBandSurface.height.peek() < currentAbsoluteEndY) {
            endBandSurface['_height'](currentAbsoluteEndY - endBandSurface.absolutePosition.y.peek());
        }
        this._control.endBand(endBandSurface.getControlModel());
        this['_endY'](currentAbsoluteEndY - endBandSurface.absolutePosition.y());
    };
    XRCrossBandSurface.prototype._getAllBands = function (band) {
        var _this = this;
        var bands = band.bandsHolder.bands(), innerBands = [];
        bands.forEach(function (band) {
            innerBands = innerBands.concat(_this._getAllBands(band));
        });
        return [].concat(bands, innerBands);
    };
    XRCrossBandSurface.prototype._getIntersectionBands = function (currentRect, bands) {
        var _this = this;
        var bandSurfaces = bands.filter(function (band) { return _this.isThereIntersection(currentRect, band.absoluteRect()); }), intersectionBands = [].concat(bandSurfaces);
        bandSurfaces.forEach(function (band) {
            intersectionBands = intersectionBands.concat(_this._getAllBands(band));
        });
        intersectionBands = intersectionBands.filter(function (band) {
            return band.controls && band.controls().length > 0;
        });
        return intersectionBands;
    };
    XRCrossBandSurface.prototype._getCrossBandBoxSides = function () {
        var currentRect = this._unitAbsoluteRect, borderWidth = this.getControlModel()['borderWidth']();
        return [{ top: currentRect.top, left: currentRect.left, height: borderWidth, width: currentRect.width },
            { top: currentRect.bottom - borderWidth, left: currentRect.left, height: borderWidth, width: currentRect.width },
            { top: currentRect.top, left: currentRect.left, height: currentRect.height, width: borderWidth },
            { top: currentRect.top, left: currentRect.right - borderWidth, height: currentRect.height, width: borderWidth }];
    };
    Object.defineProperty(XRCrossBandSurface.prototype, "_unitAbsoluteRect", {
        get: function () {
            var startBandSurface = this._control.startBand() && this._control.startBand().surface, endBandSurface = this._control.endBand() && this._control.endBand().surface;
            var startBandTop = startBandSurface ? startBandSurface['_unitAbsoluteRect'].top : 0;
            var endBandTop = endBandSurface ? endBandSurface['_unitAbsoluteRect'].top : 0;
            var top = startBandTop + this._control.startPoint.y(), bottom = endBandTop + this._control.endPoint.y();
            return {
                top: top, left: this._control.startPoint.x(),
                right: this._control.startPoint.x() + this._control.width(), bottom: bottom,
                width: this._control.width(), height: bottom - top
            };
        },
        enumerable: true,
        configurable: true
    });
    XRCrossBandSurface.prototype.canSetRect = function (rect) {
        var report = this._control.root;
        if (report && report.language() !== metadata_1.defaultCulture) {
            var endBand = findBandByPositionY(this.parent.bandsHolder, rect.top + rect.height);
            if (this._control.endBand() !== endBand._control)
                return false;
            var startBand = findBandByPositionY(this.parent.bandsHolder, rect.top);
            if (this._control.startBand() !== startBand._control)
                return false;
        }
        return true;
    };
    XRCrossBandSurface.prototype.isThereIntersectionWithControls = function () {
        var isThereIntersection = false, currentRect = this._unitAbsoluteRect, intersectionBands = this._getIntersectionBands(currentRect, this.parent && this.parent.getChildrenCollection()()), rectangles = this.getControlModel().controlType === 'XRCrossBandBox' ? this._getCrossBandBoxSides() : [currentRect];
        for (var bandIndex = 0; bandIndex < intersectionBands.length; bandIndex++) {
            for (var rectIndex = 0; rectIndex < rectangles.length; rectIndex++) {
                if (this.isThereIntersectionWithNeighborsCollection(rectangles[rectIndex], intersectionBands[bandIndex].controls().filter(function (control) { return !control.isIntersectionDeny; }), '_unitAbsoluteRect')) {
                    isThereIntersection = true;
                    break;
                }
            }
            if (isThereIntersection)
                break;
        }
        return isThereIntersection;
    };
    XRCrossBandSurface.prototype.updateAbsolutePosition = function () {
        this.absolutePosition.x(this['_endX']());
        this.absolutePosition.y(this['_y']());
        this.afterUpdateAbsolutePosition();
    };
    XRCrossBandSurface.prototype.isThereIntersectionWithCrossBandControls = function () {
        if (this.getControlModel().controlType === 'XRCrossBandBox') {
            var isThereIntersection = false;
            var rects = this._getCrossBandBoxSides() || [];
            for (var rectIndex = 0; rectIndex < rects.length; rectIndex++) {
                if (_super.prototype.isThereIntersectionWithCrossBandControls.call(this, rects[rectIndex])) {
                    isThereIntersection = true;
                    break;
                }
            }
            return isThereIntersection;
        }
        else {
            return _super.prototype.isThereIntersectionWithCrossBandControls.call(this);
        }
    };
    XRCrossBandSurface.prototype.container = function () {
        if (this._control.isCrossbandShow()) {
            return analytics_internal_1.findSurface(this.getControlModel().startBand());
        }
        else {
            return null;
        }
    };
    XRCrossBandSurface.prototype._getChildrenHolderName = function () {
        return null;
    };
    XRCrossBandSurface._unitProperties = {
        _x: function (o) {
            return o.startPoint.x;
        },
        _width: function (o) {
            return o.width;
        },
        _startY: function (o) {
            return o.startPoint.y;
        },
        _endX: function (o) {
            return o.endPoint.x;
        },
        _endY: function (o) {
            return o.endPoint.y;
        }
    };
    return XRCrossBandSurface;
}(xrControl_1.XRControlSurfaceBase));
exports.XRCrossBandSurface = XRCrossBandSurface;
var metadata_1 = __webpack_require__(28);


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var objectStorageItem_1 = __webpack_require__(38);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var DataFederationDataSource = (function (_super) {
    __extends(DataFederationDataSource, _super);
    function DataFederationDataSource(model, _dsHelperProvider, _serializer) {
        var _this = _super.call(this, model, _dsHelperProvider, _serializer) || this;
        _this._dsHelperProvider = _dsHelperProvider;
        _this._serializer = _serializer;
        return _this;
    }
    DataFederationDataSource.prototype.preInitProperties = function (model) {
        var info = this.getInfo();
        this.getInfo = function () {
            var result = [];
            if (model && model['@Base64'])
                result = result.concat({ propertyName: 'base64', modelName: '@Base64' });
            return result.concat([], info, [
                {
                    modelName: 'SerializableSourceMap',
                    propertyName: 'serializableSourceMap',
                    array: true,
                    info: [
                        { modelName: '@DataSource', propertyName: 'dataSource', link: true },
                        { modelName: '@Name', propertyName: 'name' }
                    ]
                }
            ]);
        };
    };
    DataFederationDataSource.prototype.getSerializableModel = function () {
        if (!this._serializableModel)
            this._serializableModel = new SerializableDataFederationDataSource(this, null, this._dsHelperProvider, this._serializer);
        return this._serializableModel;
    };
    return DataFederationDataSource;
}(objectStorageItem_1.ObjectStorageItem));
exports.DataFederationDataSource = DataFederationDataSource;
var SerializableDataFederationDataSource = (function () {
    function SerializableDataFederationDataSource(dataSource, model, dsHelperProvider, serializer) {
        var _this = this;
        this.serializer = serializer || new analytics_utils_1.ModelSerializer();
        if (dataSource) {
            this.dataSource = dataSource;
            this.dataSources = dataSource.serializableSourceMap().reduce(function (result, x) {
                if (result.indexOf(x.dataSource() === -1))
                    result.push(x.dataSource());
                return result;
            }, ko.observableArray([]));
        }
        else if (model) {
            this.dataSources = ko.observableArray(Object.keys(model.dataSources || {}).map(function (item) { return new objectStorageItem_1.ObjectStorageItem(model.dataSources[item], dsHelperProvider, _this.serializer); }));
            this.dataSource = new DataFederationDataSource(model.dataSource, dsHelperProvider, this.serializer);
        }
    }
    SerializableDataFederationDataSource.prototype.getInfo = function () {
        return [
            { propertyName: 'dataSources', modelName: 'dataSources', array: true },
            { propertyName: 'dataSource', modelName: 'dataSource' }
        ];
    };
    SerializableDataFederationDataSource.prototype.serialize = function () {
        return this.serializer.serialize(this);
    };
    return SerializableDataFederationDataSource;
}());
exports.SerializableDataFederationDataSource = SerializableDataFederationDataSource;


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrReport_1 = __webpack_require__(16);
var xrControl_1 = __webpack_require__(10);
var _locker_1 = __webpack_require__(32);
var reportStorageWeb_1 = __webpack_require__(34);
var analytics_utils_1 = __webpack_require__(0);
var dataBinding_1 = __webpack_require__(125);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var SubreportViewModel = (function (_super) {
    __extends(SubreportViewModel, _super);
    function SubreportViewModel(model, serializer) {
        var _this = _super.call(this, model, serializer) || this;
        _this.isAllSufficient = false;
        delete _this._model['ObjectStorage'];
        delete _this._model['ComponentStorage'];
        return _this;
    }
    SubreportViewModel.prototype._initializeBands = function () {
        if (this.bands().length === 0) {
            this.createChild({ '@ControlType': 'DetailBand', '@Name': 'Detail1' });
        }
    };
    SubreportViewModel.from = function (model, serializer) {
        return model ? new SubreportViewModel(model, serializer) : null;
    };
    SubreportViewModel.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, xrReport_2.reportSerializationInfo, refs);
    };
    SubreportViewModel.prototype.getInfo = function () {
        if (!this.isAllSufficient) {
            var newSerializationInfo = $.extend(true, [], _super.prototype.getInfo.call(this));
            newSerializationInfo.reduce(function (indexes, currentInfo, index) {
                if (currentInfo.propertyName === '_objectStorage' || currentInfo.propertyName === '_componentStorage')
                    return [index].concat(indexes);
                return indexes;
            }, []).forEach(function (index) { return newSerializationInfo.splice(index, 1); });
            return newSerializationInfo;
        }
        return _super.prototype.getInfo.call(this);
    };
    SubreportViewModel.prototype.serialize = function () {
        this.isAllSufficient = true;
        var result = _super.prototype.serialize.call(this);
        this.isAllSufficient = false;
        return result;
    };
    SubreportViewModel.defaultReport = {
        '@ControlType': 'DevExpress.XtraReports.UI.XtraReport',
        '@PageWidth': '850',
        '@PageHeight': '1100',
        '@Version': '21.2',
        '@Font': 'Arial,9pt',
        '@Dpi': '100',
        'Bands': {
            'Item1': {
                '@ControlType': 'TopMarginBand',
                '@HeightF': '100'
            },
            'Item2': {
                '@ControlType': 'DetailBand',
                '@HeightF': '100'
            },
            'Item3': {
                '@ControlType': 'BottomMarginBand',
                '@HeightF': '100'
            }
        }
    };
    return SubreportViewModel;
}(xrReport_1.ReportViewModel));
exports.SubreportViewModel = SubreportViewModel;
var ParameterBinding = (function (_super) {
    __extends(ParameterBinding, _super);
    function ParameterBinding(model, parent, serializer) {
        var _this = _super.call(this, model, serializer) || this;
        _this.visible = ko.observable(true);
        _this.subreportControl = ko.observable();
        var _self = _this;
        _this.fakeBinding = _this;
        _this._disposables.push(_this._reportDataSource = ko.computed(function () {
            var control = _this.subreportControl();
            return control && control.root['dataSource'] && control.root['dataSource']() || null;
        }));
        var _dataSource = ko.observable(_this.dataSource());
        _this._disposables.push(_this.dataSource = ko.pureComputed({
            read: function () {
                return _dataSource() || _this._reportDataSource();
            },
            write: function (newValue) {
                _dataSource(newValue);
            }
        }));
        _this._disposables.push(_this.dataSource.subscribe(function (newValue) {
            if (!newValue) {
                _this.dataMember(null);
            }
        }));
        var subscribe = _this.subreportControl.subscribe(function (newValue) {
            if (newValue) {
                subscribe.dispose();
                _self._disposables.push(newValue.root['parameters'].subscribe(function (newParameters) {
                    if (!_parameterUtils_1.collectAvailableParameters(newParameters).some(function (parameter) { return parameter === _self.parameter(); })) {
                        _self.parameter(null);
                    }
                }));
            }
        });
        _this._disposables.push(subscribe);
        _this.subreportControl(parent);
        return _this;
    }
    ParameterBinding.createNew = function () {
        return new ParameterBinding({}, null);
    };
    ParameterBinding.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.subreportControl(null);
    };
    ParameterBinding.prototype.getInfo = function () {
        if (this.subreportControl && this.subreportControl() && this.subreportControl().subreportParameters().length > 0) {
            var serializationInfo = $.extend(true, [], xrSubreport_1.parameterBindingSerializationInfo);
            var parameterNameInfo = serializationInfo.filter(function (info) { return info.propertyName === 'parameterName'; })[0];
            parameterNameInfo.valuesArray = this.subreportControl().subreportParameters().map(function (parameter) { return { value: parameter, displayValue: parameter }; });
            var dataSourceInfo = serializationInfo.filter(function (info) { return info.propertyName === 'dataSource'; })[0];
            dataSourceInfo.defaultVal = this._reportDataSource();
            return serializationInfo;
        }
        return xrSubreport_1.parameterBindingSerializationInfo;
    };
    ParameterBinding.prototype.updateParameter = function (pathRequest, dataSources) {
        _super.prototype.updateParameter.call(this, pathRequest, dataSources);
        this.dataMember(null);
    };
    ParameterBinding.prototype.refresh = function () {
        var _this = this;
        if (!this.subreportControl().subreportParameters().some(function (parameter) { return parameter === _this.parameterName(); })) {
            this.parameterName('');
        }
    };
    return ParameterBinding;
}(dataBinding_1.DataBindingBase));
exports.ParameterBinding = ParameterBinding;
var XRSubreportViewModel = (function (_super) {
    __extends(XRSubreportViewModel, _super);
    function XRSubreportViewModel(model, parent, serializer) {
        var _this = _super.call(this, XRSubreportViewModel._patchModel(model), parent, serializer) || this;
        _this.needProcessLocation = false;
        _this.subreportParameters = ko.observableArray();
        var _self = _this;
        var _width = ko.observable(_this.size.width());
        _this.size['_width'] = _width;
        _this._disposables.push(_this.key = ko.pureComputed(function () {
            var key = _this.parentModel() && _this.parentModel().root && _this.parentModel().root['key'];
            return (key ? (key() + '.') : '') + _this.name();
        }));
        _this._generateOwnPages = ko.observable(_this.generateOwnPages());
        var oldgenerateOwnPagesIsActive = _this._generateOwnPages();
        _this._disposables.push(_this.generateOwnPages = ko.pureComputed({
            read: function () {
                return _this._generateOwnPages();
            },
            write: function (newVal) {
                if (_this.isPropertyDisabled('generateOwnPages'))
                    return;
                var undo = analytics_utils_1.UndoEngine.tryGetUndoEngine(_this.parentModel());
                undo && undo.start();
                _this._generateOwnPages(newVal);
                undo && undo.end();
                oldgenerateOwnPagesIsActive = _this._getCurrentGenerateOwnPagesIsActive();
            }
        }), _this.generateOwnPagesIsActive = ko.computed(function () {
            return _this._getCurrentGenerateOwnPagesIsActive();
        }), _this.generateOwnPagesIsActive.subscribe(function (newVal) {
            _this._calculateSubreportPosition(newVal);
        }), _this.size.width = ko.computed({
            read: function () {
                if (_this.generateOwnPagesIsActive())
                    return _this.parentModel()['size'].width();
                return _width();
            },
            write: function (newVal) {
                _width(newVal);
            }
        }));
        _this._disposables.push(_this.parentModel.subscribe(function (newVal) {
            _this.needProcessLocation = oldgenerateOwnPagesIsActive !== _this._getCurrentGenerateOwnPagesIsActive() || (oldgenerateOwnPagesIsActive && _this._getCurrentGenerateOwnPagesIsActive());
            oldgenerateOwnPagesIsActive = _this._getCurrentGenerateOwnPagesIsActive();
        }));
        _this.size.isPropertyDisabled = function (propertyName) {
            if (propertyName === 'width')
                return _this.generateOwnPagesIsActive();
            return false;
        };
        var storageSubscription = null;
        if (_this.reportSource) {
            _this.reportSource.key = _this.key;
            if (parent) {
                parent.root['objectStorage'](parent.root['objectStorage']().concat(_this.reportSource.objectStorage()));
                _this.reportSource.objectStorage(parent.root['objectStorage']().slice());
                storageSubscription = _this._subscribeStorages(_this.reportSource.objectStorage, parent.root['objectStorage']);
                _this._disposables.push(storageSubscription);
            }
            else {
                var subscribe = _this.parentModel.subscribe(function (newValue) {
                    if (newValue) {
                        subscribe.dispose();
                        _this.reportSource.objectStorage(newValue.root['objectStorage']().slice());
                        storageSubscription = _this._subscribeStorages(_this.reportSource.objectStorage, newValue.root['objectStorage']);
                        _this._disposables.push(storageSubscription);
                    }
                });
                _this._disposables.push(subscribe);
            }
        }
        _this.parameterBindings = analytics_utils_1.deserializeArray(model.ParameterBindings, function (item) { return new ParameterBinding(item, _this, serializer); });
        _this.updateParameters();
        _this._disposables.push(_this.parameterBindings.subscribe(function (changes) {
            for (var index = 0; index < changes.length; index++) {
                if (changes[index].status === 'added') {
                    changes[index].value.subreportControl(_self);
                }
            }
        }, null, 'arrayChange'));
        _this._disposables.push(_this.reportSourceUrl.subscribe(function (newVal) {
            storageSubscription && storageSubscription.dispose();
            _this.reportSource && _this.reportSource.dispose();
            if (!newVal)
                _this.reportSource = new SubreportViewModel(SubreportViewModel.defaultReport, serializer);
            _this.updateParameters();
        }));
        return _this;
    }
    XRSubreportViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.parameterBindings);
        this.reportSource && this.reportSource.dispose();
        this.resetObservableArray(this.parameterBindings);
    };
    XRSubreportViewModel.prototype.getInfo = function () {
        var serializationInfo = $.extend(true, [], _super.prototype.getInfo.call(this));
        if (this.reportSourceUrl && this.reportSourceUrl()) {
            var property = serializationInfo.filter(function (item) { return item.propertyName === 'reportSource'; })[0];
            serializationInfo.splice(serializationInfo.indexOf(property), 1);
        }
        return serializationInfo;
    };
    XRSubreportViewModel._patchModel = function (model) {
        if (model['@ReportSourceUrl']) {
            delete model['ReportSource'];
        }
        return model;
    };
    XRSubreportViewModel.prototype._getCurrentGenerateOwnPagesIsActive = function () {
        return this.generateOwnPages() && !this.isPropertyDisabled('generateOwnPages');
    };
    XRSubreportViewModel.prototype._clearReportModel = function (reportModel) {
        var ignoreProperties = ['Parameters', 'ObjectStorage', 'ComponentStorage'];
        Object.keys(reportModel).forEach(function (x) {
            if (ignoreProperties.indexOf(x) === -1)
                delete reportModel[x];
        });
    };
    XRSubreportViewModel.prototype._assignParameters = function (parameters) {
        this.subreportParameters(_parameterUtils_1.collectAvailableParameters(parameters).map(function (x) { return x.name; }));
        this.refreshParameterBindings();
    };
    XRSubreportViewModel.prototype._calculateSubreportPosition = function (generateOwnPagesIsActive) {
        var offset = generateOwnPagesIsActive ? 0 : analytics_internal_1.pixelToUnits(5, this.root.measureUnit(), 1);
        this.size.width(this.parentModel()['size'].width() - offset * 2);
        this.location.x(offset);
    };
    XRSubreportViewModel.prototype._subscribeStorages = function (objectStorage1, objectStorage2) {
        var locker = new _locker_1.Locker();
        var subscriptions = [
            objectStorage1.subscribe(function (newVal) { return locker.lock(function () { return objectStorage2(newVal); }); }),
            objectStorage2.subscribe(function (newVal) { return locker.lock(function () { return objectStorage1(newVal); }); })
        ];
        return { dispose: function () { return subscriptions.forEach(function (x) { return x.dispose(); }); } };
    };
    XRSubreportViewModel.prototype.refreshParameterBindings = function () {
        this.parameterBindings().forEach(function (x) { return x.refresh(); });
    };
    XRSubreportViewModel.prototype.isPropertyDisabled = function (propertyName) {
        if (propertyName === 'generateOwnPages')
            return this.parentModel()
                && ['ReportHeaderBand', 'ReportFooterBand', 'GroupHeaderBand', 'GroupFooterBand', 'DetailBand'].indexOf(this.parentModel().controlType) === -1;
        return _super.prototype.isPropertyDisabled.call(this, propertyName);
    };
    XRSubreportViewModel.prototype.updateParameters = function () {
        var _this = this;
        if (this.reportSourceUrl()) {
            reportStorageWeb_1.ReportStorageWeb.getData(this.reportSourceUrl()).done(function (result) {
                var reportJSONModel = JSON.parse(result.reportLayout);
                _this._clearReportModel(reportJSONModel.XtraReportsLayoutSerializer);
                var report = new xrReport_1.ReportViewModel(reportJSONModel);
                _this._assignParameters(report.parameters());
            });
        }
        else if (this.reportSource) {
            this._assignParameters(this.reportSource.parameters());
        }
    };
    XRSubreportViewModel.prototype.cloneReportSource = function () {
        return this.reportSource && this.reportSource.clone();
    };
    return XRSubreportViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRSubreportViewModel = XRSubreportViewModel;
var XRSubreportSurface = (function (_super) {
    __extends(XRSubreportSurface, _super);
    function XRSubreportSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this.template = 'dxrd-subreport';
        _this.selectiontemplate = 'dxrd-subreport-selection';
        _this.displayText = function () { return control.name(); };
        return _this;
    }
    XRSubreportSurface.prototype.getAdornTemplate = function () {
        var result = '';
        result = xrControl_1.XRControlSurface._appendValue(result, 'dxrd-surface-hidden', !this._control['visible']());
        result = xrControl_1.XRControlSurface._appendValue(result, 'dxrd-intersect', this.isIntersect());
        return result;
    };
    XRSubreportSurface.prototype.getResizableOptions = function (resizeHandler) {
        return $.extend(true, {}, resizeHandler, {
            handles: this._control.generateOwnPagesIsActive() ? 's,n' : 'all'
        });
    };
    XRSubreportSurface.prototype.processLocation = function (location) {
        if (this._control.needProcessLocation) {
            this._control.needProcessLocation = false;
            return { top: location.top };
        }
        return location;
    };
    return XRSubreportSurface;
}(xrControl_1.XRControlSurface));
exports.XRSubreportSurface = XRSubreportSurface;
var xrReport_2 = __webpack_require__(39);
var xrSubreport_1 = __webpack_require__(96);
var _parameterUtils_1 = __webpack_require__(46);


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var metadata_1 = __webpack_require__(6);
var sortBySummary_1 = __webpack_require__(94);
var analytics_internal_1 = __webpack_require__(2);
var pivotgridfield_1 = __webpack_require__(70);
var _metaUtils_1 = __webpack_require__(23);
exports.crossTabFieldName = { propertyName: 'fieldName', modelName: '@FieldName', displayName: 'Field Name', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabFieldBase.FieldName', editor: analytics_widgets_1.editorTemplates.getEditor('field'), defaultVal: '' };
var valuesGroupInterval = _metaUtils_1.valuesArrayAsEnumWithLocalizationId(pivotgridfield_1.groupInterval, 'DevExpress.XtraReports.UI.CrossTab.GroupInterval.').filter(function (item) { return item.value !== 'Custom'; });
exports.crossTabGroupInterval = { propertyName: 'crossTabGroupInterval', modelName: '@GroupInterval', displayName: 'Group Interval', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabGroupFieldBase.GroupInterval', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Default', valuesArray: valuesGroupInterval };
exports.crossTabGroupIntervalNumericRange = { propertyName: 'crossTabGroupIntervalNumericRange', modelName: '@GroupIntervalNumericRange', displayName: 'Group Interval Numeric Range', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabGroupFieldBase.GroupIntervalNumericRange', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 10 };
var valuesArraySummaryType = _metaUtils_1.valuesArrayAsEnumWithLocalizationId(sortBySummary_1.summaryType, 'DevExpress.XtraReports.UI.CrossTab.SummaryType.');
valuesArraySummaryType = valuesArraySummaryType.filter(function (item) { return item.value !== 'Custom'; });
exports.crossTabSummaryType = analytics_internal_1.extend({}, sortBySummary_1.summaryType, { localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabDataField.SummaryType', valuesArray: valuesArraySummaryType });
exports.crossTabSortBySummaryInfo = { propertyName: 'crossTabSortBySummaryInfo', modelName: '@SortBySummaryInfo', displayName: 'Sort By Summary Info', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabGroupFieldBase.SortBySummaryInfo', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: [analytics_internal_1.extend({}, exports.crossTabFieldName, { localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabFieldSortBySummaryInfo.FieldName' }), exports.crossTabSummaryType] };
var summaryDisplayTypeValuesArray = _metaUtils_1.valuesArrayAsEnumWithLocalizationId(pivotgridfield_1.summaryDisplayType, 'DevExpress.XtraReports.UI.CrossTab.SummaryDisplayType.');
var crossTabSummaryDisplayType = { propertyName: 'summaryDisplayType', modelName: '@SummaryDisplayType', displayName: 'Summary Display Type', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabDataField.SummaryDisplayType', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Default', valuesArray: summaryDisplayTypeValuesArray };
exports.crossTabDataFieldInfoBase = [exports.crossTabSummaryType, crossTabSummaryDisplayType];
exports.crossTabDataFieldInfo = exports.crossTabDataFieldInfoBase.concat([exports.crossTabFieldName]);
exports.sortOrderdefaultValAscending = analytics_internal_1.extend({}, metadata_1.sortOrder, { defaultVal: 'Ascending' });
exports.crossTabGroupFieldInfoBase = [exports.sortOrderdefaultValAscending, exports.crossTabGroupInterval, exports.crossTabGroupIntervalNumericRange, exports.crossTabSortBySummaryInfo];
exports.crossTabGroupFieldInfo = exports.crossTabGroupFieldInfoBase.concat([exports.crossTabFieldName]);
exports.rowFields = { propertyName: 'rowFields', modelName: 'RowFields', localizationId: 'DevExpress.XtraReports.UI.XRCrossTab.RowFields', displayName: 'Row Fields', array: true, editor: { custom: 'dx-commonCollection' }, template: '#dxrd-collectionItemWithAccordion', alwaysSerialize: true };
exports.columnFields = { propertyName: 'columnFields', modelName: 'ColumnFields', localizationId: 'DevExpress.XtraReports.UI.XRCrossTab.ColumnFields', displayName: 'Column Fields', array: true, editor: { custom: 'dx-commonCollection' }, template: '#dxrd-collectionItemWithAccordion', alwaysSerialize: true };
exports.dataFields = { propertyName: 'dataFields', modelName: 'DataFields', localizationId: 'DevExpress.XtraReports.UI.XRCrossTab.DataFields', displayName: 'Data Fields', array: true, editor: { custom: 'dx-commonCollection' }, template: '#dxrd-collectionItemWithAccordion', alwaysSerialize: true };


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CornerHeaderDisplayMode;
(function (CornerHeaderDisplayMode) {
    CornerHeaderDisplayMode[CornerHeaderDisplayMode["None"] = 0] = "None";
    CornerHeaderDisplayMode[CornerHeaderDisplayMode["RowFieldNames"] = 1] = "RowFieldNames";
    CornerHeaderDisplayMode[CornerHeaderDisplayMode["ColumnFieldNames"] = 2] = "ColumnFieldNames";
})(CornerHeaderDisplayMode = exports.CornerHeaderDisplayMode || (exports.CornerHeaderDisplayMode = {}));
var CellKind;
(function (CellKind) {
    CellKind[CellKind["None"] = 0] = "None";
    CellKind[CellKind["Corner"] = 1] = "Corner";
    CellKind[CellKind["RowHeader"] = 2] = "RowHeader";
    CellKind[CellKind["RowTotalHeader"] = 3] = "RowTotalHeader";
    CellKind[CellKind["RowTotal"] = 4] = "RowTotal";
    CellKind[CellKind["ColumnHeader"] = 5] = "ColumnHeader";
    CellKind[CellKind["ColumnTotalHeader"] = 6] = "ColumnTotalHeader";
    CellKind[CellKind["ColumnTotal"] = 7] = "ColumnTotal";
    CellKind[CellKind["Data"] = 8] = "Data";
    CellKind[CellKind["DataHeader"] = 9] = "DataHeader";
    CellKind[CellKind["GrandTotal"] = 10] = "GrandTotal";
    CellKind[CellKind["EmptyHeader"] = 11] = "EmptyHeader";
    CellKind[CellKind["Empty"] = 12] = "Empty";
})(CellKind = exports.CellKind || (exports.CellKind = {}));
var TotalHeaderPosition;
(function (TotalHeaderPosition) {
    TotalHeaderPosition[TotalHeaderPosition["Inner"] = 0] = "Inner";
    TotalHeaderPosition[TotalHeaderPosition["Outer"] = 1] = "Outer";
})(TotalHeaderPosition = exports.TotalHeaderPosition || (exports.TotalHeaderPosition = {}));
var TotalsPosition;
(function (TotalsPosition) {
    TotalsPosition[TotalsPosition["AfterData"] = 0] = "AfterData";
    TotalsPosition[TotalsPosition["BeforeData"] = 1] = "BeforeData";
})(TotalsPosition = exports.TotalsPosition || (exports.TotalsPosition = {}));
var DataFieldLayout;
(function (DataFieldLayout) {
    DataFieldLayout[DataFieldLayout["InRow"] = 0] = "InRow";
    DataFieldLayout[DataFieldLayout["InColumn"] = 1] = "InColumn";
})(DataFieldLayout = exports.DataFieldLayout || (exports.DataFieldLayout = {}));


/***/ }),
/* 59 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Wizard.Internal;

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _dataSourceHelper_1 = __webpack_require__(146);
var extension_1 = __webpack_require__(180);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var analytics_wizard_internal_1 = __webpack_require__(59);
var ko = __webpack_require__(1);
var _utils_1 = __webpack_require__(61);
function addDataSourceToReport(dataSourceHelper, report, undoEngine, itemsProvider, dataSource, forceAssigning) {
    if (forceAssigning === void 0) { forceAssigning = false; }
    undoEngine.start();
    var findFirstDataSourceWithSerializer = analytics_internal_1.findFirstItemMatchesCondition(dataSourceHelper.usedDataSources.peek(), function (item) { return !!item.dataSerializer && item.dataSerializer !== dataSource.dataSerializer; });
    var result = dataSourceHelper.addDataSource(dataSource);
    if (!findFirstDataSourceWithSerializer && dataSource.dataSerializer) {
        report.extensions.peek().forEach(function (item, index) {
            if (item.key.peek() === _dataSourceHelper_1.DataSourceHelper.defaultReportExtensionKey) {
                report.extensions.splice(index, 1);
            }
        });
        var newDataSerializer = new extension_1.ExtensionModel({});
        newDataSerializer.key = ko.observable(_dataSourceHelper_1.DataSourceHelper.defaultReportExtensionKey);
        newDataSerializer.value = ko.observable(dataSource.dataSerializer);
        report.extensions.push(newDataSerializer);
    }
    if (forceAssigning || !report.dataSource()) {
        report.dataSource(result);
        itemsProvider
            .getItems(new analytics_utils_1.PathRequest(dataSource.id || dataSource.ref))
            .done(function (dataMembers) {
            var lists = dataMembers.filter(function (item) { return _utils_1.isList(item); });
            if (dataMembers.length === 0 || includeNonListItem(dataMembers)) {
                report.dataMember('');
            }
            else if (!analytics_internal_1.find(lists, function (item) { return item.name === report.dataMember(); })) {
                report.dataMember(lists[0].name);
            }
        });
    }
    undoEngine.end();
}
exports.addDataSourceToReport = addDataSourceToReport;
function includeNonListItem(dataMembers) {
    return dataMembers.some(function (field) { return !_utils_1.isList(field) || field.specifics === analytics_wizard_internal_1.defaultObjectDataSourceItemSpecifics; });
}
exports.includeNonListItem = includeNonListItem;
function removeDataSourceFromReport(dataSourceHelper, reportDataSource, undoEngine, dataSource) {
    undoEngine().start();
    dataSourceHelper.removeDataSource(dataSource);
    if (reportDataSource() === dataSource.data) {
        reportDataSource(dataSourceHelper.findDataSourceInfoByRef('none').data);
    }
    undoEngine().end();
}
exports.removeDataSourceFromReport = removeDataSourceFromReport;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var parameter_1 = __webpack_require__(29);
var settings_1 = __webpack_require__(12);
var analytics_utils_1 = __webpack_require__(0);
var analytics_elements_1 = __webpack_require__(5);
var analytics_widgets_internal_1 = __webpack_require__(8);
var $ = __webpack_require__(3);
function selectTreeListItem(item, event) {
    if (item instanceof analytics_widgets_internal_1.TreeListItemViewModel && !item.isMultiSelected() && !item.isSelected())
        item.toggleSelected(item, event);
}
exports.selectTreeListItem = selectTreeListItem;
function getExpressionPath(container, pathRequest) {
    var fullPath = pathRequest instanceof analytics_utils_1.PathRequest ? pathRequest.fullPath : pathRequest;
    if (fullPath.indexOf(parameter_1.Parameter.ParametersRefString + '.') === 0) {
        var pathParts = fullPath.split('.');
        return '?' + pathParts[pathParts.length - 1];
    }
    var path = pathRequest instanceof analytics_utils_1.PathRequest ? pathRequest.path : pathRequest;
    var dataSourceInfo = _getDataSourceDataMember_1.getDataSourceDataMember(container);
    var prefix = dataSourceInfo.dataMember && (dataSourceInfo.dataMember + '.');
    path = (prefix && path.indexOf(prefix) === 0) ? path.slice(prefix.length) : path;
    return '[' + path + ']';
}
exports.getExpressionPath = getExpressionPath;
function getFirstSurfaceParentByType(target, checkBandsType) {
    return checkBandsType(target) ? target : getFirstSurfaceParentByType(target.parent, checkBandsType);
}
exports.getFirstSurfaceParentByType = getFirstSurfaceParentByType;
function getUsefulReportWidth(surface) {
    var report = surface && surface.getControlModel();
    return surface ?
        analytics_elements_1.Size.fromString(((report.pageWidth() - report.margins.left() - report.margins.right()) / (surface.dpi() / 100)).toString() + ', 23') :
        analytics_elements_1.Size.fromString('200, 23');
}
exports.getUsefulReportWidth = getUsefulReportWidth;
function createPictureBox(container, bindingPath, dataBindingMode) {
    var newControl = container.createChild($.extend({ '@ControlType': 'XRPictureBox' }, settings_1.controlsFactory().controlsMap['XRPictureBox'].defaultVal));
    if (dataBindingMode === _dataBindingMode_1.DataBindingMode.Bindings) {
        var binding = newControl['dataBindings']().findBinding('ImageSource');
        binding.dataMember(bindingPath);
    }
    else {
        var binding = newControl['expressionObj'].getExpression('ImageSource', 'BeforePrint');
        binding.value(getExpressionPath(container, bindingPath));
    }
    return newControl;
}
exports.createPictureBox = createPictureBox;
exports._checkBandsType = function (target) { return target instanceof xrBand_1.BandSurface || target instanceof xrVerticalBand_1.VerticalBandSurface; };
function createSimpleControl(controlType, dropTargetControl) {
    return dropTargetControl.createChild($.extend({ '@ControlType': controlType }, settings_1.controlsFactory().controlsMap[controlType].defaultVal));
}
exports.createSimpleControl = createSimpleControl;
function assignBinding(control, container, bindingName, item, dataBindingMode) {
    if (dataBindingMode === _dataBindingMode_1.DataBindingMode.Bindings) {
        var binding = control.dataBindings().findBinding(bindingName);
        if (item.path.indexOf('Parameters.') === -1) {
            binding.dataMember(new analytics_utils_1.PathRequest(item.path).path);
        }
        else {
            binding.dataMember(item.data.name);
            binding.parameter(item.data);
        }
    }
    else {
        var binding = control.expressionObj.getExpression(bindingName, 'BeforePrint');
        binding.value(getExpressionPath(container, new analytics_utils_1.PathRequest(item.path)));
    }
    return control;
}
exports.assignBinding = assignBinding;
function isList(data) {
    return data.isList === true || data.specifics === 'List' || data.specifics === 'ListSource';
}
exports.isList = isList;
function _disableCanGrowProperty(model) {
    if (model.controlType === 'XRTable') {
        model.rows().forEach(function (row) { return row.cells().forEach(function (cell) { return _disableCanGrowProperty(cell); }); });
    }
    if (model['canGrow'] && model['canGrow']()) {
        model['canGrow'](false);
    }
}
function dragDropComponentAdded(model, parent) {
    if (!(parent instanceof xrVerticalBand_1.VerticalBandViewModel))
        return;
    _disableCanGrowProperty(model);
}
exports.dragDropComponentAdded = dragDropComponentAdded;
var xrBand_1 = __webpack_require__(15);
var xrVerticalBand_1 = __webpack_require__(25);
var _getDataSourceDataMember_1 = __webpack_require__(220);
var _dataBindingMode_1 = __webpack_require__(33);


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _dateUtils_1 = __webpack_require__(109);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
function createInnerActionsWithPopover(text, id, actions, template) {
    var object = {
        text: text,
        imageClassName: 'dxrd-image-add',
        imageTemplateName: 'dxrd-svg-operations-add',
        disabled: ko.observable(false),
        id: id,
        _visible: ko.observable(false),
        popoverVisible: null,
        togglePopoverVisible: null,
        closePopover: null,
        templateName: 'dxrd-collectionactions-template',
        contentTemplate: template,
        getContainer: function (element, selector) {
            return $(element).parent().find(selector);
        },
        actions: actions
    };
    object.popoverVisible = ko.pureComputed(function () {
        return object._visible();
    });
    object.togglePopoverVisible = function () {
        object._visible(!object._visible());
    };
    object.closePopover = function () {
        object._visible(false);
    };
    return [object];
}
exports.createInnerActionsWithPopover = createInnerActionsWithPopover;
function _isNumericTypeSpecific(specific) {
    return ['Integer', 'Float', 'CalcInteger', 'CalcFloat', 'SumInteger', 'SumFloat'].indexOf(specific) > -1;
}
exports._isNumericTypeSpecific = _isNumericTypeSpecific;
function _isDateTypeSpecific(specific) {
    return ['Date', 'CalcDate', 'SumDate'].indexOf(specific) > -1;
}
exports._isDateTypeSpecific = _isDateTypeSpecific;
function _getUnconvertiblePoint(propertyName, oldValue, newValue, points) {
    var filter = function (_) { return false; };
    if ((oldValue === 'Numerical' && newValue === 'DateTime') || (oldValue === 'DateTime' && newValue === 'Numerical')) {
        filter = function (point) { return point[propertyName]() !== null && point[propertyName]() !== void 0 && point[propertyName]() !== ''; };
    }
    if (oldValue === 'Auto' || oldValue === 'Qualitative')
        if (newValue === 'Numerical') {
            filter = function (point) {
                var number = parseInt(point[propertyName]());
                return isNaN(number) || (typeof number === 'number' && JSON.stringify(number) !== point[propertyName]().toString());
            };
        }
        else if (newValue === 'DateTime') {
            filter = function (point) {
                var date = analytics_internal_1.parseDate(point[propertyName](), false, 'MM/dd/yyyy');
                if (!date)
                    date = _dateUtils_1.parseDate(point[propertyName]());
                return !date;
            };
        }
    return points.filter(filter)[0] || null;
}
exports._getUnconvertiblePoint = _getUnconvertiblePoint;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
function __createLocalizationProperties(target, format) {
    if (format === void 0) { format = '{0}'; }
    return target.getInfo().filter(function (x) { return x.localizable && x.modelName; }).map(function (x) {
        return new LocalizedProperty(analytics_internal_1.formatUnicorn(format, x.modelName.substr(1)), target['_' + x.propertyName] || target[x.propertyName], x);
    });
}
exports.__createLocalizationProperties = __createLocalizationProperties;
var DefaultLocalizationProvider = (function (_super) {
    __extends(DefaultLocalizationProvider, _super);
    function DefaultLocalizationProvider(_model) {
        var _this = _super.call(this) || this;
        _this._model = _model;
        return _this;
    }
    DefaultLocalizationProvider.prototype.dispose = function () {
        this._localizationInfo = null;
    };
    DefaultLocalizationProvider.prototype.getLocalizationProperty = function (propertyName) {
        return this.getLocalizationProperties().filter(function (x) { return x.propertyName === propertyName; })[0];
    };
    DefaultLocalizationProvider.prototype.getLocalizationProperties = function () {
        if (!this._localizationInfo) {
            this._localizationInfo = __createLocalizationProperties(this._model);
        }
        return this._localizationInfo;
    };
    DefaultLocalizationProvider.prototype.applyLocalization = function (propertyName, propertyValue) {
        this.getLocalizationProperties().filter(function (x) { return x.propertyName === propertyName; }).forEach(function (x) { return x.applyLocalization(propertyValue); });
    };
    return DefaultLocalizationProvider;
}(analytics_utils_1.Disposable));
exports.DefaultLocalizationProvider = DefaultLocalizationProvider;
var TableOfContentLocalizationProvider = (function (_super) {
    __extends(TableOfContentLocalizationProvider, _super);
    function TableOfContentLocalizationProvider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableOfContentLocalizationProvider.prototype.getLocalizationProperties = function () {
        if (!this._localizationInfo) {
            this._localizationInfo = [].concat.apply(_super.prototype.getLocalizationProperties.call(this), [
                __createLocalizationProperties(this._model.levelTitle, 'LevelTitle.{0}')
            ]);
        }
        return [].concat.apply(this._localizationInfo, this._model.levels().map(function (level, i) {
            return __createLocalizationProperties(level, analytics_internal_1.formatUnicorn('Levels.{0}.', i) + '{0}');
        }));
    };
    return TableOfContentLocalizationProvider;
}(DefaultLocalizationProvider));
exports.TableOfContentLocalizationProvider = TableOfContentLocalizationProvider;
var ReportLocalizationProvider = (function (_super) {
    __extends(ReportLocalizationProvider, _super);
    function ReportLocalizationProvider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ReportLocalizationProvider.prototype.getLocalizationProperties = function () {
        if (!this._localizationInfo) {
            this._localizationInfo = [].concat.apply(_super.prototype.getLocalizationProperties.call(this), __createLocalizationProperties(this._model.watermark, 'Watermark.{0}'));
        }
        return this._localizationInfo;
    };
    return ReportLocalizationProvider;
}(DefaultLocalizationProvider));
exports.ReportLocalizationProvider = ReportLocalizationProvider;
var ChartLocalizationProvider = (function (_super) {
    __extends(ChartLocalizationProvider, _super);
    function ChartLocalizationProvider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChartLocalizationProvider.prototype.getLocalizationProperties = function () {
        return [].concat.apply(_super.prototype.getLocalizationProperties.call(this), this._model.chart.titles().map(function (title, i) {
            return __createLocalizationProperties(title, analytics_internal_1.formatUnicorn('Titles.{0}.', i) + '{0}');
        }));
    };
    return ChartLocalizationProvider;
}(DefaultLocalizationProvider));
exports.ChartLocalizationProvider = ChartLocalizationProvider;
var LocalizedProperty = (function () {
    function LocalizedProperty(propertyName, value, info) {
        this.propertyName = propertyName;
        this.value = value;
        this.info = info;
    }
    LocalizedProperty.prototype.applyLocalization = function (value) {
        var newValue = this.info.from ? ko.unwrap(this.info.from(value)) : value;
        var componentValueAsValue = ko.unwrap(this.value);
        if (this.value.getInfo) {
            var info = componentValueAsValue.getInfo();
            info.forEach(function (info) {
                componentValueAsValue[info.propertyName] && componentValueAsValue[info.propertyName](newValue[info.propertyName]());
            });
        }
        else {
            this.value(newValue);
        }
    };
    return LocalizedProperty;
}());
exports.LocalizedProperty = LocalizedProperty;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var calculatedField_1 = __webpack_require__(181);
var analytics_utils_1 = __webpack_require__(0);
var CalculatedField = (function (_super) {
    __extends(CalculatedField, _super);
    function CalculatedField(model, serializer) {
        var _this = _super.call(this) || this;
        _this.templateName = 'dx-treelist-item';
        _this.contenttemplate = 'dxrd-calculatedfield-content';
        _this.isList = false;
        _this.isCalculated = true;
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(_this, model);
        return _this;
    }
    CalculatedField.prototype.getInfo = function () {
        return calculatedField_1.calculatedFieldSerializationInfo;
    };
    Object.defineProperty(CalculatedField.prototype, "displayName", {
        get: function () {
            return this['displayNameObject']() || this.calculatedFieldName();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalculatedField.prototype, "name", {
        get: function () {
            return this.calculatedFieldName();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalculatedField.prototype, "specifics", {
        get: function () {
            var type = this.fieldType();
            if (['Byte', 'Int16', 'Int32'].indexOf(type) > -1) {
                return 'calcinteger';
            }
            else if (['Float', 'Double', 'Decimal'].indexOf(type) > -1) {
                return 'calcfloat';
            }
            else if (['DateTime', 'TimeSpan'].indexOf(type) > -1) {
                return 'calcdate';
            }
            return 'calc' + (type === 'None' ? 'default' : type.toLowerCase());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalculatedField.prototype, "type", {
        get: function () {
            return this.fieldType();
        },
        enumerable: true,
        configurable: true
    });
    CalculatedField.prototype.lockedInUserDesigner = function () {
        return false;
    };
    return CalculatedField;
}(analytics_utils_1.Disposable));
exports.CalculatedField = CalculatedField;


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bandSurfaceCollapsedHeight_1 = __webpack_require__(51);
function sortBands(band1, band2) {
    return getBandWeight(band1) - getBandWeight(band2);
}
exports.sortBands = sortBands;
function setMarkerWidth(bandHolder, levelCount, currentLevel) {
    if (currentLevel === void 0) { currentLevel = 0; }
    if (bandHolder && bandHolder.bands().length !== 0) {
        bandHolder.bands().forEach(function (band) {
            band.markerWidth(bandSurfaceCollapsedHeight_1.bandSurfaceCollapsedHeight * (levelCount - currentLevel));
            setMarkerWidth(band.bandsHolder, levelCount, currentLevel + 1);
        });
        bandHolder.verticalBandsContainer && bandHolder.verticalBandsContainer.markerWidth(bandSurfaceCollapsedHeight_1.bandSurfaceCollapsedHeight * (levelCount - currentLevel));
    }
}
exports.setMarkerWidth = setMarkerWidth;
function getLevelCount(bandHolder) {
    var result = 0, maxLevelCount = 0;
    if (!bandHolder)
        return result;
    if (bandHolder.bands().length !== 0) {
        bandHolder.bands().forEach(function (band) {
            var levelCount = getLevelCount(band.bandsHolder);
            if (levelCount > maxLevelCount) {
                maxLevelCount = levelCount;
            }
        });
        result = maxLevelCount + 1;
    }
    else if (bandHolder.verticalBandsContainer && bandHolder.verticalBandsContainer.visible) {
        result = maxLevelCount + 1;
    }
    return result;
}
exports.getLevelCount = getLevelCount;
function insertBand(bands, newBand) {
    if (newBand.controlType === 'GroupHeaderBand' || newBand.controlType === 'GroupFooterBand' || newBand.controlType === 'DetailReportBand' || newBand.controlType === 'SubBand') {
        var array = generateArray(bands(), newBand.controlType);
        var level = array.length;
        for (var i = 0; i < array.length; i++) {
            if (!array[i]) {
                level = i;
                break;
            }
        }
        newBand._level(level);
    }
    insertBandSorted(bands, newBand);
}
exports.insertBand = insertBand;
function insertBandSorted(bands, newBand) {
    if (newBand) {
        var cloneBands = bands().slice(0);
        var previousBandIndex = bands().indexOf(newBand);
        if (previousBandIndex === -1) {
            cloneBands.push(newBand);
        }
        cloneBands.sort(sortBands);
        var index = cloneBands.indexOf(newBand);
        if (previousBandIndex !== -1) {
            bands.splice(previousBandIndex, 1);
        }
        bands.splice(index, 0, newBand);
    }
}
var bandsWeight = {
    'TopMarginBand': 100,
    'ReportHeaderBand': 200,
    'PageHeaderBand': 300,
    'GroupHeaderBand': 400,
    'DetailBand': 500,
    'VerticalHeaderBand': 500,
    'VerticalDetailBand': 600,
    'VerticalTotalBand': 700,
    'DetailReportBand': 800,
    'GroupFooterBand': 900,
    'ReportFooterBand': 1000,
    'PageFooterBand': 1100,
    'BottomMarginBand': 1200
};
function getBandWeight(band) {
    if (band.controlType === 'GroupHeaderBand') {
        return bandsWeight[band.controlType] - (band['level']() || 0);
    }
    if (band.controlType === 'GroupFooterBand') {
        return bandsWeight[band.controlType] + (band['level']() || 0);
    }
    if (band.controlType === 'DetailReportBand') {
        return bandsWeight[band.controlType] + (band['level']() || -1);
    }
    return bandsWeight[band.controlType];
}
function initGroupIndexes(largeGroupBandCollection, smallGroupBandCollection) {
    var replaces = {};
    var busyIndexes = [];
    var findClosestIndex = function (currentIndex) {
        var index = currentIndex;
        var findClosestAvailableIndex = function (currentIndex, inc) {
            var newIndex = currentIndex + inc;
            if (newIndex === largeGroupBandCollection.length || newIndex === -1) {
                return undefined;
            }
            if (busyIndexes.indexOf(currentIndex + inc) !== -1) {
                return newIndex;
            }
            else {
                return findClosestAvailableIndex(newIndex, inc);
            }
        };
        if (busyIndexes.indexOf(currentIndex) !== -1) {
            index = findClosestAvailableIndex(currentIndex, -1);
            if (index === undefined)
                index = findClosestAvailableIndex(currentIndex, 1);
        }
        return index;
    };
    for (var i = 0; i < largeGroupBandCollection.length; i++) {
        var currentLevel = largeGroupBandCollection[i]._level;
        if (!replaces[currentLevel()])
            replaces[currentLevel()] = [i];
        else {
            replaces[currentLevel()].push(i);
        }
        currentLevel(i);
    }
    for (var i = 0; i < smallGroupBandCollection.length; i++) {
        var index = i;
        var currentLevel = smallGroupBandCollection[i]._level;
        if (replaces[currentLevel()] && replaces[currentLevel()].length > 0) {
            index = replaces[currentLevel()].splice(0, 1)[0];
        }
        else if (currentLevel() < largeGroupBandCollection.length) {
            index = findClosestIndex(currentLevel());
        }
        else {
            index = findClosestIndex(i);
        }
        currentLevel(index);
        busyIndexes.push(index);
    }
}
function initLevels(bands) {
    ['DetailReportBand', 'SubBand'].map(function (type) {
        return bands.filter(function (b) { return b.controlType === type; }).sort(sortBands);
    }).forEach(function (items) {
        for (var i = 0; i < items.length; i++) {
            items[i]._level(i);
        }
    });
    var groupHeaderBands = bands.filter(function (b) { return b.controlType === 'GroupHeaderBand'; }).sort(sortBands).reverse();
    var groupFooterBands = bands.filter(function (b) { return b.controlType === 'GroupFooterBand'; }).sort(sortBands);
    if (groupFooterBands.length > groupHeaderBands.length) {
        initGroupIndexes(groupFooterBands, groupHeaderBands);
    }
    else {
        initGroupIndexes(groupHeaderBands, groupFooterBands);
    }
}
exports.initLevels = initLevels;
function generateArray(allbands, controlType, newLevel) {
    var array = allbands.filter(function (x) { return x.controlType === controlType; });
    newLevel = newLevel || array.length - 1;
    array = controlType === 'GroupHeaderBand' ? array.reverse() : array;
    var length = (array.length > 0 && array[array.length - 1].level() > newLevel ? array[array.length - 1].level() : newLevel) + 1;
    var j = 0;
    var fakeArray = [];
    for (var i = 0; i < length; i++) {
        if (j < array.length && array[j]._level() === i) {
            fakeArray.push(array[j]);
            j++;
        }
        else {
            fakeArray.push(undefined);
        }
    }
    return fakeArray;
}
exports.generateArray = generateArray;
function _getUnitAbsoluteRect(bandSurface, getPositionInParent) {
    var parentAbsoluteRect = bandSurface.parent && bandSurface.parent['_unitAbsoluteRect'];
    if (parentAbsoluteRect) {
        var _unitPosition = getPositionInParent();
        return {
            top: parentAbsoluteRect.top + _unitPosition.y(), left: parentAbsoluteRect.left + _unitPosition.x(),
            right: parentAbsoluteRect.left + _unitPosition.x() + bandSurface._control.size.width(), bottom: parentAbsoluteRect.top + _unitPosition.y() + bandSurface._control.size.height(),
            width: bandSurface._control.size.width(), height: bandSurface._control.size.height()
        };
    }
    else {
        return {
            top: 0, left: 0,
            right: bandSurface._control.size.width(), bottom: bandSurface._control.size.height(),
            width: bandSurface._control.size.width(), height: bandSurface._control.size.height()
        };
    }
}
exports._getUnitAbsoluteRect = _getUnitAbsoluteRect;


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrBand_1 = __webpack_require__(15);
var xrVerticalBand_1 = __webpack_require__(25);
var _bandUtils_1 = __webpack_require__(65);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_1 = __webpack_require__(4);
var bandSurfaceCollapsedHeight_1 = __webpack_require__(51);
var xrSubband_1 = __webpack_require__(122);
var _parameterUtils_1 = __webpack_require__(46);
var _bandContainerUtils_1 = __webpack_require__(186);
var DetailReportBand = (function (_super) {
    __extends(DetailReportBand, _super);
    function DetailReportBand(band, parent, serializer) {
        var _this = _super.call(this, band, parent, serializer) || this;
        _this._disposables.push(_this.dataSource.subscribe(function (newVal) {
            if (!newVal) {
                _this.dataMember(null);
            }
        }));
        var dataMember = ko.pureComputed(function () {
            return analytics_internal_1.getFullPath(_this.getPath('dataMember'), _this.dataMember());
        });
        var disabled = ko.pureComputed(function () { return !_this.dataSource(); });
        _this.filterString = new analytics_widgets_1.FilterStringOptions(_this._filterString, dataMember, disabled);
        _this._disposables.push(dataMember);
        _this._disposables.push(disabled);
        _this.filterString.helper.parameters = ko.computed(function () {
            return _parameterUtils_1.collectAvailableParameters(_this.root['parameters']());
        });
        _this._disposables.push(_this.filterString.helper.parameters);
        return _this;
    }
    DetailReportBand.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.bands);
        this.resetObservableArray(this.bands);
    };
    DetailReportBand.prototype.initHeight = function () {
        var _this = this;
        var oldHeight = 0;
        this._disposables.push(this.height = ko.pureComputed({
            read: function () {
                if (analytics_internal_1.checkModelReady(_this.root)) {
                    var verticalBand = _this.bands().filter(function (x) { return x instanceof xrVerticalBand_1.VerticalBandViewModel; })[0];
                    var height = 0;
                    if (verticalBand)
                        height = verticalBand.height();
                    oldHeight = _this.bands().filter(function (x) { return !(x instanceof xrVerticalBand_1.VerticalBandViewModel); }).reduce(function (sum, b) { return sum + b.height(); }, height);
                }
                return oldHeight;
            },
            write: function (newHeight) {
                if (analytics_internal_1.checkModelReady(_this.root)) {
                    var deltaHeight = newHeight - _this.height.peek(), oldHeight = _this.bands()[_this.bands().length - 1].height.peek();
                    _this.bands()[_this.bands().length - 1].height(oldHeight + deltaHeight);
                }
            }
        }));
    };
    DetailReportBand.prototype.createChildsArray = function (band, serializer) {
        var _this = this;
        var factory = this.getControlFactory();
        this.bands = analytics_internal_1.deserializeChildArray(band.Bands, this, function (item) {
            return new (factory.controlsMap[item['@ControlType']].type || xrBand_1.BandViewModel)(item, _this, serializer);
        });
        var bands = this.bands.peek();
        if (bands) {
            _bandUtils_1.initLevels(bands);
            bands.sort(_bandUtils_1.sortBands);
        }
        if (this.bands().length === 0)
            this.createChild({ '@ControlType': 'DetailBand', '@HeightF': this.height() });
    };
    DetailReportBand.prototype.addChild = function (control) {
        if (control instanceof xrBand_1.BandViewModel && !(control instanceof xrSubband_1.SubBandViewModel)) {
            _bandContainerUtils_1.addBandToContainer(this, control);
        }
    };
    return DetailReportBand;
}(xrBand_1.BandViewModel));
exports.DetailReportBand = DetailReportBand;
var DetailReportBandSurface = (function (_super) {
    __extends(DetailReportBandSurface, _super);
    function DetailReportBandSurface(band, context) {
        var _this = _super.call(this, band, context, {
            _height: function (o) { return o.height; }
        }) || this;
        _this.templateName = 'dxrd-detailreportband';
        _this.selectionTemplate = 'dxrd-detailreportband-selection';
        _this.leftMarginTemplate = 'dxrd-detail-report-band-coordinate-grid';
        _this._disposables.push(ko.computed(function () {
            var isSomeParentCollapsed = _this.collapsed() || _this.isSomeParentCollapsed();
            _this.bandsHolder.bands().forEach(function (band) {
                band.isSomeParentCollapsed(isSomeParentCollapsed);
            });
        }));
        return _this;
    }
    DetailReportBandSurface.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
    };
    DetailReportBandSurface.prototype.getChildrenCollection = function () {
        return this.bandsHolder.bands;
    };
    DetailReportBandSurface.prototype.createUnderCursor = function () {
        var _this = this;
        var _underCursor = ko.observable(new analytics_internal_1.HoverInfo());
        this._disposables.push(this.underCursor = ko.pureComputed({
            read: function () {
                _underCursor().isOver = _this.bandsHolder.checkUnderCursor();
                return _underCursor();
            },
            write: function (val) { _underCursor(val); }
        }));
    };
    DetailReportBandSurface.prototype.getTotalHeight = function () {
        return this.bandsHolder.getTotalHeight();
    };
    DetailReportBandSurface.prototype.getHeight = function () {
        if (this.collapsed()) {
            return bandSurfaceCollapsedHeight_1.bandSurfaceCollapsedHeight;
        }
        else {
            return this.bandsHolder.getHeight();
        }
    };
    DetailReportBandSurface.prototype.getHasOwnRuler = function () {
        return this.collapsed();
    };
    return DetailReportBandSurface;
}(xrBand_1.BandSurface));
exports.DetailReportBandSurface = DetailReportBandSurface;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var xrReport_1 = __webpack_require__(16);
function isHeaderOrFooterBandType(band) {
    return ((band.controlType === 'ReportHeaderBand' || band.controlType === 'ReportFooterBand')
        && (band.parentModel() instanceof xrReport_1.ReportViewModel)) || (band.controlType === 'SubBand' && isHeaderOrFooterBandType(band.parentModel()));
}
exports.isHeaderOrFooterBandType = isHeaderOrFooterBandType;
function getExistTableOfContents(band) {
    var toc = analytics_internal_1.findFirstItemMatchesCondition(band.controls(), function (item) { return item.controlType === 'XRTableOfContents'; });
    return toc;
}
exports.getExistTableOfContents = getExistTableOfContents;


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var pivotgridfield_1 = __webpack_require__(131);
var xrControl_1 = __webpack_require__(10);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
function comparerFields(firstField, secondField) {
    return firstField.areaIndex() - secondField.areaIndex();
}
var XRPivotGridViewModel = (function (_super) {
    __extends(XRPivotGridViewModel, _super);
    function XRPivotGridViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, parent, serializer) || this;
        _this.fields = analytics_utils_1.deserializeArray(model && model.Fields || [], function (item) { return new pivotgridfield_1.PivotGridFieldViewModel(item, _this, serializer); });
        _this._disposables.push(_this.fields.subscribe(function () {
            ['FilterArea', 'DataArea', 'ColumnArea', 'RowArea'].forEach(function (area) {
                var areaFields = _this.getFieldsFromArea(area);
                for (var index = 0; index < areaFields.length; index++) {
                    areaFields[index].areaIndex(index);
                }
            });
        }));
        _this.addFieldToArea = function (area) {
            if (_this.lockedInUserDesigner())
                return;
            var newField = new pivotgridfield_1.PivotGridFieldViewModel({ '@ControlType': 'PivotGridField', '@Area': area }, _this, serializer);
            newField.index(_this.fields().length);
            newField.areaIndex(_this.getFieldsFromArea(area).length);
            _this.fields.push(newField);
        };
        _this._initCriteriaString();
        return _this;
    }
    XRPivotGridViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.fields);
        this.resetObservableArray(this.fields);
    };
    XRPivotGridViewModel.prototype._initCriteriaString = function () {
        var _this = this;
        this.prefilter.criteriaString = new analytics_widgets_1.FilterStringOptions(this.prefilter._criteriaString);
        this.prefilter.criteriaString.helper.canChoiceParameters = false;
        this.prefilter.criteriaString.helper.canChoiceProperty = false;
        this.prefilter.criteriaString.helper.getDisplayPropertyName = function (path, name) {
            var field = analytics_internal_1.find(_this.fields.peek(), function (f) { return f.name() === name; });
            return $.Deferred()
                .resolve(field ? field.getDisplayName() : name)
                .promise();
        };
        this.prefilter.parent = this;
    };
    XRPivotGridViewModel.prototype.removeChild = function (selectedField) {
        this.fields.splice(this.fields().indexOf(selectedField), 1);
    };
    XRPivotGridViewModel.prototype.getFieldsFromArea = function (area) {
        var result = [];
        result.push.apply(result, this.fields().filter(function (field) { return field.area() === area; }));
        return result.sort(comparerFields);
    };
    XRPivotGridViewModel.prototype.getPath = function (propertyName) {
        return this.dsHelperProvider() && this.dsHelperProvider().getDataSourcePath(this.dataSource());
    };
    return XRPivotGridViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRPivotGridViewModel = XRPivotGridViewModel;
var XRPivotGridSurface = (function (_super) {
    __extends(XRPivotGridSurface, _super);
    function XRPivotGridSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this.contenttemplate = 'dxrd-pivotgrid-content';
        _this.selectiontemplate = 'dxrd-pivotgrid-selection';
        _this._disposables.push(_this.filterFields = ko.pureComputed(function () {
            return _this.getAreaFields('FilterArea');
        }));
        _this._disposables.push(_this.dataFields = ko.pureComputed(function () {
            return _this.getAreaFields('DataArea');
        }));
        _this._disposables.push(_this.columnFields = ko.pureComputed(function () {
            return _this.getAreaFields('ColumnArea');
        }));
        _this._disposables.push(_this.rowFields = ko.pureComputed(function () {
            return _this.getAreaFields('RowArea');
        }));
        _this._disposables.push(_this.totalsHeight = ko.pureComputed(function () {
            return _this.columnFields().length > 0 ? _this.columnFields().length * pivotgridfield_1.PivotGridFieldViewModel.fieldHeight : pivotgridfield_1.PivotGridFieldViewModel.fieldHeight;
        }));
        _this._disposables.push(_this.rowHeaderHeight = ko.pureComputed(function () {
            return _this.totalsHeight() + (_this.dataFields().length > 0 ? pivotgridfield_1.PivotGridFieldViewModel.fieldHeight : 0) + 8;
        }));
        _this._disposables.push(_this.totalsDataFieldWidth = ko.pureComputed(function () {
            return _this.getTotalsAreaFieldWidth('DataArea', context.zoom());
        }));
        _this._disposables.push(_this.totalsRowFieldWidth = ko.pureComputed(function () {
            return _this.getTotalsAreaFieldWidth('RowArea', context.zoom());
        }));
        return _this;
    }
    XRPivotGridSurface.prototype._getChildrenHolderName = function () { return 'fields'; };
    XRPivotGridSurface.prototype.getAreaFields = function (area) {
        return this.fields().filter(function (field) { return field.area() === area; }).sort(comparerFields);
    };
    XRPivotGridSurface.prototype.getTotalsAreaFieldWidth = function (area, zoom) {
        var total = 0, areaFields = this.getAreaFields(area);
        areaFields.forEach(function (field) { total += field.rect().width; });
        return areaFields.length > 0 ? total / zoom : 100;
    };
    XRPivotGridSurface.prototype.getAdornTemplate = function () {
        return this.isIntersect() ? 'dxrd-intersect' : '';
    };
    XRPivotGridSurface.prototype.isThereIntersectionWithChildCollection = function () {
        return false;
    };
    return XRPivotGridSurface;
}(xrControl_1.XRControlSurface));
exports.XRPivotGridSurface = XRPivotGridSurface;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var xrRichText_1 = __webpack_require__(97);
var analytics_internal_1 = __webpack_require__(2);
exports.getRichEditSurface = analytics_internal_1.createGlobalModuleVariableFunc(function () { return xrRichText_1.XRRichSurface; });
exports.registerRichEditInline = analytics_internal_1.createGlobalModuleVariableFunc(function (selection) { return void 0; });


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var analytics_widgets_1 = __webpack_require__(4);
var sortBySummary_1 = __webpack_require__(132);
var sortBySummary_2 = __webpack_require__(94);
var metadataGroups_1 = __webpack_require__(11);
var analytics_utils_1 = __webpack_require__(0);
var editorTemplates_1 = __webpack_require__(9);
exports.caption = { displayName: 'Caption', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.Caption', propertyName: 'caption', modelName: '@Caption', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
exports.index = { displayName: 'Index', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridField.Index', propertyName: 'index', modelName: '@Index', defaultVal: 0, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.fieldName = { propertyName: 'fieldName', modelName: '@FieldName', displayName: 'Data Column Name', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.FieldName', editor: analytics_widgets_1.editorTemplates.getEditor('field') };
exports.minWidth = { displayName: 'Min Width', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.MinWidth', propertyName: 'minWidth', modelName: '@MinWidth', defaultVal: 20, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.width = { displayName: 'Width', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.Width', propertyName: 'width', modelName: '@Width', defaultVal: 100, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.area = {
    displayName: 'Area', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.Area', propertyName: 'area', modelName: '@Area', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'FilterArea',
    valuesArray: [
        { value: 'RowArea', displayValue: 'Row Area', localizationId: 'DevExpress.XtraPivotGrid.PivotArea.RowArea' },
        { value: 'ColumnArea', displayValue: 'Column Area', localizationId: 'DevExpress.XtraPivotGrid.PivotArea.ColumnArea' },
        { value: 'FilterArea', displayValue: 'Filter Area', localizationId: 'DevExpress.XtraPivotGrid.PivotArea.FilterArea' },
        { value: 'DataArea', displayValue: 'Data Area', localizationId: 'DevExpress.XtraPivotGrid.PivotArea.DataArea' },
    ]
};
exports.allowedAreas = {
    propertyName: 'allowedAreas', modelName: '@AllowedAreas', displayName: 'Allowed Areas', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.AllowedAreas', defaultVal: 'All', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'All', displayValue: 'All', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAllowedAreas.All' },
        { value: 'RowArea', displayValue: 'Row Area', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAllowedAreas.RowArea' },
        { value: 'ColumnArea', displayValue: 'Column Area', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAllowedAreas.ColumnArea' },
        { value: 'FilterArea', displayValue: 'Filter Area', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAllowedAreas.FilterArea' },
        { value: 'DataArea', displayValue: 'Data Area', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAllowedAreas.DataArea' }
    ]
};
exports.areaIndex = { propertyName: 'areaIndex', modelName: '@AreaIndex', defaultVal: -1 };
exports.areaIndexEditable = { propertyName: 'areaIndexEditable', displayName: 'Area Index', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.AreaIndex', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.unboundType = {
    propertyName: 'unboundType', modelName: '@UnboundType', displayName: 'Unbound Type', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.UnboundType', defaultVal: 'Bound', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'Bound', displayValue: 'Bound', localizationId: 'DevExpress.Data.UnboundColumnType.Bound' },
        { value: 'Integer', displayValue: 'Integer', localizationId: 'DevExpress.Data.UnboundColumnType.Integer' },
        { value: 'Decimal', displayValue: 'Decimal', localizationId: 'DevExpress.Data.UnboundColumnType.Decimal' },
        { value: 'DateTime', displayValue: 'DateTime', localizationId: 'DevExpress.XtraTreeList.Data.UnboundColumnType.DateTime' },
        { value: 'String', displayValue: 'String', localizationId: 'DevExpress.Data.UnboundColumnType.String' },
        { value: 'Boolean', displayValue: 'Boolean', localizationId: 'DevExpress.Data.UnboundColumnType.Boolean' },
        { value: 'Object', displayValue: 'Object', localizationId: 'DevExpress.Data.UnboundColumnType.Object' }
    ]
};
exports.unboundFieldName = { propertyName: 'unboundFieldName', modelName: '@UnboundFieldName', displayName: 'Unbound Field Name', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.UnboundFieldName', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
exports.unboundExpression = { propertyName: 'unboundExpression', modelName: '@UnboundExpression', displayName: 'Unbound Expression', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.UnboundExpression', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
exports.topValueType = {
    propertyName: 'topValueType', modelName: '@TopValueType', displayName: 'Top Value Type', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.TopValueType', defaultVal: 'Absolute', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'Absolute', displayValue: 'Absolute', localizationId: 'DevExpress.XtraPivotGrid.PivotTopValueType.Absolute' },
        { value: 'Percent', displayValue: 'Percent', localizationId: 'DevExpress.XtraPivotGrid.PivotTopValueType.Percent' },
        { value: 'Sum', displayValue: 'Sum', localizationId: 'DevExpress.XtraPivotGrid.PivotTopValueType.Sum' }
    ]
};
exports.topValueShowOthers = { propertyName: 'topValueShowOthers', modelName: '@TopValueShowOthers', displayName: 'Top Value Show Others', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.TopValueShowOthers', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool };
exports.topValueCount = { propertyName: 'topValueCount', modelName: '@TopValueCount', displayName: 'Top Value Count', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.TopValueCount', defaultVal: 0, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.summaryDisplayType = {
    propertyName: 'summaryDisplayType', modelName: '@SummaryDisplayType', displayName: 'Summary Display Type', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.SummaryDisplayType', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryDisplayType.Default' },
        { value: 'AbsoluteVariation', displayValue: 'Absolute Variation', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryDisplayType.AbsoluteVariation' },
        { value: 'PercentVariation', displayValue: 'Percent Variation', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryDisplayType.PercentVariation' },
        { value: 'PercentOfColumn', displayValue: 'Percent Of Column', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryDisplayType.PercentOfColumn' },
        { value: 'PercentOfRow', displayValue: 'Percent Of Row', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryDisplayType.PercentOfRow' },
        { value: 'PercentOfColumnGrandTotal', displayValue: 'Percent Of Column Grand Total', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryDisplayType.PercentOfColumnGrandTotal' },
        { value: 'PercentOfRowGrandTotal', displayValue: 'Percent Of Row Grand Total', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryDisplayType.PercentOfRowGrandTotal' },
        { value: 'PercentOfGrandTotal', displayValue: 'Percent Of Grand Total', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryDisplayType.PercentOfGrandTotal' },
        { value: 'RankInColumnSmallestToLargest', displayValue: 'Rank In Column Smallest To Largest', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryDisplayType.RankInColumnSmallestToLargest' },
        { value: 'RankInRowSmallestToLargest', displayValue: 'Rank In Row Smallest To Largest', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryDisplayType.RankInRowSmallestToLargest' },
        { value: 'RankInColumnLargestToSmallest', displayValue: 'Rank In Column Largest To Smallest', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryDisplayType.RankInColumnLargestToSmallest' },
        { value: 'RankInRowLargestToSmallest', displayValue: 'Rank In Row Largest To Smallest', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryDisplayType.RankInRowLargestToSmallest' },
        { value: 'Index', displayValue: 'Index', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryDisplayType.Index' }
    ]
};
exports.sortOrder = {
    propertyName: 'sortOrder', modelName: '@SortOrder', displayName: 'Sort Order', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.SortOrder', defaultVal: 'Ascending', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'Ascending', displayValue: 'Ascending', localizationId: 'DevExpress.XtraPivotGrid.PivotSortOrder.Ascending' }, { value: 'Descending', displayValue: 'Descending', localizationId: 'DevExpress.XtraPivotGrid.PivotSortOrder.Descending' }
    ]
};
exports.sortMode = {
    propertyName: 'sortMode', modelName: '@SortMode', displayName: 'Sort Mode', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.SortMode', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraPivotGrid.PivotSortMode.Default' },
        { value: 'Value', displayValue: 'Value', localizationId: 'DevExpress.XtraPivotGrid.PivotSortMode.Value' },
        { value: 'DisplayText', displayValue: 'DisplayText', localizationId: 'DevExpress.XtraPivotGrid.PivotSortMode.DisplayText' },
        { value: 'Custom', displayValue: 'Custom', localizationId: 'DevExpress.XtraPivotGrid.PivotSortMode.Custom' },
        { value: 'Key', displayValue: 'Key', localizationId: 'DevExpress.XtraPivotGrid.PivotSortMode.Key' },
        { value: 'ID', displayValue: 'ID', localizationId: 'DevExpress.XtraPivotGrid.PivotSortMode.ID' },
        { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraPivotGrid.PivotSortMode.None' }
    ]
};
exports.showNewValues = { propertyName: 'showNewValues', modelName: '@ShowNewValues', displayName: 'Show New Values', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.ShowNewValues', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool };
exports.runningTotal = { propertyName: 'runningTotal', modelName: '@RunningTotal', displayName: 'Running Total', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.RunningTotal', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool };
exports.rowValueLineCount = { propertyName: 'rowValueLineCount', modelName: '@RowValueLineCount', displayName: 'Row Value Line Count', localizationId: 'DevExpress.XtraPivotGrid.PivotGridField.RowValueLineCount', defaultVal: 1, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.groupIntervalNumericRange = { propertyName: 'groupIntervalNumericRange', modelName: '@GroupIntervalNumericRange', displayName: 'Group Interval Numeric Range', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.GroupIntervalNumericRange', defaultVal: 10, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.groupInterval = {
    propertyName: 'groupInterval', modelName: '@GroupInterval', displayName: 'Group Interval', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridField.GroupInterval', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Default' },
        { value: 'Date', displayValue: 'Date', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Date' },
        { value: 'DateDay', displayValue: 'DateDay', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateDay' },
        { value: 'DateDayOfWeek', displayValue: 'Day Of Week', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateDayOfWeek' },
        { value: 'DateDayOfYear', displayValue: 'Day Of Year', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateDayOfYear' },
        { value: 'DateWeekOfMonth', displayValue: 'Week Of Month', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateWeekOfMonth' },
        { value: 'DateWeekOfYear', displayValue: 'Week Of Year', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateWeekOfYear' },
        { value: 'DateMonth', displayValue: 'Month', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateMonth' },
        { value: 'DateQuarter', displayValue: 'Quarter', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateQuarter' },
        { value: 'DateYear', displayValue: 'Year', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateYear' },
        { value: 'YearAge', displayValue: 'Year Age', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.YearAge' },
        { value: 'MonthAge', displayValue: 'Month Age', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.MonthAge' },
        { value: 'WeekAge', displayValue: 'Week Age', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.WeekAge' },
        { value: 'DayAge', displayValue: 'Day Age', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DayAge' },
        { value: 'Alphabetical', displayValue: 'Alphabetical', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Alphabetical' },
        { value: 'Numeric', displayValue: 'Numeric', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Numeric' },
        { value: 'Hour', displayValue: 'Hour', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Hour' },
        { value: 'Custom', displayValue: 'Custom', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Custom' },
        { value: 'Minute', displayValue: 'Minute', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Minute' },
        { value: 'Second', displayValue: 'Second', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Second' },
        { value: 'DateMonthYear', displayValue: 'Month-Year', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateMonthYear' },
        { value: 'DateQuarterYear', displayValue: 'Quarter-Year', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateQuarterYear' },
        { value: 'DateHour', displayValue: 'Date-Hour', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateHour' },
        { value: 'DateHourMinute', displayValue: 'Date-Hour-Minute', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateHourMinute' },
        { value: 'DateHourMinuteSecond', displayValue: 'Date-Hour-Minute-Second', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateHourMinuteSecond' }
    ]
};
exports.grandTotalText = { propertyName: 'grandTotalText', modelName: '@GrandTotalText', displayName: 'Grand Total Text', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.GrandTotalText', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
exports.expandedInFieldsGroup = { propertyName: 'expandedInFieldsGroup', modelName: '@ExpandedInFieldsGroup', displayName: 'Expanded In Fields Group', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.ExpandedInFieldsGroup', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool };
exports.emptyValueText = { propertyName: 'emptyValueText', modelName: '@EmptyValueText', displayName: 'Empty Value Text', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.EmptyValueText', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
exports.emptyCellText = { propertyName: 'emptyCellText', modelName: '@EmptyCellText', displayName: 'Empty Cell Text', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.EmptyCellText', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
exports.displayFolder = { propertyName: 'displayFolder', modelName: '@DisplayFolder', displayName: 'Display Folder', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.DisplayFolder', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
exports.columnValueLineCount = { propertyName: 'columnValueLineCount', modelName: '@ColumnValueLineCount', displayName: 'Column Value Line Count', localizationId: 'DevExpress.XtraPivotGrid.PivotGridField.ColumnValueLineCount', defaultVal: 1, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.totalsVisibility = {
    propertyName: 'totalsVisibility', modelName: '@TotalsVisibility', displayName: 'Totals Visibility', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.TotalsVisibility', defaultVal: 'AutomaticTotals', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'AutomaticTotals', displayValue: 'Automatic Totals', localizationId: 'DevExpress.XtraPivotGrid.PivotTotalsVisibility.AutomaticTotals' },
        { value: 'CustomTotals', displayValue: 'Custom Totals', localizationId: 'DevExpress.XtraPivotGrid.PivotTotalsVisibility.CustomTotals' },
        { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraPivotGrid.PivotTotalsVisibility.None' }
    ]
};
exports.useNativeFormat = { propertyName: 'useNativeFormat', modelName: '@UseNativeFormat', displayName: 'Export As Numbers To Excel', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.UseNativeFormat', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: metadata_1.defaultBooleanValuesArray };
exports.KPIGraphic = {
    propertyName: 'KPIGraphic', modelName: '@KPIGraphic', displayName: 'KPI Graphic', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.KPIGraphic', defaultVal: 'ServerDefined', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.None' },
        { value: 'ServerDefined', displayValue: 'Server Defined', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.ServerDefined' },
        { value: 'Shapes', displayValue: 'Shapes', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.Shapes' },
        { value: 'TrafficLights', displayValue: 'Traffic Lights', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.TrafficLights' },
        { value: 'RoadSigns', displayValue: 'Road Signs', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.RoadSigns' },
        { value: 'Gauge', displayValue: 'Gauge', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.Gauge' },
        { value: 'ReversedGauge', displayValue: 'Reversed Gauge', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.ReversedGauge' },
        { value: 'Thermometer', displayValue: 'Thermometer', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.Thermometer' },
        { value: 'ReversedThermometer', displayValue: 'Reversed Thermometer', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.ReversedThermometer' },
        { value: 'Cylinder', displayValue: 'Cylinder', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.Cylinder' },
        { value: 'ReversedCylinder', displayValue: 'Reversed Cylinder', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.ReversedCylinder' },
        { value: 'Faces', displayValue: 'Faces', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.Faces' },
        { value: 'VarianceArrow', displayValue: 'Variance Arrow', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.VarianceArrow' },
        { value: 'StandardArrow', displayValue: 'Standard Arrow', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.StandardArrow' },
        { value: 'StatusArrow', displayValue: 'Status Arrow', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.StatusArrow' },
        { value: 'ReversedStatusArrow', displayValue: 'Reversed Status Arrow', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.ReversedStatusArrow' }
    ]
};
var formatType = {
    propertyName: 'formatType', modelName: '@FormatType', displayName: 'Format Type', localizationId: 'DevExpress.Utils.FormatInfo.FormatType', defaultVal: 'None', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'None', displayValue: 'None', localizationId: 'DevExpress.Utils.FormatType.None' },
        { value: 'Numeric', displayValue: 'Numeric', localizationId: 'DevExpress.Utils.FormatType.Numeric' },
        { value: 'DateTime', displayValue: 'DateTime', localizationId: 'DevExpress.Utils.FormatType.DateTime' },
        { value: 'Custom', displayValue: 'Custom', localizationId: 'DevExpress.Utils.FormatType.Custom' }
    ]
}, formatString = { propertyName: 'formatString', modelName: '@FormatString', displayName: 'Format String', localizationId: 'DevExpress.Utils.FormatInfo.FormatString', defaultVal: '', editor: editorTemplates_1.designerEditorTemplates.getEditor('formatEditor') };
var formatInfo = [formatType, formatString];
exports.cellFormat = { propertyName: 'cellFormat', modelName: 'CellFormat', displayName: 'Cell Format', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.CellFormat', info: formatInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.totalCellFormat = { propertyName: 'totalCellFormat', modelName: 'TotalCellFormat', displayName: 'Total Cell Format', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.TotalCellFormat', info: formatInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.grandTotalCellFormat = { propertyName: 'grandTotalCellFormat', modelName: 'GrandTotalCellFormat', displayName: 'Grand Total Cell Format', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.GrandTotalCellFormat', info: formatInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.valueFormat = { propertyName: 'valueFormat', modelName: 'ValueFormat', displayName: 'Value Format', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.ValueFormat', info: formatInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.totalValueFormat = { propertyName: 'totalValueFormat', modelName: 'TotalValueFormat', displayName: 'Total Value Format', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.TotalValueFormat', info: formatInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var textHorizontalAlignment = {
    propertyName: 'textHorizontalAlignment', modelName: '@HAlignment', displayName: 'Text Horizontal Alignment', localizationId: 'DevExpress.PivotGrid.Printing.PrintTextOptions.HAlignment', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.Utils.HorzAlignment.Default' },
        { value: 'Near', displayValue: 'Near', localizationId: 'DevExpress.Utils.HorzAlignment.Near' },
        { value: 'Center', displayValue: 'Center', localizationId: 'DevExpress.Utils.HorzAlignment.Center' },
        { value: 'Far', displayValue: 'Far', localizationId: 'DevExpress.Utils.HorzAlignment.Far' }
    ]
}, textVerticalAlignment = {
    propertyName: 'textVerticalAlignment', modelName: '@VAlignment', displayName: 'Text Vertical Alignment', localizationId: 'DevExpress.PivotGrid.Printing.PrintTextOptions.VAlignment', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.Utils.VertAlignment.Default' },
        { value: 'Top', displayValue: 'Top', localizationId: 'DevExpress.Utils.VertAlignment.Top' },
        { value: 'Center', displayValue: 'Center', localizationId: 'DevExpress.Utils.VertAlignment.Center' },
        { value: 'Bottom', displayValue: 'Bottom', localizationId: 'DevExpress.Utils.VertAlignment.Bottom' }
    ]
}, trimming = {
    propertyName: 'trimming', modelName: '@Trimming', displayName: 'Trimming', localizationId: 'DevExpress.PivotGrid.Printing.PrintTextOptions.Trimming', defaultVal: 'None', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        { value: 'None', displayValue: 'None', localizationId: 'System.Drawing.StringTrimming.None' },
        { value: 'Character', displayValue: 'Character', localizationId: 'System.Drawing.StringTrimming.Character' },
        { value: 'Word', displayValue: 'Word', localizationId: 'System.Drawing.StringTrimming.Word' },
        { value: 'EllipsisCharacter', displayValue: 'EllipsisCharacter', localizationId: 'System.Drawing.StringTrimming.EllipsisCharacter' },
        { value: 'EllipsisWord', displayValue: 'EllipsisWord', localizationId: 'System.Drawing.StringTrimming.EllipsisWord' },
        { value: 'EllipsisPath', displayValue: 'EllipsisPath', localizationId: 'System.Drawing.StringTrimming.EllipsisPath' }
    ]
}, appearanceWordWrap = {
    propertyName: 'wordWrap', modelName: '@WordWrap', displayName: 'Word Wrap', localizationId: 'DevExpress.PivotGrid.Printing.PrintTextOptions.WordWrap', defaultVal: 'NoWrap', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        { value: 'NoWrap', displayValue: 'No Wrap', localizationId: 'DevExpress.Utils.WordWrap.NoWrap' },
        { value: 'Wrap', displayValue: 'Wrap', localizationId: 'DevExpress.Utils.WordWrap.Wrap' }
    ]
};
var textOptionsInfo = [textHorizontalAlignment, textVerticalAlignment, trimming, appearanceWordWrap], textOptions = { propertyName: 'textOptions', modelName: 'TextOptions', displayName: 'Text Options', localizationId: 'DevExpress.XtraReports.UI.XRAppearanceObject.TextOptions', info: textOptionsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.appearanceInfo = [metadata_1.backColor, metadata_1.borderColor, metadata_1.foreColor, metadata_1.font, textOptions];
var cellAppearance = { propertyName: 'cellAppearance', modelName: 'Cell', displayName: 'Cell', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.Cell', info: exports.appearanceInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') }, totalCellAppearance = { propertyName: 'totalCellAppearance', modelName: 'TotalCell', displayName: 'Total Cell', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.TotalCell', info: exports.appearanceInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') }, customTotalCellAppearance = { propertyName: 'customTotalCellAppearance', modelName: 'CustomTotalCell', displayName: 'Custom Total Cell', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.CustomTotalCell', info: exports.appearanceInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') }, grandTotalCellAppearance = { propertyName: 'grandTotalCellAppearance', modelName: 'GrandTotalCell', displayName: 'Grand Total Cell', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.GrandTotalCell', info: exports.appearanceInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') }, fieldValueAppearance = { propertyName: 'fieldValueAppearance', modelName: 'FieldValue', displayName: 'Field Value', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.FieldValue', info: exports.appearanceInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') }, fieldValueTotalAppearance = { propertyName: 'fieldValueTotalAppearance', modelName: 'FieldValueTotal', displayName: 'Field Value Total', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.FieldValueTotal', info: exports.appearanceInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') }, fieldValueGrandTotalAppearance = { propertyName: 'fieldValueGrandTotalAppearance', modelName: 'FieldValueGrandTotal', displayName: 'Field Value Grand Total', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAppearancesBase.FieldValueGrandTotal', info: exports.appearanceInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') }, fieldHeaderAppearance = { propertyName: 'fieldHeaderAppearance', modelName: 'FieldHeader', displayName: 'Field Header', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.FieldHeader', info: exports.appearanceInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.appearancesInfo = [cellAppearance, totalCellAppearance, customTotalCellAppearance, grandTotalCellAppearance, fieldHeaderAppearance, fieldValueAppearance, fieldValueGrandTotalAppearance, fieldValueTotalAppearance];
var appearances = { propertyName: 'appearances', modelName: 'Appearance', displayName: 'Appearance', localizationId: 'DevExpress.XtraPivotGrid.PivotGridField.Appearance', info: exports.appearancesInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var allowRunTimeSummaryChange = { propertyName: 'allowRunTimeSummaryChange', modelName: '@AllowRunTimeSummaryChange', displayName: 'Allow Run Time Summary Change', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldOptions.AllowRunTimeSummaryChange', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, groupFilterMode = { propertyName: 'groupFilterMode', modelName: '@GroupFilterMode', displayName: 'Group Filter Mode', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldOptions.GroupFilterMode', defaultVal: null, editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'List', displayValue: 'List', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupFilterMode.List' }, { value: 'Tree', displayValue: 'Tree', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupFilterMode.Tree' }] }, hideEmptyVariationItems = { propertyName: 'hideEmptyVariationItems', modelName: '@HideEmptyVariationItems', displayName: 'Hide Empty Variation Items', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldOptions.HideEmptyVariationItems', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showCustomTotals = { propertyName: 'showCustomTotals', modelName: '@ShowCustomTotals', displayName: 'Show Custom Totals', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldOptions.ShowCustomTotals', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showGrandTotal = { propertyName: 'showGrandTotal', modelName: '@ShowGrandTotal', displayName: 'Show Grand Total', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldOptions.ShowGrandTotal', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showSummaryTypeName = { propertyName: 'showSummaryTypeName', modelName: '@ShowSummaryTypeName', displayName: 'Show Summary Type Name', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldOptions.ShowSummaryTypeName', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showTotals = { propertyName: 'showTotals', modelName: '@ShowTotals', displayName: 'Show Totals', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldOptions.ShowTotals', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showValues = { propertyName: 'showValues', modelName: '@ShowValues', displayName: 'Show Values', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldOptions.ShowValues', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool };
exports.unboundExpressionMode = {
    propertyName: 'unboundExpressionMode', modelName: '@UnboundExpressionMode', displayName: 'Unbound Expression Mode', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.UnboundExpressionMode', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'UseSummaryValues', displayValue: 'Use Summary Values', localizationId: 'DevExpress.XtraPivotGrid.UnboundExpressionMode.UseSummaryValues' },
        { value: 'DataSource', displayValue: 'Data Source', localizationId: 'DevExpress.XtraPivotGrid.UnboundExpressionMode.DataSource' },
        { value: 'UseAggregateFunctions', displayValue: 'Use Aggregate Functions', localizationId: 'DevExpress.XtraPivotGrid.UnboundExpressionMode.UseAggregateFunctions' },
        { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraPivotGrid.UnboundExpressionMode.Default' }
    ]
};
var optionsInfo = [allowRunTimeSummaryChange, groupFilterMode,
    hideEmptyVariationItems, showCustomTotals, showGrandTotal, showSummaryTypeName, showTotals, showValues];
exports.options = { propertyName: 'options', modelName: 'Options', displayName: 'Options', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.Options', info: optionsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.sortBySummary = { propertyName: 'sortBySummaryInfo', modelName: 'SortBySummaryInfo', displayName: 'Sort By Summary Info', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.SortBySummaryInfo', from: sortBySummary_1.SortBySummaryInfo.from, toJsonObject: sortBySummary_1.SortBySummaryInfo.toJSON, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.pivotGridFieldSerializationsInfo = [
    appearances,
    exports.allowedAreas, exports.area, exports.areaIndex, exports.areaIndexEditable,
    exports.caption, exports.cellFormat, exports.columnValueLineCount,
    exports.displayFolder, exports.emptyCellText, exports.emptyValueText, exports.expandedInFieldsGroup,
    exports.fieldName, sortBySummary_2.summaryType, exports.topValueCount, exports.topValueShowOthers,
    exports.grandTotalCellFormat, exports.grandTotalText, exports.groupInterval, exports.groupIntervalNumericRange,
    exports.index, exports.KPIGraphic, exports.minWidth, exports.width, exports.rowValueLineCount, exports.runningTotal,
    exports.showNewValues, exports.sortMode, exports.sortOrder, exports.summaryDisplayType,
    exports.topValueType, exports.totalCellFormat, exports.totalValueFormat, exports.totalsVisibility,
    exports.unboundExpression, exports.unboundExpressionMode, exports.unboundFieldName, exports.unboundType, exports.useNativeFormat,
    exports.valueFormat, exports.options, exports.sortBySummary
].concat(metadataGroups_1.baseControlProperties);
exports.popularPropertiesPivotGridField = ['area', 'areaIndexEditable', 'fieldName', 'caption', 'groupInterval', 'summaryType', 'summaryDisplayType', 'unboundType', 'unboundExpression'];
exports.pivotGridFieldsSerializable = { displayName: 'Fields', localizationId: 'DevExpress.XtraReports.UI.XRPivotGrid.Fields', propertyName: 'fields', modelName: 'Fields', array: true, template: '#dxrd-collectionItemWithAccordion' };


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var xrControl_1 = __webpack_require__(10);
var analytics_elements_1 = __webpack_require__(5);
var enums_1 = __webpack_require__(58);
var settings_1 = __webpack_require__(12);
var fields_1 = __webpack_require__(57);
var xrReport_1 = __webpack_require__(16);
var _styleHelper_1 = __webpack_require__(91);
function kindToString(kind) {
    switch (kind) {
        case enums_1.CellKind.None:
            return 'NO';
        case enums_1.CellKind.Corner:
            return 'CRN';
        case enums_1.CellKind.RowHeader:
            return 'RH';
        case enums_1.CellKind.RowTotalHeader:
            return 'RTH';
        case enums_1.CellKind.RowTotal:
            return 'RT';
        case enums_1.CellKind.ColumnHeader:
            return 'CH';
        case enums_1.CellKind.ColumnTotalHeader:
            return 'CTH';
        case enums_1.CellKind.ColumnTotal:
            return 'CT';
        case enums_1.CellKind.Data:
            return 'DAT';
        case enums_1.CellKind.DataHeader:
            return 'DH';
        case enums_1.CellKind.GrandTotal:
            return 'GDT';
        case enums_1.CellKind.Empty:
            return 'Emtpy';
        case enums_1.CellKind.EmptyHeader:
            return 'EmtpyH';
    }
}
exports.kindToString = kindToString;
var XRCrossTabCellViewModel = (function (_super) {
    __extends(XRCrossTabCellViewModel, _super);
    function XRCrossTabCellViewModel(model, parent, serializer) {
        if (serializer === void 0) { serializer = new analytics_utils_1.ModelSerializer(); }
        var _this = _super.call(this, model, parent, serializer) || this;
        _this.parent = parent;
        _this._showCellCode = ko.observable(false);
        _this._oldFieldName = null;
        _this.getPath = function (propertyName) {
            if (_this.field && _this.field())
                return _this.field().getPath(propertyName);
            return analytics_internal_1.getFullPath(_this.parent.getPath('dataMember'), _this.parent['dataMember']());
        };
        _this.kind = ko.observable(enums_1.CellKind.None);
        _this.fieldNameAreValid = ko.observable(true);
        _this._disposables.push(ko.computed(function () {
            if (analytics_internal_1.checkModelReady(_this.parent)) {
                _this.size.width(_this._width);
            }
        }));
        _this._disposables.push(ko.computed(function () {
            if (analytics_internal_1.checkModelReady(_this.parent)) {
                _this.size.height(_this._height);
            }
        }));
        _this._disposables.push(ko.computed(function () {
            if (analytics_internal_1.checkModelReady(_this.parent)) {
                _this.location.x(_this._left);
            }
        }));
        _this._disposables.push(ko.computed(function () {
            if (analytics_internal_1.checkModelReady(_this.parent)) {
                _this.location.y(_this._top);
            }
        }));
        _this._disposables.push(_this.location.x.subscribe(function (newVal) {
            if (analytics_internal_1.checkModelReady(_this.parent)) {
                var delta = newVal - _this._left;
                if (_this._columnIndex() != 0) {
                    var targetColumn = parent._columnDefinitions()[_this._columnIndex() - 1];
                    targetColumn.width(targetColumn.width() + delta);
                }
                else {
                    parent.location.x(parent.location.x() + delta);
                }
            }
        }));
        _this._disposables.push(_this.location.y.subscribe(function (newVal) {
            if (analytics_internal_1.checkModelReady(_this.parent)) {
                var delta = newVal - _this._top;
                if (_this._rowIndex() != 0) {
                    var targetRow = parent._rowDefinitions()[_this._rowIndex() - 1];
                    targetRow.height(targetRow.height() + delta);
                }
                else {
                    parent.location.y(parent.location.y() + delta);
                }
            }
        }));
        _this._disposables.push(_this.size.height.subscribe(function (newHeight) {
            if (analytics_internal_1.checkModelReady(_this.parent)) {
                var currentHeight = _this._height;
                var rows = parent._rowDefinitions();
                for (var i = _this._rowIndex(); i < _this._rowIndex() + _this._rowSpan(); i++) {
                    rows[i].height(rows[i].height() + (newHeight - currentHeight) * (rows[i].height() / currentHeight));
                }
            }
        }));
        _this._disposables.push(_this.size.width.subscribe(function (newWidth) {
            if (analytics_internal_1.checkModelReady(_this.parent)) {
                var currentWidth = _this._width;
                var columns = parent._columnDefinitions();
                for (var i = _this._columnIndex(); i < _this._columnIndex() + _this._columnSpan(); i++) {
                    columns[i].width(columns[i].width() + (newWidth - currentWidth) * (columns[i].width() / currentWidth));
                }
            }
        }));
        _this._text = ko.observable(_this.text());
        _this.field = ko.observable(null);
        _this._disposables.push(_this.field.subscribe(function (field) {
            if (field) {
                fields_1.crossTabGroupFieldInfoBase.concat(fields_1.crossTabDataFieldInfoBase).forEach(function (info) {
                    if (field[info.propertyName])
                        _this[info.propertyName] = field[info.propertyName];
                });
            }
        }));
        _this._disposables.push(_this.fieldName = ko.pureComputed({
            read: function () { return _this.field() && _this.field().fieldName() || ''; },
            write: function (newVal) {
                if (_this.field())
                    _this.field().fieldName(newVal);
                else
                    _this.createAndAssignNewField(newVal, true);
            }
        }));
        _this._disposables.push(ko.computed(function () {
            _this._testFieldName(_this.fieldName(), new analytics_utils_1.PathRequest(analytics_internal_1.getFullPath(_this.parent.getPath(''), _this.parent['dataMember']())));
        }));
        _this._disposables.push(_this.kind.subscribe(function (kind) {
            if (_this._textFormatString() === null && _this.field() && (kind == enums_1.CellKind.RowTotalHeader
                || kind == enums_1.CellKind.ColumnTotalHeader))
                _this.textFormatString('Total {0}');
        }));
        _this._disposables.push(ko.computed(function () {
            if (_this._text() === null && _this.isIndependant() && _this.kind() != enums_1.CellKind.Corner) {
                _this.text('Grand Total');
            }
            if ((_this.kind() == enums_1.CellKind.Corner || _this.kind() == enums_1.CellKind.DataHeader) && _this.fieldName() && _this.fieldName() != _this._oldFieldName) {
                (_this._oldFieldName == _this.text() || _this.text() === null) && _this.text(_this.fieldName());
                _this._oldFieldName = _this.fieldName();
            }
        }));
        _this._disposables.push(_this.text = ko.pureComputed({
            read: function () {
                if (_this._showCellCode()) {
                    var kind = kindToString(_this.kind());
                    var rowSpan = _this._rowSpan() != 1 ? '(' + _this._rowSpan() + ')' : '';
                    var columnSpan = _this._columnSpan() != 1 ? '(' + _this._columnSpan() + ')' : '';
                    return kind + ' X' + _this._columnIndex() + columnSpan + ' Y' + _this._rowIndex() + rowSpan;
                }
                if (_this._text())
                    return _this._text();
                var fieldName = _this.fieldName() ? '[' + _this.fieldName() + ']' : '';
                if (_this.kind() == enums_1.CellKind.RowTotalHeader || _this.kind() == enums_1.CellKind.ColumnTotalHeader) {
                    return _this.textFormatString() ? analytics_internal_1.formatUnicorn(_this.textFormatString(), fieldName) : fieldName;
                }
                if (_this.isBindable())
                    return fieldName || _this._getDefaultName(_this.kind());
            },
            write: function (newVal) { return _this._text(newVal); }
        }));
        _this._disposables.push(ko.computed(function () {
            switch (_this.kind()) {
                case enums_1.CellKind.Corner:
                case enums_1.CellKind.ColumnHeader:
                case enums_1.CellKind.ColumnTotalHeader:
                case enums_1.CellKind.DataHeader:
                case enums_1.CellKind.RowHeader:
                case enums_1.CellKind.RowTotalHeader:
                case enums_1.CellKind.EmptyHeader:
                case enums_1.CellKind.Empty:
                    _this.styleName(_this.parent['headerAreaStyleName']());
                    break;
                case enums_1.CellKind.ColumnTotal:
                case enums_1.CellKind.RowTotal:
                case enums_1.CellKind.GrandTotal:
                    _this.styleName(_this.parent['totalAreaStyleName']());
                    break;
                case enums_1.CellKind.Data:
                    _this.styleName(_this.parent['dataAreaStyleName']());
                    break;
                default:
                    _this.styleName(_this.parent['generalStyleName']());
            }
            _styleHelper_1.stylesProperties.forEach(function (property) {
                if (_this['_' + property] && _this['_' + property]())
                    _this[property](_this['_' + property]());
            });
        }));
        _this._disposables.push(_this.rowVisible = ko.pureComputed({
            read: function () {
                var rows = parent._rowDefinitions().slice(_this._rowIndex(), _this._rowIndex() + _this._rowSpan());
                return !rows.every(function (x) { return !x.visible(); });
            },
            write: function (value) { return parent._rowDefinitions()[_this._rowIndex()].visible(value); }
        }));
        _this._disposables.push(_this.columnVisible = ko.pureComputed({
            read: function () {
                var columns = parent._columnDefinitions().slice(_this._columnIndex(), _this._columnIndex() + _this._columnSpan());
                return !columns.every(function (x) { return !x.visible(); });
            },
            write: function (value) { return parent._columnDefinitions()[_this._columnIndex()].visible(value); }
        }));
        _this.rowAutoHeightMode = parent._rowDefinitions()[_this._rowIndex()].autoHeightMode;
        _this.columnAutoWidthMode = parent._columnDefinitions()[_this._columnIndex()].autoWidthMode;
        _this.crossTabSortBySummaryInfo.getPath = function (propertyName) { return _this.getPath(propertyName); };
        return _this;
    }
    Object.defineProperty(XRCrossTabCellViewModel.prototype, "namePrefix", {
        get: function () {
            var cellType = '';
            for (var type in XRCrossTabCellViewModel.cellKinds) {
                if (XRCrossTabCellViewModel.cellKinds[type].indexOf(this.kind()) != -1)
                    cellType = type;
            }
            return 'crossTab' + cellType + 'Cell';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XRCrossTabCellViewModel.prototype, "_width", {
        get: function () {
            var columns = this.parent._columnDefinitions();
            var result = 0;
            for (var i = this._columnIndex(); i < this._columnIndex() + this._columnSpan(); i++) {
                result += columns[i].width();
            }
            return result;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XRCrossTabCellViewModel.prototype, "_height", {
        get: function () {
            var rows = this.parent._rowDefinitions();
            var result = 0;
            for (var i = this._rowIndex(); i < this._rowIndex() + this._rowSpan(); i++) {
                result += rows[i].height();
            }
            return result;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XRCrossTabCellViewModel.prototype, "_left", {
        get: function () {
            var columns = this.parent._columnDefinitions();
            var result = 0;
            for (var i = 0; i < this._columnIndex(); i++) {
                result += columns[i].width();
            }
            return result;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XRCrossTabCellViewModel.prototype, "_top", {
        get: function () {
            var rows = this.parent._rowDefinitions();
            var result = 0;
            for (var i = 0; i < this._rowIndex(); i++) {
                result += rows[i].height();
            }
            return result;
        },
        enumerable: true,
        configurable: true
    });
    XRCrossTabCellViewModel.prototype._getDefaultName = function (kind) {
        switch (kind) {
            case enums_1.CellKind.ColumnHeader:
                return analytics_internal_1.getLocalization('Columns', 'ReportStringId.CrossTab_ColumnAreaName');
            case enums_1.CellKind.RowHeader:
                return analytics_internal_1.getLocalization('Rows', 'ReportStringId.CrossTab_RowAreaName');
            case enums_1.CellKind.Data:
                return analytics_internal_1.getLocalization('Data', 'ReportStringId.CrossTab_DataAreaName');
        }
    };
    XRCrossTabCellViewModel.prototype._testFieldName = function (fieldName, path) {
        var _this = this;
        var report = this.root;
        if (!report || !(report instanceof xrReport_1.ReportViewModel))
            return;
        var dataBindingsProvider = report.dataBindingsProvider && report.dataBindingsProvider();
        if (dataBindingsProvider) {
            dataBindingsProvider.getItems(path).done(function (result) {
                _this.fieldNameAreValid(result.some(function (x) { return x.name === fieldName; }));
            });
        }
    };
    XRCrossTabCellViewModel.prototype.reset = function () {
        this.dataLevel = undefined;
        this.columnLevel = undefined;
        this.rowLevel = undefined;
    };
    XRCrossTabCellViewModel.prototype.canRemove = function () {
        return this.kind() === enums_1.CellKind.Data && this.parent.dataFields().length > 0
            || this.kind() === enums_1.CellKind.RowHeader && this.parent.rowFields().length > 0
            || this.kind() === enums_1.CellKind.ColumnHeader && this.parent.columnFields().length > 0;
    };
    XRCrossTabCellViewModel.prototype.canDropDown = function () {
        return this.fieldName() && (this.kind() === enums_1.CellKind.Data && (this.parent.dataFields().length < 2
            || this.parent.layoutOptions.dataFieldLayout() === enums_1.DataFieldLayout[enums_1.DataFieldLayout.InColumn])
            || this.kind() === enums_1.CellKind.ColumnHeader);
    };
    XRCrossTabCellViewModel.prototype.canDropRight = function () {
        return this.fieldName() && (this.kind() === enums_1.CellKind.Data && (this.parent.dataFields().length < 2
            || this.parent.layoutOptions.dataFieldLayout() === enums_1.DataFieldLayout[enums_1.DataFieldLayout.InRow])
            || this.kind() === enums_1.CellKind.RowHeader);
    };
    XRCrossTabCellViewModel.prototype.canDropUp = function () {
        return this.fieldName() && this.kind() === enums_1.CellKind.ColumnHeader;
    };
    XRCrossTabCellViewModel.prototype.canDropLeft = function () {
        return this.fieldName() && this.kind() === enums_1.CellKind.RowHeader;
    };
    XRCrossTabCellViewModel.prototype.isPropertyVisible = function (name) {
        if (name == 'textFormatString')
            return !this.isIndependant();
        if (name == 'visible' || name == 'location' || name == 'canPublish')
            return false;
        if (name == 'fieldName')
            return this.isBindable();
        if (name == 'summaryType' || name == 'summaryDisplayType')
            return this.kind() === enums_1.CellKind.Data;
        if (name == 'sortOrder' ||
            name == 'crossTabGroupInterval' ||
            name == 'crossTabGroupIntervalNumericRange' ||
            name == 'crossTabSortBySummaryInfo')
            return this.kind() === enums_1.CellKind.RowHeader || this.kind() === enums_1.CellKind.ColumnHeader;
        return _super.prototype.isPropertyVisible.call(this, name);
    };
    XRCrossTabCellViewModel.prototype.isPropertyModified = function (name) {
        if (name === 'columnIndex' || name === 'rowIndex')
            return false;
        return _super.prototype.isPropertyModified.call(this, name);
    };
    XRCrossTabCellViewModel.prototype.isPropertyDisabled = function (name) {
        if (name === 'text')
            return !this.isEditable();
        if (name === 'crossTabGroupInterval' ||
            name === 'sortOrder' ||
            name === 'summaryType' ||
            name === 'summaryDisplayType' ||
            name === 'crossTabSortBySummaryInfo')
            return !this.fieldName();
        if (name === 'crossTabGroupIntervalNumericRange')
            return !this.fieldName() || !this.crossTabGroupInterval() || (this.crossTabGroupInterval() != 'Numeric' &&
                this.crossTabGroupInterval() != 'DayAge' &&
                this.crossTabGroupInterval() != 'WeekAge' &&
                this.crossTabGroupInterval() != 'MonthAge' &&
                this.crossTabGroupInterval() != 'YearAge');
        if (name == 'rowVisible')
            return this._rowSpan() > 1;
        if (name == 'columnVisible')
            return this._columnSpan() > 1;
        return _super.prototype.isPropertyDisabled.call(this, name);
    };
    XRCrossTabCellViewModel.prototype.isBindable = function () {
        return this.kind() === enums_1.CellKind.RowHeader || this.kind() === enums_1.CellKind.ColumnHeader || this.kind() === enums_1.CellKind.Data;
    };
    XRCrossTabCellViewModel.prototype.isIndependant = function () {
        return this.kind() == enums_1.CellKind.Corner ||
            this.kind() == enums_1.CellKind.ColumnTotalHeader && this.columnLevel == undefined ||
            this.kind() == enums_1.CellKind.RowTotalHeader && this.rowLevel == undefined;
    };
    XRCrossTabCellViewModel.prototype.isEditable = function () {
        return this.kind() == enums_1.CellKind.Corner || this.kind() == enums_1.CellKind.DataHeader
            || this.kind() == enums_1.CellKind.ColumnTotalHeader || this.kind() == enums_1.CellKind.RowTotalHeader
            || this.kind() == enums_1.CellKind.EmptyHeader || this.kind() == enums_1.CellKind.Empty;
    };
    XRCrossTabCellViewModel.prototype.createAndAssignNewField = function (fieldName, insertBefore, dataFieldLayout) {
        if (dataFieldLayout === void 0) { dataFieldLayout = enums_1.DataFieldLayout.InRow; }
        var increment = insertBefore ? 0 : 1;
        switch (this.kind()) {
            case enums_1.CellKind.ColumnHeader:
                this.parent.insertNewField('columnFields', this.columnLevel + increment, fieldName);
                break;
            case enums_1.CellKind.RowHeader:
                this.parent.insertNewField('rowFields', this.rowLevel + increment, fieldName);
                break;
            case enums_1.CellKind.Data:
                this.parent.insertNewField('dataFields', this.dataLevel + increment, fieldName, dataFieldLayout);
        }
    };
    XRCrossTabCellViewModel.cellKinds = {
        'Header': [enums_1.CellKind.ColumnHeader, enums_1.CellKind.ColumnTotalHeader, enums_1.CellKind.DataHeader, enums_1.CellKind.RowHeader,
            enums_1.CellKind.RowTotalHeader, enums_1.CellKind.Corner],
        'Total': [enums_1.CellKind.RowTotal, enums_1.CellKind.GrandTotal, enums_1.CellKind.ColumnTotal],
        'Data': [enums_1.CellKind.Data]
    };
    return XRCrossTabCellViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRCrossTabCellViewModel = XRCrossTabCellViewModel;
var XRCellsurface = (function (_super) {
    __extends(XRCellsurface, _super);
    function XRCellsurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this.contenttemplate = 'dxrd-crosstab-control-content';
        _this.dropRect = new analytics_elements_1.Rectangle();
        _this.isDropTarget = ko.observable(false);
        _this.dragCss = ko.observable('dxrd-drag-helper-item-allowed');
        _this.selectiontemplate = 'dxrd-crosstab-cell';
        _this._disposables.push(_this.showDropSurface = ko.computed(function () {
            if (!_this.underCursor().isOver) {
                _this.isDropTarget(false);
            }
            return _this.isDropTarget() && _this.underCursor().isOver;
        }));
        return _this;
    }
    XRCellsurface.prototype.checkParent = function (surfaceParent) {
        return this.parent === surfaceParent;
    };
    XRCellsurface.prototype.selectLine = function (selection, event, isRow) {
        if (event === void 0) { event = { ctrlKey: false, metaKey: false }; }
        if (isRow === void 0) { isRow = false; }
        this.parent.selectLine(selection, this.getControlModel(), event.ctrlKey || event.metaKey, isRow);
    };
    XRCellsurface.prototype.cellClick = function () {
        if (settings_1.controlsFactory && settings_1.controlsFactory()) {
            var metadata = settings_1.controlsFactory().controlsMap['XRCrossTabCell'];
            var isBindable = this._control.canRemove();
            if (isBindable) {
                metadata.isDeleteDeny = false;
            }
            else if (!isBindable) {
                metadata.isDeleteDeny = true;
            }
        }
    };
    XRCellsurface.prototype.isEditable = function () {
        var control = this._control;
        return control.isEditable();
    };
    XRCellsurface.prototype._getDropCallback = function (insertBefore, dataFieldLayout) {
        var _this = this;
        if (insertBefore === void 0) { insertBefore = false; }
        if (dataFieldLayout === void 0) { dataFieldLayout = enums_1.DataFieldLayout.InRow; }
        return function (item) {
            var control = _this._control;
            control.createAndAssignNewField(item.path, insertBefore, dataFieldLayout);
        };
    };
    XRCellsurface.prototype._canSetFieldName = function (fullPath) {
        var crossTab = this._control.parentModel();
        var path = analytics_internal_1.getFullPath(crossTab.getPath(''), crossTab['dataMember']());
        var pathLength = path.split('.').length;
        return fullPath.indexOf(path) == 0
            && (pathLength < 2 || fullPath.split('.').length - pathLength == 1);
    };
    XRCellsurface.prototype.getAdornTemplate = function () {
        var result = _super.prototype.getAdornTemplate.call(this);
        if (this._context['validationMode'] && this._context['validationMode']())
            result = xrControl_1.XRControlSurface._appendValue(result, 'dxrd-image-surface-bounded-notvalid', this._control['isBindable']() && this._control['fieldName']() && !this._control['fieldNameAreValid']());
        result = xrControl_1.XRControlSurface._appendValue(result, 'dxrd-image-surface-bounded', this._control['isBindable']() && this._control['fieldName']() && this._control['fieldNameAreValid']);
        result = xrControl_1.XRControlSurface._appendValue(result, 'dxrd-surface-hidden', !this._control['columnVisible']() || !this._control['rowVisible']());
        return result;
    };
    XRCellsurface.prototype.dragCallback = function (item) {
        var _this = this;
        var control = this._control;
        var crossTab = control.parentModel();
        var rect = this.dropRect;
        this.isDropTarget(true);
        rect.left(-1);
        rect.top(-1);
        rect.width(this._width() - 3);
        rect.height(this._height() - 3);
        this.dropCallback = function () { };
        if ((control.kind() == enums_1.CellKind.ColumnHeader || control.kind() == enums_1.CellKind.RowHeader || control.kind() == enums_1.CellKind.Data) && this._canSetFieldName(item.path)) {
            this.dragCss('dxrd-drag-helper-item-allowed');
            var cursor = { x: this.underCursor().x, y: this.underCursor().y };
            if (rect.height() - cursor.y < 7 && control.canDropDown()) {
                rect.top(rect.height() - 3);
                rect.height(7);
                this.dropCallback = this._getDropCallback(false, enums_1.DataFieldLayout.InColumn);
            }
            else if (rect.width() - cursor.x < 7 && control.canDropRight()) {
                rect.left(rect.width() - 3);
                rect.width(7);
                this.dropCallback = this._getDropCallback(false);
            }
            else if (cursor.x < 7 && control.canDropLeft()) {
                if (control._columnIndex() != 0) {
                    rect.height(crossTab.cells().filter(function (x) {
                        return x._columnIndex() == control._columnIndex() - 1 && x.kind() == control.kind();
                    })[0].surface._height() - 3);
                    if (crossTab.layoutOptions.rowTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]) {
                        rect.top(rect.top() - rect.height() + this._height() - 4);
                    }
                }
                else {
                    var grandTotal = crossTab.cells().filter(function (x) {
                        return x.kind() === enums_1.CellKind.RowTotalHeader && x.rowLevel === undefined;
                    })[0];
                    rect.height(grandTotal.surface._y() + grandTotal.surface._height() - this._y() - 3);
                    if (crossTab.layoutOptions.rowTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]) {
                        rect.top(rect.top() - (this._y() - grandTotal.surface._y()));
                        rect.height(this._y() - grandTotal.surface._y() + this._height() - 4);
                    }
                }
                this.dropCallback = this._getDropCallback(true);
                rect.left(-6);
                rect.width(7);
            }
            else if (cursor.y < 7 && control.canDropUp()) {
                if (control._rowIndex() != 0) {
                    rect.width(crossTab.cells().filter(function (x) {
                        return x._rowIndex() == control._rowIndex() - 1 && x.kind() == control.kind();
                    })[0].surface._width() - 3);
                    if (crossTab.layoutOptions.columnTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]) {
                        rect.left(rect.left() - rect.width() + this._width() - 4);
                    }
                }
                else {
                    var grandTotal = crossTab.cells().filter(function (x) {
                        return x.kind() === enums_1.CellKind.ColumnTotalHeader && x.columnLevel === undefined;
                    })[0];
                    rect.width(grandTotal.surface._x() + grandTotal.surface._width() - this._x() - 3);
                    if (crossTab.layoutOptions.columnTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]) {
                        rect.left(rect.left() - (this._x() - grandTotal.surface._x()));
                        rect.width(this._x() - grandTotal.surface._x() + this._width() - 4);
                    }
                }
                this.dropCallback = this._getDropCallback(true);
                rect.top(-6);
                rect.height(7);
            }
            else {
                this.dropCallback = function (item) {
                    if (!control.field()) {
                        _this._getDropCallback(true)(item);
                        return;
                    }
                    control.field()['setFieldName'](item.path);
                };
            }
        }
        else {
            this.dragCss('dxrd-drag-helper-item-forbidden');
        }
    };
    XRCellsurface.prototype.findNextSelection = function () {
        return this.parent;
    };
    return XRCellsurface;
}(xrControl_1.XRControlSurface));
exports.XRCellsurface = XRCellsurface;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var settings_1 = __webpack_require__(12);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var $ = __webpack_require__(3);
var ReportDataSourceService = (function () {
    function ReportDataSourceService() {
    }
    ReportDataSourceService.fieldListCallback = function (request) {
        var requestJson = JSON.stringify(request);
        var encodedJson = encodeURIComponent(requestJson);
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'fieldList', encodedJson);
    };
    ReportDataSourceService.getCustomQueriesPreset = function (dataSource) {
        return $.Deferred().resolve([]).promise();
    };
    ReportDataSourceService.sqlDataSourceFromBase64 = function (base64) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'dataSourceFromBase64', encodeURIComponent(base64));
    };
    ReportDataSourceService.getSqlDataSourceBase64 = function (dataSource) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'getDataSourceBase64', encodeURIComponent(JSON.stringify({ sqlDataSourceJSON: JSON.stringify({ SqlDataSource: new analytics_utils_1.ModelSerializer().serialize(dataSource) }) })));
    };
    ReportDataSourceService.getJsonDataSourceBase64 = function (dataSource) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'getJsonDataSourceBase64', encodeURIComponent(JSON.stringify({ jsonDataSourceJSON: JSON.stringify({ JsonDataSource: new analytics_utils_1.ModelSerializer().serialize(dataSource) }) })));
    };
    ReportDataSourceService.getObjectDataSourceBase64 = function (json) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'getObjectDataSourceBase64', encodeURIComponent(JSON.stringify(json)));
    };
    ReportDataSourceService.editObjectDataSourceParameters = function (json, base64) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'editObjectDataSourceParameters', encodeURIComponent(JSON.stringify({ objectDataSourceModel: json, base64: base64 })));
    };
    ReportDataSourceService.objectDataSourceFromBase64 = function (base64) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'objectDataSourceFromBase64', encodeURIComponent(base64));
    };
    ReportDataSourceService.jsonDataSourceFromBase64 = function (base64) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'jsonDataSourceFromBase64', encodeURIComponent(JSON.stringify({ base64: base64 })));
    };
    return ReportDataSourceService;
}());
exports.ReportDataSourceService = ReportDataSourceService;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var queryBuilder_utils_1 = __webpack_require__(457);
var analytics_internal_1 = __webpack_require__(2);
exports.QBRequestWrapper = analytics_internal_1.createGlobalModuleVariableFunc(new queryBuilder_utils_1.RequestWrapper());


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var reportWizardState_1 = __webpack_require__(18);
var ko = __webpack_require__(1);
function getFormattedValueInUnits(value, unit) {
    var format = unit === reportWizardState_1.GraphicsUnit.Inch ? 2 : 1;
    return value.toFixed(format);
}
exports.getFormattedValueInUnits = getFormattedValueInUnits;
var ListViewModel = (function () {
    function ListViewModel(caption) {
        var _this = this;
        this.caption = caption;
        this._items = ko.observableArray([]).extend({ deferred: true });
        this._refreshActiveItem = function (previousActivItemIndex) {
            if (previousActivItemIndex === void 0) { previousActivItemIndex = -1; }
            if (_this.isEmpty) {
                _this.activeItemArray.removeAll();
            }
            else if (previousActivItemIndex < 0) {
                _this.activeItemArray.splice(0, 1, _this._items()[0]);
            }
            else {
                if (previousActivItemIndex >= _this._items().length) {
                    previousActivItemIndex = _this._items().length - 1;
                }
                _this.activeItemArray.splice(0, 1, _this._items()[previousActivItemIndex]);
            }
        };
        this.activeItemArray = ko.observableArray([]).extend({ deferred: true });
    }
    Object.defineProperty(ListViewModel.prototype, "items", {
        get: function () {
            return this._items();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListViewModel.prototype, "activeItem", {
        get: function () {
            return this.activeItemArray().length === 1 ? this.activeItemArray()[0] : null;
        },
        set: function (value) {
            if (this._items().indexOf(value) > -1) {
                this.activeItemArray.splice(0, 1, value);
            }
        },
        enumerable: true,
        configurable: true
    });
    ListViewModel.prototype.add = function (item) {
        this._items.push(item);
        this.activeItemArray.splice(0, 1, item);
    };
    ListViewModel.prototype.addRange = function (items) {
        this.setItems(this._items().concat(items));
    };
    ListViewModel.prototype.removeActiveItem = function () {
        var index = this._items.indexOf(this.activeItemArray()[0]);
        this._items.remove(this.activeItemArray()[0]);
        this._refreshActiveItem(index);
    };
    ListViewModel.prototype.removeAll = function () {
        this._items.removeAll();
        this.activeItemArray.removeAll();
    };
    ListViewModel.prototype.setItems = function (items) {
        this._items(items);
        this.activeItemArray([this._items()[0]]);
        this._refreshActiveItem();
    };
    ListViewModel.prototype.moveUp = function () {
        if (this.isMoveUpEnabled()) {
            var index = this._items.indexOf(this.activeItem);
            this.activeItemArray.removeAll();
            this._items.splice(index - 1, 2, this._items()[index], this._items()[index - 1]);
            this.activeItemArray.splice(0, 1, this._items()[index - 1]);
        }
    };
    ListViewModel.prototype.moveDown = function () {
        if (this.isMoveDownEnabled()) {
            var index = this._items.indexOf(this.activeItem);
            this.activeItemArray.removeAll();
            this._items.splice(index, 2, this._items()[index + 1], this._items()[index]);
            this.activeItemArray.splice(0, 1, this._items()[index + 1]);
        }
    };
    Object.defineProperty(ListViewModel.prototype, "isEmpty", {
        get: function () {
            return this._items().length === 0;
        },
        enumerable: true,
        configurable: true
    });
    ListViewModel.prototype.isMoveUpEnabled = function () {
        return this._items.indexOf(this.activeItemArray()[0]) > 0;
    };
    ListViewModel.prototype.isMoveDownEnabled = function () {
        var index = this._items.indexOf(this.activeItemArray()[0]);
        return index > -1 && index < this._items().length - 1;
    };
    return ListViewModel;
}());
exports.ListViewModel = ListViewModel;


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var DataMemberBase = (function (_super) {
    __extends(DataMemberBase, _super);
    function DataMemberBase(value, valueScaleType) {
        var _this = _super.call(this) || this;
        _this._separator = ';';
        _this._assignValueDataMembers(_this, value);
        if (valueScaleType) {
            _this.valueScaleType = valueScaleType;
            _this._disposables.push(_this.valueScaleType.subscribe(function (newVal) {
                _this._assignValueDataMembers(_this, '');
            }));
        }
        return _this;
    }
    DataMemberBase.prototype._assignValueDataMembers = function (valueDataMember, value) {
        var values = (value || '').split(this._separator);
        valueDataMember.arrayValueDataMemberNames.forEach(function (name, index) {
            if (valueDataMember[name])
                valueDataMember[name](values[index] || '');
            else
                valueDataMember[name] = ko.observable(values[index] || '');
        });
    };
    DataMemberBase.prototype._valueDataMembersToString = function (valueDataMember) {
        var result = [];
        valueDataMember.arrayValueDataMemberNames.forEach(function (name) {
            result.push(valueDataMember[name]() || '');
        });
        return result.join(this._separator);
    };
    DataMemberBase.prototype.toString = function () {
        var _this = this;
        var shouldSerialize = false;
        this.arrayValueDataMemberNames.forEach(function (name) {
            shouldSerialize = shouldSerialize || _this[name]();
        });
        return shouldSerialize ? this._valueDataMembersToString(this) : null;
    };
    return DataMemberBase;
}(analytics_utils_1.Disposable));
exports.DataMemberBase = DataMemberBase;


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _editorTemplates_1 = __webpack_require__(22);
exports.commonValueSerializationsInfo = [
    { propertyName: 'value', displayName: 'Value', editor: _editorTemplates_1.editorTemplates.getEditor('valueDataMember'), localizationId: 'AnalyticsCoreStringId.FilterEditor_Operand_Type_Value' },
];
exports.valueWeightSerializationsInfo = [
    { propertyName: 'value', displayName: 'Value', editor: _editorTemplates_1.editorTemplates.getEditor('valueDataMember'), localizationId: 'AnalyticsCoreStringId.FilterEditor_Operand_Type_Value' },
    { propertyName: 'weight', displayName: 'Weight', editor: _editorTemplates_1.editorTemplates.getEditor('valueDataMember'), localizationId: 'DevExpress.XtraPivotGrid.PivotKPIType.Weight' },
];
exports.value1Value2SerializationsInfo = [
    { propertyName: 'value1', displayName: 'Value 1', editor: _editorTemplates_1.editorTemplates.getEditor('valueDataMember'), localizationId: 'DevExpress.XtraCharts.ValueLevel.Value_1' },
    { propertyName: 'value2', displayName: 'Value 2', editor: _editorTemplates_1.editorTemplates.getEditor('valueDataMember'), localizationId: 'DevExpress.XtraCharts.ValueLevel.Value_2' },
];
exports.stockValueSerializationsInfo = [
    { propertyName: 'low', displayName: 'Low', editor: _editorTemplates_1.editorTemplates.getEditor('valueDataMember'), localizationId: 'DevExpress.XtraCharts.StockLevel.Low' },
    { propertyName: 'high', displayName: 'High', editor: _editorTemplates_1.editorTemplates.getEditor('valueDataMember'), localizationId: 'DevExpress.XtraCharts.StockLevel.High' },
    { propertyName: 'open', displayName: 'Open', editor: _editorTemplates_1.editorTemplates.getEditor('valueDataMember'), localizationId: 'DevExpress.XtraCharts.StockLevel.Open' },
    { propertyName: 'close', displayName: 'Close', editor: _editorTemplates_1.editorTemplates.getEditor('valueDataMember'), localizationId: 'DevExpress.XtraCharts.StockLevel.Close' },
];


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _common_1 = __webpack_require__(35);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
exports.typeNameSerializable = {
    propertyName: 'typeName', modelName: '@TypeNameSerializable', from: function (value) { return value; }
};
exports.barSeriesViewGroup = ['SideBySideBarSeriesView', 'StackedBarSeriesView', 'FullStackedBarSeriesView', 'SideBySideStackedBarSeriesView', 'SideBySideFullStackedBarSeriesView', 'OverlappedRangeBarSeriesView', 'SideBySideRangeBarSeriesView', 'OverlappedGanttSeriesView', 'SideBySideGanttSeriesView'];
exports.bar3DSeriesViewGroup = ['SideBySideBar3DSeriesView', 'StackedBar3DSeriesView', 'FullStackedBar3DSeriesView', 'SideBySideStackedBar3DSeriesView', 'SideBySideFullStackedBar3DSeriesView', 'ManhattanBarSeriesView'];
exports.barWidth = { propertyName: 'barWidth', modelName: '@BarWidth', displayName: 'Bar Width', defaultVal: 0.6, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.BarSeriesView.BarWidth' };
exports.colorEach = { propertyName: 'colorEach', modelName: '@ColorEach', displayName: 'Color Each', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.SeriesView3DColorEachSupportBase.ColorEach' };
exports.borderSerializationsInfo = [_common_1.color, _common_1.thickness, _common_1.visibility];
exports.border = { propertyName: 'border', modelName: 'Border', displayName: 'Border', info: exports.borderSerializationsInfo, defaultVal: {}, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.TotalLabel.Border' };
var color2 = { propertyName: 'color2', modelName: '@Color2', displayName: 'Color2', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), localizationId: 'DevExpress.XtraCharts.PaletteEntry.Color2' }, typeNameSerializableOptions = { propertyName: 'typeNameSerializable', modelName: '@TypeNameSerializable' };
exports.fillMode = {
    propertyName: 'fillMode', modelName: '@FillMode', displayName: 'Fill Mode', defaultVal: 'Empty', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Empty', displayValue: 'Empty', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAppearances.Empty' }, { value: 'Solid', displayValue: 'Solid', localizationId: 'DevExpress.XtraCharts.FillMode3D.Solid' }, { value: 'Gradient', displayValue: 'Gradient', localizationId: 'DevExpress.XtraCharts.FillMode3D.Gradient' }, { value: 'Hatch', displayValue: 'Hatch', localizationId: 'DevExpress.XtraCharts.FillMode.Hatch' }],
    localizationId: 'DevExpress.XtraCharts.FillStyle3D.FillMode'
};
var gradientModeBase = {
    propertyName: 'gradientMode', modelName: '@GradientMode', displayName: 'Gradient Mode', defaultVal: 'TopToBottom', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'TopToBottom', displayValue: 'Top To Bottom', localizationId: 'DevExpress.XtraCharts.TextOrientation.TopToBottom' }, { value: 'BottomToTop', displayValue: 'Bottom To Top', localizationId: 'DevExpress.XtraCharts.TextOrientation.BottomToTop' }, { value: 'LeftToRight', displayValue: 'Left To Right' }, { value: 'RightToLeft', displayValue: 'Right To Left' }, { value: 'TopLeftToBottomRight', displayValue: 'Top Left To Bottom Right' }, { value: 'BottomRightToTopLeft', displayValue: 'Bottom Right To Top Left' }, { value: 'TopRightToBottomLeft', displayValue: 'Top Right To Bottom Left' }, { value: 'BottomLeftToTopRight', displayValue: 'Bottom Left To Top Right' }, { value: 'FromCenterHorizontal', displayValue: 'From Center Horizontal', localizationId: 'DevExpress.XtraCharts.RectangleGradientMode.FromCenterHorizontal' }, { value: 'ToCenterHorizontal', displayValue: 'To Center Horizontal', localizationId: 'DevExpress.XtraCharts.RectangleGradientMode.ToCenterHorizontal' }, { value: 'FromCenterVertical', displayValue: 'From Center Vertical', localizationId: 'DevExpress.XtraCharts.RectangleGradientMode.FromCenterVertical' }, { value: 'ToCenterVertical', displayValue: 'To Center Vertical', localizationId: 'DevExpress.XtraCharts.RectangleGradientMode.ToCenterVertical' }],
    localizationId: 'DevExpress.XtraCharts.PolygonGradientFillOptions.GradientMode'
}, GradientFillOptionsInfoBase = [gradientModeBase, color2, _common_1.tag, { propertyName: 'typeNameSerializable', modelName: '@TypeNameSerializable' }];
var hatchStyle = {
    propertyName: 'hatchStyle', modelName: '@HatchStyle', displayName: 'Hatch Style', defaultVal: 'BackwardDiagonal', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Horizontal', displayValue: 'Horizontal', localizationId: 'DevExpress.XtraCharts.TextOrientation.Horizontal' }, { value: 'Vertical', displayValue: 'Vertical', localizationId: 'DevExpress.XtraCharts.LayoutDirection.Vertical' }, { value: 'ForwardDiagonal', displayValue: 'ForwardDiagonal', localizationId: 'ChartStringId.WizHatchForwardDiagonal' }, { value: 'BackwardDiagonal', displayValue: 'BackwardDiagonal', localizationId: 'ChartStringId.WizHatchBackwardDiagonal' }, { value: 'LargeGrid', displayValue: 'LargeGrid', localizationId: 'ChartStringId.WizHatchLargeGrid' }, { value: 'DiagonalCross', displayValue: 'DiagonalCross', localizationId: 'ChartStringId.WizHatchDiagonalCross' }, { value: 'Percent05', displayValue: 'Percent05', localizationId: 'ChartStringId.WizHatchPercent05' }, { value: 'Percent10', displayValue: 'Percent10', localizationId: 'ChartStringId.WizHatchPercent10' }, { value: 'Percent20', displayValue: 'Percent20', localizationId: 'ChartStringId.WizHatchPercent20' }, { value: 'Percent25', displayValue: 'Percent25', localizationId: 'ChartStringId.WizHatchPercent25' }, { value: 'Percent30', displayValue: 'Percent30', localizationId: 'ChartStringId.WizHatchPercent30' }, { value: 'Percent40', displayValue: 'Percent40', localizationId: 'ChartStringId.WizHatchPercent40' }, { value: 'Percent50', displayValue: 'Percent50', localizationId: 'ChartStringId.WizHatchPercent50' }, { value: 'Percent60', displayValue: 'Percent60', localizationId: 'ChartStringId.WizHatchPercent60' }, { value: 'Percent70', displayValue: 'Percent70', localizationId: 'ChartStringId.WizHatchPercent70' }, { value: 'Percent75', displayValue: 'Percent75', localizationId: 'ChartStringId.WizHatchPercent75' }, { value: 'Percent80', displayValue: 'Percent80', localizationId: 'ChartStringId.WizHatchPercent80' }, { value: 'Percent90', displayValue: 'Percent90', localizationId: 'ChartStringId.WizHatchPercent90' }, { value: 'LightDownwardDiagonal', displayValue: 'LightDownwardDiagonal', localizationId: 'ChartStringId.WizHatchLightDownwardDiagonal' }, { value: 'LightUpwardDiagonal', displayValue: 'LightUpwardDiagonal', localizationId: 'ChartStringId.WizHatchLightUpwardDiagonal' }, { value: 'DarkDownwardDiagonal', displayValue: 'DarkDownwardDiagonal', localizationId: 'ChartStringId.WizHatchDarkDownwardDiagonal' }, { value: 'DarkUpwardDiagonal', displayValue: 'DarkUpwardDiagonal', localizationId: 'ChartStringId.WizHatchDarkUpwardDiagonal' }, { value: 'WideDownwardDiagonal', displayValue: 'WideDownwardDiagonal', localizationId: 'ChartStringId.WizHatchWideDownwardDiagonal' }, { value: 'WideUpwardDiagonal', displayValue: 'WideUpwardDiagonal', localizationId: 'ChartStringId.WizHatchWideUpwardDiagonal' }, { value: 'LightVertical', displayValue: 'LightVertical', localizationId: 'ChartStringId.WizHatchLightVertical' }, { value: 'LightHorizontal', displayValue: 'LightHorizontal', localizationId: 'ChartStringId.WizHatchLightHorizontal' }, { value: 'NarrowVertical', displayValue: 'NarrowVertical', localizationId: 'ChartStringId.WizHatchNarrowVertical' }, { value: 'NarrowHorizontal', displayValue: 'NarrowHorizontal', localizationId: 'ChartStringId.WizHatchNarrowHorizontal' }, { value: 'DarkVertical', displayValue: 'DarkVertical', localizationId: 'ChartStringId.WizHatchDarkVertical' }, { value: 'DarkHorizontal', displayValue: 'DarkHorizontal', localizationId: 'ChartStringId.WizHatchDarkHorizontal' }, { value: 'DashedDownwardDiagonal', displayValue: 'DashedDownwardDiagonal', localizationId: 'ChartStringId.WizHatchDashedDownwardDiagonal' }, { value: 'DashedUpwardDiagonal', displayValue: 'DashedUpwardDiagonal', localizationId: 'ChartStringId.WizHatchDashedUpwardDiagonal' }, { value: 'DashedHorizontal', displayValue: 'DashedHorizontal', localizationId: 'ChartStringId.WizHatchDashedHorizontal' }, { value: 'DashedVertical', displayValue: 'DashedVertical', localizationId: 'ChartStringId.WizHatchDashedVertical' }, { value: 'SmallConfetti', displayValue: 'SmallConfetti', localizationId: 'ChartStringId.WizHatchSmallConfetti' }, { value: 'LargeConfetti', displayValue: 'LargeConfetti', localizationId: 'ChartStringId.WizHatchLargeConfetti' }, { value: 'ZigZag', displayValue: 'ZigZag', localizationId: 'ChartStringId.WizHatchZigZag' }, { value: 'Wave', displayValue: 'Wave', localizationId: 'System.Drawing.Drawing2D.HatchStyle.Wave' }, { value: 'DiagonalBrick', displayValue: 'DiagonalBrick', localizationId: 'ChartStringId.WizHatchDiagonalBrick' }, { value: 'HorizontalBrick', displayValue: 'HorizontalBrick', localizationId: 'ChartStringId.WizHatchHorizontalBrick' }, { value: 'Weave', displayValue: 'Weave', localizationId: 'System.Drawing.Drawing2D.HatchStyle.Weave' }, { value: 'Plaid', displayValue: 'Plaid', localizationId: 'System.Drawing.Drawing2D.HatchStyle.Plaid' }, { value: 'Divot', displayValue: 'Divot', localizationId: 'System.Drawing.Drawing2D.HatchStyle.Divot' }, { value: 'DottedGrid', displayValue: 'DottedGrid', localizationId: 'ChartStringId.WizHatchDottedGrid' }, { value: 'DottedDiamond', displayValue: 'DottedDiamond', localizationId: 'ChartStringId.WizHatchDottedDiamond' }, { value: 'Shingle', displayValue: 'Shingle', localizationId: 'System.Drawing.Drawing2D.HatchStyle.Shingle' }, { value: 'Trellis', displayValue: 'Trellis', localizationId: 'System.Drawing.Drawing2D.HatchStyle.Trellis' }, { value: 'Sphere', displayValue: 'Sphere', localizationId: 'System.Drawing.Drawing2D.HatchStyle.Sphere' }, { value: 'SmallGrid', displayValue: 'SmallGrid', localizationId: 'ChartStringId.WizHatchSmallGrid' }, { value: 'SmallCheckerBoard', displayValue: 'SmallCheckerBoard', localizationId: 'ChartStringId.WizHatchSmallCheckerBoard' }, { value: 'LargeCheckerBoard', displayValue: 'LargeCheckerBoard', localizationId: 'ChartStringId.WizHatchLargeCheckerBoard' }, { value: 'OutlinedDiamond', displayValue: 'OutlinedDiamond', localizationId: 'ChartStringId.WizHatchOutlinedDiamond' }, { value: 'SolidDiamond', displayValue: 'SolidDiamond', localizationId: 'ChartStringId.WizHatchSolidDiamond' }],
    localizationId: 'DevExpress.XtraCharts.HatchFillOptions.HatchStyle'
}, hatchFillOptionsInfo = [hatchStyle, color2, _common_1.tag, typeNameSerializableOptions];
exports.fillStyleOptionsSerialize = { propertyName: 'options', modelName: 'Options', displayName: 'Options', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.Options' };
exports.fillMode3D = {
    propertyName: 'fillMode', modelName: '@FillMode', displayName: 'Fill Mode', defaultVal: 'Empty', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Empty', displayValue: 'Empty', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAppearances.Empty' }, { value: 'Solid', displayValue: 'Solid', localizationId: 'DevExpress.XtraCharts.FillMode3D.Solid' }, { value: 'Gradient', displayValue: 'Gradient', localizationId: 'DevExpress.XtraCharts.FillMode3D.Gradient' }],
    localizationId: 'DevExpress.XtraCharts.FillStyle3D.FillMode'
};
exports.fillStyle = { propertyName: 'fillStyle', modelName: 'FillStyle', displayName: 'Fill Style', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraReports.UI.XRChart.FillStyle' };
var seriesAggregateFunction = {
    propertyName: 'aggregateFunction', modelName: '@AggregateFunction', displayName: 'Aggregate Function', localizationId: 'DevExpress.XtraCharts.XYDiagram2DSeriesViewBase.AggregateFunction', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Default', displayValue: analytics_utils_1.getLocalization('Default', 'ChartStringId.WizAggregateFunctionDefault') }, { value: 'None', displayValue: analytics_utils_1.getLocalization('None', 'ChartStringId.WizAggregateFunctionNone') }, { value: 'Average', displayValue: analytics_utils_1.getLocalization('Average', 'ChartStringId.WizAggregateFunctionAverage') }, { value: 'Sum', displayValue: analytics_utils_1.getLocalization('Sum', 'ChartStringId.WizAggregateFunctionSum') }, { value: 'Minimum', displayValue: analytics_utils_1.getLocalization('Minimum', 'ChartStringId.WizAggregateFunctionMinimum') }, { value: 'Maximum', displayValue: analytics_utils_1.getLocalization('Maximum', 'ChartStringId.WizAggregateFunctionMaximum') }, { value: 'Count', displayValue: analytics_utils_1.getLocalization('Count', 'ChartStringId.WizAggregateFunctionCount') }, { value: 'Financial', displayValue: analytics_utils_1.getLocalization('Financial', 'ChartStringId.WizAggregateFunctionFinancial') }]
};
exports.viewSerializationsInfo = [exports.typeNameSerializable, _common_1.color, exports.colorEach, exports.border, seriesAggregateFunction, _common_1.tag];
exports.fillModeMapper = {
    'Empty': [],
    'Solid': [_common_1.tag],
    'Gradient': GradientFillOptionsInfoBase,
    'Hatch': hatchFillOptionsInfo
};


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _summaryFunctionEditor_1 = __webpack_require__(161);
var _common_1 = __webpack_require__(35);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var _editorTemplates_1 = __webpack_require__(22);
exports.summaryFunctionSerializationInfo = {
    propertyName: 'summaryFunction', displayName: 'Summary Function', modelName: '@SummaryFunction', from: _summaryFunctionEditor_1.SummaryFunctionModel.from, toJsonObject: _summaryFunctionEditor_1.SummaryFunctionModel.toJson,
    editor: _editorTemplates_1.editorTemplates.getEditor('summaryFunction'), localizationId: 'DevExpress.XtraCharts.SummaryOptionsBase.SummaryFunction'
};
exports.summaryOptionsSerializationInfoArray = [
    exports.summaryFunctionSerializationInfo, _common_1.tag
];
exports.numericSummaryOptionsSerializationInfoArray = exports.summaryOptionsSerializationInfoArray.concat([
    { propertyName: 'measureUnit', modelName: '@MeasureUnit', displayName: 'Measure Unit', localizationId: 'DevExpress.XtraCharts.NumericSummaryOptions.MeasureUnit', defaultVal: 1, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') },
    { propertyName: 'useAxisMeasureUnit', modelName: '@UseAxisMeasureUnit', displayName: 'Use Axis Measure Unit', localizationId: 'DevExpress.XtraCharts.NumericSummaryOptions.UseAxisMeasureUnit', defaultVal: true, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool') },
]);
exports.dateTimeSummaryOptionsSerializationInfoArray = exports.summaryOptionsSerializationInfoArray.concat([
    {
        propertyName: 'measureUnit', modelName: '@MeasureUnit', displayName: 'Measure Unit', localizationId: 'DevExpress.XtraCharts.DateTimeSummaryOptions.MeasureUnit', defaultVal: 'Day', from: analytics_utils_1.fromEnum, editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
        valuesArray: [
            { value: 'Millisecond', displayValue: 'Millisecond', localizationId: 'DevExpress.XtraCharts.DateTimeMeasureUnit.Millisecond' },
            { value: 'Second', displayValue: 'Second', localizationId: 'DevExpress.XtraCharts.DateTimeMeasureUnit.Second' },
            { value: 'Minute', displayValue: 'Minute', localizationId: 'DevExpress.XtraCharts.DateTimeMeasureUnit.Minute' },
            { value: 'Hour', displayValue: 'Hour', localizationId: 'DevExpress.XtraCharts.DateTimeMeasureUnit.Hour' },
            { value: 'Day', displayValue: 'Day', localizationId: 'DevExpress.XtraCharts.DateTimeMeasureUnit.Day' },
            { value: 'Week', displayValue: 'Week', localizationId: 'DevExpress.XtraCharts.DateTimeMeasureUnit.Week' },
            { value: 'Month', displayValue: 'Month', localizationId: 'DevExpress.XtraCharts.DateTimeMeasureUnit.Month' },
            { value: 'Quarter', displayValue: 'Quarter', localizationId: 'DevExpress.XtraCharts.DateTimeMeasureUnit.Quarter' },
            { value: 'Year', displayValue: 'Year', localizationId: 'DevExpress.XtraCharts.DateTimeMeasureUnit.Year' },
        ]
    },
    { propertyName: 'measureUnitMultiplier', modelName: '@MeasureUnitMultiplier', displayName: 'Measure Unit Multiplier', localizationId: 'DevExpress.XtraCharts.DateTimeSummaryOptions.MeasureUnitMultiplier', defaultVal: 1, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') },
    { propertyName: 'useAxisMeasureUnit', modelName: '@UseAxisMeasureUnit', displayName: 'Use Axis Measure Unit', localizationId: 'DevExpress.XtraCharts.DateTimeSummaryOptions.UseAxisMeasureUnit', defaultVal: true, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool') }
]);


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var reportExpressionEditorAdapter_1 = __webpack_require__(172);
var ReportExpressionEditorWrapper = (function (_super) {
    __extends(ReportExpressionEditorWrapper, _super);
    function ReportExpressionEditorWrapper(control, value) {
        var _this = _super.call(this) || this;
        _this.control = control;
        _this.value = value;
        _this._allProperties = [];
        _this.title = function () { return analytics_utils_1.getLocalization('Expression Editor', 'AnalyticsCoreStringId.ExpressionEditor_ExpressionCaption'); };
        _this.getPopupContainer = analytics_internal_1.getParentContainer;
        _this.adapter = ko.observable();
        _this.editor = ko.observable();
        _this.properties = ko.observable([]);
        _this.popupVisible = ko.observable(false);
        _this.buttonItems = [];
        _this._createMainPopupButtons();
        return _this;
    }
    ReportExpressionEditorWrapper.prototype._createMainPopupButtons = function () {
        var self = this;
        this.buttonItems = [
            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { text: analytics_utils_1.getLocalization('Save', analytics_internal_1.StringId.DataAccessBtnOK), onClick: function (sender) { self.apply(sender) && self.popupVisible(false); } } },
            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { text: analytics_utils_1.getLocalization('Cancel', analytics_internal_1.StringId.DataAccessBtnCancel), onClick: function () { self.popupVisible(false); } } },
            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { text: analytics_utils_1.getLocalization('Apply', 'StringId.Apply'), onClick: function (sender) { self.apply(sender); } } }
        ];
    };
    ReportExpressionEditorWrapper.prototype.apply = function (sender) {
        var value = this.editor().getValue();
        if (this.editor().validate(value, sender)) {
            this.editor().save(null);
            this._allProperties.forEach(function (x) { return x.value && x.content.value && x.value() !== undefined && x.content.value(x.value()); });
            return true;
        }
    };
    ReportExpressionEditorWrapper.prototype.onShowing = function (e) {
        var expressionObj = this.control().expressionObj;
        this._allProperties = [];
        this.properties([]);
        this.createExpressionEditorProperties(expressionObj, this.properties(), this.value);
        this.properties.valueHasMutated();
        this.value() && this.updateExpression(this.value());
        this._undoEngine = analytics_utils_1.UndoEngine.tryGetUndoEngine(this.control());
        this._undoEngine && this._undoEngine.start();
        this.editor().onShowing(e);
        this.editor().initDisplayValue();
    };
    ReportExpressionEditorWrapper.prototype.onHiding = function (e) {
        this._allProperties.forEach(function (x) { return x.content && x.value(x.content.value()); });
        this.editor() && this.editor().onHiding(e);
        this._undoEngine && this._undoEngine.end();
        this.adapter() && this.adapter().dispose();
    };
    ReportExpressionEditorWrapper.prototype.createExpressionEditorProperties = function (expressionObj, properties, selected) {
        var _this = this;
        expressionObj.getInfo().forEach(function (info) {
            var items = [];
            var expand = false;
            if (info.info)
                expand = _this.createExpressionEditorProperties(expressionObj[info.propertyName], items, selected);
            if (info.propertyName === 'Appearance' || info.propertyName === 'Layout') {
                properties.push.apply(properties, items);
            }
            else {
                var content = !items.length && expressionObj[info.propertyName];
                var property = {
                    displayName: analytics_utils_1.getLocalization(info.displayName, info.localizationId),
                    propertyName: info.propertyName,
                    items: items,
                    templateName: !!items.length ? 'dxrd-expressioneditor-property-accordion' : '',
                    collapsed: ko.observable(!expand),
                    content: content,
                    value: ko.observable(content && content.value()),
                    isSelected: ko.observable(content == selected()),
                    click: function () { return _this.switchExpression(property); },
                    isBinded: function () { return !!property.value() || property.items.some(function (x) { return x.isBinded(); }); }
                };
                if (!selected()) {
                    property.isSelected(true);
                    selected(property.content);
                }
                if (property.isSelected())
                    _this.currentProperty = property;
                properties.push(property);
                _this._allProperties.push(property);
            }
        });
        properties.sort(function (a, b) { return a.displayName < b.displayName ? -1 : 1; });
        return properties.some(function (x) { return x.isSelected() || !x.collapsed(); });
    };
    ReportExpressionEditorWrapper.prototype.switchExpression = function (property) {
        if (property === this.currentProperty)
            return;
        var value = this.editor().getValue();
        if (this.editor().validate(value)) {
            this.editor().save(null);
            this.currentProperty.isSelected(false);
            this.currentProperty = property;
            this.updateExpression(property.content);
            property.isSelected(true);
            this.editor().initDisplayValue();
        }
    };
    ReportExpressionEditorWrapper.prototype.updateExpression = function (expression) {
        this.adapter() && this.adapter().dispose();
        this.adapter(new reportExpressionEditorAdapter_1.ReportExpressionEditorAdapter(ko.observable(expression['serializationInfo'] && expression['serializationInfo']['valuesArray'] || []), ko.observable(__assign({}, expression, {
            value: this.currentProperty.value
        }))));
    };
    return ReportExpressionEditorWrapper;
}(analytics_utils_1.Disposable));
exports.ReportExpressionEditorWrapper = ReportExpressionEditorWrapper;


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_internal_1 = __webpack_require__(8);
exports.reportFunctionDisplay = (function (addins) { return analytics_widgets_internal_1.insertInFunctionDisplay(addins); })([{
        display: 'String',
        items: {
            'NewLine': [{ paramCount: 0, text: 'NewLine()', descriptionStringId: 'ExpressionEditorStringId.Function_NewLine' }],
            'FormatString': [{ paramCount: 1, text: "FormatString('')", descriptionStringId: 'ExpressionEditorStringId.Function_FormatString' }]
        },
    }, {
        display: 'Reporting',
        localizationId: 'ReportStringId.ExpressionEditor_ItemInfo_FunctionReporting',
        items: {
            'Rgb': [{ paramCount: 3, text: 'Rgb(, , )', descriptionStringId: 'ReportStringId.ExpressionEditor_Description_Function_Rgb' }],
            'Argb': [{ paramCount: 4, text: 'Argb(, , , )', descriptionStringId: 'ReportStringId.ExpressionEditor_Description_Function_Argb' }],
            'GetDisplayText': [{ paramCount: 1, text: 'GetDisplayText(?parameter)', descriptionStringId: 'ReportStringId.ExpressionEditor_Description_Function_GetDisplayText' }]
        }
    }]);


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var parameterExpressionBinding_1 = __webpack_require__(121);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var editorTemplates_1 = __webpack_require__(9);
var parameterSettings_1 = __webpack_require__(82);
var _parameterUtils_1 = __webpack_require__(46);
exports.valueSourceSettingsTypes = [
    { value: 'None', displayValue: '(none)', localizationId: 'PreviewStringId.ParameterLookUpSettingsNoLookUp' },
    { value: 'StaticListLookUpSettings', displayValue: 'Static List', localizationId: 'DevExpress.XtraReports.Parameters.StaticListLookUpSettings' },
    { value: 'DynamicListLookUpSettings', displayValue: 'Dynamic List', localizationId: 'DevExpress.XtraReports.Parameters.DynamicListLookUpSettings' }
];
exports.extendValueSourceSettingsTypes = analytics_internal_1.extend(true, [], [].concat(exports.valueSourceSettingsTypes, [
    { value: 'RangeParametersSettings', displayValue: 'Range Parameters', localizationId: 'DevExpress.XtraReports.Parameters.RangeParametersSettings' }
]));
exports.parameterValueSerializationInfo = { propertyName: 'value', displayName: 'Value', localizationId: 'DevExpress.XtraReports.Parameters.Parameter.Value', modelName: '@ValueInfo', from: function (val) { return ko.observable(val); }, toJsonObject: _parameterUtils_1.parameterValueToJsonObject };
exports.parameterExpressionSerializationInfo = { propertyName: 'ValueExpressionObj', displayName: 'Expression', localizationId: 'DevExpress.XtraReports.UI.CalculatedField.Expression', editor: analytics_widgets_1.editorTemplates.getEditor('expressionEditor') };
exports.parameterLookUpSettingsSerializationInfo = { propertyName: 'lookUpSettings', displayName: 'Look-Up Settings', localizationId: 'DevExpress.XtraReports.Parameters.Parameter.LookUpSettings', modelName: '@LookUpSettings', link: true, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.valueSourceSettingsSerializationInfo = { propertyName: 'valueSourceSettings', displayName: 'Value Source Settings', localizationId: 'DevExpress.XtraReports.Parameters.Parameter.ValueSourceSettings', modelName: '@ValueSourceSettings', link: true, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.parameterNameSerializationInfo = { propertyName: 'parameterName', modelName: '@Name', displayName: 'Name', localizationId: 'DevExpress.XtraReports.UI.XRControl.Name', defaultVal: '', validationRules: analytics_internal_1.nameValidationRules, editor: editorTemplates_1.designerEditorTemplates.getEditor('name') };
exports.parameterSerializationInfo = [
    exports.parameterNameSerializationInfo,
    { propertyName: 'description', localizable: true, modelName: '@Description', displayName: 'Description', localizationId: 'DevExpress.XtraReports.Parameters.Parameter.Description', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('text') },
    { propertyName: 'type', displayName: 'Type', localizationId: 'DevExpress.XtraReports.Parameters.Parameter.Type', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: (parameterSettings_1.parameterTypeValues) },
    { propertyName: 'visible', modelName: '@Visible', defaultVal: true, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('boolSelect'), displayName: 'Visible', localizationId: 'DevExpress.XtraReports.UI.XRControl.Visible' },
    { propertyName: 'enabled', modelName: '@Enabled', defaultVal: true, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('boolSelect'), displayName: 'Enabled', localizationId: 'DevExpress.XtraReports.UI.EditOptions.Enabled' },
    { propertyName: 'allowNull', modelName: '@AllowNull', displayName: 'Allow Null', localizationId: 'DevExpress.XtraReports.Parameters.Parameter.AllowNull', defaultVal: false, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool') },
    { propertyName: 'isMultiValue', modelName: '@MultiValue', displayName: 'MultiValue', localizationId: 'DevExpress.XtraReports.Parameters.Parameter.MultiValue', defaultVal: false, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool') },
    { propertyName: 'selectAllValues', modelName: '@SelectAllValues', displayName: 'Select All Values', localizationId: 'DevExpress.XtraReports.Parameters.Parameter.SelectAllValues', defaultVal: false, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool') },
    { propertyName: 'tag', modelName: '@Tag', displayName: 'Tag', localizationId: 'DevExpress.XtraReports.UI.XRControl.Tag', editor: analytics_widgets_1.editorTemplates.getEditor('text'), defaultVal: '' },
    exports.parameterExpressionSerializationInfo,
    exports.parameterValueSerializationInfo,
    parameterExpressionBinding_1.parameterExpressionBindings,
    { propertyName: '_obsoleteValue', modelName: '@Value', link: true },
    { propertyName: '_type', modelName: '@Type', link: true },
    {
        propertyName: 'valueSourceSettingsType', displayName: 'Value Source Settings', localizationId: 'DevExpress.XtraReports.Parameters.Parameter.ValueSourceSettings', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
        valuesArray: exports.valueSourceSettingsTypes
    },
    exports.valueSourceSettingsSerializationInfo
];


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var parameterTypesHelper_1 = __webpack_require__(175);
exports.parameterSeparator = '|';
exports.parameterTypeValues = parameterTypesHelper_1.ParameterTypesHelper.typeValues;


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var objectStorageItem_1 = __webpack_require__(38);
var analytics_widgets_1 = __webpack_require__(4);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var RangeParametersSettings = (function (_super) {
    __extends(RangeParametersSettings, _super);
    function RangeParametersSettings(model, dsHelperProvider, serializer) {
        return _super.call(this, $.extend({ '@ObjectType': 'DevExpress.XtraReports.Parameters.RangeParametersSettings' }, model), dsHelperProvider, serializer) || this;
    }
    RangeParametersSettings.prototype._updateInfo = function (info) {
        if (this._isEditing())
            info.forEach(function (x) {
                if (x.editor && x.editor === analytics_widgets_1.editorTemplates.getEditor('objecteditor'))
                    x.editor = rangeSettings_1.rangeEditor;
            });
    };
    RangeParametersSettings.prototype.preInitProperties = function (model, helper, serializer) {
        _super.prototype.preInitProperties.call(this, model, helper, serializer);
        this._isEditing = ko.observable(false);
    };
    RangeParametersSettings.prototype.getInfo = function () {
        var info = _super.prototype.getInfo.call(this).concat(rangeSettings_1.rangeSettingsInfos);
        this._updateInfo(info);
        return info;
    };
    RangeParametersSettings.prototype.initalizeRangeParameter = function (rangeParameter, parameter, namePostfix) {
        if (namePostfix === void 0) { namePostfix = '_Start'; }
        rangeParameter.parameterName(parameter.name + namePostfix);
        rangeParameter.value(parameter.defaultValue);
    };
    RangeParametersSettings.prototype.assingParameterInfo = function (parameter) {
        [this.startParameter(), this.endParameter()].forEach(function (rangeParameter) {
            rangeParameter.valueInfo = parameter.valueInfo;
            rangeParameter._type = parameter.type;
            rangeParameter._specifics(parameter.parameterTypesHelper.getSpecifics(parameter.type()));
            parameterExpressionBinding_1.createExpressionProperty(rangeParameter, 'Value');
        });
    };
    RangeParametersSettings.prototype.initializeParameters = function (parameter) {
        this.assingParameterInfo(parameter);
        this.initalizeRangeParameter(this.startParameter(), parameter);
        this.initalizeRangeParameter(this.endParameter(), parameter, '_End');
    };
    return RangeParametersSettings;
}(objectStorageItem_1.ObjectItem));
exports.RangeParametersSettings = RangeParametersSettings;
var RangeBoundaryParameter = (function (_super) {
    __extends(RangeBoundaryParameter, _super);
    function RangeBoundaryParameter(model, dsHelperProvider, serializer) {
        var _this = _super.call(this, model, dsHelperProvider, serializer) || this;
        _this._specifics = ko.observable('date');
        _this.templateName = 'dx-treelist-item';
        return _this;
    }
    RangeBoundaryParameter.prototype.getInfo = function () {
        if (this.valueInfo) {
            var info = $.extend(true, [], rangeSettings_1.rangeBoundaryParameterInfos);
            var valueInfo = this._type() === 'System.DateTime' ? analytics_internal_1.extend({}, this.valueInfo(), { editorOptions: { type: 'date' } }) : this.valueInfo();
            info.splice(info.indexOf(info.filter(function (prop) { return prop.propertyName === 'value'; })[0]), 1, valueInfo);
            return info;
        }
        return rangeSettings_1.rangeBoundaryParameterInfos;
    };
    Object.defineProperty(RangeBoundaryParameter.prototype, "name", {
        get: function () {
            return this.parameterName();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeBoundaryParameter.prototype, "displayName", {
        get: function () {
            return this.parameterName();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeBoundaryParameter.prototype, "specifics", {
        get: function () {
            return this._specifics();
        },
        enumerable: true,
        configurable: true
    });
    return RangeBoundaryParameter;
}(objectStorageItem_1.ObjectItem));
exports.RangeBoundaryParameter = RangeBoundaryParameter;
var RangeStartParameter = (function (_super) {
    __extends(RangeStartParameter, _super);
    function RangeStartParameter(model, dsHelperProvider, serializer) {
        return _super.call(this, $.extend({ '@ObjectType': 'DevExpress.XtraReports.Parameters.RangeStartParameter' }, model), dsHelperProvider, serializer) || this;
    }
    return RangeStartParameter;
}(RangeBoundaryParameter));
exports.RangeStartParameter = RangeStartParameter;
var RangeEndParameter = (function (_super) {
    __extends(RangeEndParameter, _super);
    function RangeEndParameter(model, dsHelperProvider, serializer) {
        return _super.call(this, $.extend({ '@ObjectType': 'DevExpress.XtraReports.Parameters.RangeEndParameter' }, model), dsHelperProvider, serializer) || this;
    }
    return RangeEndParameter;
}(RangeBoundaryParameter));
exports.RangeEndParameter = RangeEndParameter;
var parameterExpressionBinding_1 = __webpack_require__(176);
var rangeSettings_1 = __webpack_require__(271);


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _createIDataMemberInfoByName_1 = __webpack_require__(177);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var analytics_criteria_1 = __webpack_require__(270);
var WrappedExpressionOptions = (function (_super) {
    __extends(WrappedExpressionOptions, _super);
    function WrappedExpressionOptions(options, handlers, fieldListProvider, eventName) {
        var _this = _super.call(this) || this;
        _this.eventName = eventName;
        _this.isValid = ko.observable(true);
        _this.warningMessage = ko.observable('');
        _this.expression = ko.observable(null);
        _this.rootItems = [
            { name: 'Parameters', needPrefix: true },
            { name: 'ReportItems', needPrefix: false, rootPath: 'Root' },
            { name: 'DataSource', needPrefix: false, rootPath: 'Root' }
        ];
        if (handlers) {
            _this._disposables.push(_this.value = ko.computed({
                read: function () {
                    return _this.expression() && _this.expression().expression() || '';
                },
                write: function (newVal) {
                    if (_this.expression()) {
                        if (newVal && newVal.trim()) {
                            _this.expression().expression(newVal);
                        }
                        else {
                            handlers.removeExpression(_this.expression());
                        }
                    }
                    else {
                        if (newVal && newVal.trim())
                            handlers.addExpression(newVal);
                    }
                }
            }));
        }
        else {
            _this.value = options.value;
        }
        _this.path = options.path;
        _this.functions = options.functions;
        _this.customizeCategories = options.customizeCategories;
        var specificRootItems = {
            'DataSource': function (path) {
                return path === 'DataSource' && ['CurrentRowIndex', 'RowCount', 'CurrentRowHierarchyLevel'].map(function (name) { return _createIDataMemberInfoByName_1.createIDataMemberInfoByName(name, 'integer'); });
            }
        };
        if (_this.eventName === 'PrintOnPage') {
            _this.rootItems.push({ name: 'Arguments', needPrefix: false, rootPath: 'Root' });
            specificRootItems['Arguments'] = function (path) {
                return path === 'Arguments' && ['PageIndex', 'PageCount'].map(function (name) { return _createIDataMemberInfoByName_1.createIDataMemberInfoByName(name, 'integer'); });
            };
        }
        _this._disposables.push(ko.computed(function () {
            var unwrappedfieldListProvider = ko.unwrap(fieldListProvider);
            try {
                _this.isValid(true);
                _this.warningMessage('');
                if (!_this.value())
                    return;
                analytics_criteria_1.CriteriaOperator.parse(_this.value());
                if (unwrappedfieldListProvider) {
                    analytics_internal_1.validateExpression({
                        fieldListProvider: {
                            getItemByPath: function (path) {
                                return unwrappedfieldListProvider.getItemByPath(path, specificRootItems);
                            },
                            getItems: function () { return void 0; }
                        },
                        expression: _this.value(),
                        path: _this.path(),
                        rootItems: _this.rootItems.map(function (x) { return x.name; }),
                    }).done(function (result) { return _this.warningMessage(result); }).fail(function () { return _this.isValid(false); });
                }
            }
            catch (_a) {
                _this.isValid(false);
            }
        }));
        return _this;
    }
    WrappedExpressionOptions.prototype.onHiding = function (e) { };
    WrappedExpressionOptions.prototype.onShowing = function (e) { };
    return WrappedExpressionOptions;
}(analytics_utils_1.Disposable));
exports.WrappedExpressionOptions = WrappedExpressionOptions;


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var objectStorageItem_1 = __webpack_require__(38);
var metadata_1 = __webpack_require__(6);
var analytics_widgets_1 = __webpack_require__(4);
var lookUpValue_1 = __webpack_require__(178);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var _parameterUtils_1 = __webpack_require__(46);
var lookUpSettings_1 = __webpack_require__(273);
var LookUpSettings = (function (_super) {
    __extends(LookUpSettings, _super);
    function LookUpSettings(model, dsHelperProvider, serializer) {
        return _super.call(this, model, dsHelperProvider, serializer) || this;
    }
    LookUpSettings.prototype.getInfo = function () {
        return _super.prototype.getInfo.call(this).concat([metadata_1.filterString, metadata_1.filterStringEditable]);
    };
    LookUpSettings.prototype.updateFilter = function (parameter, report) {
        this.filterString.helper.parameters = ko.pureComputed({
            read: function () {
                var currentIndex = report.parameters().indexOf(parameter);
                var filteredParameters = currentIndex > 0 ? report.parameters().filter(function (_, index) { return index < currentIndex; }) : report.parameters();
                return _parameterUtils_1.collectAvailableParameters(filteredParameters);
            },
            deferEvaluation: true
        });
        this._disposables.push(this.filterString.helper.parameters);
    };
    return LookUpSettings;
}(objectStorageItem_1.ObjectItem));
exports.LookUpSettings = LookUpSettings;
var StaticListLookUpSettings = (function (_super) {
    __extends(StaticListLookUpSettings, _super);
    function StaticListLookUpSettings(model, dsHelperProvider, serializer) {
        var _this = _super.call(this, $.extend({ '@ObjectType': 'DevExpress.XtraReports.Parameters.StaticListLookUpSettings' }, model), dsHelperProvider, serializer) || this;
        _this.filterString = new analytics_widgets_1.FilterStringOptions(_this._filterString);
        _this.filterString.helper.canChoiceParameters = true;
        _this.filterString.itemsProvider = ko.observable(null);
        return _this;
    }
    StaticListLookUpSettings.prototype.getInfo = function () {
        return _super.prototype.getInfo.call(this).concat(this._isEditing() ? lookUpSettings_1.editedStaticListLookUpSettingsInfo : lookUpSettings_1.readonlyStaticListLookUpSettingsInfo);
    };
    StaticListLookUpSettings.prototype.preInitProperties = function (model, helper, serializer) {
        _super.prototype.preInitProperties.call(this, model, helper, serializer);
        this._isEditing = ko.observable(false);
    };
    StaticListLookUpSettings.prototype.afterDeserialization = function (model, serializer) {
        this.lookUpValues = analytics_utils_1.deserializeArray(model.LookUpValues || [], function (item) { return new lookUpValue_1.LookUpValue(item, serializer); });
        _super.prototype.afterDeserialization.call(this, model, serializer);
    };
    StaticListLookUpSettings.prototype.updateFilter = function (parameter, report) {
        this.filterString.itemsProvider({
            getItems: function (pathRequest) {
                var result = $.Deferred();
                result.resolve([
                    {
                        displayName: 'Description',
                        isList: false,
                        name: 'Description',
                        specifics: 'String'
                    },
                    {
                        displayName: 'Value',
                        isList: false,
                        name: 'Value',
                        specifics: parameter.specifics
                    }
                ]);
                return result.promise();
            }
        });
        _super.prototype.updateFilter.call(this, parameter, report);
    };
    return StaticListLookUpSettings;
}(LookUpSettings));
exports.StaticListLookUpSettings = StaticListLookUpSettings;
var DynamicListLookUpSettings = (function (_super) {
    __extends(DynamicListLookUpSettings, _super);
    function DynamicListLookUpSettings(model, dsHelperProvider, serializer) {
        var _this = _super.call(this, $.extend({ '@ObjectType': 'DevExpress.XtraReports.Parameters.DynamicListLookUpSettings' }, model), dsHelperProvider, serializer) || this;
        _this.dsHelperProvider = dsHelperProvider;
        _this.filterString = new analytics_widgets_1.FilterStringOptions(_this._filterString, ko.pureComputed(function () { return _this.getPath('valueMember'); }), ko.pureComputed(function () { return !_this.dataSource(); }));
        return _this;
    }
    DynamicListLookUpSettings.prototype.getInfo = function () {
        return _super.prototype.getInfo.call(this).concat(lookUpSettings_1.dynamicListLookUpSettingsInfoBase);
    };
    DynamicListLookUpSettings.prototype.getPath = function (propertyName) {
        if (propertyName === 'dataMember') {
            return this.dsHelperProvider() && this.dsHelperProvider().getDataSourcePath(this.dataSource());
        }
        else if (propertyName === 'displayMember' || propertyName === 'valueMember' || propertyName === 'sortMember') {
            return analytics_internal_1.getFullPath(this.getPath('dataMember'), this.dataMember());
        }
        return '';
    };
    DynamicListLookUpSettings.prototype.isPropertyDisabled = function (name) {
        if (name != 'dataSource')
            return this.dataSource() === null;
    };
    return DynamicListLookUpSettings;
}(LookUpSettings));
exports.DynamicListLookUpSettings = DynamicListLookUpSettings;


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrBand_1 = __webpack_require__(15);
var multiColumn_1 = __webpack_require__(183);
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var DetailBand = (function (_super) {
    __extends(DetailBand, _super);
    function DetailBand(band, parent, serializer) {
        var _this = _super.call(this, band, parent, serializer) || this;
        _this.hierarchyPrintOptions.isPropertyDisabled = function (propertyName) {
            if (propertyName === 'keyFieldName' || propertyName === 'parentFieldName')
                return !!this.childListFieldName();
            else if (propertyName === 'childListFieldName') {
                return !!this.keyFieldName() || !!this.parentFieldName();
            }
        };
        _this.hierarchyPrintOptions.getPath = function () {
            return _this.getPath('groupFields');
        };
        return _this;
    }
    DetailBand.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.sortFields);
        this.resetObservableArray(this.sortFields);
    };
    DetailBand.prototype.preInit = function (band, parent, serializer) {
        this.multiColumn = new multiColumn_1.MultiColumn(band['MultiColumn'], this.root['pageWidth'] || ko.observable(0), this.root['margins'] || analytics_elements_1.Margins.fromString());
        this._disposables.push(this.multiColumn);
        this.sortFields = analytics_utils_1.deserializeArray(band.SortFields, function (field) { return new groupfield_1.GroupFieldModel(field, serializer); });
    };
    DetailBand.prototype.hasHierarchyPrintOptions = function () {
        return !(analytics_internal_1.isNullOrEmptyString(this.hierarchyPrintOptions.childListFieldName()) &&
            (analytics_internal_1.isNullOrEmptyString(this.hierarchyPrintOptions.keyFieldName()) ||
                analytics_internal_1.isNullOrEmptyString(this.hierarchyPrintOptions.parentFieldName())));
    };
    DetailBand.prototype.isPropertyDisabled = function (name) {
        if (name === xrDetailBandMetaData_1.fillEmptySpace.propertyName) {
            return !this.parentModel()['bands']()
                .filter(function (band) { return band.controlType === 'GroupFooterBand' || band.controlType === 'ReportFooterBand'; })
                .every(function (band) {
                return band[bandsMetadata_1.printAtBottom.propertyName] && band[bandsMetadata_1.printAtBottom.propertyName]() ||
                    band[bandsMetadata_1.pageBreak.propertyName] && (band[bandsMetadata_1.pageBreak.propertyName]() === 'BeforeBand' || band[bandsMetadata_1.pageBreak.propertyName]() === 'BeforeBandExceptFirstEntry');
            });
        }
        else {
            return _super.prototype.isPropertyDisabled.call(this, name);
        }
    };
    DetailBand.unitProperties = [].concat([], xrBand_1.BandViewModel.unitProperties, 'multiColumn');
    return DetailBand;
}(xrBand_1.BandViewModel));
exports.DetailBand = DetailBand;
var DetailBandSurface = (function (_super) {
    __extends(DetailBandSurface, _super);
    function DetailBandSurface() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DetailBandSurface.prototype._initMultiColumn = function () {
        var _this = this;
        var multiColumn = new multiColumn_1.MultiColumnSurface(this._control.multiColumn, this._context);
        this._disposables.push(multiColumn);
        this._disposables.push(this.multiColumn = ko.computed(function () {
            var parentMultiColumn = _this.parent['multiColumn'] && _this.parent['multiColumn']();
            if (parentMultiColumn)
                return parentMultiColumn;
            return multiColumn;
        }));
    };
    return DetailBandSurface;
}(xrBand_1.BandSurface));
exports.DetailBandSurface = DetailBandSurface;
var groupfield_1 = __webpack_require__(87);
var xrDetailBandMetaData_1 = __webpack_require__(124);
var bandsMetadata_1 = __webpack_require__(26);


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var GroupFieldModel = (function (_super) {
    __extends(GroupFieldModel, _super);
    function GroupFieldModel(model, serializer) {
        var _this = _super.call(this) || this;
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(_this, model);
        _this.changeSortOrder = function () {
            var sortOrderValue = _this.sortOrder();
            if (sortOrderValue === 'Ascending') {
                _this.sortOrder('Descending');
            }
            else if (sortOrderValue === 'None') {
                _this.sortOrder('Ascending');
            }
            else {
                _this.sortOrder('None');
            }
        };
        _this._disposables.push(_this.sortOrderClass = ko.pureComputed(function () {
            var orderString = _this.sortOrder().toLowerCase();
            orderString = orderString === 'none' ? 'unsorted' : orderString;
            return { class: 'dxrd-image-' + orderString, template: 'dxrd-svg-operations-' + orderString };
        }));
        return _this;
    }
    GroupFieldModel.prototype.getInfo = function () {
        return groupfieldMetaData_1.groupFieldSerializationInfo;
    };
    GroupFieldModel.createNew = function () {
        return new GroupFieldModel({});
    };
    return GroupFieldModel;
}(analytics_utils_1.Disposable));
exports.GroupFieldModel = GroupFieldModel;
var groupfieldMetaData_1 = __webpack_require__(52);


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var editorTemplates_1 = __webpack_require__(9);
var sortingFieldName = { propertyName: 'fieldName', modelName: '@FieldName', displayName: 'Field Name', localizationId: 'DevExpress.XtraReports.UI.SortingOptions.FieldName', defaultVal: '', editor: editorTemplates_1.designerEditorTemplates.getEditor('fieldsCombobox') }, targetBand = { propertyName: 'targetBand', modelName: '@TargetBand', link: true, displayName: 'Target Band', localizationId: 'DevExpress.XtraReports.UI.SortingOptions.TargetBand', editor: editorTemplates_1.designerEditorTemplates.getEditor('sortingBand') };
exports.sortingOptionsSerializationsInfo = [targetBand, sortingFieldName];
exports.interactiveSorting = { propertyName: 'interactiveSorting', modelName: 'InteractiveSorting', displayName: 'Interactive Sorting', localizationId: 'DevExpress.XtraReports.UI.XRLabel.InteractiveSorting', info: exports.sortingOptionsSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var imageSource_1 = __webpack_require__(40);
var editOptions_1 = __webpack_require__(47);
var editOptions_2 = __webpack_require__(90);
var metadata_1 = __webpack_require__(6);
var anchoring_1 = __webpack_require__(20);
var scriptMetadata_1 = __webpack_require__(13);
var dataBinding_1 = __webpack_require__(17);
var _metaUtils_1 = __webpack_require__(23);
var metadataGroups_1 = __webpack_require__(11);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
exports.imageUrl = { propertyName: 'imageUrl', modelName: '@ImageUrl', editor: analytics_widgets_1.editorTemplates.getEditor('text'), defaultVal: '', displayName: 'Image Url', localizationId: 'DevExpress.XtraReports.UI.XRPictureBox.ImageUrl' };
exports.imageSource = {
    propertyName: 'imageSource',
    modelName: '@ImageSource',
    editor: { header: 'dxrd-image-loadfile', editorType: analytics_widgets_1.Editor },
    displayName: 'Image Source',
    localizationId: 'DevExpress.XtraReports.UI.XRPictureBox.ImageSource',
    from: function (val) { return ko.observable(imageSource_1.ImageSource.parse(val)); },
    toJsonObject: imageSource_1.ImageSource.toString,
    defaultVal: null
};
exports.sizing = {
    propertyName: 'sizing', modelName: '@Sizing', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'Sizing', localizationId: 'DevExpress.XtraReports.UI.XRPictureBox.Sizing', defaultVal: 'Normal', from: analytics_utils_1.fromEnum, valuesArray: [
        { value: 'Normal', displayValue: 'Normal', localizationId: 'DevExpress.XtraPrinting.ImageSizeMode.Normal' },
        { value: 'StretchImage', displayValue: 'Stretch Image', localizationId: 'DevExpress.XtraPrinting.ImageSizeMode.StretchImage' },
        { value: 'AutoSize', displayValue: 'Auto-Size', localizationId: 'DevExpress.XtraPrinting.ImageSizeMode.AutoSize' },
        { value: 'CenterImage', displayValue: 'Center Image', localizationId: 'DevExpress.XtraPrinting.ImageSizeMode.CenterImage' },
        { value: 'ZoomImage', displayValue: 'Zoom Image', localizationId: 'DevExpress.XtraPrinting.ImageSizeMode.ZoomImage' },
        { value: 'Squeeze', displayValue: 'Squeeze', localizationId: 'DevExpress.XtraPrinting.ImageSizeMode.Squeeze' },
        { value: 'Tile', displayValue: 'Tile', localizationId: 'DevExpress.XtraPrinting.ImageSizeMode.Tile' },
        { value: 'Cover', displayValue: 'Cover', localizationId: 'DevExpress.XtraPrinting.ImageSizeMode.Cover' }
    ]
};
exports.imageAlignment = {
    propertyName: 'imageAlignment', modelName: '@ImageAlignment', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'Alignment', localizationId: 'DevExpress.XtraReports.UI.XRPictureBox.Alignment', defaultVal: 'Default', from: analytics_utils_1.fromEnum, valuesArray: [
        { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraPrinting.ImageAlignment.Default' },
        { value: 'TopLeft', displayValue: 'Top Left', localizationId: 'DevExpress.XtraPrinting.ImageAlignment.TopLeft' },
        { value: 'TopCenter', displayValue: 'Top Center', localizationId: 'DevExpress.XtraPrinting.ImageAlignment.TopCenter' },
        { value: 'TopRight', displayValue: 'Top Right', localizationId: 'DevExpress.XtraPrinting.ImageAlignment.TopRight' },
        { value: 'MiddleLeft', displayValue: 'Middle Left', localizationId: 'DevExpress.XtraPrinting.ImageAlignment.MiddleLeft' },
        { value: 'MiddleCenter', displayValue: 'Middle Center', localizationId: 'DevExpress.XtraPrinting.ImageAlignment.MiddleCenter' },
        { value: 'MiddleRight', displayValue: 'Middle Right', localizationId: 'DevExpress.XtraPrinting.ImageAlignment.MiddleRight' },
        { value: 'BottomLeft', displayValue: 'Bottom Left', localizationId: 'DevExpress.XtraPrinting.ImageAlignment.BottomLeft' },
        { value: 'BottomCenter', displayValue: 'Bottom Center', localizationId: 'DevExpress.XtraPrinting.ImageAlignment.BottomCenter' },
        { value: 'BottomRight', displayValue: 'Bottom Right', localizationId: 'DevExpress.XtraPrinting.ImageAlignment.BottomRight' }
    ]
};
exports.imageEditOptions = analytics_internal_1.extend({}, editOptions_1.editOptions, {
    propertyName: 'imageEditOptions',
    from: function (model, serializer) { return new editOptions_2.ImageEditOptions(model, serializer); }
});
exports.pictureBoxSerializationsInfo = [
    exports.imageUrl, exports.imageSource, exports.sizing, exports.imageAlignment, metadata_1.keepTogether, anchoring_1.anchorVertical, anchoring_1.anchorHorizontal, scriptMetadata_1.controlScripts,
    dataBinding_1.dataBindings(['Bookmark', 'Image', 'ImageSource', 'ImageUrl', 'NavigateUrl', 'Tag']),
    exports.imageEditOptions
].concat(_metaUtils_1.createPopularBindingInfos({ propertyName: 'ImageUrl', localizationId: 'DevExpress.XtraReports.UI.XRPictureBox.ImageUrl' }), _metaUtils_1.createPopularBindingInfos({ propertyName: 'ImageSource', localizationId: 'DevExpress.XtraReports.UI.XRPictureBox.ImageSource' }), metadataGroups_1.sizeLocation, metadataGroups_1.commonControlProperties, metadataGroups_1.navigationGroup, metadataGroups_1.processGroup);
exports.popularPropertiesPicture = ['imageSource', 'popularDataBindingImageSource', 'imageUrl', 'popularDataBindingImageUrl', 'sizing', 'imageAlignment', 'bookmark', 'bookmarkParent'];


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var editOptions_1 = __webpack_require__(47);
var editOptionsEditor_1 = __webpack_require__(278);
var editingFieldExtensions_1 = __webpack_require__(451);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var EditOptions = (function () {
    function EditOptions(model, serializer) {
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(this, model || {});
    }
    EditOptions.prototype.getInfo = function () {
        return editOptions_1.editOptionsSerializationInfo;
    };
    EditOptions.prototype.isEmpty = function () {
        return !this.enabled();
    };
    EditOptions.prototype.isPropertyDisabled = function (name) {
        return name !== 'enabled' && !this.enabled();
    };
    return EditOptions;
}());
exports.EditOptions = EditOptions;
var ContainerEditOptions = (function (_super) {
    __extends(ContainerEditOptions, _super);
    function ContainerEditOptions(model, parent, serializer) {
        var _this = _super.call(this, model || {}, serializer) || this;
        _this.parent = parent;
        return _this;
    }
    ContainerEditOptions.prototype.isPropertyDisabled = function (name) {
        if (name == 'enabled') {
            return this.parent.controls().length > 0;
        }
        else
            return _super.prototype.isPropertyDisabled.call(this, name);
    };
    return ContainerEditOptions;
}(EditOptions));
exports.ContainerEditOptions = ContainerEditOptions;
var CheckEditOptions = (function (_super) {
    __extends(CheckEditOptions, _super);
    function CheckEditOptions(model, serializer) {
        return _super.call(this, model || {}, serializer) || this;
    }
    CheckEditOptions.prototype.getInfo = function () {
        return _super.prototype.getInfo.call(this).concat([
            { propertyName: 'groupId', modelName: '@GroupID', displayName: 'Group ID', localizationId: 'DevExpress.XtraReports.UI.CheckEditOptions.GroupID', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('text') }
        ]);
    };
    return CheckEditOptions;
}(EditOptions));
exports.CheckEditOptions = CheckEditOptions;
var ImageEditOptions = (function (_super) {
    __extends(ImageEditOptions, _super);
    function ImageEditOptions(model, serializer) {
        return _super.call(this, model || {}, serializer) || this;
    }
    ImageEditOptions.prototype.getInfo = function () {
        return _super.prototype.getInfo.call(this).concat([
            {
                propertyName: 'editorName', modelName: '@EditorName', displayName: 'Editor Name', localizationId: 'DevExpress.XtraReports.UI.ImageEditOptions.EditorName', defaultVal: '',
                editor: { header: 'dxrd-editOptionsEditorName', editorType: editOptionsEditor_1.EditOptionsEditorNameEditorModel },
                editorOptions: { acceptCustomValue: true, categories: [editingFieldExtensions_1.Categories.Image()] }
            }
        ]);
    };
    return ImageEditOptions;
}(EditOptions));
exports.ImageEditOptions = ImageEditOptions;
var TextEditOptions = (function (_super) {
    __extends(TextEditOptions, _super);
    function TextEditOptions(model, serializer) {
        return _super.call(this, model || {}, serializer) || this;
    }
    TextEditOptions.prototype.getInfo = function () {
        var categories = editingFieldExtensions_1.Categories;
        return _super.prototype.getInfo.call(this).concat([
            {
                propertyName: 'editorName', modelName: '@EditorName', displayName: 'Editor Name', localizationId: 'DevExpress.XtraReports.UI.TextEditOptions.EditorName', defaultVal: '',
                editor: { header: 'dxrd-editOptionsEditorName', editorType: editOptionsEditor_1.EditOptionsEditorNameEditorModel },
                editorOptions: { acceptCustomValue: true, excludeCategories: [categories.Image()] }
            }
        ]);
    };
    return TextEditOptions;
}(EditOptions));
exports.TextEditOptions = TextEditOptions;


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var style_1 = __webpack_require__(37);
exports.stylesProperties = ['foreColor', 'borderColor', 'borderWidth', 'backColor', 'borders', 'borderDashStyle', 'padding', 'textAlignment', 'font'];
var StylesHelper = (function (_super) {
    __extends(StylesHelper, _super);
    function StylesHelper(_report, _controlsHelper) {
        var _this = _super.call(this) || this;
        _this._report = _report;
        _this._controlsHelper = _controlsHelper;
        return _this;
    }
    StylesHelper.styleEqualityComparer = function (x, y) {
        return exports.stylesProperties.every(function (property) { return x[property]() === y[property]() || x[property]() === undefined && y[property]() === undefined; });
    };
    StylesHelper.generateStyle = function (element) {
        var newStyle = new style_1.StyleModel({});
        exports.stylesProperties.forEach(function (property) {
            if (element[property] && element[property]() != style_1.StyleModel.defaults[property])
                newStyle[property](element[property]());
        });
        return newStyle;
    };
    StylesHelper.prototype.removeUnusedStyle = function (styleName) {
        var targetStyle = this._report.findStyle(styleName);
        if (targetStyle && !this._controlsHelper.allControls().some(function (control) { return control['styleName'] && control['styleName']() === styleName; })) {
            this._report.styles.remove(targetStyle);
            return targetStyle;
        }
    };
    return StylesHelper;
}(analytics_utils_1.Disposable));
exports.StylesHelper = StylesHelper;


/***/ }),
/* 92 */
/***/ (function(module, exports) {

module.exports = DevExpress.Reporting.Viewer.Internal;

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var TextElementSizeHelper = (function () {
    function TextElementSizeHelper() {
        this._spaceSymbol = '&nbsp';
    }
    TextElementSizeHelper.prototype._$createElement = function (options, processElement) {
        return processElement($('<div>').css(options)).appendTo($('body'));
    };
    TextElementSizeHelper.prototype.$createTextElement = function (text, options) {
        return this._$createElement(options, function ($element) { return $element.text(text); });
    };
    TextElementSizeHelper.prototype.$createSpaceElement = function (options) {
        var _this = this;
        return this._$createElement(options, function ($element) { return $element.html(_this._spaceSymbol); });
    };
    TextElementSizeHelper.prototype.getTextContainerSize = function (text, options, increaseHeight) {
        if (increaseHeight === void 0) { increaseHeight = 2; }
        var $div = text !== this._spaceSymbol ? this.$createTextElement(text, options) : this.$createSpaceElement(options);
        $div.height($div.height() + increaseHeight);
        var rect = $div[0].getBoundingClientRect();
        var height = Math.ceil(rect.height);
        var width = Math.ceil(rect.width);
        $div.remove();
        return { width: width, height: height };
    };
    return TextElementSizeHelper;
}());
exports.TextElementSizeHelper = TextElementSizeHelper;


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
exports.summaryTypeValues = [
    { value: 'Count', displayValue: 'Count', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryType.Count' },
    { value: 'Sum', displayValue: 'Sum', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryType.Sum' },
    { value: 'Min', displayValue: 'Min', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryType.Min' },
    { value: 'Max', displayValue: 'Max', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryType.Max' },
    { value: 'Average', displayValue: 'Average', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryType.Average' },
    { value: 'StdDev', displayValue: 'Standard Deviation', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryType.StdDev' },
    { value: 'StdDevp', displayValue: 'Standard Deviation for Entire Population', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryType.StdDevp' },
    { value: 'Var', displayValue: 'Variation', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryType.Var' },
    { value: 'Varp', displayValue: 'Variation for Entire Population', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryType.Varp' },
    { value: 'Custom', displayValue: 'Custom', localizationId: 'DevExpress.Data.PivotGrid.PivotSummaryType.Custom' }
];
exports.summaryType = {
    propertyName: 'summaryType', modelName: '@SummaryType', displayName: 'Summary Type', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldBase.SummaryType',
    defaultVal: 'Sum', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: exports.summaryTypeValues
};
exports.fieldComponentName = {
    propertyName: 'fieldComponentName', modelName: '@FieldComponentName', displayName: 'Field', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldSortBySummaryInfo.Field',
    defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: '', displayValue: '(none)', localizationId: 'ChartStringId.WizNoBackImage' }]
};
exports.conditions = {
    propertyName: 'conditions', modelName: 'Conditions', displayName: 'Conditions', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldSortBySummaryInfo.Conditions', array: true,
    template: '#dxrd-commonCollectionItem',
    editor: { custom: 'dxrd-pivot-sortBySummaryInfo-conditions' }
};
exports.field = { propertyName: 'fieldName', modelName: '@FieldName', displayName: 'Field Name', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldSortBySummaryInfo.FieldName', defaultVal: null, editor: analytics_widgets_1.editorTemplates.getEditor('text') };
exports.customTotalSummaryType = {
    propertyName: 'customTotalSummaryType', modelName: '@CustomTotalSummaryType', displayName: 'Custom Total Summary Type', localizationId: 'DevExpress.XtraPivotGrid.PivotGridFieldSortBySummaryInfo.CustomTotalSummaryType',
    defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: '', displayValue: '(none)', localizationId: 'ChartStringId.WizNoBackImage' }].concat(exports.summaryTypeValues)
};
exports.sortBySummaryInfo = [exports.conditions, exports.customTotalSummaryType, exports.fieldComponentName, exports.field, exports.summaryType];
exports.sortBySummaryConditionInfo = [
    exports.fieldComponentName,
    { modelName: '@Value', propertyName: 'value', displayName: 'Value', editor: analytics_widgets_1.editorTemplates.getEditor('text'), localizationId: 'AnalyticsCoreStringId.FilterEditor_Operand_Type_Value' },
    {
        modelName: '@Value_type', propertyName: 'valueType', displayName: 'Type', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: '<Null>', valuesArray: [
            { value: 'System.String', displayValue: 'String', localizationId: 'UtilsUIStringId.Parameter_Type_String' },
            { value: 'System.Byte', displayValue: 'Number (8 bit integer)', localizationId: 'DataAccessStringId.Type_SByte' },
            { value: 'System.Int16', displayValue: 'Number (16 bit integer)', localizationId: 'UtilsUIStringId.Parameter_Type_Int16' },
            { value: 'System.Int32', displayValue: 'Number (32 bit integer)', localizationId: 'UtilsUIStringId.Parameter_Type_Int32' },
            { value: 'System.Int64', displayValue: 'Number (64 bit integer)', localizationId: 'UtilsUIStringId.Parameter_Type_Int64' },
            { value: 'System.Single', displayValue: 'Number (floating-point)', localizationId: 'UtilsUIStringId.Parameter_Type_Float' },
            { value: 'System.Double', displayValue: 'Number (double-precision floating-point)', localizationId: 'UtilsUIStringId.Parameter_Type_Double' },
            { value: 'System.Decimal', displayValue: 'Number (decimal)', localizationId: 'UtilsUIStringId.Parameter_Type_Decimal' },
            { value: 'System.Boolean', displayValue: 'Boolean', localizationId: 'UtilsUIStringId.Parameter_Type_Boolean' },
            { value: 'System.Char', displayValue: 'Char', localizationId: 'DataAccessStringId.Type_Char' },
            { value: 'System.DateTime', displayValue: 'Date', localizationId: 'UtilsUIStringId.Parameter_Type_DateTime' },
            { value: '<Null>', displayValue: '<Null>' }
        ],
        localizationId: 'DevExpress.XtraPrinting.XlEncryptionOptions.Type'
    }
];


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _requests_1 = __webpack_require__(107);
var settings_1 = __webpack_require__(12);
var _chart_1 = __webpack_require__(19);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var analytics_elements_1 = __webpack_require__(5);
var $ = __webpack_require__(3);
var _utils_1 = __webpack_require__(32);
var ReportRenderingService = (function () {
    function ReportRenderingService() {
    }
    ReportRenderingService.getChartImage = function (surface) {
        return _requests_1.ChartRequests.getChartImage(settings_1.HandlerUri(), new analytics_utils_1.ModelSerializer().serialize(surface._control['chart'], _chart_1.chartSerializationsInfo), surface.contentWidthWithoutZoom(), surface.contentHeightWithoutZoom());
    };
    ReportRenderingService.getShapeImage = function (surface) {
        var _usefulRect = surface.getUsefulRect();
        var params = {
            shapeType: surface._control['Shape']()['shapeType'] && surface._control['Shape']()['shapeType']() || 'Ellipse',
            width: _usefulRect.width,
            lineWidth: surface._control['lineWidth'](),
            fillColor: analytics_utils_1.colorToString(surface._control['fillColor']()),
            lineStyle: surface._control['lineStyle'] && surface._control['lineStyle']() || 'Solid',
            height: _usefulRect.height,
            fillet: surface._control['Shape']()['fillet'] && surface._control['Shape']()['fillet']() || 0,
            numberOfSides: surface._control['Shape']()['numberOfSides'] && surface._control['Shape']()['numberOfSides']() || 3,
            angle: surface._control['angle'] && surface._control['angle']() || 0,
            arrowHeight: surface._control['Shape']()['arrowHeight'] && surface._control['Shape']()['arrowHeight']() || 20,
            arrowWidth: surface._control['Shape']()['arrowWidth'] && surface._control['Shape']()['arrowWidth']() || 20,
            concavity: surface._control['Shape']()['concavity'] && surface._control['Shape']()['concavity']() || 5,
            starPointCount: surface._control['Shape']()['starPointCount'] && surface._control['Shape']()['starPointCount']() || 3,
            horizontalLineWidth: surface._control['Shape']()['horizontalLineWidth'] && surface._control['Shape']()['horizontalLineWidth']() || 10,
            verticalLineWidth: surface._control['Shape']()['verticalLineWidth'] && surface._control['Shape']()['verticalLineWidth']() || 10,
            tipLength: surface._control['Shape']()['tipLength'] && surface._control['Shape']()['tipLength']() || 30,
            tailLength: surface._control['Shape']()['tailLength'] && surface._control['Shape']()['tailLength']() || 30,
            foreColor: analytics_utils_1.colorToString(surface._control['foreColor'] && surface._control['foreColor']() || 'black'),
            stretch: surface._control['stretch'] && surface._control['stretch']() || false,
            padding: surface._control['padding'] && surface._control['padding']() || analytics_elements_1.PaddingModel.defaultVal,
            dpi: surface._control['dpi'] && surface._control['dpi']() || 100
        };
        return settings_1.HandlerUri() + '?actionKey=shapeGlyph&arg=' + encodeURIComponent(JSON.stringify(params));
    };
    ReportRenderingService.getRichImage = function (surface, propertyName) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'renderRich', encodeURIComponent(JSON.stringify({
            layout: JSON.stringify($.extend(new analytics_utils_1.ModelSerializer().serialize(surface._control), {
                '@Font': surface._control['font']()
            })),
            scale: surface._context.zoom(),
            text: _utils_1.transformNewLineCharacters(surface._control['textRtf']() || ''),
            rtf: _utils_1.transformNewLineCharacters(surface._control['_rtf']() || ''),
            format: surface._control['format'](),
            base64rtf: surface._control['serializableRtfString'](),
            propertyName: propertyName
        })));
    };
    ReportRenderingService.getPdfContentData = function (control) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'renderPdfContent', encodeURIComponent(JSON.stringify({
            sourceBase64: control.source() || '',
            sourceUrl: control.sourceUrl() || '',
            pageRange: control.pageRange() || ''
        })));
    };
    return ReportRenderingService;
}());
exports.ReportRenderingService = ReportRenderingService;


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var xrSubreport_1 = __webpack_require__(56);
var scriptMetadata_1 = __webpack_require__(13);
var metadata_1 = __webpack_require__(6);
var metadataGroups_1 = __webpack_require__(11);
var analytics_utils_1 = __webpack_require__(0);
var editorTemplates_1 = __webpack_require__(9);
var dataBindingInfo_1 = __webpack_require__(126);
var formattingrules_1 = __webpack_require__(36);
exports.reportSourceUrl = { propertyName: 'reportSourceUrl', modelName: '@ReportSourceUrl', defaultVal: '', editor: editorTemplates_1.designerEditorTemplates.getEditor('reportSourceUrl'), displayName: 'Report Source Url', localizationId: 'DevExpress.XtraReports.UI.XRSubreport.ReportSourceUrl' };
exports.reportSource = { propertyName: 'reportSource', modelName: 'ReportSource', from: xrSubreport_1.SubreportViewModel.from, toJsonObject: xrSubreport_1.SubreportViewModel.toJson };
exports.parameterBindingSerializationInfo = dataBindingInfo_1.dataBindingBaseSerializationInfo.concat([
    { propertyName: 'parameterName', modelName: '@ParameterName', displayName: 'Parameter Name', localizationId: 'DevExpress.XtraReports.UI.ParameterBinding.ParameterName', editor: analytics_widgets_1.editorTemplates.getEditor('combobox') },
    { propertyName: 'fakeBinding', displayName: 'Binding', localizationId: 'DevExpress.XtraReports.Design.DataBinding.Binding', link: true, editor: { header: 'dxrd-dataBinding', editorType: analytics_widgets_1.FieldListEditor } }
]);
exports.parameterBindings = { propertyName: 'parameterBindings', modelName: 'ParameterBindings', displayName: 'Parameter Bindings', localizationId: 'DevExpress.XtraReports.UI.XRSubreport.ParameterBindings', array: true, editor: analytics_widgets_1.editorTemplates.getEditor('commonCollection'), addHandler: xrSubreport_1.ParameterBinding.createNew, template: '#dxrd-commonCollectionItem' };
exports.generateOwnPages = { propertyName: 'generateOwnPages', defaultVal: false, modelName: '@GenerateOwnPages', displayName: 'Generate Own Pages', localizationId: 'DevExpress.XtraReports.UI.XRSubreport.GenerateOwnPages', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool };
exports.subreportSerializationsInfo = [
    exports.reportSource, exports.reportSourceUrl, scriptMetadata_1.subreportScripts, exports.parameterBindings, metadata_1.bookmarkParent, metadata_1.canShrink, exports.generateOwnPages, formattingrules_1.formattingRuleLinks
].concat(metadataGroups_1.sizeLocation, metadataGroups_1.baseControlProperties.filter(function (x) { return x.modelName != metadata_1.tag.modelName; }));


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var richEdit_1 = __webpack_require__(69);
var _reportRenderingService_1 = __webpack_require__(95);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var XRRichTextStreamType;
(function (XRRichTextStreamType) {
    XRRichTextStreamType[XRRichTextStreamType["RtfText"] = 0] = "RtfText";
    XRRichTextStreamType[XRRichTextStreamType["PlainText"] = 1] = "PlainText";
    XRRichTextStreamType[XRRichTextStreamType["HtmlText"] = 2] = "HtmlText";
    XRRichTextStreamType[XRRichTextStreamType["XmlText"] = 3] = "XmlText";
})(XRRichTextStreamType = exports.XRRichTextStreamType || (exports.XRRichTextStreamType = {}));
var XRRichViewModel = (function (_super) {
    __extends(XRRichViewModel, _super);
    function XRRichViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, parent, serializer) || this;
        _this.format = ko.observable(XRRichTextStreamType.RtfText);
        _this._newDocumentData = ko.observable(null);
        _this.textRtf = ko.observable('');
        _this._rtf = ko.observable('');
        var nameSubscribe = ko.computed(function () {
            var newVal = _this.name();
            if (!_this.textRtf() && newVal) {
                _this.textRtf(newVal);
                nameSubscribe && nameSubscribe.dispose();
            }
        }).extend({ rateLimit: { method: 'notifyWhenChangesStop', timeout: 1 } });
        _this._disposables.push(_this._newDocumentData.subscribe(function (newVal) {
            if (newVal)
                _this.format(_this._toStreamType(newVal.format));
            else
                _this.format(XRRichTextStreamType.RtfText);
        }));
        _this._disposables.push(nameSubscribe);
        return _this;
    }
    XRRichViewModel.prototype._toStreamType = function (extension) {
        switch (extension.toLowerCase()) {
            case 'txt':
                return XRRichTextStreamType.PlainText;
            case 'htm':
            case 'html':
                return XRRichTextStreamType.HtmlText;
            case 'docx':
                return XRRichTextStreamType.XmlText;
        }
        return XRRichTextStreamType.RtfText;
    };
    XRRichViewModel.prototype.getInfo = function () {
        var serializationInfo = $.extend(true, [], _super.prototype.getInfo.call(this));
        if (!(richEdit_1.getRichEditSurface()() instanceof XRRichSurface)) {
            serializationInfo.filter(function (x) { return XRRichViewModel._hiddenProperties.some(function (propertyName) { return propertyName === x.propertyName; }); })
                .forEach(function (x) { return x.visible = false; });
        }
        return serializationInfo;
    };
    Object.defineProperty(XRRichViewModel.prototype, "textEditableProperty", {
        get: function () { return this.textRtf; },
        enumerable: true,
        configurable: true
    });
    XRRichViewModel._hiddenProperties = ['_rtf', 'textRtf'];
    return XRRichViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRRichViewModel = XRRichViewModel;
var XRRichSurface = (function (_super) {
    __extends(XRRichSurface, _super);
    function XRRichSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this._lastRequest = ko.observable(null);
        _this._innerUpdate = ko.observable(false);
        _this.imageSrc = ko.observable('');
        _this.isLoading = ko.observable(false);
        _this.template = 'dxrd-shape';
        _this.contenttemplate = 'dxrd-shape-content';
        _this._sendCallback();
        _this._disposables.push(control._newDocumentData.subscribe(function (newVal) {
            control.serializableRtfString(newVal && newVal.content);
        }));
        _this._disposables.push(control.textRtf.subscribe(function (newVal) { _this._sendCallback('textRtf'); }));
        _this._disposables.push(control._rtf.subscribe(function () { _this._sendCallback('rtf'); }));
        _this._disposables.push(control.font.subscribe(function () { _this._sendCallback('font'); }));
        _this._disposables.push(control.foreColor.subscribe(function () { _this._sendCallback('foreColor'); }));
        _this._disposables.push(_this['position']['width'].subscribe(function (newValue) { _this._sendCallback('width'); }));
        _this._disposables.push(_this['position']['height'].subscribe(function (newValue) { _this._sendCallback('height'); }));
        _this._disposables.push(control.serializableRtfString.subscribe(function (newVal) { _this._sendCallback(newVal ? 'base64rtf' : undefined); }));
        return _this;
    }
    XRRichSurface.prototype._sendCallback = function (propertyName) {
        if (propertyName === void 0) { propertyName = null; }
        if (!this._innerUpdate()) {
            this._lastRequest(propertyName);
            var self = this;
            var selfControl = this._control;
            this.isLoading(true);
            _reportRenderingService_1.ReportRenderingService.getRichImage(this, propertyName).done(function (result) {
                self.isLoading(false);
                if (propertyName === self._lastRequest()) {
                    selfControl.root && selfControl.root['_update'] && selfControl.root['_update'](true);
                    if (propertyName !== 'height' && propertyName !== 'width') {
                        self._innerUpdate(true);
                        if (propertyName !== 'textRtf') {
                            selfControl.textRtf(result.Text);
                        }
                        selfControl._rtf(result.Rtf);
                        selfControl.serializableRtfString(result.SerializableRtfString);
                        self._innerUpdate(false);
                    }
                    self.imageSrc('data:image/x;base64,' + result.Img);
                    selfControl.root && selfControl.root['_update'] && selfControl.root['_update'](false);
                }
            }).fail(function (jqXHR) {
                self.isLoading(false);
                analytics_internal_1.NotifyAboutWarning('It is impossible to get richText');
            });
        }
    };
    return XRRichSurface;
}(xrControl_1.XRControlSurface));
exports.XRRichSurface = XRRichSurface;


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var xrControl_1 = __webpack_require__(10);
var analytics_elements_1 = __webpack_require__(5);
var fields_1 = __webpack_require__(57);
var defenitions_1 = __webpack_require__(142);
var cellCreator_1 = __webpack_require__(305);
var settings_1 = __webpack_require__(12);
var xrCrossTabCell_1 = __webpack_require__(71);
var defenitions_2 = __webpack_require__(306);
var analytics_wizard_internal_1 = __webpack_require__(59);
var style_1 = __webpack_require__(37);
var style_2 = __webpack_require__(21);
var layoutOptions_1 = __webpack_require__(143);
var enums_1 = __webpack_require__(58);
var controlParameter_1 = __webpack_require__(133);
var analytics_widgets_1 = __webpack_require__(4);
var XRCrossTabViewModel = (function (_super) {
    __extends(XRCrossTabViewModel, _super);
    function XRCrossTabViewModel(model, parent, serializer) {
        var _a;
        if (serializer === void 0) { serializer = new analytics_utils_1.ModelSerializer(); }
        var _this = _super.call(this, model, parent, serializer) || this;
        _this.getPath = function (propertyName) { return _this.dsHelperProvider() && _this.dsHelperProvider().getDataSourcePath(_this['dataSource']()); };
        _this.dependentStyles = [];
        _this._cells = ko.observableArray([]);
        _this._disposables.push(_this.isModelReady = ko.computed(function () { return analytics_internal_1.checkModelReady(_this.root) && !_this.update(); }));
        _this.layoutOptions = new CrossTabLayoutOptionsModel(model['LayoutOptions'] || {}, _this, serializer);
        _this.rowFields = _this._getArray(CrossTabFieldModel, model, 'RowFields', serializer);
        _this.columnFields = _this._getArray(CrossTabFieldModel, model, 'ColumnFields', serializer);
        _this.dataFields = _this._getArray(CrossTabDataFieldModel, model, 'DataFields', serializer);
        _this._rowDefinitions = _this._getArray(defenitions_2.CrossTabRowDefinitionsModel, model, 'RowDefinitions', serializer);
        _this._columnDefinitions = _this._getArray(defenitions_2.CrossTabColumnDefinitionsModel, model, 'ColumnDefinitions', serializer);
        _this.cells = _this._getArray(xrCrossTabCell_1.XRCrossTabCellViewModel, model, 'Cells', serializer);
        _this.controlParameters = analytics_utils_1.deserializeArray(model.Parameters, function (item) { return new controlParameter_1.ControlParameter(item, serializer); });
        _this.controlParameters().forEach(function (x) { return !x.parameter() && !x.dataSource() && x.dataSource(_this.root['dataSource'] && _this.root['dataSource']()); });
        _this.cellCreator = cellCreator_1.CellCreator.createInstance(_this);
        var cells = _this.cellCreator.create();
        _this._cells(_this.applyCells(cells, true));
        (_a = _this._disposables).push.apply(_a, analytics_wizard_internal_1.subscribeProperties([_this.rowFields, _this.columnFields, _this.dataFields]
            .concat(Object.keys(_this.layoutOptions).map(function (x) { return _this.layoutOptions[x]; })), function () {
            _this.updateLayout();
        }));
        _this._disposables.push(ko.computed(function () {
            _this.size.width(_this._calcSize(_this._columnDefinitions()));
        }));
        _this._disposables.push(_this.size.width.subscribe(function (newWidth) {
            var columnDefinitions = _this._columnDefinitions.peek();
            var currentWidth = _this._calcSize(columnDefinitions);
            columnDefinitions.forEach(function (element) {
                element.width(element.width() + (newWidth - currentWidth) * (element.width() / currentWidth));
            });
            _this._columnDefinitions.valueHasMutated();
        }));
        _this._disposables.push(ko.computed(function () {
            _this.size.height(_this._calcSize(_this._rowDefinitions()));
        }));
        _this._disposables.push(_this.size.height.subscribe(function (newHeight) {
            var rowDefinitions = _this._rowDefinitions.peek();
            var currentHeight = _this._calcSize(rowDefinitions);
            rowDefinitions.forEach(function (element) {
                element.height(element.height() + (newHeight - currentHeight) * (element.height() / currentHeight));
            });
            _this._rowDefinitions.valueHasMutated();
        }));
        _this._disposables.push(_this.dataSource.subscribe(function (val) { return _this['dataMember'](null); }));
        _this._disposables.push(_this.controlParameters.subscribe(function (args) {
            args.forEach(function (change) {
                if (!change.value.parameterName()) {
                    change.value.parameterName(analytics_internal_1.getUniqueNameForNamedObjectsArray(_this.controlParameters(), 'controlParameter'));
                }
            });
        }, null, 'arrayChange'));
        var dataMember = ko.pureComputed(function () { return analytics_internal_1.getFullPath(_this.getPath('dataMember'), _this['dataMember']()); });
        var parameters = ko.computed(function () { return _this.controlParameters(); });
        var disabled = ko.pureComputed(function () { return !_this.dataSource(); });
        _this.filterString = new analytics_widgets_1.FilterStringOptions(_this._filterString, dataMember, disabled);
        _this.filterString.helper.parameters = parameters;
        _this._disposables.push(dataMember);
        _this._disposables.push(disabled);
        _this._disposables.push(parameters);
        return _this;
    }
    XRCrossTabViewModel.prototype._getCreator = function (type, serializer, name) {
        var _this = this;
        return function (item) { return new type(item || {}, _this, serializer, name); };
    };
    XRCrossTabViewModel.prototype._getArray = function (type, model, name, serializer) {
        return analytics_utils_1.deserializeArray(model[name], this._getCreator(type, serializer, this.getNames()[name[0].toLowerCase() + name.slice(1)]));
    };
    XRCrossTabViewModel.prototype._initStyles = function (root) {
        var _this = this;
        if (root && root.styles) {
            style_2.crossTabStyles.forEach(function (style) {
                var styleName = _this[style.propertyName]();
                if (!styleName) {
                    var newStyle = new style_1.StyleModel(style_2.crossTabStylesDefaults[style.propertyName]);
                    styleName = analytics_internal_1.getUniqueNameForNamedObjectsArray(root.styles(), newStyle.name());
                    newStyle.name(styleName);
                    root.styles.push(newStyle);
                    _this[style.propertyName](styleName);
                }
            });
        }
    };
    XRCrossTabViewModel.prototype._calcSize = function (defenition) {
        var result = 0;
        defenition.forEach(function (element) {
            result += element[(element instanceof defenitions_2.CrossTabColumnDefinitionsModel ? 'width' : 'height')]();
        });
        return result;
    };
    XRCrossTabViewModel.prototype.removeChild = function (cell) {
        if (cell.canRemove()) {
            this.removeField(cell.dataLevel, cell.columnLevel, cell.rowLevel);
        }
    };
    XRCrossTabViewModel.prototype.removeField = function (dataLevel, columnLevel, rowLevel) {
        if (dataLevel > -1) {
            this.dataFields.splice(dataLevel, 1);
        }
        else if (columnLevel > -1) {
            this.columnFields.splice(columnLevel, 1);
        }
        else if (rowLevel > -1) {
            this.rowFields.splice(rowLevel, 1);
        }
    };
    XRCrossTabViewModel.prototype.initialize = function () {
        var _this = this;
        this._disposables.push(this.parentModel.subscribe(function (model) { model && _this._initStyles(_this.root); }));
        this.parentModel() && this._initStyles(this.root);
    };
    XRCrossTabViewModel.prototype.updateLayout = function () {
        if (this.update())
            return;
        var undo = analytics_utils_1.UndoEngine.tryGetUndoEngine(this);
        undo && undo.start();
        this.update(true);
        this.defenitionUpdater = new defenitions_2.DefenitionUpdater(this);
        this.cellCreator = cellCreator_1.CellCreator.createInstance(this);
        var cells = this.cellCreator.create();
        var modelCells = this.applyCells(cells);
        this._cells(modelCells);
        var defs = this.defenitionUpdater.update(modelCells, defenitions_1.crossTabCellWidth.defaultVal, defenitions_1.crossTabCellHeight.defaultVal);
        var sumWidth = defs.columnDefs.reduce(function (acc, value) {
            acc += value.width();
            return acc;
        }, 0);
        var sumHeight = defs.rowDefs.reduce(function (acc, value) {
            acc += value.height();
            return acc;
        }, 0);
        var maxWidth = Math.min(sumWidth, Math.max(this.size.width(), this.parentModel().size.width() - this.location.x()));
        this._columnDefinitions(defs.columnDefs);
        this._rowDefinitions(defs.rowDefs);
        this.size.width(maxWidth);
        if (ko.isObservable(this.size.width))
            this.size.width.valueHasMutated();
        this.size.height(sumHeight);
        this.update(false);
        var undo = analytics_utils_1.UndoEngine.tryGetUndoEngine(this);
        undo && undo.end();
    };
    XRCrossTabViewModel.prototype.getNames = function () {
        return {
            'columnFields': analytics_internal_1.getLocalization('Column Field', 'DevExpress.XtraReports.UI.CrossTab.CrossTabColumnField'),
            'rowFields': analytics_internal_1.getLocalization('Row Field', 'DevExpress.XtraReports.UI.CrossTab.CrossTabRowField'),
            'dataFields': analytics_internal_1.getLocalization('Data Field', 'DevExpress.XtraReports.UI.CrossTab.CrossTabDataField')
        };
    };
    XRCrossTabViewModel.prototype.onDelete = function () {
        var _this = this;
        var root = this.root;
        this.dependentStyles = [];
        style_2.crossTabStyles.forEach(function (style) {
            if (root.stylesHelper()) {
                var targetStyle = root.stylesHelper().removeUnusedStyle(_this[style.propertyName]());
                targetStyle && _this.dependentStyles.push(targetStyle);
            }
            else {
                targetStyle = root.findStyle(_this[style.propertyName]());
                targetStyle && root.styles.remove(targetStyle) && _this.dependentStyles.push(targetStyle);
            }
        });
    };
    XRCrossTabViewModel.prototype.preInitProperties = function () {
        var _this = this;
        var info = this.getInfo();
        this.getInfo = function () {
            info.forEach(function (item) {
                var type;
                if (item.propertyName === 'rowFields' || item.propertyName === 'columnFields')
                    type = CrossTabFieldModel;
                else if (item.propertyName === 'dataFields')
                    type = CrossTabDataFieldModel;
                if (type)
                    item.addHandler = _this._getCreator(type, new analytics_utils_1.ModelSerializer(), _this.getNames()[item.propertyName]);
            });
            return info;
        };
    };
    XRCrossTabViewModel.prototype.isPropertyDisabled = function (propertyName) {
        if (this.dataSource() === null) {
            return propertyName === 'dataMember' || propertyName === 'filterString';
        }
    };
    XRCrossTabViewModel.prototype.applyCells = function (cellsInfo, initOnly) {
        var _this = this;
        if (initOnly === void 0) { initOnly = false; }
        var newCells = [];
        var oldCells = [];
        cellsInfo.forEach(function (cell, index) {
            var currentCell;
            cell.dependentFields = [_this.dataFields()[cell.dataLevel], _this.rowFields()[cell.rowLevel], _this.columnFields()[cell.columnLevel]];
            if (initOnly)
                currentCell = defenitions_2.findcells(_this.cells(), cell._columnIndex(), cell._rowIndex())[0];
            else
                currentCell = _this.cells().filter(function (x) {
                    if (x.kind() != cell.kind())
                        return false;
                    for (var i = 0; i < x.dependentFields.length; i++) {
                        if (x.dependentFields[i] != cell.dependentFields[i])
                            return false;
                    }
                    return true;
                })[0];
            if (!currentCell) {
                currentCell = settings_1.controlsFactory().createControl(settings_1.controlsFactory().controlsMap['XRCrossTabCell'].defaultVal, _this);
                newCells.push(currentCell);
            }
            else {
                currentCell.reset();
                oldCells.push(currentCell);
            }
            _this.applyCell(cell, currentCell);
        });
        for (var i = this.cells().length - 1; i >= 0; i--) {
            if (oldCells.indexOf(this.cells()[i]) == -1) {
                this.cells()[i].dispose();
                this.cells.splice(i, 1);
            }
        }
        newCells.forEach(function (x) { return _this.cells.push(x); });
        return oldCells.concat(newCells);
    };
    XRCrossTabViewModel.prototype.applyCell = function (from, to) {
        var info = from.getInfo();
        info.forEach(function (item) {
            to[item.propertyName](from[item.propertyName]());
        });
        ['dataLevel', 'rowLevel', 'columnLevel'].forEach(function (key) {
            if (from[key] != null)
                to[key] = from[key];
        });
        if (from.field)
            to.field(from.field());
        else if (to.field && to.field())
            to.field(null);
        to.kind(from.kind());
        to.dependentFields = from.dependentFields;
    };
    XRCrossTabViewModel.prototype.insertNewField = function (collectionName, insertPosition, fieldName, dataFieldLayout) {
        var newField = this.getInfo().filter(function (x) { return x.propertyName === collectionName; })[0].addHandler();
        dataFieldLayout && this.layoutOptions.dataFieldLayout(enums_1.DataFieldLayout[dataFieldLayout]);
        this[collectionName].splice(insertPosition, 0, newField);
        newField && newField.setFieldName(fieldName);
    };
    return XRCrossTabViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRCrossTabViewModel = XRCrossTabViewModel;
var CrossTabLayoutOptionsModel = (function (_super) {
    __extends(CrossTabLayoutOptionsModel, _super);
    function CrossTabLayoutOptionsModel(model, parent, serializer) {
        var _this = _super.call(this, model, serializer) || this;
        _this.parent = parent;
        return _this;
    }
    CrossTabLayoutOptionsModel.prototype.isPropertyDisabled = function (name) {
        switch (name) {
            case 'cornerHeaderDisplayMode':
                return this.parent.rowFields().length == 0 && this.parent.columnFields().length == 0;
            case 'dataFieldLayout':
                return this.parent.dataFields().length < 2;
            case 'columnTotalsPosition':
                return this.parent.columnFields().length < 1;
            case 'rowTotalsPosition':
                return this.parent.rowFields().length == 0 || this.hierarchicalRowLayout();
            case 'columnTotalHeaderPosition':
                return this.parent.columnFields().length < 2;
            case 'rowTotalHeaderPosition':
                return this.parent.rowFields().length < 2;
            case 'hierarchicalRowLayout':
                return this.parent.rowFields().length < 2 || this.rowTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData];
        }
    };
    CrossTabLayoutOptionsModel.prototype.getInfo = function () { return layoutOptions_1.crossTabLayoutOptionsInfo; };
    return CrossTabLayoutOptionsModel;
}(analytics_elements_1.SerializableModel));
exports.CrossTabLayoutOptionsModel = CrossTabLayoutOptionsModel;
var CrossTabFieldModel = (function (_super) {
    __extends(CrossTabFieldModel, _super);
    function CrossTabFieldModel(model, parent, serializer, name) {
        var _this = _super.call(this, model, serializer) || this;
        _this.getPath = function (propertyName) { return analytics_internal_1.getFullPath(_this.parent.getPath('dataMember'), _this.parent['dataMember']()); };
        _this.isPropertyDisabled = function (propertyName) { return propertyName == 'fieldName' && _this.parent.dataSource() == null; };
        _this.parent = parent;
        _this._disposables.push(_this.name = ko.pureComputed(function () {
            if (_this.fieldName())
                return name + ' (' + _this.fieldName() + ')';
            return name;
        }));
        if (_this.crossTabSortBySummaryInfo)
            _this.crossTabSortBySummaryInfo.getPath = function (propertyName) { return _this.getPath(propertyName); };
        return _this;
    }
    CrossTabFieldModel.prototype.setFieldName = function (fullPath) {
        var parts = fullPath.split('.');
        var dsHelper = this.parent.dsHelperProvider && this.parent.dsHelperProvider();
        if (dsHelper && parts.length >= 2) {
            var dataSource;
            if (this.parent.getPath('') === parts[0])
                dataSource = this.parent['dataSource']();
            else {
                dataSource = dsHelper && (dsHelper.findDataSourceInfoByID(parts[0])
                    || dsHelper.findDataSourceInfoByRef(parts[0]));
                dataSource && this.parent['dataSource'](dataSource.data);
            }
            dataSource && this.parent['dataMember'](parts.slice(1, -1).join('.'));
        }
        this.fieldName(parts.pop());
    };
    CrossTabFieldModel.prototype.getInfo = function () { return fields_1.crossTabGroupFieldInfo; };
    return CrossTabFieldModel;
}(analytics_elements_1.SerializableModel));
exports.CrossTabFieldModel = CrossTabFieldModel;
var CrossTabDataFieldModel = (function (_super) {
    __extends(CrossTabDataFieldModel, _super);
    function CrossTabDataFieldModel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CrossTabDataFieldModel.prototype.getInfo = function () { return fields_1.crossTabDataFieldInfo; };
    return CrossTabDataFieldModel;
}(CrossTabFieldModel));
exports.CrossTabDataFieldModel = CrossTabDataFieldModel;
var XRCrossTabSurface = (function (_super) {
    __extends(XRCrossTabSurface, _super);
    function XRCrossTabSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this.controls = ko.observableArray();
        _this._disposables.push(analytics_internal_1.createObservableArrayMapCollection(control.cells, _this.controls, function (item) { return new xrCrossTabCell_1.XRCellsurface(item, context); }));
        _this.selectiontemplate = 'dxrd-crosstab';
        return _this;
    }
    XRCrossTabSurface.prototype.selectLine = function (selection, cell, isMultiSelect, isRow) {
        if (!isMultiSelect)
            selection.initialize(this);
        var model = this.getControlModel();
        var surface = cell.surface;
        var cells;
        if (isRow)
            cells = defenitions_2.findcells(model.cells(), null, cell._rowIndex());
        else
            cells = defenitions_2.findcells(model.cells(), cell._columnIndex());
        cells.forEach(function (cell) {
            if (isMultiSelect) {
                selection.selectionWithCtrl(cell.surface);
                selection.applySelection();
            }
            else
                selection.selecting({ control: cell.surface, cancel: false });
        });
        if (!isMultiSelect)
            selection.swapFocusedItem(surface);
    };
    return XRCrossTabSurface;
}(xrControl_1.XRControlSurface));
exports.XRCrossTabSurface = XRCrossTabSurface;


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var metadata_1 = __webpack_require__(6);
var metadataGroups_1 = __webpack_require__(11);
var analytics_widgets_1 = __webpack_require__(4);
var fields_1 = __webpack_require__(57);
var _metaUtils_1 = __webpack_require__(23);
var dataBinding_1 = __webpack_require__(17);
exports.autoSizeMode = _metaUtils_1.valuesArrayAsEnumWithLocalizationId(metadata_1.textFitMode, 'DevExpress.XtraReports.UI.AutoSizeMode.');
exports.rowVisible = { propertyName: 'rowVisible', modelName: '@RowVisible', displayName: 'Row Visible', localizationId: '', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool };
exports.columnVisible = { propertyName: 'columnVisible', modelName: '@ColumnVisible', displayName: 'Column Visible', localizationId: '', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool };
exports.rowAutoHeightMode = { propertyName: 'rowAutoHeightMode', modelName: '@RowAutoHeightMode', displayName: 'Row Auto Height Mode', localizationId: '', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'None', valuesArray: exports.autoSizeMode };
exports.columnAutoWidthMode = { propertyName: 'columnAutoWidthMode', modelName: '@ColumnAutoWidthMode', displayName: 'Column Auto Width Mode', localizationId: '', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'None', valuesArray: exports.autoSizeMode };
exports.crossTabCellOptionsInfo = [
    fields_1.crossTabFieldName,
    metadata_1.angle,
    exports.columnAutoWidthMode,
    exports.rowAutoHeightMode,
    exports.columnVisible,
    exports.rowVisible,
    metadata_1.keepTogether
].concat(fields_1.crossTabDataFieldInfoBase, fields_1.crossTabGroupFieldInfoBase);
exports.columnIndex = { propertyName: '_columnIndex', modelName: '@ColumnIndex', displayName: 'Column Index', localizationId: 'DevExpress.XtraReports.UI.CrossTab.XRCrossTabCell.ColumnIndex', defaultVal: 0, from: analytics_utils_1.floatFromModel, alwaysSerialize: true, disabled: true, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.rowIndex = { propertyName: '_rowIndex', modelName: '@RowIndex', displayName: 'Row Index', localizationId: 'DevExpress.XtraReports.UI.CrossTab.XRCrossTabCell.RowIndex', defaultVal: 0, from: analytics_utils_1.floatFromModel, alwaysSerialize: true, disabled: true, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.cellserializtionInfoBase = [
    exports.columnIndex,
    exports.rowIndex,
    { propertyName: '_columnSpan', modelName: '@ColumnSpan', defaultVal: 1, from: analytics_utils_1.floatFromModel },
    { propertyName: '_rowSpan', modelName: '@RowSpan', defaultVal: 1, from: analytics_utils_1.floatFromModel }
];
exports.cellserializtionInfo = exports.cellserializtionInfoBase.concat(metadataGroups_1.baseControlProperties, metadataGroups_1.sizeLocation, metadataGroups_1.bookmarkGroup, exports.crossTabCellOptionsInfo, metadataGroups_1.commonControlProperties, dataBinding_1.dataBindings(['Text', 'Tag']), metadata_1.nullValueText, metadata_1.text, metadata_1.textFormatString, metadata_1.textAlignment, metadata_1.font, metadata_1.foreColor);


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var ItemsInRangeEnumerator = (function () {
    function ItemsInRangeEnumerator(start, end) {
        this._start = start;
        this._end = end;
    }
    ItemsInRangeEnumerator.prototype._findCommonParent = function (current, last) {
        return current === last ? current :
            this._findCommonParent(current.parent || current, last.parent || last);
    };
    ItemsInRangeEnumerator.prototype._selectItemsBetweenShiftSelection = function (parent) {
        var items = parent.items();
        for (var i = 0; i < items.length; i++) {
            if (this._isSelectedRangeEnded)
                return;
            var item = items[i];
            this._addToSelectedItems(item);
            if (item === this._start || item === this._end) {
                this._isSelectedRangeEnded = this._isInSelectedRage;
                this._isInSelectedRage = !this._isInSelectedRage;
                this._addToSelectedItems(item);
            }
            if (!this._isSelectedRangeEnded && !item.collapsed()) {
                this._selectItemsBetweenShiftSelection(item);
            }
        }
    };
    ItemsInRangeEnumerator.prototype._addToSelectedItems = function (item) {
        if (this._isInSelectedRage) {
            this._callBack(item);
        }
    };
    ItemsInRangeEnumerator.prototype.enumerate = function (callBack) {
        this._isInSelectedRage = false;
        this._isSelectedRangeEnded = false;
        this._callBack = callBack;
        this._selectItemsBetweenShiftSelection(this._findCommonParent(this._start.parent, this._end.parent));
    };
    return ItemsInRangeEnumerator;
}());
var FieldListController = (function () {
    function FieldListController(actionProviders, fieldListActionWrapper, dragDropHandler, customizeFieldListActions) {
        if (actionProviders === void 0) { actionProviders = []; }
        if (customizeFieldListActions === void 0) { customizeFieldListActions = null; }
        this._selectedItems = ko.observableArray([]);
        this.hasItems = FieldListController.isList;
        this._actionProviders = actionProviders;
        this._fieldListActionWrapper = fieldListActionWrapper;
        this.dragDropHandler = dragDropHandler;
        this._customizeFieldListActions = customizeFieldListActions;
    }
    FieldListController.prototype.dispose = function () {
        this._actionProviders.splice(0);
        this._selectedItems.splice(0);
    };
    FieldListController.prototype.itemsFilter = function (item) {
        return item['isCalculated'] === true || item.specifics !== 'none';
    };
    FieldListController.isList = function (item) {
        if (!item)
            return false;
        return item['isCalculated'] ? false : item.specifics === 'List' || item.specifics === 'ListSource' || item.isList === true;
    };
    FieldListController.prototype.select = function (item) {
        this.selectedItem && this.selectedItem.isSelected(false);
        this.selectedItem = item;
        item.isSelected(true);
    };
    FieldListController.prototype.canSelect = function (item) {
        return true;
    };
    FieldListController.prototype.getActions = function (item) {
        var _this = this;
        var result = [];
        (this._actionProviders || []).forEach(function (actionsProvider) {
            var actions = actionsProvider.getActions(item);
            if (_this._fieldListActionWrapper) {
                _this._fieldListActionWrapper(actions);
            }
            result.push.apply(result, actions);
        });
        var getActionPosition = function (action) {
            return action.position === undefined ? 1 : action.position;
        };
        result = $.extend(true, [], result.sort(function (x, y) { return getActionPosition(x) - getActionPosition(y); }));
        this._customizeFieldListActions && this._customizeFieldListActions(item.data, result);
        return result;
    };
    FieldListController.prototype.canMultiSelect = function (item) {
        var path = new analytics_utils_1.PathRequest(item.path).path;
        var isSelectedItemCanMultiSelect = !this.selectedItem || this.selectedItem === item || this.canMultiSelect(this.selectedItem);
        return path.length !== 0 && isSelectedItemCanMultiSelect;
    };
    FieldListController.prototype.multiSelect = function (item, isShiftPressed, isCtrlPressed) {
        var _this = this;
        if (isShiftPressed === void 0) { isShiftPressed = false; }
        if (isCtrlPressed === void 0) { isCtrlPressed = false; }
        if (this.selectedItem) {
            this.selectedItem.isSelected(false);
            this.selectedItem.isMultiSelected(true);
        }
        if (isShiftPressed) {
            var lastSelectedItem = this.selectedItem;
            if (!isCtrlPressed) {
                this._selectedItems.peek().forEach(function (element) { return element.isMultiSelected(false); });
                this._selectedItems([]);
            }
            new ItemsInRangeEnumerator(item, lastSelectedItem).enumerate(function (element) {
                if (!element.isMultiSelected()) {
                    _this._selectedItems.push(element);
                    element.isMultiSelected(true);
                }
            });
            if (this._selectedItems.peek()[0] === lastSelectedItem) {
                this._selectedItems.reverse();
            }
        }
        else if (this._selectedItems.peek().indexOf(item) > -1) {
            this._selectedItems.remove(item);
            item.isMultiSelected(false);
        }
        else {
            this._selectedItems.push(item);
            item.isMultiSelected(true);
        }
    };
    FieldListController.prototype.isDraggable = function (item) {
        return true;
    };
    Object.defineProperty(FieldListController.prototype, "selectedItem", {
        get: function () {
            return this._selectedItems()[this._selectedItems().length - 1];
        },
        set: function (value) {
            this._selectedItems().forEach(function (item) { return item.isMultiSelected(false); });
            this._selectedItems.splice(0);
            this._selectedItems.push(value);
        },
        enumerable: true,
        configurable: true
    });
    FieldListController.prototype.selectedItems = function () {
        return this._selectedItems();
    };
    return FieldListController;
}());
exports.FieldListController = FieldListController;


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var dataFederation_1 = __webpack_require__(55);
var _renameDataSourceStrategy_1 = __webpack_require__(324);
var parameter_1 = __webpack_require__(29);
var components_1 = __webpack_require__(128);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
exports.maxNestingLevelUpdate = analytics_internal_1.createGlobalModuleVariableFunc(5);
function patchRequest(request, dataSources, state) {
    request.state = state;
    var dataSource = analytics_internal_1.findFirstItemMatchesCondition(dataSources, function (ds) { return (request.id && ds.id === request.id) || (request.ref && ds.ref === request.ref); });
    if (dataSource && dataSource.data) {
        if (dataSource.data instanceof dataFederation_1.DataFederationDataSource) {
            dataSource.data.getSerializableModel().serializer = new analytics_utils_1.ModelSerializer();
            var serializedModel = dataSource.data.getSerializableModel().serialize();
            request.dataSource = JSON.stringify(serializedModel.dataSource);
            request['dataSources'] = Object.keys(serializedModel.dataSources).map(function (key) { return JSON.stringify(serializedModel.dataSources[key]); });
        }
        else
            request.dataSource = JSON.stringify(new analytics_utils_1.ModelSerializer().serialize(dataSource.data));
    }
}
exports.patchRequest = patchRequest;
var FieldListDataSourcesHelper = (function () {
    function FieldListDataSourcesHelper() {
        var _this = this;
        this._fieldListCache = {};
        this._dataSourceSubscriptions = [];
        this._innerCache = {};
        this._usedDataSourceSubscription = null;
        this._cacheIsClearNotificicator = ko.observable();
        this.dataSourceHelper = ko.observable();
        this.fieldListDataSources = ko.observableArray([]);
        this._renameDataSourceStrategy = new _renameDataSourceStrategy_1.RenameDataSourceStrategy(this.dataSourceHelper, function () { return _this.fieldListDataSources.valueHasMutated(); });
    }
    FieldListDataSourcesHelper.prototype.dispose = function () {
        this._usedDataSourceSubscription && this._usedDataSourceSubscription.dispose();
        this._usedDataSourceSubscription = null;
        this._clearDataSourceCache();
        this.fieldListDataSources([]);
        this.dataSourceHelper(null);
    };
    FieldListDataSourcesHelper.prototype._clearDataSourceCache = function (dataSourceRef) {
        var _this = this;
        Object.keys(this._fieldListCache).forEach(function (prop) {
            if (dataSourceRef === undefined || prop.split('.')[0] === dataSourceRef) {
                delete _this._fieldListCache[prop];
                delete _this._innerCache[prop];
            }
        });
        dataSourceRef !== undefined && this._cacheIsClearNotificicator.notifySubscribers();
    };
    FieldListDataSourcesHelper.prototype._subscribeDataSource = function (dataSource) {
        var _this = this;
        if (dataSource.data && dataSource.data.base64) {
            this._dataSourceSubscriptions.push(dataSource.data.base64.subscribe(function (newVal) {
                _this._clearDataSourceCache(dataSource.ref || dataSource.id);
                _this.fieldListDataSources.notifySubscribers(_this.fieldListDataSources());
                _this.dataSourceHelper().usedDataSources.notifySubscribers(_this.dataSourceHelper().usedDataSources());
            }));
        }
    };
    FieldListDataSourcesHelper.prototype._updateFieldListDataSources = function (usedDataSources, parameters) {
        var _this = this;
        if (!usedDataSources) {
            this.fieldListDataSources(null);
            return;
        }
        this._dataSourceSubscriptions.forEach(function (x) { return x.dispose(); });
        this._dataSourceSubscriptions = [];
        this._fieldListCache = {};
        this._innerCache = {};
        var dataSourcesArray = [].concat(usedDataSources);
        if (parameters) {
            dataSourcesArray.splice(-1, 0, { ref: parameter_1.Parameter.ParametersRefString, name: 'Parameters', specifics: 'parameters', data: parameters, dataSerializer: null });
        }
        dataSourcesArray.forEach(function (item) { return _this._subscribeDataSource(item); });
        this.fieldListDataSources(dataSourcesArray);
    };
    FieldListDataSourcesHelper.prototype._wrapRequest = function (request) {
        var pathParts = request.pathParts.length > 0 ? request.pathParts.map(function (x) { return x; }) : request.fullPath.split('.');
        var currentPathLength = Math.floor((pathParts.length - 1) / exports.maxNestingLevelUpdate());
        var currentRequestPath = pathParts.splice(0, 1 + currentPathLength * exports.maxNestingLevelUpdate());
        return new analytics_utils_1.PathRequest(currentRequestPath.join('.'), currentRequestPath);
    };
    FieldListDataSourcesHelper.prototype._findItems = function (items, pathParts) {
        if (pathParts.length === 0 || !items)
            return items;
        var itemName = pathParts.splice(0, 1)[0];
        var item = items.filter(function (x) { return x.name === itemName; })[0];
        if (!item)
            return;
        if (pathParts.length > 0 && item['items']) {
            return this._findItems(item['items'], pathParts);
        }
        else if (pathParts.length === 0) {
            return item['items'];
        }
    };
    FieldListDataSourcesHelper.prototype._createRelativePath = function (fullPath, currentPath) {
        if (!currentPath)
            return fullPath;
        if (fullPath != currentPath) {
            return fullPath.replace(currentPath + '.', '');
        }
        return '';
    };
    FieldListDataSourcesHelper.prototype._updateInnerCache = function (currentRequest, currentPath, result) {
        var _this = this;
        result.forEach(function (item) {
            var itemPath = [currentPath, item.name].join('.');
            if (item.relationPath) {
                Object.defineProperty(item, 'items', {
                    get: function () { return _this._findItems(_this._innerCache[currentRequest.fullPath], _this._createRelativePath(item.relationPath, currentRequest.path).split('.')); }
                });
            }
            else if (item.items) {
                _this._updateInnerCache(currentRequest, itemPath, item.items);
            }
        });
    };
    FieldListDataSourcesHelper.prototype._getPathPartsFromRequest = function (request) {
        return request.pathParts.length > 0 ? request.pathParts.map(function (x) { return x; }) : request.fullPath.split('.');
    };
    FieldListDataSourcesHelper.prototype._getItemsFromCache = function (currentRequest) {
        var items = this._innerCache[currentRequest.fullPath];
        var closestCachedPath = this._getPathPartsFromRequest(currentRequest);
        while (!items && closestCachedPath.length > 1) {
            closestCachedPath.pop();
            items = this._innerCache[closestCachedPath.join('.')];
        }
        var currentPath = this._getPathPartsFromRequest(currentRequest);
        currentPath = currentPath.splice(closestCachedPath.length, currentPath.length);
        return this._findItems(items, currentPath);
    };
    FieldListDataSourcesHelper.prototype.wrapFieldsCallback = function (fieldsCallback, state) {
        var _this = this;
        var cache = this._fieldListCache;
        var dataSources = this.fieldListDataSources;
        return function (request) {
            if (cache) {
                var items = _this._getItemsFromCache(request);
                if (items)
                    return $.Deferred().resolve(items).promise();
                var newRequest = _this._wrapRequest(request);
                _this._cacheIsClearNotificicator();
                if (cache[newRequest.fullPath]) {
                    var $deferred = $.Deferred();
                    cache[newRequest.fullPath].done(function (result) {
                        if (!Array.isArray(result))
                            $deferred.resolve(result);
                        else
                            $deferred.resolve(_this._getItemsFromCache(request));
                    });
                    return $deferred.promise();
                }
                patchRequest(newRequest, dataSources.peek(), state());
                if (newRequest['dataSource']) {
                    var $deferred = $.Deferred();
                    cache[newRequest.fullPath] = fieldsCallback(newRequest).done(function (result) {
                        if (Array.isArray(result)) {
                            _this._innerCache[newRequest.fullPath] = result;
                            _this._updateInnerCache(newRequest, newRequest.fullPath, result);
                            $deferred.resolve(_this._getItemsFromCache(request));
                        }
                        else {
                            $deferred.resolve(result);
                        }
                    });
                    return $deferred.promise();
                }
                cache[newRequest.fullPath] = undefined;
                return $.Deferred().reject().promise();
            }
            else {
                patchRequest(request, dataSources.peek(), state());
                return request.dataSource ? fieldsCallback(request) : $.Deferred().reject().promise();
            }
        };
    };
    FieldListDataSourcesHelper.prototype._subscribeDataSources = function (usedDataSources, model) {
        var _this = this;
        this._usedDataSourceSubscription = usedDataSources.subscribe(function (args) {
            var changeSet = args[0];
            var dataSource = changeSet.value;
            if (changeSet.status === 'added') {
                _this._subscribeDataSource(dataSource);
                model.components.push(new components_1.ComponentsModel(dataSource, _this._renameDataSourceStrategy));
                _this.fieldListDataSources.splice(changeSet.index, 0, dataSource);
            }
            else {
                if (dataSource.data && dataSource.data.base64) {
                    _this._dataSourceSubscriptions[changeSet.index].dispose();
                    _this._dataSourceSubscriptions.splice(changeSet.index, 1);
                }
                model.components.splice(changeSet.index, 1);
                _this.fieldListDataSources.splice(changeSet.index, 1);
                _this._clearDataSourceCache(dataSource.ref || dataSource.id);
            }
        }, null, 'arrayChange');
    };
    FieldListDataSourcesHelper.prototype.updateDataSources = function (dsHelper, model, parameters) {
        var _this = this;
        this._subscribeDataSources(dsHelper.usedDataSources, model);
        this._updateFieldListDataSources(dsHelper.usedDataSources(), parameters);
        this.dataSourceHelper(dsHelper);
        model.components([]);
        model.components(dsHelper.usedDataSources()
            .filter(function (item) { return item.specifics !== 'none'; })
            .map(function (item) { return new components_1.ComponentsModel(item, _this._renameDataSourceStrategy); }));
    };
    return FieldListDataSourcesHelper;
}());
exports.FieldListDataSourcesHelper = FieldListDataSourcesHelper;


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = __webpack_require__(74);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_wizard_1 = __webpack_require__(7);
var analytics_internal_1 = __webpack_require__(2);
function _fillTreeQueries(reportTree, queries, level, parentDisplayName) {
    var lvl = level;
    queries.forEach(function (query) {
        if (query.checked !== false) {
            var fields = query.fields.filter(function (field) { return field.checked; }).map((function (value) { return { name: value.name, displayName: value.displayName, specifics: value.specifics }; }));
            var name = query.displayName || query.name;
            var displayName = parentDisplayName ? [parentDisplayName, name].join('.') : name;
            reportTree.push({
                name: name,
                displayName: displayName,
                path: query.path,
                fields: fields,
                isList: true,
                level: level
            });
            if (query.relations.length > 0) {
                var newLvl = lvl + 1;
                _fillTreeQueries(reportTree, query.relations, newLvl, displayName);
            }
        }
    });
    return reportTree;
}
exports._fillTreeQueries = _fillTreeQueries;
var AddGroupingLevelPage = (function (_super) {
    __extends(AddGroupingLevelPage, _super);
    function AddGroupingLevelPage() {
        var _this = _super.call(this) || this;
        _this._availableColumns = {};
        _this._groupingLevels = {};
        _this._masterDetailGroups = {};
        _this._addNewGroup = function () {
            if (_this._isCreateGroupEnabled()) {
                _this._currentGroups().add({ fields: ko.observableArray([_this._currentFields().activeItem]) });
                _this._currentFields().removeActiveItem();
                _this._onChange();
            }
        };
        _this._appendFieldsToGroup = function () {
            if (_this._isAppendToGroupEnabled()) {
                _this._currentGroups().activeItem.fields.push(_this._currentFields().activeItem);
                _this._currentFields().removeActiveItem();
                _this._onChange();
            }
        };
        _this._removeGroup = function () {
            if (_this._isRemoveGroupEnabled()) {
                _this._currentFields().addRange(_this._currentGroups().activeItem.fields());
                _this._currentGroups().removeActiveItem();
                _this._onChange();
            }
        };
        _this._moveUp = function () {
            !!_this._currentGroups() && _this._currentGroups().moveUp();
            _this._onChange();
        };
        _this._moveDown = function () {
            !!_this._currentGroups() && _this._currentGroups().moveDown();
            _this._onChange();
        };
        _this._fieldDblClick = function (field) {
            _this._currentFields().activeItem = field;
            _this._addNewGroup();
        };
        _this._fieldClick = function (e) {
            _this._currentFields().activeItem = e.itemData;
        };
        _this._groupDblClick = function (group) {
            _this._currentGroups().activeItem = group;
            _this._removeGroup();
        };
        _this._groupClick = function (e) {
            _this._currentGroups().activeItem = e.itemData;
        };
        _this._currentPath = ko.observable('');
        _this._currentFields = ko.observable(null);
        _this._currentGroups = ko.observable(null);
        _this._fieldCaption = analytics_utils_1.getLocalization('Available fields', 'ASPxReportsStringId.ReportDesigner_Wizard_AvailableFields');
        _this._groupCaption = analytics_utils_1.getLocalization('Groups', 'ASPxReportsStringId.ReportDesigner_Groups');
        _this._reportTree = ko.observableArray([]);
        _this._disposables.push(_this._currentPath.subscribe(function (newPath) {
            _this._currentGroups(_this._groupingLevels[newPath]);
            _this._currentFields(_this._availableColumns[newPath]);
        }));
        return _this;
    }
    AddGroupingLevelPage.prototype._setData = function (queries) {
        var _this = this;
        queries.forEach(function (query) {
            if (!_this._groupingLevels[query.path] || !_this._availableColumns[query.path]) {
                _this._availableColumns[query.path] = new _utils_1.ListViewModel();
                _this._groupingLevels[query.path] = new _utils_1.ListViewModel();
            }
            if (!_this._masterDetailGroups[query.path]) {
                _this._masterDetailGroups[query.path] = [];
            }
            var fields = ko.observableArray(query.fields.map(function (value) { return value.displayName; }));
            _this._groupingLevels[query.path].setItems(_this._masterDetailGroups[query.path].map(function (value) {
                fields.removeAll(value);
                return { fields: ko.observableArray(value) };
            }));
            _this._availableColumns[query.path].setItems(fields());
        });
    };
    AddGroupingLevelPage.prototype.canFinish = function () {
        return true;
    };
    AddGroupingLevelPage.prototype._isCreateGroupEnabled = function () {
        return !!this._currentFields() && !!this._currentFields().activeItem;
    };
    AddGroupingLevelPage.prototype._isAppendToGroupEnabled = function () {
        return !!this._currentFields() && this._currentFields().activeItem && !!this._currentGroups() && this._currentGroups().activeItem && this._currentGroups().activeItem.fields().length > 0;
    };
    AddGroupingLevelPage.prototype._isRemoveGroupEnabled = function () {
        return !!this._currentGroups() && this._currentGroups().activeItem && this._currentGroups().activeItem.fields().length > 0;
    };
    AddGroupingLevelPage.prototype._isMoveUpEnabled = function () {
        return !!this._currentGroups() && this._currentGroups().isMoveUpEnabled();
    };
    AddGroupingLevelPage.prototype._isMoveDownEnabled = function () {
        return !!this._currentGroups() && this._currentGroups().isMoveDownEnabled();
    };
    AddGroupingLevelPage.prototype.initialize = function (state) {
        this._reportTree(_fillTreeQueries([], state.masterDetailInfoCollection, 0).map(function (item) { return $.extend(true, {}, item); }));
        this._masterDetailGroups = $.extend(true, {}, state.masterDetailGroups);
        var firstPath = this._reportTree()[0] && this._reportTree()[0].path;
        if (firstPath) {
            this._setData(this._reportTree());
            this._currentPath(firstPath);
            if (firstPath === this._currentPath.peek())
                this._currentPath.notifySubscribers(firstPath);
        }
        return $.Deferred().resolve().promise();
    };
    AddGroupingLevelPage.prototype.commit = function () {
        var _this = this;
        var masterDetailGroups = {};
        var masterDetailSummaryOptionsColumns = {};
        this._reportTree().forEach(function (query) {
            if (_this._groupingLevels[query.path].items.length > 0) {
                masterDetailGroups[query.path] = _this._groupingLevels[query.path].items.map(function (item) {
                    return item.fields().map(function (displayName) { return analytics_internal_1.getFirstItemByPropertyValue(query.fields, 'displayName', displayName).name; });
                });
            }
            if (_this._availableColumns[query.path]) {
                var summaryColumns = [];
                masterDetailSummaryOptionsColumns[query.path] = [];
                _this._availableColumns[query.path].items.forEach(function (fieldName) {
                    var field = analytics_internal_1.getFirstItemByPropertyValue(query.fields, 'displayName', fieldName);
                    if (field.specifics && ['integer', 'float', 'date'].indexOf(field.specifics.toLowerCase()) > -1) {
                        summaryColumns.push(field);
                    }
                });
                summaryColumns.sort(function (a, b) { return a.name.localeCompare(b.name); });
                if (summaryColumns.length === 0)
                    delete masterDetailSummaryOptionsColumns[query.path];
                else
                    masterDetailSummaryOptionsColumns[query.path] = summaryColumns;
            }
        });
        return $.Deferred().resolve({
            masterDetailGroups: masterDetailGroups,
            masterDetailSummaryOptionsColumns: masterDetailSummaryOptionsColumns
        }).promise();
    };
    return AddGroupingLevelPage;
}(analytics_wizard_1.WizardPageBase));
exports.AddGroupingLevelPage = AddGroupingLevelPage;
function _registerAddGroupingLevelPage(factory) {
    factory.registerMetadata(pageId_1.ReportWizardPageId.AddGroupingLevelPage, {
        create: function () {
            return new AddGroupingLevelPage();
        },
        getState: function (state) { return state; },
        setState: function (data, state) {
            state.masterDetailGroups = data.masterDetailGroups;
            state.masterDetailSummaryOptionsColumns = data.masterDetailSummaryOptionsColumns;
        },
        description: analytics_utils_1.getLocalization('Group data in the selected reports. You can specify one or more fields for each group.', 'ReportBoxDesignerStringId.Wizard_MasterDetailAddGroupingLevel_Description'),
        template: 'dxrd-page-masterdetail-groups',
        resetState: function (state, defaultState) {
            state.masterDetailGroups = defaultState.masterDetailGroups;
            state.masterDetailSummaryOptionsColumns = defaultState.masterDetailSummaryOptionsColumns;
        }
    });
}
exports._registerAddGroupingLevelPage = _registerAddGroupingLevelPage;


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var reportWizardState_1 = __webpack_require__(18);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var $ = __webpack_require__(3);
var analytics_wizard_1 = __webpack_require__(7);
var SelectReportTypePage = (function (_super) {
    __extends(SelectReportTypePage, _super);
    function SelectReportTypePage(_options) {
        var _this = _super.call(this, {}) || this;
        _this._options = _options;
        _this._extendCssClass = function (rightPath) { return 'dxrd-report-' + rightPath; };
        _this.typeItems = [
            new analytics_wizard_1.TypeItem('Empty Report', 'ASPxReportsStringId.ReportDesigner_Wizard_SelectReportType_EmptyReport', 'emptyReport', 'dxrd-svg-wizard-EmptyReport', reportWizardState_1.ReportType.Empty),
            new analytics_wizard_1.TypeItem('Label Report', 'ASPxReportsStringId.ReportDesigner_Wizard_SelectReportType_LabelReport', 'labelReport', 'dxrd-svg-wizard-LabelReport', reportWizardState_1.ReportType.Label),
            new analytics_wizard_1.TypeItem('Cross-Tab Report', 'ASPxReportsStringId.ReportDesigner_Wizard_SelectReportType_CrossTabReport', 'CrossTabReport', 'dxrd-svg-wizard-CrossTabReport', reportWizardState_1.ReportType.CrossTab)
        ];
        if (_this._options.canCreateDatabound) {
            _this._addDataboundReportType();
        }
        return _this;
    }
    SelectReportTypePage.prototype._addDataboundReportType = function () {
        this.typeItems.splice(1, 0, new analytics_wizard_1.TypeItem('Table Report', 'ASPxReportsStringId.ReportDesigner_Wizard_SelectReportType_TableReport', 'databoundReport', 'dxrd-svg-wizard-StandardReport', reportWizardState_1.ReportType.Databound));
        if (this._options.showVertical) {
            this.typeItems.splice(2, 0, new analytics_wizard_1.TypeItem('Vertical Report', 'ASPxReportsStringId.ReportDesigner_Wizard_SelectReportType_VerticalReport', 'verticalReport', 'dxrd-svg-wizard-VerticalReport', reportWizardState_1.ReportType.Vertical));
        }
    };
    SelectReportTypePage.prototype.canNext = function () {
        return this.selectedItem() !== null && this.selectedItem().type !== reportWizardState_1.ReportType.Empty;
    };
    SelectReportTypePage.prototype.canFinish = function () {
        return this.selectedItem() !== null && this.selectedItem().type === reportWizardState_1.ReportType.Empty;
    };
    SelectReportTypePage.prototype.commit = function () {
        return $.Deferred().resolve({ reportType: this.selectedItem().type }).promise();
    };
    SelectReportTypePage.prototype.initialize = function (state) {
        var type = state.reportType || reportWizardState_1.ReportType.Databound;
        var item = analytics_internal_1.findFirstItemMatchesCondition(this.typeItems, function (item) { return item.type === type; });
        this.selectedItem(item || this.typeItems[0]);
        return $.Deferred().resolve().promise();
    };
    return SelectReportTypePage;
}(analytics_wizard_1.ChooseDataSourceTypePage));
exports.SelectReportTypePage = SelectReportTypePage;
var ChooseDataSourceTypePage = (function (_super) {
    __extends(ChooseDataSourceTypePage, _super);
    function ChooseDataSourceTypePage(dataSourceWizardOptions) {
        var _this = _super.call(this, dataSourceWizardOptions) || this;
        _this.typeItems.push(new analytics_wizard_1.TypeItem('No Data', 'DataAccessUIStringId.DSTypeNoData', 'nodata', 'dxrd-svg-wizard-NoDataSource', analytics_wizard_1.DataSourceType.NoData));
        return _this;
    }
    return ChooseDataSourceTypePage;
}(analytics_wizard_1.ChooseDataSourceTypePage));
exports.ChooseDataSourceTypePage = ChooseDataSourceTypePage;
function _registerSelectReportTypePage(factory, options) {
    factory.registerMetadata(pageId_1.FullscreenReportWizardPageId.SelectReportTypePage, {
        setState: function (data, state) {
            state.reportType = data.reportType;
        },
        getState: function (state) {
            return state;
        },
        resetState: function (state, defaultState) {
            state.reportType = defaultState.reportType;
        },
        create: function () {
            var canCreateDatabound = 'function' === typeof (options.canCreateDatabound) ? options.canCreateDatabound() : options.canCreateDatabound;
            return new SelectReportTypePage({
                canCreateDatabound: canCreateDatabound,
                showVertical: options.showVertical
            });
        },
        description: analytics_utils_1.getLocalization('Select the report type you wish to create.', 'ASPxReportsStringId.ReportDesigner_Wizard_SelectReportType_Message'),
        template: 'dxrd-page-choose-datasource-type',
        navigationPanelText: analytics_utils_1.getLocalization('Select Report Type', 'ASPxReportsStringId.ReportDesigner_Wizard_SelectReportType')
    });
}
exports._registerSelectReportTypePage = _registerSelectReportTypePage;
function _registerChooseDataSourceTypePage(factory, dataSourceWizardOptions) {
    factory.registerMetadata(analytics_wizard_1.DataSourceWizardPageId.ChooseDataSourceTypePage, {
        setState: function (data, state) {
            state.dataSourceType = data.dataSourceType;
        },
        getState: function (state) {
            return state;
        },
        resetState: function (state, defaultState) {
            state.dataSourceType = defaultState.dataSourceType;
        },
        create: function () {
            return new ChooseDataSourceTypePage(dataSourceWizardOptions);
        },
        description: analytics_utils_1.getLocalization('Select the data source type.', 'DataAccessUIStringId.WizardPageChooseDSType'),
        template: 'dxrd-page-choose-datasource-type'
    });
}
exports._registerChooseDataSourceTypePage = _registerChooseDataSourceTypePage;


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var chooseAvailableDataSourcePage_1 = __webpack_require__(24);
var $ = __webpack_require__(3);
var objectItemCreation_1 = __webpack_require__(41);
function overrideDataSourceWizardPage(factory, pageId, meta) {
    var oldMetadata = factory.getMetadata(pageId);
    factory.registerMetadata(pageId, {
        canNext: function (page) { return page.canFinish() || page.canNext(); },
        create: function () { return meta.create(); },
        resetState: function (state, defaultState) {
            state.newDataSource = defaultState.newDataSource;
            meta.resetState && meta.resetState(state, defaultState);
        },
        getState: function (state) { return state; },
        setState: function (data, state) {
            meta.setState && meta.setState(data, state);
            state.newDataSource = data.newDataSource;
        },
        description: oldMetadata.description,
        template: oldMetadata.template
    });
}
function overrideJsonDataSourceWizardPage(factory, pageId, meta) {
    overrideDataSourceWizardPage(factory, pageId, $.extend({}, meta, {
        setState: function (data, state) {
            $.extend(state.jsonDataSourceWizard, data.result);
        }
    }));
}
exports.overrideJsonDataSourceWizardPage = overrideJsonDataSourceWizardPage;
function overrideSqlDataSourceWizardPage(factory, pageId, meta) {
    overrideDataSourceWizardPage(factory, pageId, $.extend({}, meta, {
        setState: function (data, state) {
            state.sqlDataSourceWizard = data.result;
        }
    }));
}
exports.overrideSqlDataSourceWizardPage = overrideSqlDataSourceWizardPage;
var DataSourceWizardHelper = (function () {
    function DataSourceWizardHelper(_page, _callback) {
        this._page = _page;
        this._callback = _callback;
    }
    DataSourceWizardHelper.prototype.commit = function (superCommit, createDataSource) {
        var _this = this;
        var deferred = $.Deferred();
        if (!this._page.canNext() && this._page.canFinish()) {
            superCommit().done(function (commitResult) {
                var dataSourcePromise = _this._callback(createDataSource(commitResult));
                dataSourcePromise.done(function (result) {
                    result.data = objectItemCreation_1.createNewObjectItem(result.data);
                    deferred.resolve({
                        result: commitResult,
                        newDataSource: chooseAvailableDataSourcePage_1._convertToStateDataSource(result)
                    });
                }).fail(deferred.reject);
            });
        }
        else
            superCommit().done(function (commitResult) {
                deferred.resolve({
                    result: commitResult
                });
            });
        return deferred.promise();
    };
    return DataSourceWizardHelper;
}());
exports.DataSourceWizardHelper = DataSourceWizardHelper;


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _reportWizardStateHelper_1 = __webpack_require__(345);
var analytics_wizard_1 = __webpack_require__(7);
var reportWizardState_1 = __webpack_require__(18);
var analytics_internal_1 = __webpack_require__(2);
function createReportWizardState(reportViewModel) {
    var state = analytics_internal_1.extend(true, {}, reportWizardState_1.defaultReportWizardState, analytics_wizard_1._createDefaultDataSourceWizardState());
    if (reportViewModel) {
        _reportWizardStateHelper_1.ReportWizardStateHelper.applyDataBindings(state, reportViewModel);
        _reportWizardStateHelper_1.ReportWizardStateHelper.applyPageSetup(state, reportViewModel);
    }
    return state;
}
exports.createReportWizardState = createReportWizardState;


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var richEditInstance = null;
exports.getRichEditInstance = function () {
    if (!richEditInstance) {
        richEditInstance = __webpack_require__(523);
    }
    return richEditInstance;
};


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var _handlerUri_1 = __webpack_require__(108);
var ChartRequests = (function () {
    function ChartRequests() {
    }
    ChartRequests.getChartImage = function (uri, chartLayout, width, height) {
        return analytics_internal_1.ajax(uri, 'chart', encodeURIComponent(JSON.stringify({
            width: width,
            height: height,
            Chart: JSON.stringify({
                'ChartXmlSerializer': {
                    '@version': '16.2.0.0',
                    Chart: chartLayout
                }
            })
        })));
    };
    ChartRequests.fieldListCallback = function (request) {
        var requestJson = JSON.stringify(request);
        var encodedJson = encodeURIComponent(requestJson);
        return analytics_internal_1.ajax(_handlerUri_1.HandlerUri(), 'fieldList', encodedJson);
    };
    return ChartRequests;
}());
exports.ChartRequests = ChartRequests;


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
exports.HandlerUri = analytics_internal_1.createGlobalModuleVariableFunc('DXXCD.axd');


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
function parseDate(val) {
    if (!val)
        return null;
    if (val instanceof Date)
        return val;
    var chartDateParts = val.split('.');
    var date = analytics_internal_1.parseDate(chartDateParts[0]);
    if ((chartDateParts.length > 1) && date && (chartDateParts[1].length === 3)) {
        var milliseconds = parseInt(chartDateParts[1]);
        milliseconds && date.setMilliseconds(milliseconds);
    }
    return date;
}
exports.parseDate = parseDate;
function serializeDate(date) {
    var milliseconds = date.getMilliseconds().toString();
    var zeros;
    switch (3 - milliseconds.length) {
        case 2:
            zeros = '00';
            break;
        case 1:
            zeros = '0';
            break;
        default:
            zeros = '';
    }
    return analytics_utils_1.serializeDate(date) + '.' + zeros + milliseconds;
}
exports.serializeDate = serializeDate;


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _template_1 = __webpack_require__(111);
var _axis_1 = __webpack_require__(113);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var SeriesViewModel = (function (_super) {
    __extends(SeriesViewModel, _super);
    function SeriesViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, serializer, _chart_1.seriesSerializationsInfo) || this;
        _this.isIncompatible = ko.observable(false);
        _axis_1.initCollectionItem(_this, parent)();
        _this._disposables.push(_this['displayName'] = ko.pureComputed(function () {
            return _this.isIncompatible() ? analytics_utils_1.getLocalization('(incompatible)', 'ChartStringId.IncompatibleSeriesView') + ' ' + _this['name']() : _this['name']();
        }));
        _this.points = ko.observableArray([]);
        _this._disposables.push(_this.points.subscribe(function (newValue) { newValue['owner'] = _this; }));
        _this.points(analytics_utils_1.deserializeArray(model.Points || [], function (item) { return new _point_1.SeriesPointModel(item, _this, serializer); })());
        return _this;
    }
    SeriesViewModel.prototype.updateByView = function (view) {
        _super.prototype.updateByView.call(this, view);
        this.points && this.points([]);
    };
    SeriesViewModel.prefix = 'Series';
    return SeriesViewModel;
}(_template_1.SeriesTemplateViewModel));
exports.SeriesViewModel = SeriesViewModel;
var _point_1 = __webpack_require__(115);
var _chart_1 = __webpack_require__(19);


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_elements_1 = __webpack_require__(5);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var _isBubble = function (viewType) {
    return viewType === 'BubbleSeriesView';
};
var _isRange = function (viewType) {
    return viewType === 'PolarRangeAreaSeriesView' ||
        viewType === 'RadarRangeAreaSeriesView' ||
        viewType === 'RangeArea3DSeriesView' ||
        viewType === 'RangeAreaSeriesView' ||
        viewType === 'OverlappedGanttSeriesView' ||
        viewType === 'SideBySideGanttSeriesView' ||
        viewType === 'OverlappedRangeBarSeriesView' ||
        viewType === 'SideBySideRangeBarSeriesView';
};
var _isStock = function (viewType) {
    return viewType === 'StockSeriesView' ||
        viewType === 'CandleStickSeriesView';
};
var ScaleType;
(function (ScaleType) {
    ScaleType[ScaleType["Qualitative"] = 0] = "Qualitative";
    ScaleType[ScaleType["Numerical"] = 1] = "Numerical";
    ScaleType[ScaleType["DateTime"] = 2] = "DateTime";
    ScaleType[ScaleType["Auto"] = 3] = "Auto";
})(ScaleType = exports.ScaleType || (exports.ScaleType = {}));
exports.ScaleTypeMap = {
    'Qualitative': ScaleType.Qualitative,
    'Numerical': ScaleType.Numerical,
    'DateTime': ScaleType.DateTime,
    'Auto': ScaleType.Auto
};
function _fixSeriesTemplateModel(model) {
    delete model['@SeriesDataMember'];
    return model;
}
var SeriesTemplateViewModel = (function (_super) {
    __extends(SeriesTemplateViewModel, _super);
    function SeriesTemplateViewModel(model, serializer, info) {
        var _this = _super.call(this, _fixSeriesTemplateModel(model), serializer, info) || this;
        _this._actualArgumentScaleType = ko.observable(ScaleType.Numerical);
        if (_this.valueDataMembers) {
            ko.unwrap(_this.valueDataMembers).dispose();
        }
        _this.viewType = ko.observable(_this.view().typeName);
        _this._adjustArgumentScaleType();
        var newInfo = analytics_internal_1.extend(true, [], info);
        var seriesPointsSortingKeyMeta = newInfo.filter(function (x) { return x.propertyName === _chart_1.seriesPointsSortingKey.propertyName; })[0];
        Object.defineProperty(seriesPointsSortingKeyMeta, 'valuesArray', {
            get: function () { return _this._getCurrentSeriesPointsSortingKeys(_this.viewType()); },
            configurable: true
        });
        _this.viewType.subscribe(function (newType) {
            var newSerializer = serializer || new analytics_utils_1.ModelSerializer();
            _this.view(_view_1.SeriesViewViewModel.from({ '@TypeNameSerializable': newType }, newSerializer)());
            _this._adjustArgumentScaleType();
            _this._updateSeriesPointsSortingKey(seriesPointsSortingKeyMeta);
        });
        _this.getInfo = function () { return newInfo; };
        _this._disposables.push(_this.view.subscribe(function (newView) {
            if (_this.viewType() !== newView.typeName) {
                _this.viewType(newView.typeName);
            }
            _this.updateByView(newView);
        }));
        _this.valueDataMembers = ko.observable(new (_templateOptions_1.viewTypesDataMembers[_this.view().typeName] || _commonValue_1.CommonValueDataMembers)(model['@ValueDataMembersSerializable'] || '', _this.valueScaleType));
        _this._disposables.push(_this['indicators'] = ko.computed(function () {
            return _this.view() && _this.view()['indicators'] && _this.view()['indicators']();
        }));
        _this._disposables.push(_this['titles'] = ko.computed(function () {
            return _this.view() && _this.view()['titles'] && _this.view()['titles']();
        }));
        _this._disposables.push(_this._actualArgumentScaleType.subscribe(function (newVal) {
            switch (newVal) {
                case ScaleType.DateTime:
                    _this.qualitativeSummaryOptions.resetAllProperties();
                    _this.numericSummaryOptions.resetAllProperties();
                    break;
                case ScaleType.Numerical:
                    _this.qualitativeSummaryOptions.resetAllProperties();
                    _this.dateTimeSummaryOptions.resetAllProperties();
                    break;
                case ScaleType.Qualitative:
                    _this.numericSummaryOptions.resetAllProperties();
                    _this.dateTimeSummaryOptions.resetAllProperties();
                    break;
            }
        }));
        _this.updateByView(_this.view());
        [_this.qualitativeSummaryOptions, _this.numericSummaryOptions, _this.dateTimeSummaryOptions].forEach(function (options) {
            options['getPath'] = function (propertyName) {
                return _this['getPath'] && _this['getPath']('summaryFunction') || '';
            };
        });
        _this.viewBindable = {
            model: _this.view,
            type: _this.viewType
        };
        _this.filterString = new analytics_widgets_1.FilterStringOptions(_this._filterString, ko.pureComputed(function () { return _this['getPath'] && _this['getPath']('argumentDataMember') || ''; }));
        return _this;
    }
    SeriesTemplateViewModel.from = function (model, serializer) {
        return new SeriesTemplateViewModel(model || {}, serializer, _chart_1.seriesTemplateSerializationsInfo);
    };
    SeriesTemplateViewModel.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, _chart_1.seriesTemplateSerializationsInfo, refs);
    };
    SeriesTemplateViewModel.prototype.updateByView = function (view) {
        if (this.label && this.label.typeNameSerializable) {
            this.label.typeNameSerializable(_templateOptions_1.mapTypes[view.typeName]);
        }
        this.valueDataMembers.peek().dispose();
        this.valueDataMembers(new (_templateOptions_1.viewTypesDataMembers[view.typeName] || _commonValue_1.CommonValueDataMembers)(this.valueDataMembers.peek().toString(), this.valueScaleType));
    };
    SeriesTemplateViewModel.prototype.preInitProperties = function (model) {
        delete model.DataFilters;
    };
    SeriesTemplateViewModel.prototype._isOnlyNumericArgumentScaleTypeSupported = function () {
        return _templateOptions_1.onlyNumericArgumentSupportedSeriesViewTypes.indexOf(this.viewType()) > -1;
    };
    SeriesTemplateViewModel.prototype._getCurrentSeriesPointsSortingKeys = function (viewType) {
        if (_isBubble(viewType))
            return _chart_1.bubbleSeriesPointsSortingKeys;
        if (_isRange(viewType))
            return _chart_1.rangeSeriesPointsSortingKeys;
        if (_isStock(viewType))
            return _chart_1.stockSeriesPointsSortingKeys;
        return _chart_1.commonSeriesPointsSortingKeys;
    };
    SeriesTemplateViewModel.prototype._adjustArgumentScaleType = function () {
        if (this._isOnlyNumericArgumentScaleTypeSupported())
            this.argumentScaleType('Numerical');
    };
    SeriesTemplateViewModel.prototype._updateSeriesPointsSortingKey = function (seriesPointsSortingKeyMeta) {
        var value = this[seriesPointsSortingKeyMeta.propertyName];
        if (!!value() && !seriesPointsSortingKeyMeta.valuesArray.some(function (x) { return x.value === value(); })) {
            value(seriesPointsSortingKeyMeta.valuesArray[0].value);
        }
    };
    SeriesTemplateViewModel.prototype._isPropertyDisabled = function (name) {
        if (name === 'argumentScaleType') {
            return this._isOnlyNumericArgumentScaleTypeSupported();
        }
        return false;
    };
    SeriesTemplateViewModel.prototype.isPropertyVisible = function (propertyName) {
        switch (propertyName) {
            case 'qualitativeSummaryOptions':
                return this._actualArgumentScaleType() === ScaleType.Qualitative;
            case 'numericSummaryOptions':
                return this._actualArgumentScaleType() === ScaleType.Numerical;
            case 'dateTimeSummaryOptions':
                return this._actualArgumentScaleType() === ScaleType.DateTime;
            default:
                return true;
        }
    };
    return SeriesTemplateViewModel;
}(analytics_elements_1.SerializableModel));
exports.SeriesTemplateViewModel = SeriesTemplateViewModel;
var _view_1 = __webpack_require__(159);
var _chart_1 = __webpack_require__(19);
var _templateOptions_1 = __webpack_require__(258);
var _commonValue_1 = __webpack_require__(114);


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _elementCollection_1 = __webpack_require__(44);
var _utils_1 = __webpack_require__(62);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var TitleViewModel = (function (_super) {
    __extends(TitleViewModel, _super);
    function TitleViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, parent, serializer, _chart_1.titleSerializationsInfo) || this;
        _this.name = ko.pureComputed({
            read: function () { return _this['text'] ? _this['text']() : 'title'; },
            write: function (val) { _this['text'](val); }
        });
        return _this;
    }
    TitleViewModel.from = function (model, serializer) {
        return new TitleViewModel(model || {}, null, serializer);
    };
    TitleViewModel.prefix = 'Title';
    return TitleViewModel;
}(_elementCollection_1.ChartElementCollectionItemBase));
exports.TitleViewModel = TitleViewModel;
function assignTitleActions(titles) {
    var addTitle = function (model) {
        model['@Text'] = model['@Name'] = analytics_internal_1.getUniqueName(titles().map(function (x) { return x['name'](); }), TitleViewModel.prefix);
        titles()['innerActions'][0].closePopover();
        titles.push(new TitleViewModel(model, titles));
    };
    var actions = [
        {
            text: analytics_utils_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'),
            imageClassName: 'dxrd-image-chart-title-top_left',
            imageTemplateName: 'dxrd-svg-titles-top_left',
            disabled: ko.observable(false),
            visible: true,
            clickAction: function () { addTitle({ '@Alignment': 'Near' }); }
        }, {
            text: analytics_utils_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'),
            imageClassName: 'dxrd-image-chart-title-top_center',
            imageTemplateName: 'dxrd-svg-titles-top_center',
            disabled: ko.observable(false),
            visible: true,
            clickAction: function () { addTitle({ '@Alignment': 'Center' }); }
        }, {
            text: analytics_utils_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'),
            imageClassName: 'dxrd-image-chart-title-top_right',
            imageTemplateName: 'dxrd-svg-titles-top_right',
            disabled: ko.observable(false),
            visible: true,
            clickAction: function () { addTitle({ '@Alignment': 'Far' }); }
        }, {
            text: analytics_utils_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'),
            imageClassName: 'dxrd-image-chart-title-right_top_vertical',
            imageTemplateName: 'dxrd-svg-titles-right_top_vertical',
            disabled: ko.observable(false),
            visible: true,
            clickAction: function () { addTitle({ '@Dock': 'Right', '@Alignment': 'Near' }); }
        }, {
            text: analytics_utils_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'),
            imageClassName: 'dxrd-image-chart-title-right_center_vertical',
            imageTemplateName: 'dxrd-svg-titles-right_center_vertical',
            disabled: ko.observable(false),
            visible: true,
            clickAction: function () { addTitle({ '@Dock': 'Right', '@Alignment': 'Center' }); }
        }, {
            text: analytics_utils_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'),
            imageClassName: 'dxrd-image-chart-title-right_bottom_vertical',
            imageTemplateName: 'dxrd-svg-titles-right_bottom_vertical',
            disabled: ko.observable(false),
            visible: true,
            clickAction: function () { addTitle({ '@Dock': 'Right', '@Alignment': 'Far' }); }
        }, {
            text: analytics_utils_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'),
            imageClassName: 'dxrd-image-chart-title-bottom_left',
            imageTemplateName: 'dxrd-svg-titles-bottom_left',
            disabled: ko.observable(false),
            visible: true,
            clickAction: function () { addTitle({ '@Dock': 'Bottom', '@Alignment': 'Near' }); }
        }, {
            text: analytics_utils_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'),
            imageClassName: 'dxrd-image-chart-title-bottom_center',
            imageTemplateName: 'dxrd-svg-titles-bottom_center',
            disabled: ko.observable(false),
            visible: true,
            clickAction: function () { addTitle({ '@Dock': 'Bottom', '@Alignment': 'Center' }); }
        }, {
            text: analytics_utils_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'),
            imageClassName: 'dxrd-image-chart-title-bottom_right',
            imageTemplateName: 'dxrd-svg-titles-bottom_right',
            disabled: ko.observable(false),
            visible: true,
            clickAction: function () { addTitle({ '@Dock': 'Bottom', '@Alignment': 'Far' }); }
        }, {
            text: analytics_utils_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'),
            imageClassName: 'dxrd-image-chart-title-left_bottom_vertical',
            imageTemplateName: 'dxrd-svg-titles-left_bottom_vertical',
            disabled: ko.observable(false),
            visible: true,
            clickAction: function () { addTitle({ '@Dock': 'Left', '@Alignment': 'Near' }); }
        }, {
            text: analytics_utils_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'),
            imageClassName: 'dxrd-image-chart-title-left_center_vertical',
            imageTemplateName: 'dxrd-svg-titles-left_center_vertical',
            disabled: ko.observable(false),
            visible: true,
            clickAction: function () { addTitle({ '@Dock': 'Left', '@Alignment': 'Center' }); }
        }, {
            text: analytics_utils_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'),
            imageClassName: 'dxrd-image-chart-title-left_top_vertical',
            imageTemplateName: 'dxrd-svg-titles-left_top_vertical',
            disabled: ko.observable(false),
            visible: true,
            clickAction: function () { addTitle({ '@Dock': 'Left', '@Alignment': 'Far' }); }
        }
    ];
    titles()['innerActions'] = _utils_1.createInnerActionsWithPopover(analytics_utils_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'), 'addtitles-action_' + analytics_internal_1.guid(), actions);
}
exports.assignTitleActions = assignTitleActions;
var _chart_1 = __webpack_require__(19);


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
function initCollectionItem(item, parent) {
    return function () {
        item.parent = parent;
        item.innerActions = [
            {
                text: analytics_utils_1.getLocalization('Remove', 'ReportStringId.UD_Capt_SpacingRemove'),
                imageClassName: 'dxrd-image-recycle-bin',
                imageTemplateName: 'dxrd-svg-operations-recycle_bin',
                disabled: ko.observable(false),
                visible: true,
                clickAction: function () { parent.remove(item); },
            }
        ];
    };
}
exports.initCollectionItem = initCollectionItem;


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _dataMemberBase_1 = __webpack_require__(75);
var _value_1 = __webpack_require__(76);
var CommonValueDataMembers = (function (_super) {
    __extends(CommonValueDataMembers, _super);
    function CommonValueDataMembers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CommonValueDataMembers.from = function (value) {
        return new CommonValueDataMembers(value, null);
    };
    CommonValueDataMembers.toJson = function (value) {
        return value.toString() || {};
    };
    CommonValueDataMembers.prototype.getInfo = function () {
        return _value_1.commonValueSerializationsInfo;
    };
    Object.defineProperty(CommonValueDataMembers.prototype, "arrayValueDataMemberNames", {
        get: function () { return ['value']; },
        enumerable: true,
        configurable: true
    });
    return CommonValueDataMembers;
}(_dataMemberBase_1.DataMemberBase));
exports.CommonValueDataMembers = CommonValueDataMembers;


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_elements_1 = __webpack_require__(5);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var analytics_widgets_1 = __webpack_require__(4);
var $ = __webpack_require__(3);
var SeriesPointModel = (function (_super) {
    __extends(SeriesPointModel, _super);
    function SeriesPointModel(model, series, serializer) {
        var _this = _super.call(this, model, serializer, _chart_1.seriesPointSerializationsInfo) || this;
        _this.series = series;
        _this.arrayValueDataMemberNames = series.valueDataMembers().arrayValueDataMemberNames;
        _this._assignValueDataMembers(_this, _this.valuesSerializable(), null);
        _this._disposables.push(_this.series.valueDataMembers.subscribe(function (newValue) { _this.arrayValueDataMemberNames = newValue.arrayValueDataMemberNames; }));
        _this._disposables.push(_this.series.valueScaleType.subscribe(function (newValue) {
            _this._assignValueDataMembers(_this, null, null);
        }));
        _this.valuesSerializable = ko.computed(function () {
            return _this.arrayValueDataMemberNames.map(function (name) { return _this[name]; });
        });
        _this.argumentSerializableInfo = ko.computed(function () {
            var argumentScaleType = series.argumentScaleType();
            var editor = analytics_widgets_1.editorTemplates.getEditor('text');
            if (argumentScaleType === 'Numerical') {
                editor = analytics_widgets_1.editorTemplates.getEditor('numeric');
            }
            else if (argumentScaleType === 'DateTime') {
                editor = analytics_widgets_1.editorTemplates.getEditor('date');
            }
            return $.extend(true, {}, _chart_1.argumentSerializable, { editor: editor });
        });
        _this.getInfo = function () {
            var dataMember = _this.series && _this.series.valueDataMembers();
            if (!dataMember)
                return _chart_1.seriesPointSerializationsInfo;
            var valueDataMemberInfo = dataMember.getInfo().map(function (info) { return $.extend({}, info, { editor: _this.isDateType ? analytics_widgets_1.editorTemplates.getEditor('date') : analytics_widgets_1.editorTemplates.getEditor('numeric') }); });
            var info = $.extend(true, [], _chart_1.seriesPointSerializationsInfo);
            info.splice(info.indexOf(info.filter(function (prop) { return prop.propertyName === 'argumentSerializable'; })[0]), 1, _this.argumentSerializableInfo());
            return info.concat(valueDataMemberInfo);
        };
        return _this;
    }
    SeriesPointModel.getSerializationValue = function (array, dateConverter) {
        return array.map(function (item) {
            var value = ko.unwrap(item);
            return (value instanceof Date) ? dateConverter(value) : value;
        });
    };
    SeriesPointModel.createNew = function (series) {
        return new SeriesPointModel(SeriesPointModel.getPointModelBySeries(series), series, new analytics_utils_1.ModelSerializer());
    };
    SeriesPointModel.getPointModelBySeries = function (series) {
        var value = SeriesPointModel.getDefaultValueByScaleType(series.valueScaleType());
        value = (value instanceof Date) ? analytics_internal_1.formatDate(value) : value.toString();
        for (var ind = 1; ind < series.valueDataMembers().arrayValueDataMemberNames.length; ind++) {
            value += (SeriesPointModel.separator + value);
        }
        var newModel = {
            '@ValuesSerializable': value
        };
        var argument = SeriesPointModel.getDefaultValueByScaleType(series.argumentScaleType());
        if (argument !== null && argument !== void 0) {
            newModel['@ArgumentSerializable'] = argument;
        }
        return newModel;
    };
    SeriesPointModel.getDefaultValueByScaleType = function (scaleType) {
        if (scaleType === 'Numerical') {
            return 0;
        }
        else if (scaleType === 'DateTime') {
            return new Date(new Date().setHours(0, 0, 0, 0));
        }
        return null;
    };
    SeriesPointModel.valueToJsonObject = function (value) {
        var result = SeriesPointModel.getSerializationValue(value, _dateUtils_1.serializeDate);
        return (result instanceof Array) ? result.join(SeriesPointModel.separator) : result;
    };
    SeriesPointModel.prototype._valueDataMembersToString = function (valueDataMember, isDateType) {
        var result = [];
        valueDataMember.arrayValueDataMemberNames.forEach(function (name) {
            if (isDateType)
                result.push(_dateUtils_1.serializeDate(valueDataMember[name]() || ''));
            result.push(valueDataMember[name]() || '');
        });
        return result.join(SeriesPointModel.separator);
    };
    SeriesPointModel.prototype._assignValueDataMembers = function (valueDataMember, value, defaultValue) {
        var _this = this;
        var values = (value || '').split(SeriesPointModel.separator);
        valueDataMember.arrayValueDataMemberNames.forEach(function (name, index) {
            var newValue;
            if (_this.isDateType && values[index]) {
                newValue = analytics_internal_1.parseDate(values[index] || defaultValue, false, 'MM/dd/yyyy');
                if (!newValue)
                    newValue = _dateUtils_1.parseDate(values[index] || defaultValue);
            }
            else {
                newValue = (values[index] || defaultValue);
            }
            if (valueDataMember[name])
                valueDataMember[name](newValue);
            else
                valueDataMember[name] = ko.observable(newValue);
        });
    };
    Object.defineProperty(SeriesPointModel.prototype, "isDateType", {
        get: function () {
            return this.series.valueScaleType() === 'DateTime';
        },
        enumerable: true,
        configurable: true
    });
    SeriesPointModel.separator = ';';
    return SeriesPointModel;
}(analytics_elements_1.SerializableModel));
exports.SeriesPointModel = SeriesPointModel;
var _chart_1 = __webpack_require__(19);
var _dateUtils_1 = __webpack_require__(109);


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _common_1 = __webpack_require__(35);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var _editorTemplates_1 = __webpack_require__(22);
var _title_1 = __webpack_require__(112);
var _fillStyle_1 = __webpack_require__(162);
var _series_1 = __webpack_require__(77);
var _utils_1 = __webpack_require__(50);
var _indicator_1 = __webpack_require__(163);
exports.paneName = { propertyName: 'paneName', modelName: '@PaneName', displayName: 'Pane', localizationId: 'DevExpress.XtraCharts.XYDiagramPane', defaultVal: analytics_utils_1.getLocalization('Default Pane', 'ChartStringId.DefaultPaneName'), editor: _editorTemplates_1.editorTemplates.getEditor('panes') };
exports.axisXName = { propertyName: 'axisXName', modelName: '@AxisXName', displayName: 'AxisX', localizationId: 'DevExpress.XtraCharts.GanttAxisX', defaultVal: analytics_utils_1.getLocalization('Primary AxisX', 'ChartStringId.PrimaryAxisXName'), editor: _editorTemplates_1.editorTemplates.getEditor('axisX') };
exports.axisYName = { propertyName: 'axisYName', modelName: '@AxisYName', displayName: 'AxisY', localizationId: 'DevExpress.XtraCharts.SeparatePaneIndicator.AxisY', defaultVal: analytics_utils_1.getLocalization('Primary AxisY', 'ChartStringId.PrimaryAxisYName'), editor: _editorTemplates_1.editorTemplates.getEditor('axisY') };
var arrowWidthValidationRules = [{
        type: 'custom',
        validationCallback: function (options) {
            return options.value % 2 !== 0;
        },
        get message() {
            return analytics_utils_1.getLocalization('The arrow width should be always odd and greater than 0', 'ChartStringId.MsgIncorrectArrowWidth');
        }
    }];
var invertedStep = { propertyName: 'invertedStep', modelName: '@InvertedStep', displayName: 'Inverted Step', localizationId: 'DevExpress.XtraCharts.FullStackedStepAreaSeriesView.InvertedStep', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false };
var viewFillMode = {
    propertyName: 'fillMode', modelName: '@FillMode', displayName: 'Fill Mode', localizationId: 'DevExpress.XtraCharts.FillStyle2D.FillMode', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Empty', displayValue: 'Empty', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAppearances.Empty' }, { value: 'Solid', displayValue: 'Solid', localizationId: 'DevExpress.XtraCharts.FillMode3D.Solid' }, { value: 'Gradient', displayValue: 'Gradient', localizationId: 'DevExpress.XtraCharts.FillMode3D.Gradient' }, { value: 'Hatch', displayValue: 'Hatch', localizationId: 'DevExpress.XtraCharts.FillMode.Hatch' }], defaultVal: 'Empty'
};
exports.fillStyleInfo = [viewFillMode, _series_1.fillStyleOptionsSerialize, _common_1.tag];
var viewFillStyle = { propertyName: 'fillStyle', modelName: 'FillStyle', displayName: 'Fill Style', localizationId: 'DevExpress.XtraCharts.AreaSeriesViewBase.FillStyle', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), from: _fillStyle_1.FillStyle.from(exports.fillStyleInfo, 'PolygonGradientFillOptions'), toJsonObject: _fillStyle_1.FillStyle.toJson };
var transparency = { propertyName: 'transparency', modelName: '@Transparency', displayName: 'Transparency', localizationId: 'DevExpress.XtraCharts.AreaSeriesViewBase.Transparency', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0 };
var viewEnableAntialiasing = {
    propertyName: 'enableAntialiasing', modelName: '@EnableAntialiasing', displayName: 'Enable Antialiasing', localizationId: 'DevExpress.XtraCharts.LineSeriesView.EnableAntialiasing', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'True', displayValue: 'True', localizationId: 'StringId.DefaultBooleanTrue' }, { value: 'False', displayValue: 'False', localizationId: 'StringId.DefaultBooleanFalse' }, { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }], defaultVal: 'Default'
};
var size = { propertyName: 'size', modelName: '@Size', displayName: 'Size', localizationId: 'DevExpress.XtraCharts.Shadow.Size', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 2, editorOptions: { min: 1 } };
var viewColor = { propertyName: 'color', modelName: '@Color', displayName: 'Color', localizationId: 'DevExpress.XtraCharts.Shadow.Color', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), defaultVal: '79,0,0,0' };
var viewVisible = { propertyName: 'visible', modelName: '@Visible', displayName: 'Visible', localizationId: 'DevExpress.XtraCharts.Shadow.Visible', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false };
var shadowInfo = [size, viewColor, viewVisible, _common_1.tag];
var shadow = { propertyName: 'shadow', modelName: 'Shadow', displayName: 'Shadow', localizationId: 'DevExpress.XtraCharts.XYDiagramSeriesViewBase.Shadow', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: shadowInfo, };
var viewAggregateFunction = {
    propertyName: 'aggregateFunction', modelName: '@AggregateFunction', displayName: 'Aggregate Function', localizationId: 'DevExpress.XtraCharts.XYDiagram2DSeriesViewBase.AggregateFunction', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.MultiColumnMode.None' }, { value: 'Average', displayValue: 'Average', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Average' }, { value: 'Minimum', displayValue: 'Minimum', localizationId: 'DevExpress.XtraReports.UI.XRGauge.Minimum' }, { value: 'Maximum', displayValue: 'Maximum', localizationId: 'DevExpress.XtraReports.UI.XRGauge.Maximum' }, { value: 'Sum', displayValue: 'Sum', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Sum' }, { value: 'Count', displayValue: 'Count', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Count' }, { value: 'Financial', displayValue: 'Financial', localizationId: 'DevExpress.XtraCharts.SeriesAggregateFunction.Financial' }, { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }], defaultVal: 'Default'
};
var indicators = {
    propertyName: 'indicators',
    modelName: 'Indicators',
    displayName: 'Indicators',
    localizationId: 'DevExpress.XtraCharts.XYDiagram2DSeriesViewBase.Indicators',
    array: true,
    from: function (model, serializer) {
        return _utils_1.deserializeModelArray(model, function (indicator, parent) { return new _indicator_1.Indicator(indicator, parent, serializer); }, _indicator_1.Indicator.prefix);
    }
};
var color1 = { propertyName: 'color', modelName: '@Color', displayName: 'Color', localizationId: 'DevExpress.XtraCharts.SeriesViewBase.Color', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), defaultVal: 'transparent' };
var fullStackedStepAreaSeriesViewinfo = [invertedStep, viewFillStyle, transparency, viewEnableAntialiasing, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var viewColor2 = { propertyName: 'color', modelName: '@Color', displayName: 'Color', localizationId: 'DevExpress.XtraCharts.Marker.Color', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), defaultVal: 'transparent' };
var size1 = { propertyName: 'size', modelName: '@Size', displayName: 'Size', localizationId: 'DevExpress.XtraCharts.SimpleMarker.Size', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 10, editorOptions: { min: 1 } };
var kind = {
    propertyName: 'kind', modelName: '@Kind', displayName: 'Kind', localizationId: 'DevExpress.XtraCharts.MarkerBase.Kind', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Square', displayValue: 'Square', localizationId: 'DevExpress.XtraCharts.MarkerKind.Square' }, { value: 'Diamond', displayValue: 'Diamond', localizationId: 'DevExpress.XtraCharts.MarkerKind.Diamond' }, { value: 'Triangle', displayValue: 'Triangle', localizationId: 'DevExpress.XtraCharts.MarkerKind.Triangle' }, { value: 'InvertedTriangle', displayValue: 'InvertedTriangle' }, { value: 'Circle', displayValue: 'Circle', localizationId: 'DevExpress.XtraCharts.CircleEasingFunction' }, { value: 'Plus', displayValue: 'Plus', localizationId: 'DevExpress.XtraCharts.MarkerKind.Plus' }, { value: 'Cross', displayValue: 'Cross', localizationId: 'DevExpress.XtraCharts.MarkerKind.Cross' }, { value: 'Star', displayValue: 'Star', localizationId: 'DevExpress.XtraCharts.MarkerKind.Star' }, { value: 'Pentagon', displayValue: 'Pentagon', localizationId: 'DevExpress.XtraCharts.MarkerKind.Pentagon' }, { value: 'Hexagon', displayValue: 'Hexagon', localizationId: 'DevExpress.XtraCharts.MarkerKind.Hexagon' }], defaultVal: 'Circle'
};
var starPointCount = { propertyName: 'starPointCount', modelName: '@StarPointCount', displayName: 'Star Point Count', localizationId: 'DevExpress.XtraCharts.MarkerBase.StarPointCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 5, editorOptions: { min: 3, max: 100 } };
var fillStyle1 = { propertyName: 'fillStyle', modelName: 'FillStyle', displayName: 'Fill Style', localizationId: 'DevExpress.XtraCharts.MarkerBase.FillStyle', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), from: _fillStyle_1.FillStyle.from(exports.fillStyleInfo, 'PolygonGradientFillOptions'), toJsonObject: _fillStyle_1.FillStyle.toJson };
var viewBorderVisible = { propertyName: 'borderVisible', modelName: '@BorderVisible', displayName: 'Border Visible', localizationId: 'DevExpress.XtraCharts.MarkerBase.BorderVisible', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var viewBorderColor = { propertyName: 'borderColor', modelName: '@BorderColor', displayName: 'Border Color', localizationId: 'DevExpress.XtraCharts.MarkerBase.BorderColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), defaultVal: 'transparent' };
var marker1Info = [viewColor2, size1, kind, starPointCount, fillStyle1, viewBorderVisible, viewBorderColor, _common_1.tag];
var marker1 = { propertyName: 'marker1', modelName: 'Marker1', displayName: 'Marker 1', localizationId: 'DevExpress.XtraCharts.RadarRangeAreaSeriesView.Marker1', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: marker1Info, };
var marker2Info = [viewColor2, size1, kind, starPointCount, fillStyle1, viewBorderVisible, viewBorderColor, _common_1.tag];
var marker2 = { propertyName: 'marker2', modelName: 'Marker2', displayName: 'Marker 2', localizationId: 'DevExpress.XtraCharts.RadarRangeAreaSeriesView.Marker2', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: marker2Info, };
var color3 = { propertyName: 'color', modelName: '@Color', displayName: 'Color', localizationId: 'DevExpress.XtraCharts.BorderBase.Color', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), defaultVal: 'transparent' };
var viewThickness = { propertyName: 'thickness', modelName: '@Thickness', displayName: 'Thickness', localizationId: 'DevExpress.XtraCharts.BorderBase.Thickness', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1, editorOptions: { min: 1 } };
var viewVisibility = {
    propertyName: 'visibility', modelName: '@Visibility', displayName: 'Visibility', localizationId: 'DevExpress.XtraCharts.BorderBase.Visibility', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'True', displayValue: 'True', localizationId: 'StringId.DefaultBooleanTrue' }, { value: 'False', displayValue: 'False', localizationId: 'StringId.DefaultBooleanFalse' }, { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }], defaultVal: 'Default'
};
var border1Info = [color3, viewThickness, viewVisibility, _common_1.tag];
var border1 = { propertyName: 'border1', modelName: 'Border1', displayName: 'Border 1', localizationId: 'DevExpress.XtraCharts.RadarRangeAreaSeriesView.Border1', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: border1Info, };
var border2Info = [color3, viewThickness, viewVisibility, _common_1.tag];
var border2 = { propertyName: 'border2', modelName: 'Border2', displayName: 'Border 2', localizationId: 'DevExpress.XtraCharts.RadarRangeAreaSeriesView.Border2', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: border2Info, };
var marker1Visibility = {
    propertyName: 'marker1Visibility', modelName: '@Marker1Visibility', displayName: 'Marker 1 Visibility', localizationId: 'DevExpress.XtraCharts.RadarRangeAreaSeriesView.Marker1Visibility', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'True', displayValue: 'True', localizationId: 'StringId.DefaultBooleanTrue' }, { value: 'False', displayValue: 'False', localizationId: 'StringId.DefaultBooleanFalse' }, { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }], defaultVal: 'Default'
};
var marker2Visibility = {
    propertyName: 'marker2Visibility', modelName: '@Marker2Visibility', displayName: 'Marker 2 Visibility', localizationId: 'DevExpress.XtraCharts.RadarRangeAreaSeriesView.Marker2Visibility', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'True', displayValue: 'True', localizationId: 'StringId.DefaultBooleanTrue' }, { value: 'False', displayValue: 'False', localizationId: 'StringId.DefaultBooleanFalse' }, { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }], defaultVal: 'Default'
};
var fillStyle2 = { propertyName: 'fillStyle', modelName: 'FillStyle', displayName: 'Fill Style', localizationId: 'DevExpress.XtraCharts.RadarAreaSeriesView.FillStyle', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), from: _fillStyle_1.FillStyle.from(exports.fillStyleInfo, 'PolygonGradientFillOptions'), toJsonObject: _fillStyle_1.FillStyle.toJson };
var transparency1 = { propertyName: 'transparency', modelName: '@Transparency', displayName: 'Transparency', localizationId: 'DevExpress.XtraCharts.RadarAreaSeriesView.Transparency', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 135 };
var aggregateFunction1 = {
    propertyName: 'aggregateFunction', modelName: '@AggregateFunction', displayName: 'Aggregate Function', localizationId: 'DevExpress.XtraCharts.RadarSeriesViewBase.AggregateFunction', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.MultiColumnMode.None' }, { value: 'Average', displayValue: 'Average', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Average' }, { value: 'Minimum', displayValue: 'Minimum', localizationId: 'DevExpress.XtraReports.UI.XRGauge.Minimum' }, { value: 'Maximum', displayValue: 'Maximum', localizationId: 'DevExpress.XtraReports.UI.XRGauge.Maximum' }, { value: 'Sum', displayValue: 'Sum', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Sum' }, { value: 'Count', displayValue: 'Count', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Count' }, { value: 'Financial', displayValue: 'Financial', localizationId: 'DevExpress.XtraCharts.SeriesAggregateFunction.Financial' }, { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }], defaultVal: 'Default'
};
var shadow1 = { propertyName: 'shadow', modelName: 'Shadow', displayName: 'Shadow', localizationId: 'DevExpress.XtraCharts.RadarSeriesViewBase.Shadow', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: shadowInfo, };
var viewColorEach = { propertyName: 'colorEach', modelName: '@ColorEach', displayName: 'Color Each', localizationId: 'DevExpress.XtraCharts.RadarSeriesViewBase.ColorEach', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false };
var polarRangeAreaSeriesViewinfo = [marker1, marker2, border1, border2, marker1Visibility, marker2Visibility, fillStyle2, transparency1, aggregateFunction1, shadow1, viewColorEach, color1, _common_1.tag];
var radarRangeAreaSeriesViewinfo = [marker1, marker2, border1, border2, marker1Visibility, marker2Visibility, fillStyle2, transparency1, aggregateFunction1, shadow1, viewColorEach, color1, _common_1.tag];
var areaWidth = { propertyName: 'areaWidth', modelName: '@AreaWidth', displayName: 'Area Width', localizationId: 'DevExpress.XtraCharts.Area3DSeriesView.AreaWidth', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0.6, editorOptions: { min: 1 } };
var aggregateFunction2 = {
    propertyName: 'aggregateFunction', modelName: '@AggregateFunction', displayName: 'Aggregate Function', localizationId: 'DevExpress.XtraCharts.XYDiagram3DSeriesViewBase.AggregateFunction', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.MultiColumnMode.None' }, { value: 'Average', displayValue: 'Average', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Average' }, { value: 'Minimum', displayValue: 'Minimum', localizationId: 'DevExpress.XtraReports.UI.XRGauge.Minimum' }, { value: 'Maximum', displayValue: 'Maximum', localizationId: 'DevExpress.XtraReports.UI.XRGauge.Maximum' }, { value: 'Sum', displayValue: 'Sum', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Sum' }, { value: 'Count', displayValue: 'Count', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Count' }, { value: 'Financial', displayValue: 'Financial', localizationId: 'DevExpress.XtraCharts.SeriesAggregateFunction.Financial' }, { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }], defaultVal: 'Default'
};
var transparency2 = { propertyName: 'transparency', modelName: '@Transparency', displayName: 'Transparency', localizationId: 'DevExpress.XtraCharts.XYDiagram3DSeriesViewBase.Transparency', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0 };
var rangeArea3DSeriesViewinfo = [areaWidth, aggregateFunction2, transparency2, color1, _common_1.tag];
var marker11 = { propertyName: 'marker1', modelName: 'Marker1', displayName: 'Marker 1', localizationId: 'DevExpress.XtraCharts.RangeAreaSeriesView.Marker1', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: marker1Info, };
var marker21 = { propertyName: 'marker2', modelName: 'Marker2', displayName: 'Marker 2', localizationId: 'DevExpress.XtraCharts.RangeAreaSeriesView.Marker2', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: marker2Info, };
var border11 = { propertyName: 'border1', modelName: 'Border1', displayName: 'Border 1', localizationId: 'DevExpress.XtraCharts.RangeAreaSeriesView.Border1', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: border1Info, };
var border21 = { propertyName: 'border2', modelName: 'Border2', displayName: 'Border 2', localizationId: 'DevExpress.XtraCharts.RangeAreaSeriesView.Border2', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: border2Info, };
var marker1Visibility1 = {
    propertyName: 'marker1Visibility', modelName: '@Marker1Visibility', displayName: 'Marker 1 Visibility', localizationId: 'DevExpress.XtraCharts.RangeAreaSeriesView.Marker1Visibility', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'True', displayValue: 'True', localizationId: 'StringId.DefaultBooleanTrue' }, { value: 'False', displayValue: 'False', localizationId: 'StringId.DefaultBooleanFalse' }, { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }], defaultVal: 'Default'
};
var marker2Visibility1 = {
    propertyName: 'marker2Visibility', modelName: '@Marker2Visibility', displayName: 'Marker 2 Visibility', localizationId: 'DevExpress.XtraCharts.RangeAreaSeriesView.Marker2Visibility', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'True', displayValue: 'True', localizationId: 'StringId.DefaultBooleanTrue' }, { value: 'False', displayValue: 'False', localizationId: 'StringId.DefaultBooleanFalse' }, { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }], defaultVal: 'Default'
};
var transparency3 = { propertyName: 'transparency', modelName: '@Transparency', displayName: 'Transparency', localizationId: 'DevExpress.XtraCharts.AreaSeriesViewBase.Transparency', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 135 };
var colorEach1 = { propertyName: 'colorEach', modelName: '@ColorEach', displayName: 'Color Each', localizationId: 'DevExpress.XtraCharts.SeriesViewColorEachSupportBase.ColorEach', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false };
var rangeAreaSeriesViewinfo = [marker11, marker21, border11, border21, marker1Visibility1, marker2Visibility1, viewFillStyle, transparency3, viewEnableAntialiasing, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var invertedStep1 = { propertyName: 'invertedStep', modelName: '@InvertedStep', displayName: 'Inverted Step', localizationId: 'DevExpress.XtraCharts.StackedStepAreaSeriesView.InvertedStep', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false };
var borderInfo = [color3, viewThickness, viewVisibility, _common_1.tag];
var viewBorder1 = { propertyName: 'border', modelName: 'Border', displayName: 'Border', localizationId: 'DevExpress.XtraCharts.AreaSeriesViewBase.Border', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: borderInfo, };
var stackedStepAreaSeriesViewinfo = [invertedStep1, viewBorder1, viewFillStyle, transparency, viewEnableAntialiasing, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var invertedStep2 = { propertyName: 'invertedStep', modelName: '@InvertedStep', displayName: 'Inverted Step', localizationId: 'DevExpress.XtraCharts.StepArea3DSeriesView.InvertedStep', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false };
var transparency4 = { propertyName: 'transparency', modelName: '@Transparency', displayName: 'Transparency', localizationId: 'DevExpress.XtraCharts.XYDiagram3DSeriesViewBase.Transparency', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 135 };
var stepArea3DSeriesViewinfo = [invertedStep2, areaWidth, aggregateFunction2, transparency4, color1, _common_1.tag];
var invertedStep3 = { propertyName: 'invertedStep', modelName: '@InvertedStep', displayName: 'Inverted Step', localizationId: 'DevExpress.XtraCharts.StepAreaSeriesView.InvertedStep', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false };
var markerOptionsInfo = [viewColor2, size1, kind, starPointCount, fillStyle1, viewBorderVisible, viewBorderColor, _common_1.tag];
var markerOptions = { propertyName: 'markerOptions', modelName: 'MarkerOptions', displayName: 'Marker Options', localizationId: 'DevExpress.XtraCharts.AreaSeriesViewBase.MarkerOptions', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: markerOptionsInfo, };
var viewMarkerVisibility = {
    propertyName: 'markerVisibility', modelName: '@MarkerVisibility', displayName: 'Marker Visibility', localizationId: 'DevExpress.XtraCharts.LineSeriesView.MarkerVisibility', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'True', displayValue: 'True', localizationId: 'StringId.DefaultBooleanTrue' }, { value: 'False', displayValue: 'False', localizationId: 'StringId.DefaultBooleanFalse' }, { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }], defaultVal: 'Default'
};
var stepAreaSeriesViewinfo = [invertedStep3, viewBorder1, viewFillStyle, markerOptions, transparency3, viewMarkerVisibility, viewEnableAntialiasing, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var stackedGroup = { propertyName: 'stackedGroup', modelName: '@StackedGroupSerializable', displayName: 'Stacked Group', localizationId: 'DevExpress.XtraCharts.SideBySideFullStackedBar3DSeriesView.StackedGroup', editor: _editorTemplates_1.editorTemplates.getEditor('group'), defaultVal: null };
var barDistance = { propertyName: 'barDistance', displayName: 'Bar Distance', localizationId: 'DevExpress.XtraCharts.SideBySideFullStackedBar3DSeriesView.BarDistance', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0 };
var barDistanceFixed = { propertyName: 'barDistanceFixed', displayName: 'Bar Distance Fixed', localizationId: 'DevExpress.XtraCharts.SideBySideFullStackedBar3DSeriesView.BarDistanceFixed', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1, editorOptions: { format: '#0' } };
var equalBarWidth = { propertyName: 'equalBarWidth', modelName: '@EqualBarWidth', displayName: 'Equal Bar Width', localizationId: 'DevExpress.XtraCharts.SideBySideFullStackedBar3DSeriesView.EqualBarWidth', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var viewBarWidth = { propertyName: 'barWidth', modelName: '@BarWidth', displayName: 'Bar Width', localizationId: 'DevExpress.XtraCharts.Bar3DSeriesView.BarWidth', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0.6, editorOptions: { min: 0, step: 0.1 } };
var barDepth = { propertyName: 'barDepth', modelName: '@BarDepth', displayName: 'Bar Depth', localizationId: 'DevExpress.XtraCharts.Bar3DSeriesView.BarDepth', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0.6, editorOptions: { min: 0, step: 0.1 } };
var barDepthAuto = { propertyName: 'barDepthAuto', modelName: '@BarDepthAuto', displayName: 'Bar Depth Auto', localizationId: 'DevExpress.XtraCharts.Bar3DSeriesView.BarDepthAuto', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var fillMode1 = {
    propertyName: 'fillMode', modelName: '@FillMode', displayName: 'Fill Mode', localizationId: 'DevExpress.XtraCharts.FillStyle3D.FillMode', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Empty', displayValue: 'Empty', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAppearances.Empty' }, { value: 'Solid', displayValue: 'Solid', localizationId: 'DevExpress.XtraCharts.FillMode3D.Solid' }, { value: 'Gradient', displayValue: 'Gradient', localizationId: 'DevExpress.XtraCharts.FillMode3D.Gradient' }], defaultVal: 'Empty'
};
var fillStyleInfo1 = [fillMode1, _series_1.fillStyleOptionsSerialize, _common_1.tag];
var fillStyle3 = { propertyName: 'fillStyle', modelName: 'FillStyle', displayName: 'Fill Style', localizationId: 'DevExpress.XtraCharts.Bar3DSeriesView.FillStyle', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), from: _fillStyle_1.FillStyle.from(fillStyleInfo1, 'RectangleGradientFillOptions'), toJsonObject: _fillStyle_1.FillStyle.toJson };
var model = {
    propertyName: 'model', modelName: '@Model', displayName: 'Model', localizationId: 'DevExpress.XtraCharts.Bar3DSeriesView.Model', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Box', displayValue: 'Box', localizationId: 'DevExpress.XtraCharts.Bar3DModel.Box' }, { value: 'Cylinder', displayValue: 'Cylinder', localizationId: 'DevExpress.XtraPivotGrid.PivotKPIGraphic.Cylinder' }, { value: 'Cone', displayValue: 'Cone', localizationId: 'DevExpress.XtraCharts.Bar3DModel.Cone' }, { value: 'Pyramid', displayValue: 'Pyramid', localizationId: 'DevExpress.XtraCharts.Bar3DModel.Pyramid' }], defaultVal: 'Box'
};
var showFacet = { propertyName: 'showFacet', modelName: '@ShowFacet', displayName: 'Show Facet', localizationId: 'DevExpress.XtraCharts.Bar3DSeriesView.ShowFacet', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var colorEach2 = { propertyName: 'colorEach', modelName: '@ColorEach', displayName: 'Color Each', localizationId: 'DevExpress.XtraCharts.SeriesView3DColorEachSupportBase.ColorEach', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false };
var sideBySideFullStackedBar3DSeriesViewinfo = [stackedGroup, barDistance, barDistanceFixed, equalBarWidth, viewBarWidth, barDepth, barDepthAuto, fillStyle3, model, showFacet, colorEach2, aggregateFunction2, transparency2, color1, _common_1.tag];
var stackedGroup1 = { propertyName: 'stackedGroup', modelName: '@StackedGroupSerializable', displayName: 'Stacked Group', localizationId: 'DevExpress.XtraCharts.SideBySideFullStackedBarSeriesView.StackedGroup', editor: _editorTemplates_1.editorTemplates.getEditor('group'), defaultVal: null };
var barDistance1 = { propertyName: 'barDistance', displayName: 'Bar Distance', localizationId: 'DevExpress.XtraCharts.SideBySideFullStackedBarSeriesView.BarDistance', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0 };
var barDistanceFixed1 = { propertyName: 'barDistanceFixed', displayName: 'Bar Distance Fixed', localizationId: 'DevExpress.XtraCharts.SideBySideFullStackedBarSeriesView.BarDistanceFixed', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1, editorOptions: { format: '#0' } };
var equalBarWidth1 = { propertyName: 'equalBarWidth', modelName: '@EqualBarWidth', displayName: 'Equal Bar Width', localizationId: 'DevExpress.XtraCharts.SideBySideFullStackedBarSeriesView.EqualBarWidth', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var barWidth1 = { propertyName: 'barWidth', modelName: '@BarWidth', displayName: 'Bar Width', localizationId: 'DevExpress.XtraCharts.BarSeriesView.BarWidth', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0.6, editorOptions: { min: 0, step: 0.1 } };
var border3 = { propertyName: 'border', modelName: 'Border', displayName: 'Border', localizationId: 'DevExpress.XtraCharts.BarSeriesView.Border', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: borderInfo };
var fillStyle4 = { propertyName: 'fillStyle', modelName: 'FillStyle', displayName: 'Fill Style', localizationId: 'DevExpress.XtraCharts.BarSeriesView.FillStyle', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), from: _fillStyle_1.FillStyle.from(exports.fillStyleInfo, 'RectangleGradientFillOptions'), toJsonObject: _fillStyle_1.FillStyle.toJson };
var transparency5 = { propertyName: 'transparency', modelName: '@Transparency', displayName: 'Transparency', localizationId: 'DevExpress.XtraCharts.BarSeriesView.Transparency', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0 };
var sideBySideFullStackedBarSeriesViewinfo = [stackedGroup1, barDistance1, barDistanceFixed1, equalBarWidth1, barWidth1, border3, fillStyle4, transparency5, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var stackedGroup2 = { propertyName: 'stackedGroup', modelName: '@StackedGroupSerializable', displayName: 'Stacked Group', localizationId: 'DevExpress.XtraCharts.SideBySideStackedBar3DSeriesView.StackedGroup', editor: _editorTemplates_1.editorTemplates.getEditor('group'), defaultVal: null };
var barDistance2 = { propertyName: 'barDistance', displayName: 'Bar Distance', localizationId: 'DevExpress.XtraCharts.SideBySideStackedBar3DSeriesView.BarDistance', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0 };
var barDistanceFixed2 = { propertyName: 'barDistanceFixed', displayName: 'Bar Distance Fixed', localizationId: 'DevExpress.XtraCharts.SideBySideStackedBar3DSeriesView.BarDistanceFixed', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1, editorOptions: { format: '#0' } };
var equalBarWidth2 = { propertyName: 'equalBarWidth', modelName: '@EqualBarWidth', displayName: 'Equal Bar Width', localizationId: 'DevExpress.XtraCharts.SideBySideStackedBar3DSeriesView.EqualBarWidth', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var sideBySideStackedBar3DSeriesViewinfo = [stackedGroup2, barDistance2, barDistanceFixed2, equalBarWidth2, viewBarWidth, barDepth, barDepthAuto, fillStyle3, model, showFacet, colorEach2, aggregateFunction2, transparency2, color1, _common_1.tag];
var stackedGroup3 = { propertyName: 'stackedGroup', modelName: '@StackedGroupSerializable', displayName: 'Stacked Group', localizationId: 'DevExpress.XtraCharts.SideBySideStackedBarSeriesView.StackedGroup', editor: _editorTemplates_1.editorTemplates.getEditor('group'), defaultVal: null };
var barDistance3 = { propertyName: 'barDistance', displayName: 'Bar Distance', localizationId: 'DevExpress.XtraCharts.SideBySideStackedBarSeriesView.BarDistance', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0 };
var barDistanceFixed3 = { propertyName: 'barDistanceFixed', displayName: 'Bar Distance Fixed', localizationId: 'DevExpress.XtraCharts.SideBySideStackedBarSeriesView.BarDistanceFixed', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1, editorOptions: { format: '#0' } };
var equalBarWidth3 = { propertyName: 'equalBarWidth', modelName: '@EqualBarWidth', displayName: 'Equal Bar Width', localizationId: 'DevExpress.XtraCharts.SideBySideStackedBarSeriesView.EqualBarWidth', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var sideBySideStackedBarSeriesViewinfo = [stackedGroup3, barDistance3, barDistanceFixed3, equalBarWidth3, barWidth1, border3, fillStyle4, transparency5, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var lineThickness = { propertyName: 'lineThickness', modelName: '@LineThickness', displayName: 'Line Thickness', localizationId: 'DevExpress.XtraCharts.Line3DSeriesView.LineThickness', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 5, editorOptions: { min: 1 } };
var lineWidth = { propertyName: 'lineWidth', modelName: '@LineWidth', displayName: 'Line Width', localizationId: 'DevExpress.XtraCharts.Line3DSeriesView.LineWidth', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0.6, editorOptions: { min: 1 } };
var fullStackedLine3DSeriesViewinfo = [lineThickness, lineWidth, aggregateFunction2, transparency2, color1, _common_1.tag];
var thickness1 = { propertyName: 'thickness', modelName: '@Thickness', displayName: 'Thickness', localizationId: 'DevExpress.XtraCharts.LineStyle.Thickness', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 2, editorOptions: { min: 1 } };
var viewDashStyle = {
    propertyName: 'dashStyle', modelName: '@DashStyle', displayName: 'Dash Style', localizationId: 'DevExpress.XtraCharts.LineStyle.DashStyle', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Solid', displayValue: 'Solid', localizationId: 'DevExpress.XtraCharts.FillMode3D.Solid' }, { value: 'Dash', displayValue: 'Dash', localizationId: 'DevExpress.XtraCharts.DashStyle.Dash' }, { value: 'Dot', displayValue: 'Dot', localizationId: 'DevExpress.XtraCharts.DashStyle.Dot' }, { value: 'DashDot', displayValue: 'DashDot' }, { value: 'DashDotDot', displayValue: 'DashDotDot' }], defaultVal: 'Solid'
};
var lineJoin = {
    propertyName: 'lineJoin', modelName: '@LineJoin', displayName: 'Line Join', localizationId: 'DevExpress.XtraCharts.LineStyle.LineJoin', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Miter', displayValue: 'Miter', localizationId: 'System.Drawing.Drawing2D.LineJoin.Miter' }, { value: 'Bevel', displayValue: 'Bevel', localizationId: 'System.Drawing.Drawing2D.LineJoin.Bevel' }, { value: 'Round', displayValue: 'Round', localizationId: 'System.Drawing.Drawing2D.LineJoin.Round' }, { value: 'MiterClipped', displayValue: 'MiterClipped', localizationId: 'System.Drawing.Drawing2D.LineJoin.MiterClipped' }], defaultVal: 'Miter'
};
var lineStyleInfo = [thickness1, viewDashStyle, lineJoin, _common_1.tag];
var viewLineStyle = { propertyName: 'lineStyle', modelName: 'LineStyle', displayName: 'Line Style', localizationId: 'DevExpress.XtraCharts.LineSeriesView.LineStyle', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: lineStyleInfo, };
var lineMarkerOptionsInfo = [viewColor2, size1, kind, starPointCount, fillStyle1, viewBorderVisible, viewBorderColor, _common_1.tag];
var lineMarkerOptions = { propertyName: 'lineMarkerOptions', modelName: 'LineMarkerOptions', displayName: 'Line Marker Options', localizationId: 'DevExpress.XtraCharts.LineSeriesView.LineMarkerOptions', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: lineMarkerOptionsInfo, };
var fullStackedLineSeriesViewinfo = [viewLineStyle, lineMarkerOptions, viewMarkerVisibility, viewEnableAntialiasing, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var lineStyle1 = { propertyName: 'lineStyle', modelName: 'LineStyle', displayName: 'Line Style', localizationId: 'DevExpress.XtraCharts.RadarLineSeriesView.LineStyle', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: lineStyleInfo, };
var closed = { propertyName: 'closed', modelName: '@Closed', displayName: 'Closed', localizationId: 'DevExpress.XtraCharts.RadarLineSeriesView.Closed', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var lineMarkerOptions1 = { propertyName: 'lineMarkerOptions', modelName: 'LineMarkerOptions', displayName: 'Line Marker Options', localizationId: 'DevExpress.XtraCharts.RadarLineSeriesView.LineMarkerOptions', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: lineMarkerOptionsInfo, };
var markerVisibility1 = {
    propertyName: 'markerVisibility', modelName: '@MarkerVisibility', displayName: 'Marker Visibility', localizationId: 'DevExpress.XtraCharts.RadarLineSeriesView.MarkerVisibility', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'True', displayValue: 'True', localizationId: 'StringId.DefaultBooleanTrue' }, { value: 'False', displayValue: 'False', localizationId: 'StringId.DefaultBooleanFalse' }, { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }], defaultVal: 'Default'
};
var scatterPolarLineSeriesViewinfo = [lineStyle1, closed, lineMarkerOptions1, markerVisibility1, aggregateFunction1, shadow1, viewColorEach, color1, _common_1.tag];
var scatterRadarLineSeriesViewinfo = [lineStyle1, closed, lineMarkerOptions1, markerVisibility1, aggregateFunction1, shadow1, viewColorEach, color1, _common_1.tag];
var stackedLine3DSeriesViewinfo = [lineThickness, lineWidth, aggregateFunction2, transparency2, color1, _common_1.tag];
var stackedLineSeriesViewinfo = [viewLineStyle, lineMarkerOptions, viewMarkerVisibility, viewEnableAntialiasing, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var weight = { propertyName: 'weight', modelName: '@Weight', displayName: 'Weight', localizationId: 'DevExpress.XtraCharts.NestedDoughnutSeriesView.Weight', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1, editorOptions: { min: 1 } };
var innerIndent = { propertyName: 'innerIndent', modelName: '@InnerIndent', displayName: 'Inner Indent', localizationId: 'DevExpress.XtraCharts.NestedDoughnutSeriesView.InnerIndent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 5, editorOptions: { min: 0 } };
var group = { propertyName: 'group', modelName: '@GroupSerializable', displayName: 'Group', localizationId: 'DevExpress.XtraCharts.NestedDoughnutSeriesView.Group', editor: _editorTemplates_1.editorTemplates.getEditor('group'), defaultVal: null };
var holeRadiusPercent = { propertyName: 'holeRadiusPercent', modelName: '@HoleRadiusPercent', displayName: 'Hole Radius Percent', localizationId: 'DevExpress.XtraCharts.DoughnutSeriesView.HoleRadiusPercent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 40, editorOptions: { min: 0, max: 100 } };
var minAllowedSizePercentage = { propertyName: 'minAllowedSizePercentage', modelName: '@MinAllowedSizePercentage', displayName: 'Min Allowed Size Percentage', localizationId: 'DevExpress.XtraCharts.PieSeriesView.MinAllowedSizePercentage', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 50, editorOptions: { min: 0, max: 100 } };
var rotation = { propertyName: 'rotation', modelName: '@Rotation', displayName: 'Rotation', localizationId: 'DevExpress.XtraCharts.PieSeriesView.Rotation', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0 };
var heightToWidthRatio = { propertyName: 'heightToWidthRatio', modelName: '@HeightToWidthRatio', displayName: 'Height to Width Ratio', localizationId: 'DevExpress.XtraCharts.PieSeriesView.HeightToWidthRatio', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1, editorOptions: { min: 0 } };
var border4 = { propertyName: 'border', modelName: 'Border', displayName: 'Border', localizationId: 'DevExpress.XtraCharts.PieSeriesView.Border', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: borderInfo, };
var fillStyle5 = { propertyName: 'fillStyle', modelName: 'FillStyle', displayName: 'Fill Style', localizationId: 'DevExpress.XtraCharts.PieSeriesView.FillStyle', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), from: _fillStyle_1.FillStyle.from(exports.fillStyleInfo, 'PolygonGradientFillOptions'), toJsonObject: _fillStyle_1.FillStyle.toJson };
var runtimeExploding = { propertyName: 'runtimeExploding', modelName: '@RuntimeExploding', displayName: 'Runtime Exploding', localizationId: 'DevExpress.XtraCharts.PieSeriesView.RuntimeExploding', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false };
var explodedDistancePercentage = { propertyName: 'explodedDistancePercentage', modelName: '@ExplodedDistancePercentage', displayName: 'Exploded Distance Percentage', localizationId: 'DevExpress.XtraCharts.PieSeriesViewBase.ExplodedDistancePercentage', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 10, editorOptions: { min: 1 } };
var explodeMode = {
    propertyName: 'explodeMode', modelName: '@ExplodeMode', displayName: 'Explode Mode', localizationId: 'DevExpress.XtraCharts.PieSeriesViewBase.ExplodeMode', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.MultiColumnMode.None' }, { value: 'All', displayValue: 'All', localizationId: 'DevExpress.XtraCharts.PieExplodeMode.All' }, { value: 'MinValue', displayValue: 'MinValue' }, { value: 'MaxValue', displayValue: 'MaxValue' }, { value: 'UsePoints', displayValue: 'UsePoints' }, { value: 'UseFilters', displayValue: 'UseFilters' }, { value: 'Others', displayValue: 'Others', localizationId: 'DevExpress.XtraCharts.PieExplodeMode.Others' }], defaultVal: 'None'
};
var sweepDirection = {
    propertyName: 'sweepDirection', modelName: '@SweepDirection', displayName: 'Sweep Direction', localizationId: 'DevExpress.XtraCharts.PieSeriesViewBase.SweepDirection', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Counterclockwise', displayValue: 'Counterclockwise', localizationId: 'DevExpress.XtraCharts.PieSweepDirection.Counterclockwise' }, { value: 'Clockwise', displayValue: 'Clockwise', localizationId: 'DevExpress.XtraCharts.PieSweepDirection.Clockwise' }], defaultVal: 'Counterclockwise'
};
var totalLabelInfo = [_common_1.textColor, _common_1.backColor, viewEnableAntialiasing, _common_1.maxWidth, _common_1.maxLineCount, _common_1.textAlignment, _common_1.textPattern, viewVisible, _common_1.tag, _common_1.font12, viewBorder1, viewFillStyle, shadow];
var totalLabel = { propertyName: 'totalLabel', modelName: 'TotalLabel', displayName: 'Total Label', localizationId: 'DevExpress.XtraCharts.PieSeriesView.TotalLabel', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: totalLabelInfo, };
var viewTitles = {
    propertyName: 'titles',
    modelName: 'Titles',
    array: true,
    from: function (model, serializer) {
        return _utils_1.deserializeModelArray(model, function (title, parent) { return new _title_1.TitleViewModel(title, parent, serializer); }, _title_1.TitleViewModel.prefix);
    },
    displayName: 'Titles',
    localizationId: 'DevExpress.XtraCharts.SimpleDiagramSeriesViewBase.Titles'
};
var nestedDoughnutSeriesViewinfo = [weight, innerIndent, group, holeRadiusPercent, minAllowedSizePercentage, rotation, heightToWidthRatio, border4, fillStyle5, runtimeExploding, explodedDistancePercentage, explodeMode, sweepDirection, viewTitles, _common_1.tag, totalLabel];
var thickness2 = { propertyName: 'thickness', modelName: '@Thickness', displayName: 'Thickness', localizationId: 'DevExpress.XtraCharts.LineStyle.Thickness', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1, editorOptions: { min: 1 } };
var lineStyleInfo1 = [thickness2, viewDashStyle, lineJoin, _common_1.tag];
var lineStyle2 = { propertyName: 'lineStyle', modelName: 'LineStyle', displayName: 'Line Style', localizationId: 'DevExpress.XtraCharts.SwiftPlotSeriesView.LineStyle', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: lineStyleInfo1, };
var viewAntialiasing = { propertyName: 'antialiasing', modelName: '@Antialiasing', displayName: 'Antialiasing', localizationId: 'DevExpress.XtraCharts.SwiftPlotSeriesView.Antialiasing', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false };
var swiftPlotSeriesViewinfo = [lineStyle2, viewAntialiasing, exports.axisXName, exports.axisYName, exports.paneName, viewAggregateFunction, indicators, color1, _common_1.tag];
var holeRadiusPercent1 = { propertyName: 'holeRadiusPercent', modelName: '@HoleRadiusPercent', displayName: 'Hole Radius Percent', localizationId: 'DevExpress.XtraCharts.Funnel3DSeriesView.HoleRadiusPercent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 90, editorOptions: { min: 0, max: 100 } };
var heightToWidthRatio1 = { propertyName: 'heightToWidthRatio', modelName: '@HeightToWidthRatio', displayName: 'Height to Width Ratio', localizationId: 'DevExpress.XtraCharts.FunnelSeriesViewBase.HeightToWidthRatio', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1 };
var pointDistance = { propertyName: 'pointDistance', modelName: '@PointDistance', displayName: 'Point Distance', localizationId: 'DevExpress.XtraCharts.FunnelSeriesViewBase.PointDistance', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0, editorOptions: { min: 0 } };
var funnel3DSeriesViewinfo = [holeRadiusPercent1, heightToWidthRatio1, pointDistance, viewTitles, _common_1.tag];
var border5 = { propertyName: 'border', modelName: 'Border', displayName: 'Border', localizationId: 'DevExpress.XtraCharts.FunnelSeriesView.Border', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: borderInfo, };
var fillStyle6 = { propertyName: 'fillStyle', modelName: 'FillStyle', displayName: 'Fill Style', localizationId: 'DevExpress.XtraCharts.FunnelSeriesView.FillStyle', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), from: _fillStyle_1.FillStyle.from(exports.fillStyleInfo, 'PolygonGradientFillOptions'), toJsonObject: _fillStyle_1.FillStyle.toJson };
var alignToCenter = { propertyName: 'alignToCenter', modelName: '@AlignToCenter', displayName: 'Align to Center', localizationId: 'DevExpress.XtraCharts.FunnelSeriesView.AlignToCenter', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false };
var heightToWidthRatioAuto = { propertyName: 'heightToWidthRatioAuto', modelName: '@HeightToWidthRatioAuto', displayName: 'Height to Width Ratio Auto', localizationId: 'DevExpress.XtraCharts.FunnelSeriesView.HeightToWidthRatioAuto', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var funnelSeriesViewinfo = [border5, fillStyle6, alignToCenter, heightToWidthRatioAuto, heightToWidthRatio1, pointDistance, viewTitles, _common_1.tag];
var scatterLineSeriesViewinfo = [viewLineStyle, lineMarkerOptions, viewMarkerVisibility, viewEnableAntialiasing, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var bubbleMarkerOptionsInfo = [kind, starPointCount, fillStyle1, viewBorderVisible, viewBorderColor, _common_1.tag];
var bubbleMarkerOptions = { propertyName: 'bubbleMarkerOptions', modelName: 'BubbleMarkerOptions', displayName: 'Bubble Marker Options', localizationId: 'DevExpress.XtraCharts.BubbleSeriesView.BubbleMarkerOptions', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: bubbleMarkerOptionsInfo, };
var autoSize = { propertyName: 'autoSize', modelName: '@AutoSize', displayName: 'Automatic Size', localizationId: 'DevExpress.XtraCharts.BubbleSeriesView.AutoSize', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var maxSize = { propertyName: 'maxSize', modelName: '@MaxSize', displayName: 'Max Size', localizationId: 'DevExpress.XtraCharts.BubbleSeriesView.MaxSize', editor: _editorTemplates_1.editorTemplates.getEditor('maxSize'), defaultVal: 0.9 };
var minSize = { propertyName: 'minSize', modelName: '@MinSize', displayName: 'Min Size', localizationId: 'DevExpress.XtraCharts.BubbleSeriesView.MinSize', editor: _editorTemplates_1.editorTemplates.getEditor('minSize'), defaultVal: 0.3, editorOptions: { min: 0 } };
var transparency6 = { propertyName: 'transparency', modelName: '@Transparency', displayName: 'Transparency', localizationId: 'DevExpress.XtraCharts.BubbleSeriesView.Transparency', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0 };
var bubbleSeriesViewinfo = [bubbleMarkerOptions, autoSize, maxSize, minSize, transparency6, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var lineTensionPercent = { propertyName: 'lineTensionPercent', modelName: '@LineTensionPercent', displayName: 'Line Tension Percent', localizationId: 'DevExpress.XtraCharts.Spline3DSeriesView.LineTensionPercent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 80, editorOptions: { min: 0, max: 100 } };
var spline3DSeriesViewinfo = [lineTensionPercent, lineThickness, lineWidth, aggregateFunction2, transparency2, color1, _common_1.tag];
var lineTensionPercent1 = { propertyName: 'lineTensionPercent', modelName: '@LineTensionPercent', displayName: 'Line Tension Percent', localizationId: 'DevExpress.XtraCharts.SplineArea3DSeriesView.LineTensionPercent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 80, editorOptions: { min: 0, max: 100 } };
var splineArea3DSeriesViewinfo = [lineTensionPercent1, areaWidth, aggregateFunction2, transparency4, color1, _common_1.tag];
var lineTensionPercent2 = { propertyName: 'lineTensionPercent', modelName: '@LineTensionPercent', displayName: 'Line Tension Percent', localizationId: 'DevExpress.XtraCharts.FullStackedSplineArea3DSeriesView.LineTensionPercent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 80, editorOptions: { min: 0, max: 100 } };
var fullStackedSplineArea3DSeriesViewinfo = [lineTensionPercent2, areaWidth, aggregateFunction2, transparency4, color1, _common_1.tag];
var lineTensionPercent3 = { propertyName: 'lineTensionPercent', modelName: '@LineTensionPercent', displayName: 'Line Tension Percent', localizationId: 'DevExpress.XtraCharts.SplineAreaSeriesView.LineTensionPercent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 80, editorOptions: { min: 0, max: 100 } };
var splineAreaSeriesViewinfo = [lineTensionPercent3, viewBorder1, viewFillStyle, markerOptions, transparency3, viewMarkerVisibility, viewEnableAntialiasing, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var lineTensionPercent4 = { propertyName: 'lineTensionPercent', modelName: '@LineTensionPercent', displayName: 'Line Tension Percent', localizationId: 'DevExpress.XtraCharts.FullStackedSplineAreaSeriesView.LineTensionPercent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 80, editorOptions: { min: 0, max: 100 } };
var fullStackedSplineAreaSeriesViewinfo = [lineTensionPercent4, viewFillStyle, transparency, viewEnableAntialiasing, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var lineTensionPercent5 = { propertyName: 'lineTensionPercent', modelName: '@LineTensionPercent', displayName: 'Line Tension Percent', localizationId: 'DevExpress.XtraCharts.StackedSplineArea3DSeriesView.LineTensionPercent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 80, editorOptions: { min: 0, max: 100 } };
var stackedSplineArea3DSeriesViewinfo = [lineTensionPercent5, areaWidth, aggregateFunction2, transparency4, color1, _common_1.tag];
var lineTensionPercent6 = { propertyName: 'lineTensionPercent', modelName: '@LineTensionPercent', displayName: 'Line Tension Percent', localizationId: 'DevExpress.XtraCharts.SplineSeriesView.LineTensionPercent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 80, editorOptions: { min: 0, max: 100 } };
var splineSeriesViewinfo = [lineTensionPercent6, viewLineStyle, lineMarkerOptions, viewMarkerVisibility, viewEnableAntialiasing, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var lineTensionPercent7 = { propertyName: 'lineTensionPercent', modelName: '@LineTensionPercent', displayName: 'Line Tension Percent', localizationId: 'DevExpress.XtraCharts.StackedSplineAreaSeriesView.LineTensionPercent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 80, editorOptions: { min: 0, max: 100 } };
var stackedSplineAreaSeriesViewinfo = [lineTensionPercent7, viewBorder1, viewFillStyle, transparency, viewEnableAntialiasing, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var area3DSeriesViewinfo = [areaWidth, aggregateFunction2, transparency4, color1, _common_1.tag];
var fullStackedArea3DSeriesViewinfo = [areaWidth, aggregateFunction2, transparency4, color1, _common_1.tag];
var border6 = { propertyName: 'border', modelName: 'Border', displayName: 'Border', localizationId: 'DevExpress.XtraCharts.RadarAreaSeriesView.Border', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: borderInfo, };
var markerOptions1 = { propertyName: 'markerOptions', modelName: 'MarkerOptions', displayName: 'Marker Options', localizationId: 'DevExpress.XtraCharts.RadarAreaSeriesView.MarkerOptions', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: markerOptionsInfo, };
var polarAreaSeriesViewinfo = [border6, fillStyle2, markerOptions1, transparency1, markerVisibility1, aggregateFunction1, shadow1, viewColorEach, color1, _common_1.tag];
var radarAreaSeriesViewinfo = [border6, fillStyle2, markerOptions1, transparency1, markerVisibility1, aggregateFunction1, shadow1, viewColorEach, color1, _common_1.tag];
var stackedArea3DSeriesViewinfo = [areaWidth, aggregateFunction2, transparency4, color1, _common_1.tag];
var fullStackedBar3DSeriesViewinfo = [viewBarWidth, barDepth, barDepthAuto, fillStyle3, model, showFacet, colorEach2, aggregateFunction2, transparency2, color1, _common_1.tag];
var barDistance4 = { propertyName: 'barDistance', displayName: 'Bar Distance', localizationId: 'DevExpress.XtraCharts.SideBySideBar3DSeriesView.BarDistance', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0 };
var barDistanceFixed4 = { propertyName: 'barDistanceFixed', displayName: 'Bar Distance Fixed', localizationId: 'DevExpress.XtraCharts.SideBySideBar3DSeriesView.BarDistanceFixed', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1, editorOptions: { format: '#0' } };
var equalBarWidth4 = { propertyName: 'equalBarWidth', modelName: '@EqualBarWidth', displayName: 'Equal Bar Width', localizationId: 'DevExpress.XtraCharts.SideBySideBar3DSeriesView.EqualBarWidth', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var sideBySideBar3DSeriesViewinfo = [barDistance4, barDistanceFixed4, equalBarWidth4, viewBarWidth, barDepth, barDepthAuto, fillStyle3, model, showFacet, colorEach2, aggregateFunction2, transparency2, color1, _common_1.tag];
var stackedBar3DSeriesViewinfo = [viewBarWidth, barDepth, barDepthAuto, fillStyle3, model, showFacet, colorEach2, aggregateFunction2, transparency2, color1, _common_1.tag];
var polarLineSeriesViewinfo = [lineStyle1, closed, lineMarkerOptions1, markerVisibility1, aggregateFunction1, shadow1, viewColorEach, color1, _common_1.tag];
var radarLineSeriesViewinfo = [lineStyle1, closed, lineMarkerOptions1, markerVisibility1, aggregateFunction1, shadow1, viewColorEach, color1, _common_1.tag];
var holeRadiusPercent2 = { propertyName: 'holeRadiusPercent', modelName: '@HoleRadiusPercent', displayName: 'Hole Radius Percent', localizationId: 'DevExpress.XtraCharts.Doughnut3DSeriesView.HoleRadiusPercent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 60, editorOptions: { min: 0, max: 100 } };
var depth = { propertyName: 'depth', modelName: '@Depth', displayName: 'Depth', localizationId: 'DevExpress.XtraCharts.Pie3DSeriesView.Depth', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 15, editorOptions: { min: 1, max: 100 } };
var sizeAsPercentage = { propertyName: 'sizeAsPercentage', modelName: '@SizeAsPercentage', displayName: 'Size As Percentage', localizationId: 'DevExpress.XtraCharts.Pie3DSeriesView.SizeAsPercentage', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 100, editorOptions: { min: 0, max: 100 } };
var pieFillStyleInfo = [fillMode1, _series_1.fillStyleOptionsSerialize, _common_1.tag];
var pieFillStyle = { propertyName: 'pieFillStyle', modelName: 'PieFillStyle', displayName: 'Pie Fill Style', localizationId: 'DevExpress.XtraCharts.Pie3DSeriesView.PieFillStyle', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: pieFillStyleInfo, };
var doughnut3DSeriesViewinfo = [holeRadiusPercent2, depth, sizeAsPercentage, pieFillStyle, explodedDistancePercentage, explodeMode, sweepDirection, viewTitles, _common_1.tag];
var holeRadiusPercent3 = { propertyName: 'holeRadiusPercent', modelName: '@HoleRadiusPercent', displayName: 'Hole Radius Percent', localizationId: 'DevExpress.XtraCharts.DoughnutSeriesView.HoleRadiusPercent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 60, editorOptions: { min: 0, max: 100 } };
var doughnutSeriesViewinfo = [holeRadiusPercent3, minAllowedSizePercentage, rotation, heightToWidthRatio, border4, fillStyle5, runtimeExploding, explodedDistancePercentage, explodeMode, sweepDirection, viewTitles, _common_1.tag, totalLabel];
var size2 = { propertyName: 'size', modelName: '@Size', displayName: 'Size', localizationId: 'DevExpress.XtraCharts.SimpleMarker.Size', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 8, editorOptions: { min: 1 } };
var pointMarkerOptionsInfo = [size2, kind, starPointCount, fillStyle1, viewBorderVisible, viewBorderColor, _common_1.tag];
var pointMarkerOptions = { propertyName: 'pointMarkerOptions', modelName: 'PointMarkerOptions', displayName: 'Point Marker Options', localizationId: 'DevExpress.XtraCharts.RadarPointSeriesView.PointMarkerOptions', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: pointMarkerOptionsInfo, };
var polarPointSeriesViewinfo = [pointMarkerOptions, aggregateFunction1, shadow1, viewColorEach, color1, _common_1.tag];
var arrowWidth = { propertyName: 'arrowWidth', modelName: '@ArrowWidth', displayName: 'Arrow Width', localizationId: 'DevExpress.XtraCharts.TaskLinkOptions.ArrowWidth', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 7, editorOptions: { min: 1 }, validationRules: arrowWidthValidationRules };
var arrowHeight = { propertyName: 'arrowHeight', modelName: '@ArrowHeight', displayName: 'Arrow Height', localizationId: 'DevExpress.XtraCharts.TaskLinkOptions.ArrowHeight', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 5, editorOptions: { min: 1 } };
var viewMinIndent = { propertyName: 'minIndent', modelName: '@MinIndent', displayName: 'Min Indent', localizationId: 'DevExpress.XtraCharts.TaskLinkOptions.MinIndent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 2, editorOptions: { min: 0 } };
var thickness3 = { propertyName: 'thickness', modelName: '@Thickness', displayName: 'Thickness', localizationId: 'DevExpress.XtraCharts.TaskLinkOptions.Thickness', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 3, editorOptions: { min: 1 } };
var visible1 = { propertyName: 'visible', modelName: '@Visible', displayName: 'Visible', localizationId: 'DevExpress.XtraCharts.TaskLinkOptions.Visible', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var colorSource = {
    propertyName: 'colorSource', modelName: '@ColorSource', displayName: 'Color Source', localizationId: 'DevExpress.XtraCharts.TaskLinkOptions.ColorSource', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'ParentColor', displayValue: 'ParentColor' }, { value: 'ParentBorderColor', displayValue: 'ParentBorderColor' }, { value: 'ChildColor', displayValue: 'ChildColor' }, { value: 'ChildBorderColor', displayValue: 'ChildBorderColor' }, { value: 'OwnColor', displayValue: 'OwnColor' }], defaultVal: 'ParentColor'
};
var color4 = { propertyName: 'color', modelName: '@Color', displayName: 'Color', localizationId: 'DevExpress.XtraCharts.TaskLinkOptions.Color', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: _editorTemplates_1.editorTemplates.getEditor('undoCustomColorEditor'), defaultVal: 'transparent' };
var inFront = { propertyName: 'inFront', modelName: '@InFront', displayName: 'In Front', localizationId: 'DevExpress.XtraCharts.TaskLinkOptions.InFront', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false };
var linkOptionsInfo = [arrowWidth, arrowHeight, viewMinIndent, thickness3, visible1, colorSource, color4, inFront, _common_1.tag];
var linkOptions = { propertyName: 'linkOptions', modelName: 'LinkOptions', displayName: 'Link Options', localizationId: 'DevExpress.XtraCharts.GanttSeriesView.LinkOptions', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: linkOptionsInfo, };
var minValueMarkerInfo = [viewColor2, size1, kind, starPointCount, fillStyle1, viewBorderVisible, viewBorderColor, _common_1.tag];
var minValueMarker = { propertyName: 'minValueMarker', modelName: 'MinValueMarker', displayName: 'Min Value Marker', localizationId: 'DevExpress.XtraCharts.RangeBarSeriesView.MinValueMarker', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: minValueMarkerInfo, };
var maxValueMarkerInfo = [viewColor2, size1, kind, starPointCount, fillStyle1, viewBorderVisible, viewBorderColor, _common_1.tag];
var maxValueMarker = { propertyName: 'maxValueMarker', modelName: 'MaxValueMarker', displayName: 'Max Value Marker', localizationId: 'DevExpress.XtraCharts.RangeBarSeriesView.MaxValueMarker', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: maxValueMarkerInfo, };
var minValueMarkerVisibility = {
    propertyName: 'minValueMarkerVisibility', modelName: '@MinValueMarkerVisibility', displayName: 'Min Value Marker Visibility', localizationId: 'DevExpress.XtraCharts.RangeBarSeriesView.MinValueMarkerVisibility', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'True', displayValue: 'True', localizationId: 'StringId.DefaultBooleanTrue' }, { value: 'False', displayValue: 'False', localizationId: 'StringId.DefaultBooleanFalse' }, { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }], defaultVal: 'Default'
};
var maxValueMarkerVisibility = {
    propertyName: 'maxValueMarkerVisibility', modelName: '@MaxValueMarkerVisibility', displayName: 'Max Value Marker Visibility', localizationId: 'DevExpress.XtraCharts.RangeBarSeriesView.MaxValueMarkerVisibility', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'True', displayValue: 'True', localizationId: 'StringId.DefaultBooleanTrue' }, { value: 'False', displayValue: 'False', localizationId: 'StringId.DefaultBooleanFalse' }, { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraReports.UI.WinControlPrintMode.Default' }], defaultVal: 'Default'
};
var overlappedGanttSeriesViewinfo = [linkOptions, minValueMarker, maxValueMarker, minValueMarkerVisibility, maxValueMarkerVisibility, barWidth1, border3, fillStyle4, transparency5, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var radarPointSeriesViewinfo = [pointMarkerOptions, aggregateFunction1, shadow1, viewColorEach, color1, _common_1.tag];
var barDistance5 = { propertyName: 'barDistance', displayName: 'Bar Distance', localizationId: 'DevExpress.XtraCharts.SideBySideGanttSeriesView.BarDistance', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0 };
var barDistanceFixed5 = { propertyName: 'barDistanceFixed', displayName: 'Bar Distance Fixed', localizationId: 'DevExpress.XtraCharts.SideBySideGanttSeriesView.BarDistanceFixed', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1, editorOptions: { format: '#0' } };
var equalBarWidth5 = { propertyName: 'equalBarWidth', modelName: '@EqualBarWidth', displayName: 'Equal Bar Width', localizationId: 'DevExpress.XtraCharts.SideBySideGanttSeriesView.EqualBarWidth', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var sideBySideGanttSeriesViewinfo = [barDistance5, barDistanceFixed5, equalBarWidth5, linkOptions, minValueMarker, maxValueMarker, minValueMarkerVisibility, maxValueMarkerVisibility, barWidth1, border3, fillStyle4, transparency5, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var areaSeriesViewinfo = [viewBorder1, viewFillStyle, markerOptions, transparency3, viewMarkerVisibility, viewEnableAntialiasing, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var fillMode2 = {
    propertyName: 'fillMode', modelName: '@FillMode', displayName: 'Fill Mode', localizationId: 'DevExpress.XtraCharts.CandleStickReductionOptions.FillMode', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'FilledOnReduction', displayValue: 'FilledOnReduction' }, { value: 'FilledOnIncrease', displayValue: 'FilledOnIncrease' }, { value: 'AlwaysEmpty', displayValue: 'AlwaysEmpty' }, { value: 'AlwaysFilled', displayValue: 'AlwaysFilled' }], defaultVal: 'FilledOnReduction'
};
var color5 = { propertyName: 'color', modelName: '@Color', displayName: 'Color', localizationId: 'DevExpress.XtraCharts.ReductionStockOptions.Color', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), defaultVal: '255,255,0,0' };
var level = {
    propertyName: 'level', modelName: '@Level', displayName: 'Level', localizationId: 'DevExpress.XtraCharts.ReductionStockOptions.Level', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Low', displayValue: 'Low', localizationId: 'DevExpress.XtraCharts.StockLevel.Low' }, { value: 'High', displayValue: 'High', localizationId: 'DevExpress.XtraCharts.StockLevel.High' }, { value: 'Open', displayValue: 'Open', localizationId: 'DevExpress.XtraCharts.StockLevel.Open' }, { value: 'Close', displayValue: 'Close', localizationId: 'DevExpress.XtraCharts.StockLevel.Close' }], defaultVal: 'Close'
};
var visible2 = { propertyName: 'visible', modelName: '@Visible', displayName: 'Visible', localizationId: 'DevExpress.XtraCharts.ReductionStockOptions.Visible', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var colorMode = {
    propertyName: 'colorMode', modelName: '@ColorMode', displayName: 'Color Mode', localizationId: 'DevExpress.XtraCharts.ReductionStockOptions.ColorMode', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'PreviousToCurrentPoint', displayValue: 'PreviousToCurrentPoint' }, { value: 'OpenToCloseValue', displayValue: 'OpenToCloseValue' }], defaultVal: 'PreviousToCurrentPoint'
};
var reductionOptionsInfo = [fillMode2, color5, level, visible2, colorMode, _common_1.tag];
var reductionOptions = { propertyName: 'reductionOptions', modelName: 'ReductionOptions', displayName: 'Reduction Options', localizationId: 'DevExpress.XtraCharts.CandleStickSeriesView.ReductionOptions', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: reductionOptionsInfo, };
var levelLineLength = { propertyName: 'levelLineLength', modelName: '@LevelLineLength', displayName: 'Level Line Length', localizationId: 'DevExpress.XtraCharts.FinancialSeriesViewBase.LevelLineLength', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0.25, editorOptions: { min: 1 } };
var lineThickness1 = { propertyName: 'lineThickness', modelName: '@LineThickness', displayName: 'Line Thickness', localizationId: 'DevExpress.XtraCharts.FinancialSeriesViewBase.LineThickness', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 2, editorOptions: { min: 1 } };
var reductionOptionsInfo1 = [color5, level, visible2, colorMode, _common_1.tag];
var reductionOptions1 = { propertyName: 'reductionOptions', modelName: 'ReductionOptions', displayName: 'Reduction Options', localizationId: 'DevExpress.XtraCharts.FinancialSeriesViewBase.ReductionOptions', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: reductionOptionsInfo1, };
var candleStickSeriesViewinfo = [reductionOptions, levelLineLength, lineThickness1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var fullStackedAreaSeriesViewinfo = [viewFillStyle, transparency, viewEnableAntialiasing, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var fullStackedBarSeriesViewinfo = [barWidth1, border3, fillStyle4, transparency5, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var line3DSeriesViewinfo = [lineThickness, lineWidth, aggregateFunction2, transparency2, color1, _common_1.tag];
var lineSeriesViewinfo = [viewLineStyle, lineMarkerOptions, viewMarkerVisibility, viewEnableAntialiasing, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var manhattanBarSeriesViewinfo = [viewBarWidth, barDepth, barDepthAuto, fillStyle3, model, showFacet, colorEach2, aggregateFunction2, transparency2, color1, _common_1.tag];
var overlappedRangeBarSeriesViewinfo = [minValueMarker, maxValueMarker, minValueMarkerVisibility, maxValueMarkerVisibility, barWidth1, border3, fillStyle4, transparency5, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var pie3DSeriesViewinfo = [depth, sizeAsPercentage, pieFillStyle, explodedDistancePercentage, explodeMode, sweepDirection, viewTitles, _common_1.tag];
var pieSeriesViewinfo = [minAllowedSizePercentage, rotation, heightToWidthRatio, border4, fillStyle5, runtimeExploding, explodedDistancePercentage, explodeMode, sweepDirection, viewTitles, _common_1.tag, totalLabel];
var pointMarkerOptions1 = { propertyName: 'pointMarkerOptions', modelName: 'PointMarkerOptions', displayName: 'Point Marker Options', localizationId: 'DevExpress.XtraCharts.PointSeriesView.PointMarkerOptions', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: pointMarkerOptionsInfo, };
var pointSeriesViewinfo = [pointMarkerOptions1, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var barDistance6 = { propertyName: 'barDistance', displayName: 'Bar Distance', localizationId: 'DevExpress.XtraCharts.SideBySideBarSeriesView.BarDistance', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0 };
var barDistanceFixed6 = { propertyName: 'barDistanceFixed', displayName: 'Bar Distance Fixed', localizationId: 'DevExpress.XtraCharts.SideBySideBarSeriesView.BarDistanceFixed', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1, editorOptions: { format: '#0' } };
var equalBarWidth6 = { propertyName: 'equalBarWidth', modelName: '@EqualBarWidth', displayName: 'Equal Bar Width', localizationId: 'DevExpress.XtraCharts.SideBySideBarSeriesView.EqualBarWidth', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var sideBySideBarSeriesViewinfo = [barDistance6, barDistanceFixed6, equalBarWidth6, barWidth1, border3, fillStyle4, transparency5, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var barDistance7 = { propertyName: 'barDistance', displayName: 'Bar Distance', localizationId: 'DevExpress.XtraCharts.SideBySideRangeBarSeriesView.BarDistance', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0 };
var barDistanceFixed7 = { propertyName: 'barDistanceFixed', displayName: 'Bar Distance Fixed', localizationId: 'DevExpress.XtraCharts.SideBySideRangeBarSeriesView.BarDistanceFixed', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1, editorOptions: { format: '#0' } };
var equalBarWidth7 = { propertyName: 'equalBarWidth', modelName: '@EqualBarWidth', displayName: 'Equal Bar Width', localizationId: 'DevExpress.XtraCharts.SideBySideRangeBarSeriesView.EqualBarWidth', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var sideBySideRangeBarSeriesViewinfo = [barDistance7, barDistanceFixed7, equalBarWidth7, minValueMarker, maxValueMarker, minValueMarkerVisibility, maxValueMarkerVisibility, barWidth1, border3, fillStyle4, transparency5, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var stackedAreaSeriesViewinfo = [viewBorder1, viewFillStyle, transparency, viewEnableAntialiasing, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var stackedBarSeriesViewinfo = [barWidth1, border3, fillStyle4, transparency5, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var invertedStep4 = { propertyName: 'invertedStep', modelName: '@InvertedStep', displayName: 'Inverted Step', localizationId: 'DevExpress.XtraCharts.StepLineSeriesView.InvertedStep', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false };
var stepLineSeriesViewinfo = [invertedStep4, viewLineStyle, lineMarkerOptions, viewMarkerVisibility, viewEnableAntialiasing, colorEach1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var showOpenClose = {
    propertyName: 'showOpenClose', modelName: '@ShowOpenClose', displayName: 'Show Open Close', localizationId: 'DevExpress.XtraCharts.StockSeriesView.ShowOpenClose', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Both', displayValue: 'Both', localizationId: 'DevExpress.XtraCharts.ErrorBarDirection.Both' }, { value: 'Open', displayValue: 'Open', localizationId: 'DevExpress.XtraCharts.StockLevel.Open' }, { value: 'Close', displayValue: 'Close', localizationId: 'DevExpress.XtraCharts.StockLevel.Close' }], defaultVal: 'Both'
};
var stockSeriesViewinfo = [showOpenClose, levelLineLength, lineThickness1, reductionOptions1, shadow, exports.paneName, exports.axisXName, exports.axisYName, viewAggregateFunction, indicators, color1, _common_1.tag];
var invertedStep5 = { propertyName: 'invertedStep', modelName: '@InvertedStep', displayName: 'Inverted Step', localizationId: 'DevExpress.XtraCharts.StepLine3DSeriesView.InvertedStep', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false };
var stepLine3DSeriesViewinfo = [invertedStep5, lineThickness, lineWidth, aggregateFunction2, transparency2, color1, _common_1.tag];
var risingbarcolor = { propertyName: 'risingBarColor', modelName: '@RisingBarColor', displayName: 'Rising Bar Color', localizationId: 'DevExpress.XtraCharts.WaterfallSeriesView.RisingBarColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), defaultVal: 'transparent' };
var fallingbarcolor = { propertyName: 'fallingBarColor', modelName: '@FallingBarColor', displayName: 'Falling Bar Color', localizationId: 'DevExpress.XtraCharts.WaterfallSeriesView.FallingBarColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), defaultVal: 'transparent' };
var startbarcolor = { propertyName: 'startBarColor', modelName: '@StartBarColor', displayName: 'Start Bar Color', localizationId: 'DevExpress.XtraCharts.WaterfallSeriesView.StartBarColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), defaultVal: 'Gray' };
var subtotalbarcolor = { propertyName: 'subtotalBarColor', modelName: '@SubtotalBarColor', displayName: 'Subtotal Bar Color', localizationId: 'DevExpress.XtraCharts.WaterfallSeriesView.SubtotalBarColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), defaultVal: 'Gray' };
var totalbarcolor = { propertyName: 'totalBarColor', modelName: '@TotalBarColor', displayName: 'Total Bar Color', localizationId: 'DevExpress.XtraCharts.WaterfallSeriesView.TotalBarColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), defaultVal: 'Gray' };
var connectorcolor = { propertyName: 'connectorColor', modelName: '@ConnectorColor', displayName: 'Connector Color', localizationId: 'DevExpress.XtraCharts.WaterfallSeriesView.ConnectorColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), defaultVal: 'Gray' };
var waterfallSeriesView = stackedBarSeriesViewinfo.concat([risingbarcolor, fallingbarcolor, startbarcolor, subtotalbarcolor, totalbarcolor, connectorcolor]);
exports.viewMapper = {
    FullStackedStepAreaSeriesView: fullStackedStepAreaSeriesViewinfo,
    PolarRangeAreaSeriesView: polarRangeAreaSeriesViewinfo,
    RadarRangeAreaSeriesView: radarRangeAreaSeriesViewinfo,
    RangeArea3DSeriesView: rangeArea3DSeriesViewinfo,
    RangeAreaSeriesView: rangeAreaSeriesViewinfo,
    StackedStepAreaSeriesView: stackedStepAreaSeriesViewinfo,
    StepArea3DSeriesView: stepArea3DSeriesViewinfo,
    StepAreaSeriesView: stepAreaSeriesViewinfo,
    SideBySideFullStackedBar3DSeriesView: sideBySideFullStackedBar3DSeriesViewinfo,
    SideBySideFullStackedBarSeriesView: sideBySideFullStackedBarSeriesViewinfo,
    SideBySideStackedBar3DSeriesView: sideBySideStackedBar3DSeriesViewinfo,
    SideBySideStackedBarSeriesView: sideBySideStackedBarSeriesViewinfo,
    FullStackedLine3DSeriesView: fullStackedLine3DSeriesViewinfo,
    FullStackedLineSeriesView: fullStackedLineSeriesViewinfo,
    WaterfallSeriesView: waterfallSeriesView,
    ScatterPolarLineSeriesView: scatterPolarLineSeriesViewinfo,
    ScatterRadarLineSeriesView: scatterRadarLineSeriesViewinfo,
    StackedLine3DSeriesView: stackedLine3DSeriesViewinfo,
    StackedLineSeriesView: stackedLineSeriesViewinfo,
    NestedDoughnutSeriesView: nestedDoughnutSeriesViewinfo,
    SwiftPlotSeriesView: swiftPlotSeriesViewinfo,
    Funnel3DSeriesView: funnel3DSeriesViewinfo,
    FunnelSeriesView: funnelSeriesViewinfo,
    ScatterLineSeriesView: scatterLineSeriesViewinfo,
    BubbleSeriesView: bubbleSeriesViewinfo,
    Spline3DSeriesView: spline3DSeriesViewinfo,
    SplineArea3DSeriesView: splineArea3DSeriesViewinfo,
    FullStackedSplineArea3DSeriesView: fullStackedSplineArea3DSeriesViewinfo,
    SplineAreaSeriesView: splineAreaSeriesViewinfo,
    FullStackedSplineAreaSeriesView: fullStackedSplineAreaSeriesViewinfo,
    StackedSplineArea3DSeriesView: stackedSplineArea3DSeriesViewinfo,
    SplineSeriesView: splineSeriesViewinfo,
    StackedSplineAreaSeriesView: stackedSplineAreaSeriesViewinfo,
    Area3DSeriesView: area3DSeriesViewinfo,
    FullStackedArea3DSeriesView: fullStackedArea3DSeriesViewinfo,
    PolarAreaSeriesView: polarAreaSeriesViewinfo,
    RadarAreaSeriesView: radarAreaSeriesViewinfo,
    StackedArea3DSeriesView: stackedArea3DSeriesViewinfo,
    FullStackedBar3DSeriesView: fullStackedBar3DSeriesViewinfo,
    SideBySideBar3DSeriesView: sideBySideBar3DSeriesViewinfo,
    StackedBar3DSeriesView: stackedBar3DSeriesViewinfo,
    PolarLineSeriesView: polarLineSeriesViewinfo,
    RadarLineSeriesView: radarLineSeriesViewinfo,
    Doughnut3DSeriesView: doughnut3DSeriesViewinfo,
    DoughnutSeriesView: doughnutSeriesViewinfo,
    PolarPointSeriesView: polarPointSeriesViewinfo,
    OverlappedGanttSeriesView: overlappedGanttSeriesViewinfo,
    RadarPointSeriesView: radarPointSeriesViewinfo,
    SideBySideGanttSeriesView: sideBySideGanttSeriesViewinfo,
    AreaSeriesView: areaSeriesViewinfo,
    CandleStickSeriesView: candleStickSeriesViewinfo,
    FullStackedAreaSeriesView: fullStackedAreaSeriesViewinfo,
    FullStackedBarSeriesView: fullStackedBarSeriesViewinfo,
    Line3DSeriesView: line3DSeriesViewinfo,
    LineSeriesView: lineSeriesViewinfo,
    ManhattanBarSeriesView: manhattanBarSeriesViewinfo,
    OverlappedRangeBarSeriesView: overlappedRangeBarSeriesViewinfo,
    Pie3DSeriesView: pie3DSeriesViewinfo,
    PieSeriesView: pieSeriesViewinfo,
    PointSeriesView: pointSeriesViewinfo,
    SideBySideBarSeriesView: sideBySideBarSeriesViewinfo,
    SideBySideRangeBarSeriesView: sideBySideRangeBarSeriesViewinfo,
    StackedAreaSeriesView: stackedAreaSeriesViewinfo,
    StackedBarSeriesView: stackedBarSeriesViewinfo,
    StepLineSeriesView: stepLineSeriesViewinfo,
    StockSeriesView: stockSeriesViewinfo,
    StepLine3DSeriesView: stepLine3DSeriesViewinfo,
};


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _diagram_1 = __webpack_require__(165);
var _common_1 = __webpack_require__(35);
var _axis_1 = __webpack_require__(30);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var _editorTemplates_1 = __webpack_require__(22);
var ko = __webpack_require__(1);
exports.diagram = { propertyName: 'diagram', modelName: 'Diagram', displayName: 'Diagram', from: function (val) { return ko.observable(val); }, toJsonObject: _diagram_1.DiagramViewModel.toJson, localizationId: 'DevExpress.XtraReports.UI.XRChart.Diagram' };
var dimension = { propertyName: 'dimension', modelName: '@Dimension', displayName: 'Dimension', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.SimpleDiagram3D.Dimension' }, equalPieSize = { propertyName: 'equalPieSize', modelName: '@EqualPieSize', displayName: 'EqualPieSize', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, typeNameNotShowDiagram = { propertyName: 'typeNameSerializable', modelName: '@TypeNameSerializable' };
exports.secondaryAxesX = { propertyName: 'secondaryAxesX', modelName: 'SecondaryAxesX', displayName: 'Secondary Axes X', array: true, editor: _editorTemplates_1.editorTemplates.getEditor('collection'), localizationId: 'DevExpress.XtraCharts.XYDiagram.SecondaryAxesX' };
exports.secondaryAxesY = { propertyName: 'secondaryAxesY', modelName: 'SecondaryAxesY', displayName: 'Secondary Axes Y', array: true, editor: _editorTemplates_1.editorTemplates.getEditor('collection'), localizationId: 'DevExpress.XtraCharts.XYDiagram.SecondaryAxesY' };
exports.panes = { propertyName: 'panes', modelName: 'Panes', displayName: 'Additional Panes', array: true, editor: _editorTemplates_1.editorTemplates.getEditor('collection'), localizationId: 'ChartDesignerStringIDs.TreeAdditionalPanelCollection' };
var drawingStyle = {
    propertyName: 'drawingStyle', modelName: '@DrawingStyle', displayName: 'Drawing Style', localizationId: 'DevExpress.XtraCharts.RadarDiagram.DrawingStyle', defaultVal: 'Circle',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'Circle', displayValue: 'Circle', localizationId: 'DevExpress.XtraCharts.RadarDiagramDrawingStyle.Circle' },
        { value: 'Polygon', displayValue: 'Polygon', localizationId: 'DevExpress.XtraCharts.RadarDiagramDrawingStyle.Polygon' }
    ]
}, startAngleInDegrees = {
    propertyName: 'startAngleInDegrees', modelName: '@StartAngleInDegrees', displayName: 'Start Angle in Degrees', localizationId: 'DevExpress.XtraCharts.RadarDiagram.StartAngleInDegrees', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 0
}, rotationDirection = {
    propertyName: 'rotationDirection', modelName: '@RotationDirection', displayName: 'Rotation Direction', localizationId: 'DevExpress.XtraCharts.RadarDiagram.RotationDirection', defaultVal: 'Counterclockwise',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'Counterclockwise', displayValue: 'Counterclockwise', localizationId: 'DevExpress.XtraCharts.RadarDiagramRotationDirection.Counterclockwise' },
        { value: 'Clockwise', displayValue: 'Clockwise', localizationId: 'DevExpress.XtraCharts.RadarDiagramRotationDirection.Clockwise' }
    ]
};
exports.diagramSerializationsInfo = [typeNameNotShowDiagram];
var radarSerializationsInfo = [drawingStyle, startAngleInDegrees, rotationDirection, _axis_1.radarAxisX, _axis_1.radarAxisY, _common_1.margin, _common_1.backColor].concat(exports.diagramSerializationsInfo), polarSerializationsInfo = [_axis_1.radarAxisX, _axis_1.radarAxisY, _common_1.margin, _common_1.backColor].concat(exports.diagramSerializationsInfo), simple3DSerializationsInfo = [dimension, _common_1.margin, equalPieSize].concat(exports.diagramSerializationsInfo), funnel3DSerializationsInfo = [].concat(simple3DSerializationsInfo), simpleSerializationsInfo = [dimension, _common_1.margin, equalPieSize].concat(exports.diagramSerializationsInfo), XY2DSerializationsInfo = [_common_1.defaultPane, exports.panes, _axis_1.axisX, _axis_1.axisY, exports.secondaryAxesX, exports.secondaryAxesY, _common_1.margin, _common_1.enableAxisXScrolling, _common_1.enableAxisXZooming, _common_1.enableAxisYScrolling, _common_1.enableAxisYZooming, typeNameNotShowDiagram], XYSerializationsInfo = [_common_1.rotated].concat(XY2DSerializationsInfo), XY3DSerializationsInfo = [_axis_1.axisX3D, _axis_1.axisY3D, _common_1.backColor, typeNameNotShowDiagram], GanttDiagramSerializationsInfo = [].concat(XY2DSerializationsInfo);
var XYObject = { info: XYSerializationsInfo, type: 'XYDiagram' }, XY2DObject = { info: XY2DSerializationsInfo, type: 'SwiftPlotDiagram' }, XY3DObject = { info: XY3DSerializationsInfo, type: 'XYDiagram3D' }, radarObject = { info: radarSerializationsInfo, type: 'RadarDiagram' }, polarObject = { info: polarSerializationsInfo, type: 'PolarDiagram' }, simpleObject = { info: simpleSerializationsInfo, type: 'SimpleDiagram' }, simple3DObject = { info: simple3DSerializationsInfo, type: 'SimpleDiagram3D' }, funnel3DObject = { info: funnel3DSerializationsInfo, type: 'FunnelDiagram' }, gantObject = { info: GanttDiagramSerializationsInfo, type: 'GanttDiagram' };
exports.diagramMapper = {
    'SideBySideBarSeriesView': XYObject,
    'StackedBarSeriesView': XYObject,
    'FullStackedBarSeriesView': XYObject,
    'SideBySideStackedBarSeriesView': XYObject,
    'SideBySideFullStackedBarSeriesView': XYObject,
    'WaterfallSeriesView': XYObject,
    'SideBySideBar3DSeriesView': XY3DObject,
    'StackedBar3DSeriesView': XY3DObject,
    'FullStackedBar3DSeriesView': XY3DObject,
    'SideBySideStackedBar3DSeriesView': XY3DObject,
    'SideBySideFullStackedBar3DSeriesView': XY3DObject,
    'ManhattanBarSeriesView': XY3DObject,
    'PointSeriesView': XYObject,
    'BubbleSeriesView': XYObject,
    'LineSeriesView': XYObject,
    'StackedLineSeriesView': XYObject,
    'FullStackedLineSeriesView': XYObject,
    'StepLineSeriesView': XYObject,
    'SplineSeriesView': XYObject,
    'ScatterLineSeriesView': XYObject,
    'SwiftPlotSeriesView': XY2DObject,
    'Line3DSeriesView': XY3DObject,
    'StackedLine3DSeriesView': XY3DObject,
    'FullStackedLine3DSeriesView': XY3DObject,
    'StepLine3DSeriesView': XY3DObject,
    'Spline3DSeriesView': XY3DObject,
    'PieSeriesView': simpleObject,
    'DoughnutSeriesView': simpleObject,
    'NestedDoughnutSeriesView': simpleObject,
    'Pie3DSeriesView': simple3DObject,
    'Doughnut3DSeriesView': simple3DObject,
    'FunnelSeriesView': simpleObject,
    'Funnel3DSeriesView': funnel3DObject,
    'AreaSeriesView': XYObject,
    'StackedAreaSeriesView': XYObject,
    'FullStackedAreaSeriesView': XYObject,
    'StepAreaSeriesView': XYObject,
    'SplineAreaSeriesView': XYObject,
    'StackedSplineAreaSeriesView': XYObject,
    'FullStackedSplineAreaSeriesView': XYObject,
    'Area3DSeriesView': XY3DObject,
    'StackedArea3DSeriesView': XY3DObject,
    'FullStackedArea3DSeriesView': XY3DObject,
    'StepArea3DSeriesView': XY3DObject,
    'SplineArea3DSeriesView': XY3DObject,
    'StackedSplineArea3DSeriesView': XY3DObject,
    'FullStackedSplineArea3DSeriesView': XY3DObject,
    'OverlappedRangeBarSeriesView': XYObject,
    'SideBySideRangeBarSeriesView': XYObject,
    'RangeAreaSeriesView': XYObject,
    'RangeArea3DSeriesView': XY3DObject,
    'RadarPointSeriesView': radarObject,
    'RadarLineSeriesView': radarObject,
    'RadarAreaSeriesView': radarObject,
    'PolarPointSeriesView': polarObject,
    'PolarLineSeriesView': polarObject,
    'PolarAreaSeriesView': polarObject,
    'StockSeriesView': XYObject,
    'CandleStickSeriesView': XYObject,
    'OverlappedGanttSeriesView': gantObject,
    'SideBySideGanttSeriesView': gantObject
};


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _chart_1 = __webpack_require__(19);
var _diagram_1 = __webpack_require__(117);
var _diagram_2 = __webpack_require__(165);
var _title_1 = __webpack_require__(112);
var _additionalLegend_1 = __webpack_require__(257);
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var _utils_1 = __webpack_require__(50);
var ChartViewModel = (function (_super) {
    __extends(ChartViewModel, _super);
    function ChartViewModel(model, serializer) {
        var _this = _super.call(this, analytics_internal_1.cutRefs(model), serializer, _chart_1.chartSerializationsInfo) || this;
        var oldType = ko.observable('');
        _this._createDiagram(model['Diagram'], oldType, serializer);
        _this._disposables.push(ko.computed(function () {
            _this._createDiagram({}, oldType, serializer);
        }));
        _this.titles = _utils_1.deserializeModelArray(model && model.Titles, function (title, parent) { return new _title_1.TitleViewModel(title, parent, serializer); }, _title_1.TitleViewModel.prefix);
        _this.legends = _utils_1.deserializeModelArray(model && model.Legends, function (legends, parent) { return new _additionalLegend_1.AdditionalLegendViewModel(legends, parent, serializer); }, _additionalLegend_1.AdditionalLegendViewModel.prefix);
        _this._patchSeries(_this.dataContainer.seriesTemplate);
        _this._disposables.push(_this.dataContainer.series.subscribe(function (changes) {
            changes.filter(function (x) { return x.status === 'added'; }).forEach(function (change) {
                _this._patchSeries(change.value);
            });
        }, undefined, 'arrayChange'));
        _this.dataContainer.series().forEach(function (series) { return _this._patchSeries(series); });
        _title_1.assignTitleActions(_this.titles);
        return _this;
    }
    ChartViewModel.from = function (model, serializer) {
        return new ChartViewModel(model || {}, serializer);
    };
    ChartViewModel.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, _chart_1.chartSerializationsInfo, refs);
    };
    ChartViewModel.prototype._patchView = function (view) {
        var _this = this;
        var info = view.getInfo();
        ['barDistance', 'barDistanceFixed', 'equalBarWidth'].forEach(function (propertyName) {
            if (info.filter(function (x) { return x.propertyName === propertyName; }).length > 0) {
                view[propertyName] = _this[propertyName];
            }
        });
    };
    ChartViewModel.prototype._patchSeries = function (series) {
        var _this = this;
        series._disposables.push(series.view.subscribe(function (newVal) {
            _this._patchView(newVal);
        }));
        this._patchView(series.view());
    };
    ChartViewModel.prototype._createDiagram = function (model, oldType, serializer) {
        if (model) {
            var typeName = '';
            if (this.dataContainer.seriesDataMember() || this.dataContainer.series().length === 0) {
                typeName = this.dataContainer.seriesTemplate.viewType();
            }
            else {
                typeName = this.dataContainer.series()[0].viewType();
            }
            if (oldType.peek() !== _diagram_1.diagramMapper[typeName].type) {
                oldType(_diagram_1.diagramMapper[typeName].type);
                this.diagram(_diagram_2.DiagramViewModel.createDiagram(model, typeName, serializer));
            }
        }
    };
    return ChartViewModel;
}(analytics_elements_1.SerializableModel));
exports.ChartViewModel = ChartViewModel;


/***/ }),
/* 119 */
/***/ (function(module, exports) {

module.exports = DevExpress.Reporting.Viewer.Editing;

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrReport_1 = __webpack_require__(16);
var xrReport_2 = __webpack_require__(39);
var localizationMetadata_1 = __webpack_require__(452);
var metadata_1 = __webpack_require__(28);
var analytics_utils_1 = __webpack_require__(0);
var ReportModelSerializer = (function (_super) {
    __extends(ReportModelSerializer, _super);
    function ReportModelSerializer(reportModel, options) {
        var _this = _super.call(this, options) || this;
        _this.reportModel = reportModel;
        _this.isLocalized = false;
        return _this;
    }
    ReportModelSerializer.prototype.serialize = function (viewModel, serializationsInfo, refs) {
        var isInitialize = !viewModel;
        viewModel = viewModel || this.reportModel;
        refs = refs || { linkObjTable: [], objects: [] };
        var model = _super.prototype.serialize.call(this, viewModel, serializationsInfo, refs);
        if (isInitialize) {
            model['@Ref'] = (refs.objects.push(viewModel) - 1).toString();
            this.setLinks(refs);
        }
        return model;
    };
    ReportModelSerializer.prototype.serializeProperty = function (modelPropertyInfo, viewModel, serializationsInfo, refs, result) {
        if (!modelPropertyInfo.localizable || !this.reportModel.isLocalized()) {
            return _super.prototype.serializeProperty.call(this, modelPropertyInfo, viewModel, serializationsInfo, refs, result);
        }
    };
    ReportModelSerializer.prototype.deserialize = function (viewModel, model, serializationsInfo) {
        if (viewModel instanceof xrReport_1.ReportViewModel) {
            if (!this.reportModel)
                this.reportModel = viewModel;
            var currentLocalizationItems = model[xrReport_2.localizationItems.modelName];
            if (currentLocalizationItems) {
                this.isLocalized = true;
                this.localizationJsonObj = Object.keys(currentLocalizationItems).map(function (key) { return currentLocalizationItems[key]; }).filter(function (a) { return a[localizationMetadata_1.cultureInfo.modelName] === metadata_1.defaultCulture; });
            }
        }
        return _super.prototype.deserialize.call(this, viewModel, model, serializationsInfo);
    };
    return ReportModelSerializer;
}(analytics_utils_1.ModelSerializer));
exports.ReportModelSerializer = ReportModelSerializer;


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.parameterExpressionBindingSerializationsInfo = [
    { propertyName: 'propertyName', modelName: '@PropertyName', defaultVal: '' },
    { propertyName: 'expression', modelName: '@Expression', defaultVal: '' },
];
exports.parameterExpressionBindings = { propertyName: 'expressionBindings', modelName: 'ExpressionBindings', array: true, info: exports.parameterExpressionBindingSerializationsInfo };


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrBand_1 = __webpack_require__(15);
var ko = __webpack_require__(1);
var SubBandViewModel = (function (_super) {
    __extends(SubBandViewModel, _super);
    function SubBandViewModel(band, parent, serializer) {
        return _super.call(this, band, parent, serializer) || this;
    }
    SubBandViewModel.prototype.isPropertyDisabled = function (name) {
        if (name === bandsMetadata_1.pageBreak.propertyName)
            return this.controlType === 'SubBand' && this[bandsMetadata_1.printAcrossBands.propertyName] && this[bandsMetadata_1.printAcrossBands.propertyName]();
        else
            return _super.prototype.isPropertyDisabled.call(this, name);
    };
    SubBandViewModel.prototype.isAllowedParent = function (target) {
        return target instanceof xrBand_1.BandViewModel;
    };
    return SubBandViewModel;
}(xrBand_1.BandViewModel));
exports.SubBandViewModel = SubBandViewModel;
var SubBandSurface = (function (_super) {
    __extends(SubBandSurface, _super);
    function SubBandSurface() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.leftMarginTemplate = 'dxrd-sub-band-coordinate-grid';
        return _this;
    }
    SubBandSurface.prototype.getAbsolutePositionY = function () {
        var y = _super.prototype.getAbsolutePositionY.call(this);
        if (this.parent.bandsHolder.bands().indexOf(this) === 0) {
            return y + (this.parent.heightWithoutSubBands());
        }
        return y;
    };
    SubBandSurface.prototype.getBackgroundRect = function () {
        var top = 0, bottom, height = this._height();
        var parent = this.parent;
        var parentBands = ko.unwrap(parent.bandsHolder.bands);
        var parentBackgroundRect = ko.unwrap(parent.backgroundRect);
        top += (parentBackgroundRect.top + parentBackgroundRect.height);
        bottom = parentBackgroundRect.bottom;
        var bandIndex = parentBands.indexOf(this);
        for (var i = 0; i < bandIndex; i++) {
            top += parentBands[i]._totalHeight();
        }
        if (top > bottom)
            height = 0;
        else if (top + height > bottom)
            height = bottom - top;
        return { top: top, bottom: bottom, height: height };
    };
    SubBandSurface.prototype._initMultiColumn = function () {
        var _this = this;
        this._disposables.push(this.multiColumn = ko.computed(function () {
            if (_this.parent.multiColumn && _this.parent.multiColumn() && _this.parent.multiColumn().haveColumns()) {
                return _this.parent.multiColumn();
            }
        }));
    };
    return SubBandSurface;
}(xrBand_1.BandSurface));
exports.SubBandSurface = SubBandSurface;
var bandsMetadata_1 = __webpack_require__(26);


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function createObjectFromInfo(control, serializationsInfo) {
    var newObj = undefined;
    var newObjInfo = [];
    serializationsInfo.forEach(function (info) {
        if (control[info.propertyName]) {
            if (newObj === undefined)
                newObj = {};
            newObj[info.propertyName] = control[info.propertyName];
            newObjInfo.push(info);
        }
    });
    if (!!newObj) {
        newObj['getInfo'] = function () { return newObjInfo; };
    }
    return newObj;
}
exports.createObjectFromInfo = createObjectFromInfo;
function findFirstParentWithPropertyName(control, propertyName) {
    var parent = control.parentModel && control.parentModel();
    if (parent)
        return parent[propertyName] ? parent : findFirstParentWithPropertyName(parent, propertyName);
    else
        return control.root;
}
exports.findFirstParentWithPropertyName = findFirstParentWithPropertyName;


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var style_1 = __webpack_require__(21);
var metadata_1 = __webpack_require__(6);
var bandsMetadata_1 = __webpack_require__(26);
var scriptMetadata_1 = __webpack_require__(13);
var xrBandMetaData_1 = __webpack_require__(53);
var groupfieldMetaData_1 = __webpack_require__(52);
var multiColumnMetaData_1 = __webpack_require__(185);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var hierarchyPrintOptionsSerializationsInfo = [
    {
        propertyName: 'childListFieldName',
        modelName: '@ChildListFieldName',
        defaultVal: '',
        localizationId: 'DevExpress.XtraReports.UI.HierarchyPrintOptions.ChildListFieldName',
        displayName: 'Child List Field Name',
        editor: analytics_widgets_1.editorTemplates.getEditor('field')
    }, {
        propertyName: 'keyFieldName',
        modelName: '@KeyFieldName',
        defaultVal: '',
        localizationId: 'DevExpress.XtraReports.UI.HierarchyPrintOptions.KeyFieldName',
        displayName: 'Key Field Name',
        editor: analytics_widgets_1.editorTemplates.getEditor('field')
    }, {
        propertyName: 'parentFieldName',
        modelName: '@ParentFieldName',
        defaultVal: '',
        localizationId: 'DevExpress.XtraReports.UI.HierarchyPrintOptions.ParentFieldName',
        displayName: 'Parent Field Name',
        editor: analytics_widgets_1.editorTemplates.getEditor('field')
    }, {
        propertyName: 'indent',
        localizationId: 'DevExpress.XtraReports.UI.HierarchyPrintOptions.Indent',
        modelName: '@Indent',
        defaultVal: 20,
        displayName: 'Indent',
        editor: analytics_widgets_1.editorTemplates.getEditor('numeric')
    }, {
        propertyName: 'keepTogetherWithFirstChild',
        modelName: '@KeepTogetherWithFirstChild',
        defaultVal: true,
        displayName: 'Keep Together With First Child',
        localizationId: 'DevExpress.XtraReports.UI.HierarchyPrintOptions.KeepTogetherWithFirstChild',
        editor: analytics_widgets_1.editorTemplates.getEditor('bool'),
        from: analytics_utils_1.parseBool
    }
];
exports.hierarchyPrintOptions = {
    modelName: 'HierarchyPrintOptions',
    propertyName: 'hierarchyPrintOptions',
    info: hierarchyPrintOptionsSerializationsInfo,
    localizationId: 'DevExpress.XtraReports.UI.DetailBand.HierarchyPrintOptions',
    displayName: 'Hierarchy Print Options',
    editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor')
};
exports.fillEmptySpace = { propertyName: 'fillEmptySpace', modelName: '@FillEmptySpace', defaultVal: false, from: analytics_utils_1.parseBool, displayName: 'Fill Empty Space', localizationId: 'DevExpress.XtraReports.UI.DetailBand.FillEmptySpace', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.generalBandSerializationInfo = [
    style_1.evenStyleName, style_1.oddStyleName,
    metadata_1.keepTogetherDefaultValueFalse,
    bandsMetadata_1.pageBreak, scriptMetadata_1.commonBandScripts
].concat(xrBandMetaData_1.bandSerializationInfo);
exports.subBandSerializationInfo = [
    bandsMetadata_1.level
].concat(exports.generalBandSerializationInfo);
exports.generalBandPopularProperties = ['pageBreak', 'keepTogether', bandsMetadata_1.printAcrossBands.propertyName];
exports.detailBandSerializationInfo = exports.generalBandSerializationInfo.concat(bandsMetadata_1.drillDownDetailReportExpanded, exports.hierarchyPrintOptions, bandsMetadata_1.drillDownControl, bandsMetadata_1.keepTogetherWithDetailReports, exports.fillEmptySpace, groupfieldMetaData_1.sortFields, multiColumnMetaData_1.multiColumn);
exports.popularPropertiesDetail = exports.generalBandPopularProperties.concat('sortFields', 'keepTogetherWithDetailReports', exports.fillEmptySpace.propertyName, 'multiColumn');


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var DataBindingBase = (function (_super) {
    __extends(DataBindingBase, _super);
    function DataBindingBase(model, serializer) {
        var _this = _super.call(this) || this;
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(_this, model);
        _this._disposables.push(_this.displayExpr = ko.pureComputed(function () {
            var parameter = _this.parameter();
            return parameter ? parameter.name : _this.dataMember();
        }));
        return _this;
    }
    DataBindingBase.prototype.getInfo = function () {
        return dataBindingInfo_1.dataBindingBaseSerializationInfo;
    };
    DataBindingBase.prototype._findDataSourceFromPath = function (path, dataSources) {
        var dataSourceId = path.split('.')[0];
        var dataSourceInfo = (dataSources || []).filter(function (dataSource) { return dataSource.ref === dataSourceId || dataSource.id === dataSourceId; })[0];
        if (dataSourceInfo) {
            return dataSourceInfo.data;
        }
        return null;
    };
    DataBindingBase.prototype.updateParameter = function (pathRequest, dataSources) {
        var parameterName = pathRequest.fullPath.split('.').pop();
        this.parameter(_parameterUtils_1.collectAvailableParameters(this._findDataSourceFromPath(pathRequest.fullPath, dataSources)() || [])
            .filter(function (item) { return item.name === parameterName; })[0]);
        this.dataSource(null);
    };
    DataBindingBase.prototype.updateBinding = function (path, dataSources) {
        if (!!path) {
            var pathRequest = new analytics_utils_1.PathRequest(path);
            if (path.indexOf('Parameters.') === 0) {
                this.updateParameter(pathRequest, dataSources);
            }
            else {
                this.dataMember(pathRequest.path);
                this.dataSource(this._findDataSourceFromPath(path, dataSources));
                this.parameter(null);
            }
        }
        else {
            this.resetValue();
        }
    };
    DataBindingBase.prototype.getValuePath = function (dataSourceHelper) {
        if (this.parameter()) {
            return 'Parameters.' + this.parameter().name;
        }
        var dataSourceName = '';
        if (this.dataSource()) {
            var ds = dataSourceHelper.findDataSourceInfo(this.dataSource());
            dataSourceName = ds && (ds.id || ds.ref);
        }
        return dataSourceName && this.dataMember() ? (dataSourceName + '.' + this.dataMember()) : '';
    };
    DataBindingBase.prototype.generateValue = function (undoEngine, dataSourceHelper, dataSources) {
        var _this = this;
        if (!this.generatedValue) {
            this._disposables.push(this.generatedValue = ko.computed({
                read: function () {
                    return _this.getValuePath(dataSourceHelper);
                },
                write: function (val) {
                    undoEngine.start();
                    _this.updateBinding(val, dataSources);
                    undoEngine.end();
                }
            }));
        }
        return this.generatedValue;
    };
    DataBindingBase.prototype.resetValue = function () {
        this.parameter(null);
        this.dataSource(null);
        this.dataMember(null);
    };
    DataBindingBase.prototype.isEmpty = function () {
        return !(this.dataMember() || this.dataSource() || this.parameter());
    };
    return DataBindingBase;
}(analytics_utils_1.Disposable));
exports.DataBindingBase = DataBindingBase;
var DataBinding = (function (_super) {
    __extends(DataBinding, _super);
    function DataBinding(model, serializer) {
        var _this = _super.call(this, model, serializer) || this;
        _this.visible = ko.observable(true);
        _this.disabled = ko.pureComputed(function () {
            var dataMember = _this.dataMember();
            return !(_this.parameter() || dataMember);
        });
        _this._disposables.push(_this.disabled.subscribe(function (newVal) {
            newVal && _this.formatString('');
        }));
        _this._disposables.push(_this.disabled);
        return _this;
    }
    DataBinding.initialize = function (model, serializer) {
        var currentDataBindings = analytics_utils_1.deserializeArray(model, function (item) { return new DataBinding(item, serializer); });
        (this['allDataBindings'] || []).forEach(function (value) {
            if (currentDataBindings().filter(function (databinding) { return databinding.propertyName() === value; }).length === 0)
                currentDataBindings.push(new DataBinding({ '@PropertyName': value }, serializer));
        });
        currentDataBindings()['findBinding'] = function (bindingName) {
            return currentDataBindings().filter(function (binding) { return binding.propertyName() === bindingName; })[0];
        };
        return currentDataBindings;
    };
    DataBinding.prototype.getInfo = function () {
        return dataBindingInfo_1.dataBindingSerializationInfo;
    };
    DataBinding.prototype.updateParameter = function (pathRequest, dataSources) {
        _super.prototype.updateParameter.call(this, pathRequest, dataSources);
        this.dataMember(pathRequest.path);
    };
    DataBinding.prototype.resetValue = function () {
        _super.prototype.resetValue.call(this);
        this.formatString('');
    };
    return DataBinding;
}(DataBindingBase));
exports.DataBinding = DataBinding;
var dataBindingInfo_1 = __webpack_require__(126);
var _parameterUtils_1 = __webpack_require__(46);


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.dataBindingBaseSerializationInfo = [
    { propertyName: 'parameter', modelName: '@Parameter', link: true },
    { propertyName: 'dataSource', modelName: '@DataSource', link: true },
    { propertyName: 'dataMember', modelName: '@DataMember' }
];
exports.dataBindingSerializationInfo = exports.dataBindingBaseSerializationInfo.concat([
    { propertyName: 'propertyName', modelName: '@PropertyName' },
    { propertyName: 'formatString', modelName: '@FormatString' }
]);


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var xrBand_1 = __webpack_require__(15);
function getNearestBand(target) {
    var bandModel = null;
    var model = target;
    do {
        if (model instanceof xrBand_1.BandViewModel)
            bandModel = model;
        model = model.parentModel();
    } while (!bandModel && model);
    return bandModel;
}
exports.getNearestBand = getNearestBand;


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var ComponentsModel = (function (_super) {
    __extends(ComponentsModel, _super);
    function ComponentsModel(model, renameComponentStrategy) {
        var _this = _super.call(this) || this;
        _this.renameComponentStrategy = renameComponentStrategy;
        _this.className = function () {
            return 'component';
        };
        _this.controlType = 'XRComponent';
        var _name = ko.observable(model.name);
        _this.data = model.data;
        _this._disposables.push(_this.name = ko.pureComputed({
            read: function () { return _name(); },
            write: function (value) {
                if (value !== _name() && renameComponentStrategy.validateName(value) && renameComponentStrategy.validateUnique(value, _name())) {
                    if (renameComponentStrategy.tryRename(value, _this.data)) {
                        _name(value);
                    }
                }
            }
        }));
        return _this;
    }
    ComponentsModel.prototype.getInfo = function () {
        return [metadata_1.name];
    };
    return ComponentsModel;
}(analytics_utils_1.Disposable));
exports.ComponentsModel = ComponentsModel;


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var imageSource_1 = __webpack_require__(40);
var analytics_widgets_1 = __webpack_require__(4);
var metadata_1 = __webpack_require__(6);
var anchoring_1 = __webpack_require__(20);
var scriptMetadata_1 = __webpack_require__(13);
var dataBinding_1 = __webpack_require__(17);
var _metaUtils_1 = __webpack_require__(23);
var metadataGroups_1 = __webpack_require__(11);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var barCodesTypes_1 = __webpack_require__(288);
var editorTemplates_1 = __webpack_require__(9);
var defaultCodeSerializationInfo = { propertyName: 'name', modelName: '@Name' };
var calcCheckSum = { propertyName: 'calcCheckSum', modelName: '@CalcCheckSum', defaultVal: true, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), displayName: 'Calculate a Checksum', localizationId: 'DevExpress.XtraPrinting.BarCode.BarCodeGeneratorBase.CalcCheckSum' };
var code93SerializationInfo = [defaultCodeSerializationInfo, calcCheckSum];
var wideNarrowRatio = { propertyName: 'wideNarrowRatio', modelName: '@WideNarrowRatio', defaultVal: 2.5, from: analytics_utils_1.floatFromModel, displayName: 'Wide Narrow Ratio', localizationId: 'DevExpress.XtraPrinting.BarCode.CodabarGenerator.WideNarrowRatio', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
var wideNarrowRatio3 = $.extend({}, wideNarrowRatio, { defaultVal: 3 });
var codabarStartStopSymbolValues = [
    { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraPrinting.BarCode.CodabarStartStopSymbol.None' },
    { value: 'A', displayValue: 'A', localizationId: 'DevExpress.XtraPrinting.BarCode.CodabarStartStopSymbol.A' },
    { value: 'B', displayValue: 'B', localizationId: 'DevExpress.XtraPrinting.BarCode.CodabarStartStopSymbol.B' },
    { value: 'C', displayValue: 'C', localizationId: 'DevExpress.XtraPrinting.BarCode.CodabarStartStopSymbol.C' },
    { value: 'D', displayValue: 'D', localizationId: 'DevExpress.XtraPrinting.BarCode.CodabarStartStopSymbol.D' },
];
var codaBarStartSymbol = {
    propertyName: 'startSymbol', modelName: '@StartSymbol', defaultVal: 'A',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'Start Symbol', localizationId: 'DevExpress.XtraPrinting.BarCode.CodabarGenerator.StartSymbol',
    valuesArray: codabarStartStopSymbolValues
};
var codaBarStopSymbol = {
    propertyName: 'stopSymbol', modelName: '@StopSymbol', defaultVal: 'A',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'Stop Symbol', localizationId: 'DevExpress.XtraPrinting.BarCode.CodabarGenerator.StopSymbol',
    valuesArray: codabarStartStopSymbolValues
};
var codabarSerializationInfo = [
    defaultCodeSerializationInfo,
    codaBarStartSymbol,
    codaBarStopSymbol,
    wideNarrowRatio
];
var charset = {
    propertyName: 'characterSet',
    modelName: '@CharacterSet', defaultVal: 'CharsetA', displayName: 'Character Set', localizationId: 'DevExpress.XtraPrinting.BarCode.Code128Generator.CharacterSet', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'CharsetAuto', displayValue: 'CharsetAuto', localizationId: 'DevExpress.XtraPrinting.BarCode.Code128Charset.CharsetAuto' },
        { value: 'CharsetA', displayValue: 'CharsetA', localizationId: 'DevExpress.XtraPrinting.BarCode.Code128Charset.CharsetA' },
        { value: 'CharsetB', displayValue: 'CharsetB', localizationId: 'DevExpress.XtraPrinting.BarCode.Code128Charset.CharsetB' },
        { value: 'CharsetC', displayValue: 'CharsetC', localizationId: 'DevExpress.XtraPrinting.BarCode.Code128Charset.CharsetC' }
    ]
};
var addLeadingZero = { propertyName: 'addLeadingZero', displayName: 'Add Leading Zero', localizationId: 'DevExpress.XtraPrinting.BarCode.Code128Generator.AddLeadingZero', modelName: '@AddLeadingZero', defaultVal: false, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
var code128SerializationInfo = [defaultCodeSerializationInfo, addLeadingZero, charset];
var code39SerializationInfo = [wideNarrowRatio3].concat(code93SerializationInfo);
var codeMSISerializationInfo = [
    defaultCodeSerializationInfo,
    {
        propertyName: 'msiCheckSum',
        modelName: '@MSICheckSum', defaultVal: 'Modulo10', displayName: 'MSI Checksum', localizationId: 'DevExpress.XtraPrinting.BarCode.CodeMSIGenerator.MSICheckSum', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
        valuesArray: [
            { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraPrinting.BarCode.MSICheckSum.None' },
            { value: 'Modulo10', displayValue: 'Modulo10', localizationId: 'DevExpress.XtraPrinting.BarCode.MSICheckSum.Modulo10' },
            { value: 'DoubleModulo10', displayValue: 'DoubleModulo10', localizationId: 'DevExpress.XtraPrinting.BarCode.MSICheckSum.DoubleModulo10' }
        ]
    }
];
var fnc1Substitute = { propertyName: 'fNC1Substitute', modelName: '@FNC1Substitute', defaultVal: '#', editor: analytics_widgets_1.editorTemplates.getEditor('text'), displayName: 'FNC1 Functional Character', localizationId: 'DevExpress.XtraPrinting.BarCode.DataBarGenerator.FNC1Substitute' };
var dataBarSerializationInfo = [
    defaultCodeSerializationInfo,
    fnc1Substitute,
    { propertyName: 'segmentsInRow', modelName: '@SegmentsInRow', defaultVal: 20, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Segments In Row', localizationId: 'DevExpress.XtraPrinting.BarCode.DataBarGenerator.SegmentsInRow' },
    {
        propertyName: 'type',
        modelName: '@Type', defaultVal: 'Omnidirectional', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
        displayName: 'Type', localizationId: 'DevExpress.XtraPrinting.BarCode.DataBarGenerator.Type', valuesArray: [
            { value: 'Omnidirectional', displayValue: 'Omnidirectional', localizationId: 'DevExpress.XtraPrinting.BarCode.DataBarType.Omnidirectional' },
            { value: 'Truncated', displayValue: 'Truncated', localizationId: 'DevExpress.XtraPrinting.BarCode.DataBarType.Truncated' },
            { value: 'Stacked', displayValue: 'Stacked', localizationId: 'DevExpress.XtraPrinting.BarCode.DataBarType.Stacked' },
            { value: 'StackedOmnidirectional', displayValue: 'StackedOmnidirectional', localizationId: 'DevExpress.XtraPrinting.BarCode.DataBarType.StackedOmnidirectional' },
            { value: 'Limited', displayValue: 'Limited', localizationId: 'DevExpress.XtraPrinting.BarCode.DataBarType.Limited' },
            { value: 'Expanded', displayValue: 'Expanded', localizationId: 'DevExpress.XtraPrinting.BarCode.DataBarType.Expanded' },
            { value: 'ExpandedStacked', displayValue: 'ExpandedStacked', localizationId: 'DevExpress.XtraPrinting.BarCode.DataBarType.ExpandedStacked' }
        ]
    }
];
var matrixSize = {
    propertyName: 'matrixSize',
    modelName: '@MatrixSize', defaultVal: 'MatrixAuto', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    displayName: 'Matrix Size', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixGenerator.MatrixSize', valuesArray: [
        { value: 'MatrixAuto', displayValue: 'MatrixAuto', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.MatrixAuto' },
        { value: 'Matrix10x10', displayValue: 'Matrix10x10', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix10x10' },
        { value: 'Matrix12x12', displayValue: 'Matrix12x12', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix12x12' },
        { value: 'Matrix14x14', displayValue: 'Matrix14x14', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix14x14' },
        { value: 'Matrix16x16', displayValue: 'Matrix16x16', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix16x16' },
        { value: 'Matrix18x18', displayValue: 'Matrix18x18', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix18x18' },
        { value: 'Matrix20x20', displayValue: 'Matrix20x20', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix20x20' },
        { value: 'Matrix22x22', displayValue: 'Matrix22x22', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix22x22' },
        { value: 'Matrix24x24', displayValue: 'Matrix24x24', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix24x24' },
        { value: 'Matrix26x26', displayValue: 'Matrix26x26', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix26x26' },
        { value: 'Matrix32x32', displayValue: 'Matrix32x32', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix32x32' },
        { value: 'Matrix36x36', displayValue: 'Matrix36x36', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix36x36' },
        { value: 'Matrix40x40', displayValue: 'Matrix40x40', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix40x40' },
        { value: 'Matrix44x44', displayValue: 'Matrix44x44', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix44x44' },
        { value: 'Matrix48x48', displayValue: 'Matrix48x48', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix48x48' },
        { value: 'Matrix52x52', displayValue: 'Matrix52x52', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix52x52' },
        { value: 'Matrix64x64', displayValue: 'Matrix64x64', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix64x64' },
        { value: 'Matrix72x72', displayValue: 'Matrix72x72', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix72x72' },
        { value: 'Matrix80x80', displayValue: 'Matrix80x80', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix80x80' },
        { value: 'Matrix88x88', displayValue: 'Matrix88x88', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix88x88' },
        { value: 'Matrix96x96', displayValue: 'Matrix96x96', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix96x96' },
        { value: 'Matrix104x104', displayValue: 'Matrix104x104', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix104x104' },
        { value: 'Matrix120x120', displayValue: 'Matrix120x120', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix120x120' },
        { value: 'Matrix132x132', displayValue: 'Matrix132x132', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix132x132' },
        { value: 'Matrix144x144', displayValue: 'Matrix144x144', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix144x144' },
        { value: 'Matrix8x18', displayValue: 'Matrix8x18', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix8x18' },
        { value: 'Matrix8x32', displayValue: 'Matrix8x32', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix8x32' },
        { value: 'Matrix12x26', displayValue: 'Matrix12x26', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix12x26' },
        { value: 'Matrix12x36', displayValue: 'Matrix12x36', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix12x36' },
        { value: 'Matrix16x36', displayValue: 'Matrix16x36', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix16x36' },
        { value: 'Matrix16x48', displayValue: 'Matrix16x48', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix16x48' }
    ]
};
var dataMatrixSerializationInfo = [
    defaultCodeSerializationInfo,
    matrixSize,
    {
        propertyName: 'compactionMode',
        modelName: '@CompactionMode', defaultVal: 'ASCII', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
        displayName: 'Compaction Mode', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixGenerator.CompactionMode', valuesArray: [
            { value: 'ASCII', displayValue: 'ASCII', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixCompactionMode.ASCII' },
            { value: 'C40', displayValue: 'C40', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixCompactionMode.C40' },
            { value: 'Text', displayValue: 'Text', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixCompactionMode.Text' },
            { value: 'X12', displayValue: 'X12', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixCompactionMode.X12' },
            { value: 'Edifact', displayValue: 'Edifact', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixCompactionMode.Edifact' },
            { value: 'Binary', displayValue: 'Binary', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixCompactionMode.Binary' }
        ]
    }
];
var humanReadableText = { propertyName: 'humanReadableText', modelName: '@HumanReadableText', defaultVal: true, from: analytics_utils_1.parseBool, displayName: 'Human-Readable Text', localizationId: 'DevExpress.XtraPrinting.BarCode.DataMatrixGS1Generator.HumanReadableText', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
var dataMatrixGS1SerializationInfo = [
    defaultCodeSerializationInfo,
    matrixSize,
    fnc1Substitute,
    humanReadableText
];
var EAN128SerializationInfo = [
    defaultCodeSerializationInfo,
    charset,
    fnc1Substitute,
    humanReadableText
];
var Industrial2of5SerializationInfo = [defaultCodeSerializationInfo, calcCheckSum, wideNarrowRatio];
var Interleaved2of5SerializationInfo = [defaultCodeSerializationInfo, calcCheckSum, wideNarrowRatio3];
var PDF417SerializationInfo = [
    defaultCodeSerializationInfo,
    { propertyName: 'columns', modelName: '@Columns', defaultVal: 1, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Columns', localizationId: 'DevExpress.XtraPrinting.BarCode.PDF417Generator.Columns' },
    {
        propertyName: 'compactionMode1',
        modelName: '@CompactionMode', defaultVal: 'Text', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'Compaction Mode', localizationId: 'DevExpress.XtraPrinting.BarCode.PDF417Generator.CompactionMode',
        valuesArray: [
            { value: 'Binary', displayValue: 'Binary', localizationId: 'DevExpress.XtraPrinting.BarCode.PDF417CompactionMode.Binary' },
            { value: 'Text', displayValue: 'Text', localizationId: 'DevExpress.XtraPrinting.BarCode.PDF417CompactionMode.Text' }
        ]
    },
    {
        propertyName: 'errorCorrectionLevel',
        modelName: '@ErrorCorrectionLevel', defaultVal: 'Level2', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'Error Correction Level', localizationId: 'DevExpress.XtraPrinting.BarCode.PDF417Generator.ErrorCorrectionLevel',
        valuesArray: [
            { value: 'Level0', displayValue: 'Level0', localizationId: 'DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level0' },
            { value: 'Level1', displayValue: 'Level1', localizationId: 'DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level1' },
            { value: 'Level2', displayValue: 'Level2', localizationId: 'DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level2' },
            { value: 'Level3', displayValue: 'Level3', localizationId: 'DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level3' },
            { value: 'Level4', displayValue: 'Level4', localizationId: 'DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level4' },
            { value: 'Level5', displayValue: 'Level5', localizationId: 'DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level5' },
            { value: 'Level6', displayValue: 'Level6', localizationId: 'DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level6' },
            { value: 'Level7', displayValue: 'Level7', localizationId: 'DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level7' },
            { value: 'Level8', displayValue: 'Level8', localizationId: 'DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level8' }
        ]
    },
    { propertyName: 'rows', modelName: '@Rows', defaultVal: 0, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Rows', localizationId: 'DevExpress.XtraPrinting.BarCode.PDF417Generator.Rows' },
    { propertyName: 'yToXRatio', modelName: '@YToXRatio', defaultVal: 3, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Y to X Ratio', localizationId: 'DevExpress.XtraPrinting.BarCode.PDF417Generator.YToXRatio' },
    { propertyName: 'truncateSymbol', modelName: '@TruncateSymbol', defaultVal: false, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), displayName: 'Truncate Symbol', localizationId: 'DevExpress.XtraPrinting.BarCode.PDF417Generator.TruncateSymbol' }
];
var QRCodeSerializationInfo = [
    defaultCodeSerializationInfo,
    {
        propertyName: 'compactionMode2',
        modelName: '@CompactionMode', defaultVal: 'AlphaNumeric', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'Compaction Mode', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeGenerator.CompactionMode',
        valuesArray: [
            { value: 'Numeric', displayValue: 'Numeric', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeCompactionMode.Numeric' },
            { value: 'AlphaNumeric', displayValue: 'AlphaNumeric', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeCompactionMode.AlphaNumeric' },
            { value: 'Byte', displayValue: 'Byte', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeCompactionMode.Byte' }
        ]
    },
    {
        propertyName: 'errorCorrectionLevel1',
        modelName: '@ErrorCorrectionLevel', defaultVal: 'L', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'Error Correction Level', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeGenerator.ErrorCorrectionLevel',
        valuesArray: [
            { value: 'M', displayValue: 'M', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeErrorCorrectionLevel.M' },
            { value: 'L', displayValue: 'L', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeErrorCorrectionLevel.L' },
            { value: 'H', displayValue: 'H', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeErrorCorrectionLevel.H' },
            { value: 'Q', displayValue: 'Q', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeErrorCorrectionLevel.Q' }
        ]
    },
    {
        propertyName: 'logo',
        modelName: '@Logo',
        editor: { header: 'dxrd-image-loadfile', editorType: analytics_widgets_1.Editor },
        displayName: 'Logo',
        localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeGenerator.Logo',
        from: function (val) { return ko.observable(imageSource_1.ImageSource.parse(val)); },
        toJsonObject: imageSource_1.ImageSource.toString,
        defaultVal: null
    },
    {
        propertyName: 'IncludeQuietZone',
        modelName: '@IncludeQuietZone',
        displayName: 'Include Quiet Zone',
        localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeGenerator.IncludeQuietZone',
        defaultVal: true,
        editor: analytics_widgets_1.editorTemplates.getEditor('bool'),
        from: analytics_utils_1.parseBool
    },
    {
        propertyName: 'version',
        modelName: '@Version', defaultVal: 'Version1', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'Version', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeGenerator.Version',
        valuesArray: [
            { value: 'AutoVersion', displayValue: 'AutoVersion', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.AutoVersion' },
            { value: 'Version1', displayValue: 'Version1', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version1' },
            { value: 'Version2', displayValue: 'Version2', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version2' },
            { value: 'Version3', displayValue: 'Version3', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version3' },
            { value: 'Version4', displayValue: 'Version4', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version4' },
            { value: 'Version5', displayValue: 'Version5', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version5' },
            { value: 'Version6', displayValue: 'Version6', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version6' },
            { value: 'Version7', displayValue: 'Version7', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version7' },
            { value: 'Version8', displayValue: 'Version8', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version8' },
            { value: 'Version9', displayValue: 'Version9', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version9' },
            { value: 'Version10', displayValue: 'Version10', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version10' },
            { value: 'Version11', displayValue: 'Version11', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version11' },
            { value: 'Version12', displayValue: 'Version12', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version12' },
            { value: 'Version13', displayValue: 'Version13', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version13' },
            { value: 'Version14', displayValue: 'Version14', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version14' },
            { value: 'Version15', displayValue: 'Version15', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version15' },
            { value: 'Version16', displayValue: 'Version16', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version16' },
            { value: 'Version17', displayValue: 'Version17', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version17' },
            { value: 'Version18', displayValue: 'Version18', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version18' },
            { value: 'Version19', displayValue: 'Version19', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version19' },
            { value: 'Version20', displayValue: 'Version20', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version20' },
            { value: 'Version21', displayValue: 'Version21', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version21' },
            { value: 'Version22', displayValue: 'Version22', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version22' },
            { value: 'Version23', displayValue: 'Version23', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version23' },
            { value: 'Version24', displayValue: 'Version24', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version24' },
            { value: 'Version25', displayValue: 'Version25', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version25' },
            { value: 'Version26', displayValue: 'Version26', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version26' },
            { value: 'Version27', displayValue: 'Version27', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version27' },
            { value: 'Version28', displayValue: 'Version28', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version28' },
            { value: 'Version29', displayValue: 'Version29', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version29' },
            { value: 'Version30', displayValue: 'Version30', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version30' },
            { value: 'Version31', displayValue: 'Version31', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version31' },
            { value: 'Version32', displayValue: 'Version32', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version32' },
            { value: 'Version33', displayValue: 'Version33', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version33' },
            { value: 'Version34', displayValue: 'Version34', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version34' },
            { value: 'Version35', displayValue: 'Version35', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version35' },
            { value: 'Version36', displayValue: 'Version36', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version36' },
            { value: 'Version37', displayValue: 'Version37', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version37' },
            { value: 'Version38', displayValue: 'Version38', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version38' },
            { value: 'Version39', displayValue: 'Version39', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version39' },
            { value: 'Version40', displayValue: 'Version40', localizationId: 'DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version40' },
        ]
    }
];
var PharmacodeSerializationInfo = [
    defaultCodeSerializationInfo,
    {
        propertyName: 'pharmacodeType',
        modelName: '@PharmacodeType', defaultVal: 'OneTrack', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'PharmacodeType', localizationId: 'DevExpress.XtraPrinting.BarCode.PharmacodeGenerator.PharmacodeType',
        valuesArray: [
            { value: 'OneTrack', displayValue: 'OneTrack', localizationId: 'DevExpress.XtraPrinting.BarCode.PharmacodeType.OneTrack' },
            { value: 'TwoTrack', displayValue: 'TwoTrack', localizationId: 'DevExpress.XtraPrinting.BarCode.PharmacodeType.TwoTrack' }
        ]
    }
];
exports.autoModule = { propertyName: 'autoModule', modelName: '@AutoModule', defaultVal: false, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), displayName: 'Auto-Module', localizationId: 'DevExpress.XtraReports.UI.XRBarCode.AutoModule' };
exports.barCodeOrientation = {
    propertyName: 'barCodeOrientation',
    modelName: '@BarCodeOrientation', defaultVal: 'Normal',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    displayName: 'Orientation', localizationId: 'DevExpress.XtraReports.UI.XRBarCode.BarCodeOrientation', valuesArray: [
        { value: 'Normal', displayValue: 'Normal', localizationId: 'DevExpress.XtraPrinting.BarCode.BarCodeOrientation.Normal' },
        { value: 'UpsideDown', displayValue: 'UpsideDown', localizationId: 'DevExpress.XtraPrinting.BarCode.BarCodeOrientation.UpsideDown' },
        { value: 'RotateLeft', displayValue: 'RotateLeft', localizationId: 'DevExpress.XtraPrinting.BarCode.BarCodeOrientation.RotateLeft' },
        { value: 'RotateRight', displayValue: 'RotateRight', localizationId: 'DevExpress.XtraPrinting.BarCode.BarCodeOrientation.RotateRight' }
    ]
};
exports.moduleInfo = { propertyName: 'module', modelName: '@Module', defaultVal: 2, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Module', localizationId: 'DevExpress.XtraReports.UI.XRBarCode.Module' };
exports.showText = { propertyName: 'showText', modelName: '@ShowText', defaultVal: true, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), displayName: 'Show Text', localizationId: 'DevExpress.XtraReports.UI.XRBarCode.ShowText' };
exports.symbology = { propertyName: 'symbology', modelName: 'Symbology' };
exports.barcodeFake = { propertyName: 'barcodeFake', valuesArray: barCodesTypes_1.barCodesTypes, editor: editorTemplates_1.designerEditorTemplates.getEditor('contentByType'), displayName: 'Symbology', localizationId: 'DevExpress.XtraReports.UI.XRBarCode.Symbology' };
exports.alignment = {
    propertyName: 'alignment',
    modelName: '@Alignment', displayName: 'Alignment', localizationId: 'DevExpress.XtraReports.UI.XRBarCode.Alignment', defaultVal: 'TopLeft',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: metadata_1.textAlignmentValues
};
exports.barCodesMap = {
    'Codabar': codabarSerializationInfo,
    'Code11': [defaultCodeSerializationInfo],
    'Code128': code128SerializationInfo,
    'Code39': code39SerializationInfo,
    'Code39Extended': code39SerializationInfo,
    'Code93': code93SerializationInfo,
    'Code93Extended': code93SerializationInfo,
    'CodeMSI': codeMSISerializationInfo,
    'DataBar': dataBarSerializationInfo,
    'DataMatrix': dataMatrixSerializationInfo,
    'DataMatrixGS1': dataMatrixGS1SerializationInfo,
    'EAN128': EAN128SerializationInfo,
    'EAN13': [defaultCodeSerializationInfo],
    'EAN8': [defaultCodeSerializationInfo],
    'Industrial2of5': Industrial2of5SerializationInfo,
    'IntelligentMail': [defaultCodeSerializationInfo],
    'IntelligentMailPackage': [defaultCodeSerializationInfo, fnc1Substitute],
    'Interleaved2of5': Interleaved2of5SerializationInfo,
    'ITF14': Interleaved2of5SerializationInfo,
    'Matrix2of5': Industrial2of5SerializationInfo,
    'PDF417': PDF417SerializationInfo,
    'PostNet': [defaultCodeSerializationInfo],
    'QRCode': QRCodeSerializationInfo,
    'UPCA': [defaultCodeSerializationInfo],
    'UPCE0': [defaultCodeSerializationInfo],
    'UPCE1': [defaultCodeSerializationInfo],
    'UPCSupplemental2': [defaultCodeSerializationInfo],
    'UPCSupplemental5': [defaultCodeSerializationInfo],
    'Pharmacode': PharmacodeSerializationInfo,
    'DeutschePostIdentcode': [defaultCodeSerializationInfo, wideNarrowRatio3],
    'DeutschePostLeitcode': [defaultCodeSerializationInfo, wideNarrowRatio3]
};
exports.barcodeSerializationsInfo = [
    exports.alignment, exports.autoModule, exports.barCodeOrientation, exports.moduleInfo, exports.showText, exports.symbology, metadata_1.text, metadata_1.textFormatString, metadata_1.keepTogether, anchoring_1.anchorVertical, anchoring_1.anchorHorizontal,
    $.extend({}, metadata_1.textAlignment, { defaultVal: 'BottomLeft' }),
    scriptMetadata_1.textControlScripts, exports.barcodeFake,
    dataBinding_1.dataBindings(['Bookmark', 'NavigateUrl', 'Tag', 'Text']),
].concat(_metaUtils_1.createSinglePopularBindingInfos('Text'), metadataGroups_1.sizeLocation, metadataGroups_1.commonControlProperties, metadataGroups_1.fontGroup, metadataGroups_1.navigationGroup, metadataGroups_1.processGroup);
exports.popularPropertiesBarCode = ['barcodeFake', 'module', 'autoModule', 'barCodeOrientation', 'text', 'popularDataBinding', 'textFormatString', 'bookmark', 'bookmarkParent', 'showText'];


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var _commonValue_1 = __webpack_require__(114);
var _valueWeight_1 = __webpack_require__(167);
var _value1Value2_1 = __webpack_require__(168);
var _stockValue_1 = __webpack_require__(169);
var _control_1 = __webpack_require__(170);
var xrPivotgrid_1 = __webpack_require__(68);
var _localizationUtils_1 = __webpack_require__(63);
var controlParameter_1 = __webpack_require__(133);
var settings_1 = __webpack_require__(12);
var _reportRenderingService_1 = __webpack_require__(95);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var XRChartViewModel = (function (_super) {
    __extends(XRChartViewModel, _super);
    function XRChartViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, parent, serializer) || this;
        ['seriesDataMember', 'dataMember'].forEach(function (val) {
            _this[val] = ko.computed({
                read: function () {
                    return _this.chart.dataContainer[val]();
                }, write: function (newVal) {
                    _this.chart.dataContainer[val](newVal);
                }
            });
        });
        ['appearanceName', 'paletteName'].forEach(function (val) {
            _this[val] = ko.computed({
                read: function () {
                    return _this.chart[val]();
                }, write: function (newVal) {
                    _this.chart[val](newVal);
                }
            });
        });
        _this.controlParameters = analytics_utils_1.deserializeArray(model.Parameters, function (item) { return new controlParameter_1.ControlParameter(item, serializer); });
        _this._disposables.push(_this.controlParameters.subscribe(function (args) {
            args.forEach(function (change) {
                if (!change.value.parameterName()) {
                    change.value.parameterName(analytics_internal_1.getUniqueNameForNamedObjectsArray(_this.controlParameters(), 'controlParameter'));
                }
            });
        }, null, 'arrayChange'));
        _this.pivotGridDataSourceOptions = ko.computed(function () {
            return _this.chart.dataContainer.pivotGridDataSourceOptions;
        });
        _this.isPivotGridDataSource = ko.observable(_this.dataSource() instanceof xrPivotgrid_1.XRPivotGridViewModel);
        _this.isPivotGridDataSource.subscribe(function (newVal) {
            XRChartViewModel.setDataMembers(_this.chart, newVal);
        });
        _this.realDataSource = ko.computed(function () {
            _this.isPivotGridDataSource(_this.dataSource() instanceof xrPivotgrid_1.XRPivotGridViewModel);
            var rootSource = _this.root && _this.root['dataSource'] && _this.root['dataSource']();
            return _this.dataSource() || rootSource;
        });
        _this._disposables.push(ko.computed(function () {
            var dataSources = _this.root && _this.root.dsHelperProvider && _this.root.dsHelperProvider() && _this.root.dsHelperProvider().usedDataSources().map(function (ds) { return ds.data; });
            if (dataSources && !_this.isPivotGridDataSource() && dataSources.indexOf(_this.dataSource()) === -1)
                _this.dataSource(null);
        }));
        _this.chartModel = _this._createChartModel();
        _this.isPivotGridDataSource.subscribe(function (newVal) {
            XRChartViewModel.setDataMembers(_this.chart, newVal);
        });
        return _this;
    }
    XRChartViewModel.assignValueDataMembers = function (chart, str) {
        var valueDataMembers = chart.dataContainer.seriesTemplate.valueDataMembers();
        var assign = function (array) {
            array.forEach(function (property) { valueDataMembers[property](str); });
        };
        if (valueDataMembers instanceof _commonValue_1.CommonValueDataMembers) {
            assign(['value']);
        }
        else if (valueDataMembers instanceof _valueWeight_1.ValueWeightDataMembers) {
            assign(['value', 'weight']);
        }
        else if (valueDataMembers instanceof _value1Value2_1.Value1Value2DataMembers) {
            assign(['value1', 'value2']);
        }
        else if (valueDataMembers instanceof _stockValue_1.StockValueDataMembers) {
            assign(['open', 'close', 'hight', 'low']);
        }
    };
    XRChartViewModel.setDataMembers = function (chart, isPivotGrid) {
        if (isPivotGrid) {
            XRChartViewModel.assignValueDataMembers(chart, 'Values');
            chart.dataContainer.seriesTemplate.argumentDataMember('Arguments');
            chart.dataContainer.seriesDataMember('Series');
        }
        else {
            XRChartViewModel.assignValueDataMembers(chart, null);
            chart.dataContainer.seriesTemplate.argumentDataMember(null);
            chart.dataContainer.seriesDataMember(null);
        }
    };
    XRChartViewModel.prototype._createChartModel = function () {
        var _this = this;
        var model = new _control_1.ChartControlViewModel({
            chart: this.chart,
            dataSource: this.dataSource,
            parameters: this.controlParameters
        });
        model.isSeriesPropertyDisabled = function (propertyName) {
            if (!_this.realDataSource() || (_this.realDataSource() instanceof xrPivotgrid_1.XRPivotGridViewModel)) {
                return propertyName === 'argumentDataMember' || propertyName === 'valueDataMembers' || propertyName === 'colorDataMember';
            }
        };
        model.isSeriesTemplatePropertyDisabled = function (propertyName) {
            if (!_this.realDataSource() || (_this.realDataSource() instanceof xrPivotgrid_1.XRPivotGridViewModel && model.chart.dataContainer.pivotGridDataSourceOptions.autoBindingSettingsEnabled())) {
                return propertyName === 'argumentDataMember' || propertyName === 'valueDataMembers' || propertyName === 'valueScaleType' || propertyName === 'argumentScaleType';
            }
        };
        model.getPath = function (propertyName) {
            if (_this.realDataSource() instanceof xrPivotgrid_1.XRPivotGridViewModel || propertyName === 'dataMember')
                return _this.getPath(propertyName);
            if (propertyName === 'seriesDataMember') {
                return analytics_internal_1.getFullPath(_this.getPath('dataMember'), model.dataMember());
            }
        };
        model.isPropertyDisabled = function (propertyName) {
            return _this.isPropertyDisabled(propertyName);
        };
        return model;
    };
    XRChartViewModel.prototype.createLocalizationProvider = function () {
        return new _localizationUtils_1.ChartLocalizationProvider(this);
    };
    XRChartViewModel.prototype.isPropertyDisabled = function (name) {
        if (!this.realDataSource() || (this.realDataSource() instanceof xrPivotgrid_1.XRPivotGridViewModel && this.pivotGridDataSourceOptions()['autoBindingSettingsEnabled']())) {
            return name === 'seriesDataMember' || name === 'dataMember';
        }
        else if (!this.realDataSource() || this.realDataSource() instanceof xrPivotgrid_1.XRPivotGridViewModel) {
            return name === 'dataMember';
        }
        return _super.prototype.isPropertyDisabled.call(this, name);
    };
    XRChartViewModel.prototype.getPath = function (propertyName) {
        if (this.dataSource() instanceof xrPivotgrid_1.XRPivotGridViewModel) {
            return ['PivotGrid', propertyName].join('.');
        }
        var dsHelperProvider = this.dsHelperProvider();
        var dataSourceName = dsHelperProvider && dsHelperProvider.getDataSourcePath(this.realDataSource());
        if (propertyName === 'seriesDataMember') {
            return analytics_internal_1.getFullPath(dataSourceName, this.dataMember());
        }
        else if (propertyName === 'dataMember') {
            return dataSourceName;
        }
    };
    return XRChartViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRChartViewModel = XRChartViewModel;
var XRChartSurface = (function (_super) {
    __extends(XRChartSurface, _super);
    function XRChartSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this.designTime = ko.observable(false);
        _this.isLoading = ko.observable(false);
        _this.imageSrc = ko.observable('');
        _this.template = 'dxrd-shape';
        _this.contenttemplate = 'dxrd-shape-content';
        _this.selectiontemplate = 'dxrd-chart-selection';
        _this._disposables.push(ko.computed(function () {
            if (!_this.designTime()) {
                var _self = _this;
                if (settings_1.HandlerUri()) {
                    _self.isLoading(true);
                    _reportRenderingService_1.ReportRenderingService.getChartImage(_this).done(function (result) {
                        _self.isLoading(false);
                        _self.imageSrc('data:image/svg+xml;base64,' + result.Image);
                    }).fail(function (jqXHR) {
                        _self.isLoading(false);
                        analytics_internal_1.NotifyAboutWarning('Impossible to get chart image.');
                    });
                }
            }
        }).extend({ deferred: true }));
        return _this;
    }
    XRChartSurface.prototype.runDesignerButtonText = function () {
        return analytics_utils_1.getLocalization('Run Designer', 'ReportStringId.Verb_RunDesigner');
    };
    return XRChartSurface;
}(xrControl_1.XRControlSurface));
exports.XRChartSurface = XRChartSurface;


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var settings_1 = __webpack_require__(12);
var sortBySummary_1 = __webpack_require__(132);
var xrControl_1 = __webpack_require__(10);
var analytics_elements_1 = __webpack_require__(5);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var xrReport_1 = __webpack_require__(16);
var PivotGridFieldViewModel = (function (_super) {
    __extends(PivotGridFieldViewModel, _super);
    function PivotGridFieldViewModel(model, parent, serializer) {
        var _this = _super.call(this, analytics_internal_1.cutRefs(model), parent, serializer) || this;
        _this.controlType = 'PivotGridField';
        _this.areaIndexEditable = ko.pureComputed({
            read: function () { return _this.areaIndex(); },
            write: function (newValue) {
                if (newValue >= 0) {
                    var fields = parent['getFieldsFromArea'](_this.area());
                    if (newValue >= fields.length)
                        return;
                    var currentValue = _this.areaIndex(), delta = newValue < currentValue ? 1 : -1, min = Math.min(newValue, currentValue), max = Math.max(newValue, currentValue);
                    fields.forEach(function (field) {
                        var fieldAreaIndex = field.areaIndex();
                        if (min <= fieldAreaIndex && fieldAreaIndex <= max)
                            field.areaIndex(fieldAreaIndex + delta);
                    });
                    _this.areaIndex(newValue);
                }
            }
        });
        _this._disposables.push(_this.area.subscribe(function (newValue) {
            _this.areaIndex(parent['getFieldsFromArea'](_this.area()).length - 1);
        }));
        _this.sortBySummaryInfo = new sortBySummary_1.SortBySummaryInfo(_this.sortBySummaryInfo || {}, _this, serializer);
        return _this;
    }
    PivotGridFieldViewModel.createNew = function (parent) {
        return function () {
            return new PivotGridFieldViewModel({}, ko.unwrap(parent), null);
        };
    };
    PivotGridFieldViewModel.prototype.getFieldType = function () {
        var _this = this;
        var report = this.root;
        if (!report || !(report instanceof xrReport_1.ReportViewModel))
            return;
        var dataBindingsProvider = report.dataBindingsProvider && report.dataBindingsProvider();
        var resultItem;
        if (dataBindingsProvider) {
            dataBindingsProvider.getItems(new analytics_utils_1.PathRequest(this.getPath(''))).done(function (result) {
                resultItem = analytics_internal_1.findFirstItemMatchesCondition(result, function (x) { return x.name === _this.fieldName(); });
            });
        }
        if (resultItem && resultItem.specifics)
            return resultItem.specifics;
    };
    PivotGridFieldViewModel.prototype.getInfo = function () {
        return this.getControlFactory().controlsMap['PivotGridField'].info;
    };
    PivotGridFieldViewModel.prototype.getControlFactory = function () {
        return settings_1.controlsFactory();
    };
    PivotGridFieldViewModel.prototype.getPath = function (propertyName) {
        return analytics_internal_1.getFullPath(this.parentModel()['getPath'](''), this.parentModel()['dataMember']());
    };
    PivotGridFieldViewModel.prototype.getDisplayName = function () {
        return this.caption() || this.fieldName() || this.name() || this['displayName'] && this['displayName']();
    };
    PivotGridFieldViewModel.fieldHeight = 20;
    return PivotGridFieldViewModel;
}(analytics_elements_1.ElementViewModel));
exports.PivotGridFieldViewModel = PivotGridFieldViewModel;
var PivotGridFieldSurface = (function (_super) {
    __extends(PivotGridFieldSurface, _super);
    function PivotGridFieldSurface(control, context) {
        var _this = _super.call(this, control, context, null) || this;
        _this.isIntersect = ko.computed(function () { return false; });
        _this.displayText = function () {
            return control.caption() || control.fieldName() || (control['displayName']() || '');
        };
        _this._disposables.push(ko.computed(function () {
            _this._width(control['width']() * context.zoom());
            _this._height(PivotGridFieldViewModel.fieldHeight * context.zoom());
        }));
        _this.template = 'dxrd-pivotgrid-field';
        _this.selectiontemplate = 'dxrd-pivotgrid-field-selection';
        _this.area = control.area;
        _this.areaIndex = control.areaIndex;
        _this._disposables.push(_this.minWidth = ko.pureComputed(function () {
            return _this.area() === 'ColumnArea' || _this.area() === 'FilterArea' ? 100 : 0;
        }));
        _this._disposables.push(_this.positionWidthWithoutZoom = ko.pureComputed(function () {
            return _this['position'].width() / _this._context.zoom();
        }));
        return _this;
    }
    return PivotGridFieldSurface;
}(xrControl_1.XRControlSurfaceBase));
exports.PivotGridFieldSurface = PivotGridFieldSurface;


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sortBySummary_1 = __webpack_require__(94);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var $ = __webpack_require__(3);
var SortBySummaryInfoCondition = (function () {
    function SortBySummaryInfoCondition(model, fieldsProvider, serializer) {
        this._fieldsProvider = fieldsProvider;
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(this, model);
    }
    SortBySummaryInfoCondition.prototype.getInfo = function () {
        var fields = this._fieldsProvider.fieldsAvailableForCondition();
        if (fields.length < 1) {
            return sortBySummary_1.sortBySummaryConditionInfo;
        }
        var conditionInfoClone = sortBySummary_1.sortBySummaryConditionInfo.slice(0), fieldComponentName = analytics_internal_1.find(sortBySummary_1.sortBySummaryConditionInfo, function (item) { return item.modelName === '@FieldComponentName'; }), fieldComponentNameClone = $.extend(true, {}, fieldComponentName);
        fields.forEach(function (fieldName) { fieldComponentNameClone.valuesArray.push({ value: fieldName, displayValue: fieldName }); });
        conditionInfoClone.splice(conditionInfoClone.indexOf(fieldComponentName), 1, fieldComponentNameClone);
        return conditionInfoClone;
    };
    SortBySummaryInfoCondition.createNew = function (parent, serializer) {
        return new SortBySummaryInfoCondition({}, parent, serializer);
    };
    return SortBySummaryInfoCondition;
}());
exports.SortBySummaryInfoCondition = SortBySummaryInfoCondition;
var SortBySummaryInfo = (function () {
    function SortBySummaryInfo(model, field, serializer) {
        var _this = this;
        this._field = field;
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(this, model, sortBySummary_1.sortBySummaryInfo);
        this.conditions = analytics_utils_1.deserializeArray(model['Conditions'] || {}, function (item) { return new SortBySummaryInfoCondition(item, _this, serializer); });
    }
    SortBySummaryInfo.prototype._pivotGridFields = function () {
        return this._field.parentModel().fields;
    };
    SortBySummaryInfo.prototype.getInfo = function () {
        var _this = this;
        var fields = this._pivotGridFields();
        if (!fields) {
            return sortBySummary_1.sortBySummaryInfo;
        }
        var sortBySummaryInfoClone = sortBySummary_1.sortBySummaryInfo.slice(0), fieldComponentName = analytics_internal_1.find(sortBySummary_1.sortBySummaryInfo, function (item) { return item.modelName === '@FieldComponentName'; }), fieldComponentNameClone = $.extend(true, {}, fieldComponentName);
        fields().forEach(function (field) {
            if (field.name() !== _this._field.name()) {
                fieldComponentNameClone.valuesArray.push({ value: field.name(), displayValue: field.name() });
            }
        });
        sortBySummaryInfoClone.splice(sortBySummary_1.sortBySummaryInfo.indexOf(fieldComponentName), 1, fieldComponentNameClone);
        return sortBySummaryInfoClone;
    };
    SortBySummaryInfo.prototype.fieldsAvailableForCondition = function () {
        var _this = this;
        var fields = this._pivotGridFields();
        if (!fields) {
            return [];
        }
        var result = [];
        fields().forEach(function (field) {
            var condition = analytics_internal_1.find(_this.conditions(), function (item) { return item.fieldComponentName() === field.name(); });
            if (!condition) {
                result.push(field.name());
            }
        });
        return result;
    };
    SortBySummaryInfo.from = function (model, serializer) {
        return model;
    };
    SortBySummaryInfo.toJSON = function (viewModel, serializer, refs) {
        return (serializer || new analytics_utils_1.ModelSerializer()).serialize(viewModel, sortBySummary_1.sortBySummaryInfo, refs);
    };
    return SortBySummaryInfo;
}());
exports.SortBySummaryInfo = SortBySummaryInfo;


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var dataBinding_1 = __webpack_require__(125);
var controlParameter_1 = __webpack_require__(291);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var ControlParameter = (function (_super) {
    __extends(ControlParameter, _super);
    function ControlParameter(model, serializer) {
        var _this = _super.call(this, model, serializer) || this;
        _this.visible = ko.observable(true);
        _this.dataMemberInfo = ko.observable();
        _this.fakeBinding = _this;
        return _this;
    }
    ControlParameter.createNew = function () {
        return new ControlParameter({}, null);
    };
    ControlParameter.prototype.getInfo = function () {
        return controlParameter_1.controlParameterInfos;
    };
    ControlParameter.prototype.isEmpty = function () {
        return false;
    };
    ControlParameter.prototype.setDataMemberInfo = function (dataMemberInfo) {
        this.dataMemberInfo(dataMemberInfo);
    };
    Object.defineProperty(ControlParameter.prototype, "specifics", {
        get: function () {
            if (this.parameter())
                return this.parameter().specifics;
            return this.dataMemberInfo() && this.dataMemberInfo().specifics;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ControlParameter.prototype, "name", {
        get: function () {
            return this.parameterName();
        },
        enumerable: true,
        configurable: true
    });
    ControlParameter.prototype.generateValue = function (undoEngine, dataSourceHelper, dataSources, dataBindingsProvider) {
        var _this = this;
        var value = _super.prototype.generateValue.call(this, undoEngine, dataSourceHelper, dataSources);
        if (dataBindingsProvider && this.dataSource() && !this.dataMemberInfo()) {
            var dataSourcePath = dataSourceHelper.getDataSourcePath(this.dataSource());
            var dataMemberParts = (this.dataMember() || '').split('.');
            var valueMember = dataMemberParts.pop();
            var dataMember = dataMemberParts.join('.');
            var request = new analytics_utils_1.PathRequest(dataSourcePath + (dataMember ? '.' + dataMember : ''));
            dataBindingsProvider.getItems(request).done(function (result) {
                _this.dataMemberInfo(result.filter(function (x) { return x.name === valueMember; })[0]);
            });
        }
        return value;
    };
    return ControlParameter;
}(dataBinding_1.DataBindingBase));
exports.ControlParameter = ControlParameter;


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var xrReportelement_1 = __webpack_require__(27);
var _locker_1 = __webpack_require__(32);
var xrTextControl_1 = __webpack_require__(135);
var checkEditingField_1 = __webpack_require__(119);
var analytics_elements_1 = __webpack_require__(5);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var XRCheckBoxViewModel = (function (_super) {
    __extends(XRCheckBoxViewModel, _super);
    function XRCheckBoxViewModel(control, parent, serializer) {
        var _this = _super.call(this, XRCheckBoxViewModel._patchModel(control), parent, serializer) || this;
        var lock = new _locker_1.Locker().lock;
        _this._disposables.push(_this.checkBoxState.subscribe(function (val) {
            lock(function () {
                _this.checked(val === 'Checked' || val === 'Indeterminate');
            });
        }));
        _this._disposables.push(_this.checked.subscribe(function (val) {
            lock(function () {
                _this.checkBoxState(val ? 'Checked' : 'Unchecked');
            });
        }));
        if (_this.checkBoxState() !== 'Unchecked') {
            _this.checkBoxState.valueHasMutated();
        }
        else if (_this.checked() !== false) {
            _this.checked.valueHasMutated();
        }
        if (_this.glyphOptions && ko.isObservable(_this.glyphOptions.alignment))
            _this.glyphAlignment = _this.glyphOptions.alignment;
        return _this;
    }
    XRCheckBoxViewModel._patchModel = function (model) {
        if (model['@CheckState']) {
            model['@CheckBoxState'] = model['@CheckState'];
            delete model['@CheckState'];
        }
        return model;
    };
    XRCheckBoxViewModel.unitProperties = [].concat(['glyphOptions'], xrReportelement_1.XRReportElementViewModel.unitProperties);
    return XRCheckBoxViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRCheckBoxViewModel = XRCheckBoxViewModel;
var XRCheckBoxSurface = (function (_super) {
    __extends(XRCheckBoxSurface, _super);
    function XRCheckBoxSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this.checkStateWidthContainer = ko.observable();
        _this.visibleText = ko.observable(true);
        _this.contenttemplate = 'dxrd-checkbox-content';
        _this._disposables.push(_this.checkStateWidth = ko.computed(function () {
            return analytics_internal_1.unitsToPixel(control.glyphOptions.size.width(), context.measureUnit(), 1);
        }));
        _this._disposables.push(_this.checkStateHeight = ko.computed(function () {
            return analytics_internal_1.unitsToPixel(control.glyphOptions.size.height(), context.measureUnit(), 1);
        }));
        _this._disposables.push(_this.checkStateClass = ko.pureComputed(function () {
            return 'dxrd-checkbox-checkstate-' + control['checkBoxState']().toLowerCase();
        }));
        _this._disposables.push(_this.customGlyphStyleCss = ko.pureComputed(function () {
            return checkEditingField_1.createCustomGlyphStyleCss(control.glyphOptions.customGlyphs[control['checkBoxState']()]());
        }));
        _this._disposables.push(_this.checkStateStyleIcon = ko.pureComputed(function () {
            return checkEditingField_1.getCheckBoxTemplate(control.glyphOptions.style(), control['checkBoxState'](), _this.customGlyphStyleCss());
        }));
        _this.leftPadding = function () {
            var padding = ko.unwrap(control['paddingObj']) || analytics_elements_1.PaddingModel.from(analytics_elements_1.PaddingModel.defaultVal);
            return analytics_internal_1.unitsToPixel(padding.left(), context.measureUnit());
        };
        _this._disposables.push(_this.textWidth = ko.pureComputed(function () {
            return _this.contentWidthWithoutZoom() - _this.checkStateWidth() - _this.leftPadding();
        }));
        _this._disposables.push(_this.visibleText = ko.pureComputed(function () {
            return control['glyphAlignment']() !== 'Center';
        }));
        _this._disposables.push(_this.checkStateWidthContainer = ko.pureComputed(function () {
            return _this.visibleText() ? _this.checkStateWidth() + 'px' : '100%';
        }));
        _this.isGlyphAlignmentNear = ko.pureComputed(function () {
            return _this._control.rtl() ? control['glyphAlignment']() === 'Far' : control['glyphAlignment']() === 'Near';
        });
        _this._disposables.push(_this.css = ko.pureComputed(function () {
            return $.extend({}, _this.cssCalculator.fontCss(), _this.cssCalculator.backGroundCss(), _this.cssCalculator.foreColorCss(), _this.cssCalculator.textAlignmentCss(), _this.cssCalculator.paddingsCss());
        }));
        return _this;
    }
    return XRCheckBoxSurface;
}(xrTextControl_1.XRTextControlSurfaceBase));
exports.XRCheckBoxSurface = XRCheckBoxSurface;


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var _textElementSizeHelper_1 = __webpack_require__(93);
var fitTextToBoundsAction_1 = __webpack_require__(293);
var fitBoundsToTextAction_1 = __webpack_require__(294);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var analytics_widgets_internal_1 = __webpack_require__(8);
var XRTextControlSurfaceBase = (function (_super) {
    __extends(XRTextControlSurfaceBase, _super);
    function XRTextControlSurfaceBase(control, context, units) {
        if (units === void 0) { units = xrControl_1.XRControlSurface._unitProperties; }
        var _this = _super.call(this, control, context, units) || this;
        _this._$element = ko.observable(null);
        _this._font = null;
        _this.contenttemplate = 'dxrd-textcontrol-content';
        _this['multiline'] = control['multiline'] || false;
        _this._disposables.push(_this._font = new analytics_widgets_internal_1.FontModel(control['font']));
        var canGrow = function () { return control['canGrow'] && control['canGrow'](); };
        var textElementSizeHelper = new _textElementSizeHelper_1.TextElementSizeHelper();
        _this.fitTextToBoundsAction = new fitTextToBoundsAction_1.FitTextToBoundsAction(_this, textElementSizeHelper);
        _this.fitBoundsToTextAction = new fitBoundsToTextAction_1.FitBoundsToTextAction(_this, textElementSizeHelper);
        _this._disposables.push(_this.characterHeight = ko.computed(function () {
            return textElementSizeHelper.getTextContainerSize('a', {
                'font-size': _this._font.size() + _this._font.unit(),
                'font-family': _this._font.family(),
                'height': 'auto',
                'width': 'auto'
            }).height;
        }));
        _this._disposables.push(ko.computed(function () {
            if (_this._$element()) {
                _this._$element().height('auto');
                var text = _this._control['text']();
                var characterHeight = _this.characterHeight();
                var contentHeight = _this._$element().height();
                if (contentHeight > _this.rect().height && !canGrow()) {
                    var visibleHeight = Math.floor(_this.rect().height / characterHeight) * characterHeight;
                    if (visibleHeight)
                        _this._$element().height(visibleHeight + 'px');
                }
            }
        }));
        return _this;
    }
    XRTextControlSurfaceBase.prototype.getAlignments = function () {
        var textAlignment = this._control['textAlignment']();
        var vertical = '';
        var horizontal = '';
        for (var i = 0; i < textAlignment.length; i++) {
            if (textAlignment[i] === textAlignment[i].toLocaleUpperCase()) {
                if (vertical === '') {
                    vertical += textAlignment[i];
                }
                else if (vertical !== '') {
                    horizontal += textAlignment[i];
                }
            }
            else {
                if (horizontal !== '') {
                    horizontal += textAlignment[i];
                }
                else {
                    vertical += textAlignment[i];
                }
            }
        }
        return {
            vertical: vertical,
            horizontal: horizontal
        };
    };
    XRTextControlSurfaceBase.prototype.getWordWrap = function () {
        return this._control['wordWrap'] && this._control['wordWrap']();
    };
    XRTextControlSurfaceBase.prototype.getCssContent = function (content) {
        if (content === void 0) { content = {}; }
        return analytics_internal_1.extend({}, this.contentCss(), {
            'box-sizing': 'border-box',
            'height': 'auto',
            'display': 'inline-block',
            'width': 'auto',
            'transform': 'scale(' + this._context.zoom() + ')'
        }, content);
    };
    XRTextControlSurfaceBase.prototype.getContentSize = function () {
        return this.contentSizes();
    };
    XRTextControlSurfaceBase.prototype.getText = function () {
        return this.displayText();
    };
    XRTextControlSurfaceBase.prototype.getFontModel = function () {
        return this._font;
    };
    XRTextControlSurfaceBase.prototype.setFontSize = function (size) {
        this._font.size(size);
    };
    XRTextControlSurfaceBase.prototype.cacheElementContent = function ($element) {
        this._$element(null);
        this._$element($element);
    };
    XRTextControlSurfaceBase.prototype.fitTextToBounds = function () {
        this.fitTextToBoundsAction.fit();
    };
    XRTextControlSurfaceBase.prototype.fitWidthToText = function () {
        this.fitBoundsToTextAction.fitWidth();
    };
    XRTextControlSurfaceBase.prototype.fitHeightToText = function () {
        this.fitBoundsToTextAction.fitHeight();
    };
    XRTextControlSurfaceBase.prototype.fitBoundsToText = function () {
        this.fitBoundsToTextAction.fitBounds();
    };
    return XRTextControlSurfaceBase;
}(xrControl_1.XRControlSurfaceBase));
exports.XRTextControlSurfaceBase = XRTextControlSurfaceBase;


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var $ = __webpack_require__(3);
exports.circularValues = [
    { displayValue: 'Half', value: 'Half', localizationId: 'GaugesPresetsStringId.ShapeHalf' },
    { displayValue: 'Full', value: 'Full', localizationId: 'GaugesPresetsStringId.ShapeFull' },
    { displayValue: 'QuarterLeft', value: 'QuarterLeft', localizationId: 'GaugesPresetsStringId.ShapeQuarterLeft' },
    { displayValue: 'QuarterRight', value: 'QuarterRight', localizationId: 'GaugesPresetsStringId.ShapeQuarterRight' },
    { displayValue: 'ThreeFourth', value: 'ThreeFourth', localizationId: 'GaugesPresetsStringId.ShapeThreeFourth' }
];
exports.linearValues = [
    { displayValue: 'Horizontal', value: 'Horizontal', localizationId: 'GaugesPresetsStringId.ShapeHorizontal' },
    { displayValue: 'Vertical', value: 'Vertical', localizationId: 'GaugesPresetsStringId.ShapeVertical' }
];
var XRGaugeViewModel = (function (_super) {
    __extends(XRGaugeViewModel, _super);
    function XRGaugeViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, parent, serializer) || this;
        _this._disposables.push(_this.viewType.subscribe(function (val) {
            return _this.viewStyle(val === 'Circular' ? exports.circularValues[0].value : exports.linearValues[0].value);
        }));
        return _this;
    }
    XRGaugeViewModel.prototype.getInfo = function () {
        var serializationInfo = $.extend(true, [], _super.prototype.getInfo.call(this));
        var viewStyleProperty = serializationInfo.filter(function (info) { return info.propertyName === 'viewStyle'; })[0];
        viewStyleProperty.defaultVal = this.viewType && (this.viewType() === 'Linear') ? 'Horizontal' : 'Half';
        return serializationInfo;
    };
    XRGaugeViewModel.bindings = ['ActualValue', 'Maximum', 'Minimum', 'TargetValue'];
    return XRGaugeViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRGaugeViewModel = XRGaugeViewModel;


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var scriptMetadata_1 = __webpack_require__(13);
var dataBinding_1 = __webpack_require__(17);
var metadataGroups_1 = __webpack_require__(11);
var metadata_1 = __webpack_require__(6);
var editorTemplates_1 = __webpack_require__(9);
var analytics_internal_1 = __webpack_require__(2);
var xrSubreport_1 = __webpack_require__(96);
var metadata_2 = __webpack_require__(453);
exports.pdfSource = { propertyName: 'source', modelName: '@SourceSerializable', displayName: 'Source', defaultVal: null, editor: editorTemplates_1.designerEditorTemplates.getEditor('pdfContentLoad'), localizationId: 'DevExpress.XtraReports.UI.XRPdfContent.Source' };
exports.pdfSourceUrl = { propertyName: 'sourceUrl', modelName: '@SourceUrl', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('text'), displayName: 'Source Url', localizationId: 'DevExpress.XtraReports.UI.XRPdfContent.SourceUrl' };
var generateOwnPagesPdfContent = analytics_internal_1.extend({}, xrSubreport_1.generateOwnPages, { defaultVal: true, localizationId: 'DevExpress.XtraReports.UI.XRPdfContent.GenerateOwnPages' });
exports.pageCount = { propertyName: 'pageCount', modelName: '@PageCount', displayName: 'PageCount', localizationId: 'DevExpress.XtraReports.UI.XRPdfContent.PageCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), disabled: true, defaultVal: 0 };
var pageRangePdfContent = analytics_internal_1.extend({}, metadata_2.pageRange, { localizationId: 'DevExpress.XtraReports.UI.XRPdfContent.PageRange' });
exports.pdfContentSerializationInfo = [exports.pdfSource, exports.pdfSourceUrl, scriptMetadata_1.pdfContentScripts, generateOwnPagesPdfContent, pageRangePdfContent, exports.pageCount, dataBinding_1.dataBindings(['Bookmark', 'Source', 'SourceUrl', 'PageRange'])].concat(metadataGroups_1.sizeLocation, metadataGroups_1.baseControlProperties, metadataGroups_1.bookmarkGroup, [metadata_1.tag]);
exports.popularPropertiesPdfContent = ['name', 'source', 'sourceUrl', 'generateOwnPages'];


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var analytics_utils_1 = __webpack_require__(0);
var UnknownViewModel = (function (_super) {
    __extends(UnknownViewModel, _super);
    function UnknownViewModel(model, parent, serializer) {
        if (serializer === void 0) { serializer = new analytics_utils_1.ModelSerializer(); }
        var _this = _super.call(this, model, parent, serializer) || this;
        serializer._collectLinksAndEnumRefs(_this._model);
        return _this;
    }
    return UnknownViewModel;
}(xrControl_1.XRControlViewModel));
exports.UnknownViewModel = UnknownViewModel;
var TodoControlSurface = (function (_super) {
    __extends(TodoControlSurface, _super);
    function TodoControlSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this['controlTypeClass'] = 'dxrd-image-todo-' + control.controlType.slice(2).toLowerCase();
        _this['controlTypeIconTemplate'] = 'dxrd-svg-todo-' + control.controlType.slice(2).toLowerCase();
        _this.template = 'dxrd-todocontrol';
        return _this;
    }
    return TodoControlSurface;
}(xrControl_1.XRControlSurface));
exports.TodoControlSurface = TodoControlSurface;


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var metadata_1 = __webpack_require__(6);
var anchoring_1 = __webpack_require__(20);
var scriptMetadata_1 = __webpack_require__(13);
var dataBinding_1 = __webpack_require__(17);
var metadataGroups_1 = __webpack_require__(11);
var analytics_utils_1 = __webpack_require__(0);
var editorTemplates_1 = __webpack_require__(9);
var shapes = {
    'Rectangle': 'Rectangle',
    'Ellipse': 'Ellipse',
    'Top Arrow': 'Top Arrow',
    'Right Arrow': 'Right Arrow',
    'Bottom Arrow': 'Bottom Arrow',
    'Left Arrow': 'Left Arrow',
    'Triangle': 'Triangle',
    'Square': 'Square',
    'Pentagon': 'Pentagon',
    'Hexagon': 'Hexagon',
    'Octagon': 'Octagon',
    '3-Point Star': '3-Point Star',
    '4-Point Star': '4-Point Star',
    '5-Point Star': '5-Point Star',
    '6-Point Star': '6-Point Star',
    '8-Point Star': '8-Point Star',
    'Vertical Line': 'Vertical Line',
    'Horizontal Line': 'Horizontal Line',
    'Slant Line': 'Slant Line',
    'Backslant Line': 'Backslant Line',
    'Cross': 'Cross',
    'Bracket': 'Bracket',
    'Brace': 'Brace'
};
exports.shapeType = { propertyName: 'shapeType', modelName: '@ShapeName', defaultVal: 'Ellipse' };
exports.stretch = { propertyName: 'stretch', modelName: '@Stretch', defaultVal: false, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), displayName: 'Stretch', localizationId: 'DevExpress.XtraReports.UI.XRShape.Stretch' };
exports.fillColor = { propertyName: 'fillColor', modelName: '@FillColor', defaultVal: 'transparent', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, displayName: 'Fill Color', localizationId: 'DevExpress.XtraReports.UI.XRShape.FillColor' };
exports.Shape = { propertyName: 'Shape', modelName: 'Shape' };
exports.shapeFake = { propertyName: 'shapeFake', editor: editorTemplates_1.designerEditorTemplates.getEditor('contentByType'), displayName: 'Shape', values: shapes, localizationId: 'DevExpress.XtraReports.UI.XRShape.Shape' };
exports.shapeElementSerializationsInfo = [exports.shapeType];
var fillet = { propertyName: 'fillet', modelName: '@Fillet', defaultVal: 0, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Fillet', localizationId: 'DevExpress.XtraPrinting.Shape.FilletShapeBase.Fillet' };
var shapeRectangleSerializationsInfo = [exports.shapeType, fillet];
var shapeStarSerializationsInfo = [
    exports.shapeType,
    { propertyName: 'concavity', modelName: '@Concavity', defaultVal: 50, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Concavity', localizationId: 'DevExpress.XtraPrinting.Shape.ShapeStar.Concavity' },
    { propertyName: 'starPointCount', modelName: '@StarPointCount', defaultVal: 3, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Count of Star Points', localizationId: 'DevExpress.XtraPrinting.Shape.ShapeStar.StarPointCount' },
    fillet
];
var shapeBraceSerializationsInfo = [
    exports.shapeType,
    { propertyName: 'fillet', modelName: '@Fillet', defaultVal: 50, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Fillet', localizationId: 'DevExpress.XtraPrinting.Shape.ShapeBrace.Fillet' },
    { propertyName: 'tailLength', modelName: '@TailLength', defaultVal: 20, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: "Tail\'s Length", localizationId: 'DevExpress.XtraPrinting.Shape.ShapeBrace.TailLength' },
    { propertyName: 'tipLength', modelName: '@TipLength', defaultVal: 20, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: "Tip\'s Length", localizationId: 'DevExpress.XtraPrinting.Shape.ShapeBracket.TipLength' }
];
var shapeBracketSerializationsInfo = [
    exports.shapeType,
    { propertyName: 'tipLength', modelName: '@TipLength', defaultVal: 20, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: "Tip\'s Length", localizationId: 'DevExpress.XtraPrinting.Shape.ShapeBracket.TipLength' }
];
var shapePolygonSerializationsInfo = [
    exports.shapeType, fillet,
    { propertyName: 'numberOfSides', modelName: '@NumberOfSides', defaultVal: 3, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Number of Sides', localizationId: 'DevExpress.XtraPrinting.Shape.ShapePolygon.NumberOfSides' },
];
var shapeArrowSerializationsInfo = [
    exports.shapeType,
    { propertyName: 'arrowHeight', modelName: '@ArrowHeight', defaultVal: 50, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Arrow Height', localizationId: 'DevExpress.XtraPrinting.Shape.ShapeArrow.ArrowHeight' },
    { propertyName: 'arrowWidth', modelName: '@ArrowWidth', defaultVal: 50, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Arrow Width', localizationId: 'DevExpress.XtraPrinting.Shape.ShapeArrow.ArrowWidth' },
    fillet
];
var shapeCrossSerializationsInfo = [
    exports.shapeType, fillet,
    { propertyName: 'horizontalLineWidth', modelName: '@HorizontalLineWidth', defaultVal: 50, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Horizontal Line Width', localizationId: 'DevExpress.XtraPrinting.Shape.ShapeCross.HorizontalLineWidth' },
    { propertyName: 'verticalLineWidth', modelName: '@VerticalLineWidth', defaultVal: 50, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Vertical Line Width', localizationId: 'DevExpress.XtraPrinting.Shape.ShapeCross.VerticalLineWidth' }
];
exports.shapesMap = {
    'Rectangle': shapeRectangleSerializationsInfo,
    'Arrow': shapeArrowSerializationsInfo,
    'Ellipse': exports.shapeElementSerializationsInfo,
    'Polygon': shapePolygonSerializationsInfo,
    'Star': shapeStarSerializationsInfo,
    'Line': exports.shapeElementSerializationsInfo,
    'Bracket': shapeBracketSerializationsInfo,
    'Cross': shapeCrossSerializationsInfo,
    'Brace': shapeBraceSerializationsInfo
};
exports.shapeSerializationsInfo = [
    metadata_1.lineWidth, metadata_1.lineStyle, metadata_1.foreColor, exports.Shape, exports.fillColor, exports.stretch, metadata_1.angle, anchoring_1.anchorVertical, anchoring_1.anchorHorizontal, scriptMetadata_1.controlScripts, exports.shapeFake,
    dataBinding_1.dataBindings(['Bookmark', 'NavigateUrl', 'Tag']),
].concat(metadataGroups_1.sizeLocation, metadataGroups_1.commonControlProperties, metadataGroups_1.navigationGroup);
exports.popularPropertiesShape = ['stretch', 'fillColor', 'lineWidth', 'angle', 'bookmark', 'bookmarkParent', 'shapeFake'];


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var analytics_widgets_1 = __webpack_require__(4);
var anchoring_1 = __webpack_require__(20);
var dataBinding_1 = __webpack_require__(17);
var scriptMetadata_1 = __webpack_require__(13);
var metadataGroups_1 = __webpack_require__(11);
var analytics_utils_1 = __webpack_require__(0);
var spartlineTypes_1 = __webpack_require__(301);
var editorTemplates_1 = __webpack_require__(9);
exports.valueMember = { propertyName: 'valueMember', modelName: '@ValueMember', displayName: 'Value Member', localizationId: 'DevExpress.XtraReports.UI.XRSparkline.ValueMember', editor: analytics_widgets_1.editorTemplates.getEditor('field') };
var highlightMinPoint = { modelName: '@HighlightMinPoint', defaultVal: false, from: analytics_utils_1.parseBool, propertyName: 'highlightMinPoint', displayName: 'Highlight Min Point', localizationId: 'DevExpress.Sparkline.SparklineViewBase.HighlightMinPoint', editor: analytics_widgets_1.editorTemplates.getEditor('bool') }, highlightMaxPoint = { modelName: '@HighlightMaxPoint', defaultVal: false, from: analytics_utils_1.parseBool, propertyName: 'highlightMaxPoint', displayName: 'Highlight Max Point', localizationId: 'DevExpress.Sparkline.SparklineViewBase.HighlightMaxPoint', editor: analytics_widgets_1.editorTemplates.getEditor('bool') }, highlightStartPoint = { modelName: '@HighlightStartPoint', defaultVal: false, from: analytics_utils_1.parseBool, propertyName: 'highlightStartPoint', displayName: 'Highlight Start Point', localizationId: 'DevExpress.Sparkline.SparklineViewBase.HighlightStartPoint', editor: analytics_widgets_1.editorTemplates.getEditor('bool') }, highlightEndPoint = { modelName: '@HighlightEndPoint', defaultVal: false, from: analytics_utils_1.parseBool, propertyName: 'highlightEndPoint', displayName: 'Highlight End Point', localizationId: 'DevExpress.Sparkline.SparklineViewBase.HighlightEndPoint', editor: analytics_widgets_1.editorTemplates.getEditor('bool') }, highlightNegativePoints = { modelName: '@HighlightNegativePoints', defaultVal: false, from: analytics_utils_1.parseBool, propertyName: 'highlightNegativePoints', displayName: 'Highlight Negative Points', localizationId: 'DevExpress.Sparkline.LineSparklineView.HighlightNegativePoints', editor: analytics_widgets_1.editorTemplates.getEditor('bool') }, color = { modelName: '@Color', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, propertyName: 'color', displayName: 'Color', localizationId: 'DevExpress.Sparkline.SparklineViewBase.Color', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') }, maxPointColor = { modelName: '@MaxPointColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, propertyName: 'maxPointColor', displayName: 'Max Point Color', localizationId: 'DevExpress.Sparkline.SparklineViewBase.MaxPointColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') }, minPointColor = { modelName: '@MinPointColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, propertyName: 'minPointColor', displayName: 'Min Point Color', localizationId: 'DevExpress.Sparkline.SparklineViewBase.MinPointColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') }, startPointColor = { modelName: '@StartPointColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, propertyName: 'startPointColor', displayName: 'Start Point Color', localizationId: 'DevExpress.Sparkline.SparklineViewBase.StartPointColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') }, negativePointColor = { modelName: '@NegativePointColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, propertyName: 'negativePointColor', displayName: 'Negative Point Color', localizationId: 'DevExpress.Sparkline.SparklineViewBase.NegativePointColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') }, endPointColor = { modelName: '@EndPointColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, propertyName: 'endPointColor', displayName: 'End Point Color', localizationId: 'DevExpress.Sparkline.SparklineViewBase.EndPointColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') }, sparklineViewType = {
    modelName: '@Type', propertyName: 'type'
}, enableAntialiasing = { modelName: '@EnableAntialiasing', propertyName: 'enableAntialiasing', displayName: 'Enable Antialiasing', localizationId: 'DevExpress.Sparkline.LineSparklineView.EnableAntialiasing', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, defaultVal: true }, maxPointMarkerSize = { modelName: '@MaxPointMarkerSize', defaultVal: 5, propertyName: 'maxPointMarkerSize', displayName: 'Max Point Marker Size', localizationId: 'DevExpress.Sparkline.LineSparklineView.MaxPointMarkerSize', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, minPointMarkerSize = { modelName: '@MinPointMarkerSize', defaultVal: 5, propertyName: 'minPointMarkerSize', displayName: 'Min Point Marker Size', localizationId: 'DevExpress.Sparkline.LineSparklineView.MinPointMarkerSize', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, startPointMarkerSize = { modelName: '@StartPointMarkerSize', defaultVal: 5, propertyName: 'startPointMarkerSize', displayName: 'Start Point Marker Size', localizationId: 'DevExpress.Sparkline.LineSparklineView.StartPointMarkerSize', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, negativePointMarkerSize = { modelName: '@NegativePointMarkerSize', defaultVal: 5, propertyName: 'negativePointMarkerSize', displayName: 'Negative Point Marker Size', localizationId: 'DevExpress.Sparkline.LineSparklineView.NegativePointMarkerSize', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, endPointMarkerSize = { modelName: '@EndPointMarkerSize', defaultVal: 5, propertyName: 'endPointMarkerSize', displayName: 'End Point Marker Size', localizationId: 'DevExpress.Sparkline.LineSparklineView.EndPointMarkerSize', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, markerSize = { modelName: '@MarkerSize', propertyName: 'markerSize', defaultVal: 5, displayName: 'Marker Size', localizationId: 'DevExpress.Sparkline.LineSparklineView.MarkerSize', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, showMarkers = { modelName: '@ShowMarkers', propertyName: 'showMarkers', displayName: 'Show Markers', localizationId: 'DevExpress.Sparkline.LineSparklineView.ShowMarkers', from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false }, markerColor = { modelName: '@MarkerColor', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, propertyName: 'markerColor', displayName: 'Marker Color', localizationId: 'DevExpress.Sparkline.LineSparklineView.MarkerColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') };
var barDistance = { modelName: '@BarDistance', propertyName: 'barDistance', defaultVal: 2, displayName: 'Bar Distance', localizationId: 'DevExpress.Sparkline.BarSparklineViewBase.BarDistance', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
var areaOpacity = { modelName: '@AreaOpacity', propertyName: 'areaOpacity', defaultVal: 135, displayName: 'Area Opacity', localizationId: 'DevExpress.Sparkline.AreaSparklineView.AreaOpacity', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
var commonSparklineViewProperties = [highlightStartPoint, highlightEndPoint, highlightMaxPoint, highlightMinPoint, color, maxPointColor, minPointColor, startPointColor, endPointColor, negativePointColor, sparklineViewType];
var viewLineSerializationsInfo = [].concat(commonSparklineViewProperties, [highlightNegativePoints, enableAntialiasing, negativePointMarkerSize, endPointMarkerSize, startPointMarkerSize, minPointMarkerSize, maxPointMarkerSize, markerSize, showMarkers, metadata_1.lineWidth, markerColor]);
var viewWinLoseSerializationsInfo = [].concat(commonSparklineViewProperties, [barDistance]);
var viewBarSerializationsInfo = [].concat(commonSparklineViewProperties, [barDistance, highlightNegativePoints]);
var viewAreaSerializationsInfo = [].concat(commonSparklineViewProperties, [enableAntialiasing, areaOpacity, negativePointMarkerSize, metadata_1.lineWidth, highlightNegativePoints, showMarkers, markerSize, maxPointMarkerSize, markerColor, minPointMarkerSize, endPointMarkerSize, startPointMarkerSize]);
exports.sparklineViewMap = {
    'Line': viewLineSerializationsInfo,
    'Bar': viewBarSerializationsInfo,
    'WinLoss': viewWinLoseSerializationsInfo,
    'Area': viewAreaSerializationsInfo
};
var limit1 = { propertyName: 'limit1', modelName: '@Limit1', displayName: 'Limit 1', localizationId: 'DevExpress.Sparkline.SparklineRange.Limit1', defaultVal: 0, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, limit2 = { propertyName: 'limit2', modelName: '@Limit2', displayName: 'Limit 2', localizationId: 'DevExpress.Sparkline.SparklineRange.Limit2', defaultVal: 1, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, isAuto = { propertyName: 'isAuto', modelName: '@IsAuto', displayName: 'Is Auto', localizationId: 'DevExpress.Sparkline.SparklineRange.IsAuto', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.valueRange = { propertyName: 'valueRange', modelName: 'ValueRange', displayName: 'Value Range', localizationId: 'DevExpress.XtraReports.UI.XRSparkline.ValueRange', info: [limit1, limit2, isAuto], editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var sparklineView = { propertyName: 'view', modelName: 'View' };
exports.sparklineFake = { propertyName: 'sparklineFake', editor: editorTemplates_1.designerEditorTemplates.getEditor('contentByType'), valuesArray: spartlineTypes_1.spartlineTypes, displayName: 'View', localizationId: 'DevExpress.XtraReports.UI.XRSparkline.View' };
exports.sparklineSerializationsInfo = [
    exports.sparklineFake, sparklineView, exports.valueMember, exports.valueRange, metadata_1.imageType, anchoring_1.anchorVertical, anchoring_1.anchorHorizontal, dataBinding_1.dataBindings(['Bookmark', 'NavigateUrl', 'Tag']),
    metadata_1.dataAdapter, metadata_1.dataMember, metadata_1.dataSource, scriptMetadata_1.controlScripts
].concat(metadataGroups_1.commonControlProperties, metadataGroups_1.sizeLocation, metadataGroups_1.navigationGroup);
exports.popularPropertiesSparkline = ['dataSource', 'dataMember', 'dataAdapter', 'valueMemberEditable', 'sparklineFake'];


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var xrTableOfContentsLevel_1 = __webpack_require__(200);
var analytics_widgets_1 = __webpack_require__(4);
var metadataGroups_1 = __webpack_require__(11);
var analytics_elements_1 = __webpack_require__(5);
var $ = __webpack_require__(3);
var editorTemplates_1 = __webpack_require__(9);
var size = { propertyName: 'size', modelName: '@SizeF', from: analytics_elements_1.Size.fromString };
var formattingRuleLinks = {
    propertyName: 'formattingRuleLinks', modelName: 'FormattingRuleLinks'
};
exports.tocTitleSerializationsInfo = [metadata_1.text, $.extend({}, metadata_1.textAlignment, { defaultVal: 'TopLeft' })].concat(xrTableOfContentsLevel_1.baseTocLevelSerializationsInfo);
exports.tocTitle = { propertyName: 'levelTitle', modelName: 'LevelTitle', displayName: 'Level Title', localizationId: 'DevExpress.XtraReports.UI.XRTableOfContents.LevelTitle', info: exports.tocTitleSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.tocLevelDefault = { propertyName: 'levelDefault', modelName: 'LevelDefault', displayName: 'Level Default', localizationId: 'DevExpress.XtraReports.UI.XRTableOfContents.LevelDefault', info: xrTableOfContentsLevel_1.tocLevelSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.maxNestingLevel = { propertyName: 'maxNestingLevel', modelName: '@MaxNestingLevel', defaultVal: 0, displayName: 'Max Nesting Level', localizationId: 'DevExpress.XtraReports.UI.XRTableOfContents.MaxNestingLevel', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), editorOptions: { min: 0 } };
exports.tocLevels = {
    propertyName: 'levels',
    modelName: 'Levels',
    displayName: 'Levels', localizationId: 'DevExpress.XtraReports.UI.XRTableOfContents.Levels',
    array: true,
    editor: editorTemplates_1.designerEditorTemplates.getEditor('toclevel'),
    template: '#dxrd-collectionItemWithAccordion'
};
var tocProperties = metadataGroups_1.commonControlProperties.filter(function (item) { return item !== metadata_1.canPublish && item != metadata_1.accessibleDescription; });
exports.tocSerializationsInfo = [formattingRuleLinks, size, metadata_1.location, exports.tocTitle, exports.tocLevels, exports.tocLevelDefault, exports.maxNestingLevel, metadata_1.rtl].concat(tocProperties);


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var xrCrossTabCell_1 = __webpack_require__(99);
exports.crossTabCellWidth = { propertyName: 'width', modelName: '@Width', localizationId: 'AnalyticsCoreStringId.SizeF.Width', defaultVal: 100, from: analytics_utils_1.floatFromModel };
var autoWidthMode = { propertyName: 'autoWidthMode', modelName: '@AutoWidthMode', defaultVal: 'None', valuesArray: xrCrossTabCell_1.autoSizeMode };
var visible = { propertyName: 'visible', modelName: '@Visible', defaultVal: true, from: analytics_utils_1.parseBool };
exports.crossTabColumnDefinitionInfo = [exports.crossTabCellWidth, autoWidthMode, visible];
exports.crossTabCellHeight = { propertyName: 'height', modelName: '@Height', displayName: 'Height', localizationId: 'AnalyticsCoreStringId.SizeF.Height', defaultVal: 25, from: analytics_utils_1.floatFromModel };
var autoHeightMode = { propertyName: 'autoHeightMode', modelName: '@AutoHeightMode', defaultVal: 'None', valuesArray: xrCrossTabCell_1.autoSizeMode };
exports.crossTabRowDefinitionInfo = [exports.crossTabCellHeight, autoHeightMode, visible];
exports.rowDefinitions = { propertyName: '_rowDefinitions', modelName: 'RowDefinitions', array: true, alwaysSerialize: true };
exports.columnDefinitions = { propertyName: '_columnDefinitions', modelName: 'ColumnDefinitions', array: true, alwaysSerialize: true };


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var enums_1 = __webpack_require__(58);
var headerPositions = [
    { displayValue: 'Inner', value: enums_1.TotalHeaderPosition[enums_1.TotalHeaderPosition.Inner], localizationId: 'DevExpress.XtraReports.UI.CrossTab.TotalHeaderPosition.Inner' },
    { displayValue: 'Outer', value: enums_1.TotalHeaderPosition[enums_1.TotalHeaderPosition.Outer], localizationId: 'DevExpress.XtraReports.UI.CrossTab.TotalHeaderPosition.Outer' }
];
var totalsPositions = [
    { displayValue: 'AfterData', value: enums_1.TotalsPosition[enums_1.TotalsPosition.AfterData], localizationId: 'DevExpress.XtraReports.UI.CrossTab.TotalsPosition.AfterData' },
    { displayValue: 'BeforeData', value: enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData], localizationId: 'DevExpress.XtraReports.UI.CrossTab.TotalsPosition.BeforeData' },
];
exports.crossTabLayoutOptionsInfo = [
    {
        propertyName: 'cornerHeaderDisplayMode', modelName: '@CornerHeaderDisplayMode', displayName: 'Corner Header Display Mode', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabLayoutOptions.CornerHeaderDisplayMode', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'RowFieldNames', valuesArray: [
            { displayValue: 'None', value: enums_1.CornerHeaderDisplayMode[enums_1.CornerHeaderDisplayMode.None], localizationId: 'DevExpress.XtraReports.UI.CrossTab.CornerHeaderDisplayMode.None' },
            { displayValue: 'Row Field Names', value: enums_1.CornerHeaderDisplayMode[enums_1.CornerHeaderDisplayMode.RowFieldNames], localizationId: 'DevExpress.XtraReports.UI.CrossTab.CornerHeaderDisplayMode.RowFieldNames' },
            { displayValue: 'Column Field Names', value: enums_1.CornerHeaderDisplayMode[enums_1.CornerHeaderDisplayMode.ColumnFieldNames], localizationId: 'DevExpress.XtraReports.UI.CrossTab.CornerHeaderDisplayMode.ColumnFieldNames' },
        ]
    }, {
        propertyName: 'dataFieldLayout', modelName: '@DataFieldLayout', displayName: 'Data Field Layout', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabLayoutOptions.DataFieldLayout', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'InRow', valuesArray: [
            { displayValue: 'In Row', value: enums_1.DataFieldLayout[enums_1.DataFieldLayout.InRow], localizationId: 'DevExpress.XtraReports.UI.CrossTab.DataFieldLayout.InRow' },
            { displayValue: 'In Column', value: enums_1.DataFieldLayout[enums_1.DataFieldLayout.InColumn], localizationId: 'DevExpress.XtraReports.UI.CrossTab.DataFieldLayout.InColumn' },
        ]
    }, { propertyName: 'columnTotalsPosition', modelName: '@ColumnTotalsPosition', displayName: 'Column Totals Position', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabLayoutOptions.ColumnTotalsPosition', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'AfterData', valuesArray: totalsPositions },
    { propertyName: 'rowTotalsPosition', modelName: '@RowTotalsPosition', displayName: 'Row Totals Position', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabLayoutOptions.RowTotalsPosition', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'AfterData', valuesArray: totalsPositions },
    { propertyName: 'columnTotalHeaderPosition', modelName: '@ColumnTotalHeaderPosition', displayName: 'Column Total Header Position', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabLayoutOptions.ColumnTotalHeaderPosition', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Outer', valuesArray: headerPositions },
    { propertyName: 'rowTotalHeaderPosition', modelName: '@RowTotalHeaderPosition', displayName: 'Row Total Header Position', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabLayoutOptions.RowTotalHeaderPosition', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Outer', valuesArray: headerPositions },
    { propertyName: 'hierarchicalRowLayout', modelName: '@HierarchicalRowLayout', displayName: 'Hierarchical Row Layout', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabLayoutOptions.HierarchicalRowLayout', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false, from: analytics_utils_1.parseBool }
];
exports.crossTabLayoutOptions = { propertyName: 'layoutOptions', modelName: 'LayoutOptions', localizationId: 'DevExpress.XtraReports.UI.XRCrossTab.LayoutOptions', displayName: 'Layout Options', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: exports.crossTabLayoutOptionsInfo };


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _chart_1 = __webpack_require__(19);
var controlParameter_1 = __webpack_require__(133);
var style_1 = __webpack_require__(21);
var metadata_1 = __webpack_require__(6);
var scriptMetadata_1 = __webpack_require__(13);
var metadataGroups_1 = __webpack_require__(11);
var analytics_widgets_1 = __webpack_require__(4);
var _editorTemplates_1 = __webpack_require__(22);
var analytics_internal_1 = __webpack_require__(2);
exports.chart = { propertyName: 'chart', modelName: 'Chart', from: _chart_1.chart.from, toJsonObject: _chart_1.chart.toJsonObject };
exports.controlParametersInfo = {
    propertyName: 'controlParameters', modelName: 'Parameters', displayName: 'Parameters', localizationId: 'DevExpress.XtraReports.UI.XRChart.Parameters',
    array: true, editor: analytics_widgets_1.editorTemplates.getEditor('commonCollection'), addHandler: controlParameter_1.ControlParameter.createNew, template: '#dxrd-commonCollectionItem'
};
var chartRtl = analytics_internal_1.extend(true, {}, metadata_1.rtl);
chartRtl.defaultVal = undefined;
exports.xrChartSerializationInfo = [_chart_1.appearanceName, _chart_1.paletteName, exports.chart, style_1.stylePriority, _editorTemplates_1.chartDataSource, metadata_1.imageType, scriptMetadata_1.chartScripts,
    exports.controlParametersInfo, chartRtl,
    { propertyName: 'dataMember', displayName: 'Data Member', localizationId: 'DevExpress.XtraReports.UI.XRChart.DataMember', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('dataMember') }
].concat(metadataGroups_1.baseControlProperties, metadataGroups_1.sizeLocation, metadataGroups_1.bordersProperties, metadataGroups_1.navigationGroup);


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var scriptMetadata_1 = __webpack_require__(13);
var metadata_1 = __webpack_require__(6);
var dataBinding_1 = __webpack_require__(17);
var editOptions_1 = __webpack_require__(47);
var _metaUtils_1 = __webpack_require__(23);
var metadataGroups_1 = __webpack_require__(11);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
exports.weight = { propertyName: 'weight', localizable: true, modelName: '@Weight', defaultVal: 0, from: analytics_utils_1.floatFromModel };
exports.rowSpan = { propertyName: 'rowSpan', modelName: '@RowSpan', displayName: 'Row Span', localizationId: 'DevExpress.XtraReports.UI.XRTableCell.RowSpan', defaultVal: 1, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.tableCellSerializationsInfo = [
    exports.weight, scriptMetadata_1.labelScripts, exports.rowSpan, metadata_1.textTrimming,
    { propertyName: 'width', displayName: 'Width', localizationId: 'DevExpress.XtraReports.UI.XRControl.Width' },
    { propertyName: 'controls', modelName: 'Controls', array: true },
    dataBinding_1.dataBindings(['Text', 'NavigateUrl', 'Tag', 'Bookmark']),
    editOptions_1.textEditOptions, metadata_1.allowMarkupText
].concat(_metaUtils_1.createSinglePopularBindingInfos('Text'), metadataGroups_1.labelGroup);
exports.popularPropertiesTableCell = ['text', 'textArea', 'popularDataBinding', 'textFormatString', 'Summary', 'canGrow', 'canShrink', 'multiline', 'wordWrap'];


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var objectStorageItem_1 = __webpack_require__(38);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var objectItemCreation_1 = __webpack_require__(41);
var dataFederation_1 = __webpack_require__(55);
var DataSourceHelper = (function (_super) {
    __extends(DataSourceHelper, _super);
    function DataSourceHelper(objects, dataSourceRefs, availableDataSources) {
        var _this = _super.call(this) || this;
        _this.usedDataSources = ko.observableArray();
        _this.allDataSources = ko.observableArray();
        _this.usedDataSources.push({ ref: 'none', name: 'none', specifics: 'none', data: null, dataSerializer: null });
        _this._objects = objects;
        for (var i = 0; i < objects().length; i++) {
            var currentObject = objects()[i];
            var ref = currentObject['_model']['@Ref'];
            var dataSourceRef = dataSourceRefs.filter(function (ds) { return ds.ref === ref; })[0];
            if (dataSourceRef) {
                var currentDataSourceInfo = {
                    ref: ref,
                    data: currentObject,
                    name: dataSourceRef.name,
                    isSqlDataSource: dataSourceRef.isSqlDataSource,
                    isJsonDataSource: dataSourceRef.isJsonDataSource,
                    isObjectDataSource: dataSourceRef.isObjectDataSource,
                    dataSerializer: dataSourceRef.dataSerializer,
                    hasParams: dataSourceRef.hasParams,
                    hasErrors: dataSourceRef.hasErrors
                };
                currentObject['dataSourceInfo'] = currentDataSourceInfo;
                _this._addUsedDataSource(currentDataSourceInfo);
            }
        }
        var self = _this;
        _this._disposables.push(objects.subscribe(function (changes) {
            for (var index = 0; index < changes.length; index++) {
                if (!changes[index].value['dataSourceInfo'])
                    return;
                if (changes[index].status === 'added') {
                    self._addUsedDataSource(changes[index].value['dataSourceInfo']);
                }
                else if (changes[index].status === 'deleted') {
                    var dataSourceInfo = self.findDataSourceInfo(changes[index].value);
                    if (dataSourceInfo) {
                        _this.usedDataSources.remove(dataSourceInfo);
                        _this.allDataSources.remove(dataSourceInfo);
                    }
                }
            }
        }, null, 'arrayChange'));
        var serializer = new analytics_utils_1.ModelSerializer();
        _this.availableDataSources = (availableDataSources || []).map(function (object) {
            return $.extend({}, object, { data: objectItemCreation_1.createNewObjectItem(object.data, function () { return _this; }, serializer) });
        });
        _this.allDataSources.push.apply(_this.allDataSources, _this.availableDataSources);
        return _this;
    }
    DataSourceHelper.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._objects = null;
        this.availableDataSources.splice(0);
        this.usedDataSources([]);
        this.allDataSources([]);
    };
    DataSourceHelper.prototype.getDataSourcePath = function (dataSource) {
        var dataSourceInfo = dataSource && this.findDataSourceInfo(dataSource);
        if (dataSourceInfo) {
            return dataSourceInfo.id || dataSourceInfo.ref;
        }
        else {
            return '';
        }
    };
    DataSourceHelper.prototype._findDataSourceInfo = function (name, collection) {
        return collection().filter(function (info) { return info.name === name; })[0];
    };
    DataSourceHelper.prototype._getDataSourceInfo = function (name) {
        var result = this._findDataSourceInfo(name, this.usedDataSources);
        if (!result) {
            var resultSource = this._findDataSourceInfo(name, this.allDataSources);
            if (resultSource) {
                result = this._addDataSource(resultSource, resultSource.data);
            }
        }
        return result;
    };
    DataSourceHelper.prototype._getDataSourceName = function (dataSource) {
        var dataSourceInfo = this.findDataSourceInfo(dataSource);
        return dataSourceInfo && dataSourceInfo.name;
    };
    DataSourceHelper.prototype._addUsedDataSource = function (result) {
        this.usedDataSources.splice(this.usedDataSources().length - 1, 0, result);
        this.allDataSources.push(result);
    };
    DataSourceHelper.prototype._addDataSource = function (dataSource, data, uniqueName) {
        if (!dataSource.name) {
            throw new Error('dataSource name is undefined or null (ref=' + dataSource.ref + ', id=' + dataSource.id + ')');
        }
        var dataSourceName = uniqueName || this.getUniqueDataSourceName(dataSource.name);
        var newData = data;
        if (this._objects().indexOf(data) === -1) {
            newData = this._cloneObjectItem(data);
            newData['dataSourceInfo'] = $.extend({}, dataSource, { name: dataSourceName, data: newData });
            newData['name'] = ko.observable(dataSourceName);
            this._objects.push(newData);
        }
        return this.findDataSourceInfo(newData);
    };
    DataSourceHelper.prototype._cloneObjectItem = function (data) {
        var _this = this;
        var serializer = new analytics_utils_1.ModelSerializer();
        var serializedObj;
        if (data instanceof dataFederation_1.DataFederationDataSource) {
            serializedObj = data.getSerializableModel().serialize();
            var newModel = new dataFederation_1.SerializableDataFederationDataSource(null, serializedObj, data.dsHelperProvider, serializer);
            var cloneSerializableSourceMap = [];
            data.serializableSourceMap().forEach(function (source) {
                var info = _this.availableDataSources.filter(function (item) { return item.data === source.dataSource(); })[0];
                if (info) {
                    var existedDataSource = _this.findDataSourceInfoByName(info.name);
                    var usedDataSource = existedDataSource || _this._addDataSource(info, info.data, info.name);
                    cloneSerializableSourceMap.push(usedDataSource.data);
                }
            });
            var newSerializableModel = newModel.dataSource.getSerializableModel();
            newSerializableModel.dataSources(cloneSerializableSourceMap);
            cloneSerializableSourceMap.forEach(function (item, index) {
                newSerializableModel.dataSource.serializableSourceMap()[index].dataSource(item);
            });
            return newSerializableModel.dataSource;
        }
        else {
            serializedObj = serializer.serialize(data);
            return objectItemCreation_1.createNewObjectItem(serializedObj, data.dsHelperProvider, serializer);
        }
    };
    DataSourceHelper.prototype.getUniqueDataSourceName = function (name) {
        return analytics_internal_1.getUniqueNameForNamedObjectsArray(this.allDataSources(), analytics_internal_1.replaceInvalidSymbols(name));
    };
    DataSourceHelper.prototype.addDataSource = function (dataSourceInfo) {
        var _this = this;
        var data = (dataSourceInfo.data instanceof objectStorageItem_1.ObjectItem) ? dataSourceInfo.data : objectItemCreation_1.createNewObjectItem(dataSourceInfo.data, function () { return _this; });
        return this._addDataSource(dataSourceInfo, data).data;
    };
    DataSourceHelper.prototype.removeDataSource = function (dataSourceInfo) {
        this._objects.remove(dataSourceInfo.data);
    };
    DataSourceHelper.prototype.restoreDataSource = function (dataSourceInfo) {
        this._objects.push(dataSourceInfo.data);
    };
    DataSourceHelper.prototype.dataSourceValue = function (value, undoEngine) {
        var _this = this;
        var dataSourceValue = ko.pureComputed({
            read: function () {
                return _this._getDataSourceName(value());
            },
            write: function (val) {
                var _undoEngine = undoEngine && undoEngine();
                _undoEngine && _undoEngine.start();
                var newDataSource = _this._getDataSourceInfo(val);
                if (DataSourceHelper._assignValueInTimeout) {
                    setTimeout(function () {
                        value(newDataSource && newDataSource.data);
                        _undoEngine && _undoEngine.end();
                    }, 1);
                }
                else {
                    value(newDataSource && newDataSource.data);
                    _undoEngine && _undoEngine.end();
                }
            }
        });
        this._disposables.push(dataSourceValue);
        return dataSourceValue;
    };
    DataSourceHelper.prototype.dataSourceDisplayExpr = function (dataSource) {
        return (!dataSource || !dataSource.data) ? analytics_internal_1.localizeNoneString('none') : dataSource.name;
    };
    DataSourceHelper.prototype.mergedDataSources = function () {
        var _this = this;
        var dataSources = this.usedDataSources().slice(0, -1);
        for (var i = this.availableDataSources.length - 1; i >= 0; i--) {
            if (!analytics_internal_1.findFirstItemMatchesCondition(dataSources, function (item) { return item.name === _this.availableDataSources[i].name; })) {
                dataSources.unshift(this.availableDataSources[i]);
            }
        }
        return dataSources;
    };
    DataSourceHelper.prototype.findDataSourceInfo = function (dataSource) {
        return this.usedDataSources().filter(function (info) { return info.data === dataSource; })[0];
    };
    DataSourceHelper.prototype.findDataSourceInfoByID = function (id) {
        return this.usedDataSources().filter(function (info) { return info.id === id; })[0];
    };
    DataSourceHelper.prototype.findDataSourceInfoByRef = function (ref) {
        return this.usedDataSources().filter(function (info) { return info.ref === ref; })[0];
    };
    DataSourceHelper.prototype.findDataSourceInfoByName = function (name) {
        return this.usedDataSources().filter(function (item) { return item.name === name; })[0];
    };
    DataSourceHelper.defaultReportExtensionKey = 'DataSerializationExtension';
    DataSourceHelper._assignValueInTimeout = true;
    return DataSourceHelper;
}(analytics_utils_1.Disposable));
exports.DataSourceHelper = DataSourceHelper;


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var settings_1 = __webpack_require__(12);
var _dataUtils_1 = __webpack_require__(60);
var _reportDataSourceService_1 = __webpack_require__(72);
var analytics_internal_1 = __webpack_require__(2);
var analytics_wizard_1 = __webpack_require__(7);
var analytics_utils_1 = __webpack_require__(0);
var analytics_data_1 = __webpack_require__(455);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var queryBuilder_widgets_internal_1 = __webpack_require__(456);
var _qBRequestWrapper_1 = __webpack_require__(73);
var DataSourceEditorBase = (function () {
    function DataSourceEditorBase(_dsHelper, _wizard, _reportViewModel, _undoEngine, _itemsProvider) {
        this._dsHelper = _dsHelper;
        this._wizard = _wizard;
        this._reportViewModel = _reportViewModel;
        this._undoEngine = _undoEngine;
        this._itemsProvider = _itemsProvider;
    }
    DataSourceEditorBase.prototype._findDataSource = function (dataSourceID) {
        return this._dsHelper().usedDataSources().filter(function (item) {
            return item.id === dataSourceID || item.ref === dataSourceID;
        })[0];
    };
    DataSourceEditorBase._onFail = function (result, deferred) {
        if (analytics_internal_1.getErrorMessage(result))
            analytics_internal_1.ShowMessage(analytics_internal_1.getErrorMessage(result));
        deferred.reject(result);
    };
    return DataSourceEditorBase;
}());
exports.DataSourceEditorBase = DataSourceEditorBase;
var CreateQueryIterator = (function (_super) {
    __extends(CreateQueryIterator, _super);
    function CreateQueryIterator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CreateQueryIterator.prototype.getNextPageId = function (pageId) {
        if (!pageId) {
            return analytics_wizard_1.SqlDataSourceWizardPageId.ConfigureQueryPage;
        }
        return _super.prototype.getNextPageId.call(this, pageId);
    };
    return CreateQueryIterator;
}(analytics_wizard_1.DataSourceWizardPageIterator));
exports.CreateQueryIterator = CreateQueryIterator;
var SqlDataSourceEditor = (function (_super) {
    __extends(SqlDataSourceEditor, _super);
    function SqlDataSourceEditor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.relationsEditor = ko.observable();
        _this.addAction = {
            clickAction: function (item) {
                _this.addSqlQuery(item.data.name);
            },
            imageClassName: 'dxrd-image-add-query',
            imageTemplateName: 'dxrd-svg-operations-add_query',
            text: analytics_utils_1.getLocalization('Add query', 'AnalyticsCoreStringId.SqlDSWizard_AddQuery')
        };
        _this.editAction = {
            clickAction: function (item) {
                _this.editSqlQuery(new analytics_utils_1.PathRequest(item.path).id, item.name);
            },
            position: 0,
            imageClassName: 'dx-image-edit',
            imageTemplateName: 'dxrd-svg-operations-edit',
            text: analytics_utils_1.getLocalization('Edit query', 'AnalyticsCoreStringId.SqlDSWizard_EditQuery')
        };
        _this.removeAction = {
            clickAction: function (item) {
                _this.removeSqlQuery(new analytics_utils_1.PathRequest(item.path).id, item.name);
            },
            position: 50,
            imageClassName: 'dxrd-image-recycle-bin',
            imageTemplateName: 'dxrd-svg-operations-recycle_bin',
            text: analytics_utils_1.getLocalization('Remove query', 'AnalyticsCoreStringId.SqlDSWizard_RemoveQuery')
        };
        _this.editRelationsAction = {
            clickAction: function (item) {
                _this.editMasterDetailRelations(item.data.name);
            },
            position: 0,
            imageClassName: 'dx-image-edit',
            imageTemplateName: 'dxrd-svg-operations-edit',
            text: analytics_utils_1.getLocalization('Edit Master-Detail Relations', 'ASPxReportsStringId.ReportDesigner_FieldListActions_EditMasterDetailRelations')
        };
        return _this;
    }
    SqlDataSourceEditor.prototype._applyWizardChanges = function (dataSource, sqlDataSource, queryName, relationsEditing) {
        return this._applyDataSourceChange(sqlDataSource, dataSource, queryName, relationsEditing);
    };
    SqlDataSourceEditor.prototype._createOrEditSqlDataSource = function (requestJson, dataSource, requestName) {
        var _this = this;
        return analytics_internal_1.ajax(settings_1.HandlerUri(), requestName, encodeURIComponent(requestJson))
            .done(function (result) {
            result.dataSource.data = JSON.parse(result.dataSource.data);
            result.dataSource.isSqlDataSource = true;
            if (dataSource) {
                dataSource.data['base64'](result.dataSource.data['@Base64']);
            }
            else {
                _dataUtils_1.addDataSourceToReport(_this._dsHelper(), _this._reportViewModel(), _this._undoEngine(), _this._itemsProvider(), result.dataSource);
            }
        })
            .fail(function (result) {
            if (analytics_internal_1.getErrorMessage(result))
                analytics_internal_1.ShowMessage(analytics_internal_1.getErrorMessage(result));
        });
    };
    SqlDataSourceEditor.prototype._applyDataSourceChange = function (source, dest, queryName, relationsEditing) {
        var _this = this;
        return SqlDataSourceEditor.createSqlDataSourceInfo(source, queryName, relationsEditing)
            .done(function (result) {
            if (dest) {
                dest.data['base64'](result.base64());
            }
            else {
                _dataUtils_1.addDataSourceToReport(_this._dsHelper(), _this._reportViewModel(), _this._undoEngine(), _this._itemsProvider(), result);
            }
        });
    };
    SqlDataSourceEditor.prototype.editSqlQuery = function (dataSourceID, queryName) {
        var _this = this;
        var dataSourceInfo = this._findDataSource(dataSourceID);
        _reportDataSourceService_1.ReportDataSourceService.sqlDataSourceFromBase64(dataSourceInfo.data['base64']()).done(function (result) {
            var sqlDataSource = new analytics_data_1.SqlDataSource(JSON.parse(result.sqlDataSourceJSON), undefined, _qBRequestWrapper_1.QBRequestWrapper());
            sqlDataSource.name(dataSourceInfo.name);
            _this._wizard.initialize({
                dataSourceType: analytics_wizard_1.DataSourceType.Sql,
                sqlDataSourceWizard: {
                    name: sqlDataSource.connection.name(),
                    queryName: queryName,
                    sqlDataSourceJSON: JSON.stringify(new analytics_utils_1.ModelSerializer().serialize(sqlDataSource))
                }
            }, function (factory, stateManager) { return new CreateQueryIterator(factory, stateManager, _this._wizard['_wizardOptions']); });
            _this._wizard.start();
            _this._wizard.isVisible(true);
        });
    };
    SqlDataSourceEditor.prototype.addSqlQuery = function (dataSourceID) {
        this.editSqlQuery(dataSourceID, null);
    };
    SqlDataSourceEditor.prototype.removeSqlQuery = function (dataSourceID, queryName) {
        var _this = this;
        var dataSourceInfo = this._findDataSource(dataSourceID);
        _reportDataSourceService_1.ReportDataSourceService.sqlDataSourceFromBase64(dataSourceInfo.data['base64']()).done(function (result) {
            var sqlDataSource = new analytics_data_1.SqlDataSource(JSON.parse(result.sqlDataSourceJSON));
            sqlDataSource.queries.remove(function (x) { return x.name() === queryName; });
            _this._applyWizardChanges(dataSourceInfo, sqlDataSource, queryName);
        });
    };
    SqlDataSourceEditor.prototype.editMasterDetailRelations = function (dataSourceID) {
        var _this = this;
        var dataSourceInfo = this._findDataSource(dataSourceID);
        _reportDataSourceService_1.ReportDataSourceService.sqlDataSourceFromBase64(dataSourceInfo.data['base64']()).done(function (result) {
            var sqlDataSource = new analytics_data_1.SqlDataSource(JSON.parse(result.sqlDataSourceJSON));
            if (sqlDataSource.queries().length < 2) {
                analytics_internal_1.ShowMessage(analytics_utils_1.getLocalization('At least two queries are required to create a master-detail relation.', 'DataAccessUIStringId.MessageLessThanTwoQueries'), 'warning', 10000);
                return;
            }
            _this.relationsEditor(new queryBuilder_widgets_internal_1.MasterDetailEditor(sqlDataSource.relations, sqlDataSource.resultSet, function () {
                return _this._applyWizardChanges(dataSourceInfo, sqlDataSource, '', true);
            }));
            _this.relationsEditor().popupVisible(true);
        });
    };
    SqlDataSourceEditor.prototype.applySqlDataSourceWizardChanges = function (dataSourceWizardModel) {
        var dataSourceWrapped = analytics_wizard_1._restoreSqlDataSourceFromState(dataSourceWizardModel.sqlDataSourceWizard, _qBRequestWrapper_1.QBRequestWrapper(), dataSourceWizardModel.dataSourceId);
        var dataSource = this._dsHelper().findDataSourceInfoByName(dataSourceWrapped.sqlDataSource.name());
        return this._applyDataSourceChange(dataSourceWrapped.sqlDataSource, dataSource, dataSourceWrapped.sqlQuery && dataSourceWrapped.sqlQuery.name());
    };
    SqlDataSourceEditor.createSqlDataSourceInfo = function (source, queryName, relationsEditing) {
        var deferred = $.Deferred();
        _qBRequestWrapper_1.QBRequestWrapper().rebuildResultSchema(source, queryName, relationsEditing)
            .done(function (result) {
            var model = JSON.parse(result.resultSchemaJSON);
            source.resultSet = !!model ? new analytics_data_1.ResultSet(model) : null;
            if (!!result.connectionParameters) {
                source.connection.parameteres((function (x) { try {
                    return JSON.parse(x)['Parameters'] || x;
                }
                catch (_) {
                    return x;
                } })(result.connectionParameters));
                source.connection.fromAppConfig(false);
            }
            _reportDataSourceService_1.ReportDataSourceService.getSqlDataSourceBase64(source)
                .done(function (result) {
                deferred.resolve({
                    name: 'sqlDataSource',
                    id: source.id,
                    data: {
                        '@ObjectType': 'DevExpress.DataAccess.Sql.SqlDataSource',
                        '@Base64': result
                    },
                    isSqlDataSource: true,
                    base64: function () { return result; }
                });
            })
                .fail(function (result) { SqlDataSourceEditor._onFail(result, deferred); });
        })
            .fail(function (result) { SqlDataSourceEditor._onFail(result, deferred); });
        return deferred.promise();
    };
    SqlDataSourceEditor.prototype.getActions = function (context) {
        var result = [];
        if (!context.data)
            return result;
        if (context.data['canAddSqlQuery'] === true) {
            result.push(this.addAction);
            result.push(this.editRelationsAction);
        }
        if (context.data['canEditQuery'] === true) {
            result.push(this.editAction);
            result.push(this.removeAction);
        }
        return result;
    };
    return SqlDataSourceEditor;
}(DataSourceEditorBase));
exports.SqlDataSourceEditor = SqlDataSourceEditor;


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var analytics_wizard_1 = __webpack_require__(7);
var _masterDetailRequestModel_1 = __webpack_require__(149);
var _utils_1 = __webpack_require__(49);
var pageId_1 = __webpack_require__(14);
var addGroupingLevelPage_1 = __webpack_require__(102);
var chooseAvailableDataSourcePage_1 = __webpack_require__(24);
var chooseReportTypePage_1 = __webpack_require__(103);
var chooseSummaryOptionsPage_1 = __webpack_require__(226);
var colorSchemePage_1 = __webpack_require__(227);
var configureReportPageSettingsPage_1 = __webpack_require__(151);
var customizeLabelPage_1 = __webpack_require__(152);
var chooseJsonSchemaPage_1 = __webpack_require__(230);
var configureMasterDetailRelationshipsPage_1 = __webpack_require__(341);
var multiQueryConfigurePage_1 = __webpack_require__(342);
var multiQueryConfigureParametersPage_1 = __webpack_require__(343);
var selectDataMembersPage_1 = __webpack_require__(154);
var selectLabelTypePage_1 = __webpack_require__(231);
var setReportTitlePage_1 = __webpack_require__(344);
var reportWizardState_1 = __webpack_require__(18);
var $ = __webpack_require__(3);
var reportWizardStateCreating_1 = __webpack_require__(105);
var ReportWizard = (function (_super) {
    __extends(ReportWizard, _super);
    function ReportWizard(pageFactory, _reportWizardOptions) {
        var _this = _super.call(this, pageFactory, _reportWizardOptions.callbacks.finishCallback) || this;
        _this._reportWizardOptions = _reportWizardOptions;
        _this._requestModelType = _masterDetailRequestModel_1.MasterDetailRequestModel;
        _this.title = analytics_utils_1.getLocalization('Report Wizard', 'ASPxReportsStringId.ReportDesigner_Wizard_Header');
        _this.height(_utils_1._masterDetailWizardHeight);
        _this.width(_utils_1._masterDetailWizardWidth);
        _this._extendCssClass = 'dxrd-report-wizard dxrd-master-detail-report-wizard';
        return _this;
    }
    ReportWizard.prototype._callBeforeFinishHandler = function (state, wizardModel) { };
    ReportWizard.prototype._callAfterFinishHandler = function (state, result) {
        this.events.call('afterFinish', { state: state, wizardResult: result });
    };
    ReportWizard.prototype.initialize = function (state) {
        var _this = this;
        if (state === void 0) { state = reportWizardStateCreating_1.createReportWizardState(); }
        if (this._reportWizardOptions.dataSources().length === 1 && !this._reportWizardOptions.canCreateDataSource) {
            state.dataSource = chooseAvailableDataSourcePage_1._convertToStateDataSource(this._reportWizardOptions.dataSources()[0]);
        }
        if (this._reportWizardOptions.sqlDataSourceAvailable || !analytics_internal_1.isEmptyObject(state.sqlDataSourceWizard)) {
            state.dataSourceType = analytics_wizard_1.DataSourceType.Sql;
        }
        else if (this._reportWizardOptions.jsonDataSourceAvailable || state.jsonDataSourceWizard.jsonSource) {
            state.dataSourceType = analytics_wizard_1.DataSourceType.Json;
        }
        else {
            state.dataSourceType = analytics_wizard_1.DataSourceType.NoData;
        }
        _super.prototype.initialize.call(this, state, function (pageFactory, stateManager) { return new ReportWizardPageIterator(pageFactory, stateManager, _this._reportWizardOptions); });
    };
    ReportWizard.prototype.start = function (finishCallback) {
        if (finishCallback)
            this['_finishCallback'] = finishCallback;
        _super.prototype.start.call(this);
    };
    return ReportWizard;
}(analytics_wizard_1.PopupWizard));
exports.ReportWizard = ReportWizard;
var ReportWizardPageIterator = (function (_super) {
    __extends(ReportWizardPageIterator, _super);
    function ReportWizardPageIterator(pagesFactory, stateManager, _reportWizardOptions) {
        var _this = _super.call(this, pagesFactory, stateManager, _reportWizardOptions) || this;
        _this._reportWizardOptions = _reportWizardOptions;
        return _this;
    }
    ReportWizardPageIterator.prototype.getNextPageId = function (pageId) {
        if (!pageId)
            return pageId_1.ReportWizardPageId.SelectReportTypePage;
        if (pageId === pageId_1.ReportWizardPageId.SelectReportTypePage && this._getCurrentState().reportType === reportWizardState_1.ReportType.Label) {
            return pageId_1.ReportWizardPageId.SelectLabelTypePage;
        }
        else if (pageId === pageId_1.ReportWizardPageId.SelectLabelTypePage) {
            return pageId_1.ReportWizardPageId.CustomizeLabelPage;
        }
        else if (pageId === pageId_1.ReportWizardPageId.SelectReportTypePage && this._getCurrentState().dataSource && !this._reportWizardOptions.canCreateDataSource) {
            return pageId_1.ReportWizardPageId.SelectDataMembersPage;
        }
        else if (pageId === pageId_1.ReportWizardPageId.SelectReportTypePage && this._reportWizardOptions.dataSources().length === 0) {
            return _super.prototype.getNextPageId.call(this);
        }
        else if (pageId === pageId_1.ReportWizardPageId.SelectReportTypePage) {
            return pageId_1.ReportWizardPageId.ChooseAvailableDataSourcePage;
        }
        else if (pageId === pageId_1.ReportWizardPageId.ChooseAvailableDataSourcePage && !this._getCurrentState().dataSource) {
            return _super.prototype.getNextPageId.call(this);
        }
        else if (_super.prototype.getNextPageId.call(this, pageId)) {
            return _super.prototype.getNextPageId.call(this, pageId);
        }
        else if (pageId === pageId_1.ReportWizardPageId.ChooseAvailableDataSourcePage && this._getCurrentState().dataSource) {
            return pageId_1.ReportWizardPageId.SelectDataMembersPage;
        }
        else if ((pageId === analytics_wizard_1.DataSourceWizardPageId.ConfigureMasterDetailRelationshipsPage ||
            pageId === analytics_wizard_1.SqlDataSourceWizardPageId.MultiQueryConfigurePage ||
            pageId === analytics_wizard_1.SqlDataSourceWizardPageId.MultiQueryConfigureParametersPage ||
            pageId === analytics_wizard_1.JsonDataSourceWizardPageId.ChooseJsonSchemaPage)) {
            return pageId_1.ReportWizardPageId.SelectDataMembersPage;
        }
        else if (pageId === pageId_1.ReportWizardPageId.SelectDataMembersPage && !$.isEmptyObject(this.stateManager.getCurrentState().masterDetailInfoCollection) && this.stateManager.getCurrentState().masterDetailInfoCollection.some(function (item) { return item.checked !== false; })) {
            return pageId_1.ReportWizardPageId.AddGroupingLevelPage;
        }
        else if (pageId === pageId_1.ReportWizardPageId.AddGroupingLevelPage && !$.isEmptyObject(this._getCurrentState().masterDetailSummaryOptionsColumns)) {
            return pageId_1.ReportWizardPageId.ChooseSummaryOptionsPage;
        }
        else if (pageId === pageId_1.ReportWizardPageId.AddGroupingLevelPage || pageId === pageId_1.ReportWizardPageId.ChooseSummaryOptionsPage) {
            return pageId_1.ReportWizardPageId.ConfigureReportPageSettingsPage;
        }
        else if (pageId === pageId_1.ReportWizardPageId.ConfigureReportPageSettingsPage) {
            return pageId_1.ReportWizardPageId.ChooseReportColorSchemePage;
        }
        else if (pageId === pageId_1.ReportWizardPageId.ChooseReportColorSchemePage) {
            return pageId_1.ReportWizardPageId.SetReportTitlePage;
        }
    };
    return ReportWizardPageIterator;
}(analytics_wizard_1.MultiQueryDataSourceWizardPageIterator));
exports.ReportWizardPageIterator = ReportWizardPageIterator;
function _registerCommonReportWizardPages(factory, reportWizardOptions) {
    selectLabelTypePage_1._registerSelectLabelTypePage(factory);
    customizeLabelPage_1._registerCustomizeLabelPage(factory);
    chooseAvailableDataSourcePage_1._registerChooseAvailableDataSourcePage(factory, reportWizardOptions);
    setReportTitlePage_1._registerSetReportTitlePage(factory);
    analytics_wizard_1._registerMultiQueryDataSourcePages(factory, reportWizardOptions);
    chooseJsonSchemaPage_1._registerChooseJsonSchemaPage(factory, reportWizardOptions.callbacks);
    configureMasterDetailRelationshipsPage_1._registerConfigureMasterDetailRelationshipsPage(factory, reportWizardOptions.callbacks);
    multiQueryConfigurePage_1._registerMultiQueryConfigurePage(factory, reportWizardOptions);
    multiQueryConfigureParametersPage_1._registerMultiQueryConfigureParametersPage(factory, reportWizardOptions.callbacks);
}
exports._registerCommonReportWizardPages = _registerCommonReportWizardPages;
function _registerReportWizardPages(factory, reportWizardOptions) {
    _registerCommonReportWizardPages(factory, reportWizardOptions);
    chooseReportTypePage_1._registerSelectReportTypePage(factory, {
        showVertical: false,
        canCreateDatabound: function () {
            return reportWizardOptions.dataSources().length > 0 ||
                reportWizardOptions.connectionStrings.sql().length > 0 ||
                reportWizardOptions.connectionStrings.json().length > 0 ||
                (reportWizardOptions.allowCreateNewJsonConnection && reportWizardOptions.wizardSettings.enableJsonDataSource);
        }
    });
    selectDataMembersPage_1._registerSelectDataMembersPage(factory, reportWizardOptions);
    addGroupingLevelPage_1._registerAddGroupingLevelPage(factory);
    chooseSummaryOptionsPage_1._registerChooseSummaryOptionsPage(factory);
    configureReportPageSettingsPage_1._registerConfigureReportPageSettingsPage(factory);
    colorSchemePage_1._registerChooseReportColorSchemePage(factory);
}
exports._registerReportWizardPages = _registerReportWizardPages;
function _createReportWizard(reportWizardOptions) {
    var factory = new analytics_wizard_1.PageFactory();
    _registerReportWizardPages(factory, reportWizardOptions);
    return new ReportWizard(factory, reportWizardOptions);
}
exports._createReportWizard = _createReportWizard;


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _commonRequestModel_1 = __webpack_require__(224);
var paperKind_1 = __webpack_require__(225);
var reportWizardState_1 = __webpack_require__(18);
var $ = __webpack_require__(3);
var _crossTabRequestModel_1 = __webpack_require__(338);
var MasterDetailRequestModel = (function (_super) {
    __extends(MasterDetailRequestModel, _super);
    function MasterDetailRequestModel(state) {
        var _this = _super.call(this, state) || this;
        _this._masterRelationMap = function (query, path) {
            var newInfo = {
                Name: query.name,
                DisplayName: query.displayName,
                CheckedState: query.checked,
                Fields: query.fields.map(function (field) {
                    return {
                        Name: field.name,
                        DisplayName: field.displayName,
                        Checked: field.checked,
                    };
                }),
                Relations: query.relations.map(function (relation) { return _this._masterRelationMap(relation, relation.path); })
            };
            _this._collectionByPath[path] = newInfo;
            return newInfo;
        };
        _this._collectionByPath = {};
        _this.UseMasterDetailBuilder = true;
        var dataSource = state.dataSource || state.newDataSource;
        _this.DataSourceName = dataSource && JSON.parse(dataSource).name;
        if (state.reportType === reportWizardState_1.ReportType.CrossTab) {
            _this.CrossTabFieldInfo = [].concat(state.crossTabColumnsFieldInfo.map(function (item) { return new _crossTabRequestModel_1.CrossTabColumnFieldInfo({ name: item.name, displayName: item.displayName, sortOrder: item.sortOrder }); }), state.crossTabRowsFieldInfo.map(function (item) { return new _crossTabRequestModel_1.CrossTabRowFieldInfo({ name: item.name, displayName: item.displayName, sortOrder: item.sortOrder }); }), state.crossTabDataFieldInfo.map(function (item) { return new _crossTabRequestModel_1.CrossTabDataFieldInfo({ name: item.name, displayName: item.displayName, summaryType: item.summaryType }); }));
        }
        else {
            _this.MasterDetailInfo = state.masterDetailInfoCollection.map(function (info) {
                return _this._masterRelationMap(info, info.path);
            });
            _this.MasterDetailGroupsInfo = $.map(state.masterDetailGroups, function (array, key) { return ({
                'Key': _this._collectionByPath[key],
                'Value': (array || []).map(function (item) { return ((item || [])); })
            }); });
            _this.MasterDetailSummariesInfo = $.map(state.masterDetailSummariesInfo, function (value, key) { return ({
                'Key': _this._collectionByPath[key],
                'Value': (value || []).map(function (item) {
                    return {
                        Column: {
                            Name: item.column.name,
                            DisplayName: item.column.displayName
                        },
                        SummaryFunctions: item.summaryFunctions
                    };
                })
            }); });
        }
        if (state.pageSetup) {
            _this.PaperKind = paperKind_1.PaperKind[state.pageSetup.paperKind];
            _this.PaperSize = {
                width: state.pageSetup.width,
                height: state.pageSetup.height
            };
            _this.Margins = {
                Left: state.pageSetup.marginLeft,
                Right: state.pageSetup.marginRight,
                Top: state.pageSetup.marginTop,
                Bottom: state.pageSetup.marginBottom
            };
            _this.Portrait = !state.pageSetup.landscape;
            _this.Unit = state.pageSetup.unit;
        }
        return _this;
    }
    return MasterDetailRequestModel;
}(_commonRequestModel_1.CommonRequestModel));
exports.MasterDetailRequestModel = MasterDetailRequestModel;


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = __webpack_require__(61);
var _fieldListController_1 = __webpack_require__(100);
var metadata_1 = __webpack_require__(6);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_widgets_internal_1 = __webpack_require__(8);
var analytics_wizard_internal_1 = __webpack_require__(59);
var _utils_2 = __webpack_require__(49);
var MasterDetailInfoBase = (function () {
    function MasterDetailInfoBase(name, specifics, displayName) {
        this.name = name;
        this.specifics = specifics;
        this.displayName = displayName;
        if (!this.displayName)
            this.displayName = this.name;
    }
    return MasterDetailInfoBase;
}());
exports.MasterDetailInfoBase = MasterDetailInfoBase;
var MasterDetailFieldInfo = (function (_super) {
    __extends(MasterDetailFieldInfo, _super);
    function MasterDetailFieldInfo(field) {
        var _this = _super.call(this, field.name, field.specifics, field.displayName) || this;
        _this.checked = !field.unChecked();
        return _this;
    }
    return MasterDetailFieldInfo;
}(MasterDetailInfoBase));
exports.MasterDetailFieldInfo = MasterDetailFieldInfo;
var MasterDetailQueryInfo = (function (_super) {
    __extends(MasterDetailQueryInfo, _super);
    function MasterDetailQueryInfo(dataMember) {
        var _this = _super.call(this, dataMember.name, dataMember.specifics, dataMember.displayName) || this;
        _this._complexFields = [];
        _this._complexRelations = [];
        _this.fields = [];
        _this.relations = [];
        _this.path = dataMember.path;
        _this.checked = dataMember.checked();
        dataMember.children().forEach(function (item) {
            if (!item.isList || item.isComplex) {
                if (item.isComplex && item instanceof analytics_wizard_internal_1.DataMemberTreeNode) {
                    _this._expandComplexFieds(item);
                }
                else {
                    _this.fields.push(new MasterDetailFieldInfo(item));
                }
            }
            else {
                _this.relations.push(new MasterDetailQueryInfo(item));
            }
        });
        _this.fields = _this.fields.concat(_this._complexFields);
        _this.relations = _this.relations.concat(_this._complexRelations);
        return _this;
    }
    MasterDetailQueryInfo.prototype._expandComplexFieds = function (complexField) {
        var _this = this;
        complexField.children().forEach(function (child) {
            var newChild = $.extend({}, child, { name: complexField.name + '.' + child.name });
            if (child instanceof analytics_wizard_internal_1.FieldTreeNode) {
                _this._complexFields.push(new MasterDetailFieldInfo(newChild));
            }
            if (!child.isComplex && child instanceof analytics_wizard_internal_1.DataMemberTreeNode) {
                _this._complexRelations.push(new MasterDetailQueryInfo(newChild));
            }
            if (child.isComplex && child instanceof analytics_wizard_internal_1.DataMemberTreeNode) {
                _this._expandComplexFieds(newChild);
            }
        });
    };
    return MasterDetailQueryInfo;
}(MasterDetailInfoBase));
exports.MasterDetailQueryInfo = MasterDetailQueryInfo;
var DataMemberCustomCheckedTreeNode = (function (_super) {
    __extends(DataMemberCustomCheckedTreeNode, _super);
    function DataMemberCustomCheckedTreeNode(name, displayName, specifics, isChecked, path, afterCheckToggled) {
        var _this = _super.call(this, name, displayName, specifics, isChecked, path, afterCheckToggled) || this;
        _this.checked = ko.pureComputed({
            read: function () {
                var lists = _this.children().filter(function (item) { return _utils_1.isList(item); });
                if (lists.length === 0) {
                    return _this._checked();
                }
                else {
                    var checkedChildren = 0;
                    var partiallySelectedItems = 0;
                    lists.forEach(function (item) {
                        if (item.checked() === true) {
                            checkedChildren++;
                        }
                        else if (item.checked() !== false) {
                            partiallySelectedItems++;
                        }
                    });
                    if (checkedChildren > 0)
                        _this._checked(true);
                    if (checkedChildren === lists.length) {
                        return true;
                    }
                    else {
                        return _this._checked() || partiallySelectedItems > 0 ? undefined : false;
                    }
                }
            }
        });
        _this.checked.subscribe(function (item) {
            afterCheckToggled && afterCheckToggled(_this);
        });
        if (isChecked)
            afterCheckToggled && afterCheckToggled(_this);
        return _this;
    }
    DataMemberCustomCheckedTreeNode.prototype.setChecked = function (value) {
        if (!value || (!this.unChecked() && value)) {
            this.children().forEach(function (item) { return _utils_1.isList(item) && item.setChecked(false); });
            this._checked(false);
        }
        else
            this._checked(value);
    };
    return DataMemberCustomCheckedTreeNode;
}(analytics_wizard_internal_1.DataMemberTreeNode));
exports.DataMemberCustomCheckedTreeNode = DataMemberCustomCheckedTreeNode;
var MasterDetailTreeListController = (function (_super) {
    __extends(MasterDetailTreeListController, _super);
    function MasterDetailTreeListController(hideDataMemberSubItems) {
        var _this = _super.call(this) || this;
        _this.hideDataMemberSubItems = hideDataMemberSubItems || ko.observable(false);
        return _this;
    }
    MasterDetailTreeListController.prototype.canSelect = function (value) {
        return (value.hasItems && !!value.path) || value.data.specifics === 'none';
    };
    MasterDetailTreeListController.prototype.hasItems = function (item) {
        if (this.hideDataMemberSubItems()) {
            return false;
        }
        return _super.prototype.hasItems.call(this, item);
    };
    return MasterDetailTreeListController;
}(analytics_widgets_internal_1.DataMemberTreeListController));
exports.MasterDetailTreeListController = MasterDetailTreeListController;
var AvailableFieldsTreeListController = (function (_super) {
    __extends(AvailableFieldsTreeListController, _super);
    function AvailableFieldsTreeListController(rootItems) {
        var _this = _super.call(this, null) || this;
        _this.rootItems = rootItems;
        return _this;
    }
    AvailableFieldsTreeListController.prototype.itemsFilter = function (item) {
        var visible = false;
        if (!!item.path && _utils_1.isList(item)) {
            visible = this.rootItems().map(function (item) { return item['path']; }).indexOf(item.path) > -1;
        }
        else if (item.path) {
            var stringEndIndex = item.path.lastIndexOf(item.name);
            var pathParts = item.path.substring(0, stringEndIndex != -1 ? stringEndIndex : undefined).split('.');
            if (pathParts.length > 0 && !pathParts[pathParts.length - 1])
                pathParts.splice(pathParts.length - 1, 1);
            visible = this.rootItems().map(function (item) { return item['path']; }).indexOf(pathParts.join('.')) > -1;
        }
        if (!visible && !item.unChecked()) {
            item.setChecked(false);
        }
        item.visible(visible);
        return visible;
    };
    AvailableFieldsTreeListController.prototype.isDraggable = function (item) {
        return false;
    };
    return AvailableFieldsTreeListController;
}(_fieldListController_1.FieldListController));
exports.AvailableFieldsTreeListController = AvailableFieldsTreeListController;
var SummaryInfo = (function (_super) {
    __extends(SummaryInfo, _super);
    function SummaryInfo(data) {
        var _this = _super.call(this, data) || this;
        _this.functionValue([]);
        return _this;
    }
    return SummaryInfo;
}(_utils_2.FieldInfo));
exports.SummaryInfo = SummaryInfo;
var SummaryInfoFieldlist = (function (_super) {
    __extends(SummaryInfoFieldlist, _super);
    function SummaryInfoFieldlist() {
        var _this = _super.call(this, metadata_1.getSummaryFunctionValues()) || this;
        _this.selectedPath = ko.observable('');
        _this._disposables.push(_this.displayName = ko.computed(function () {
            if (!_this.field())
                return null;
            return [_this.field().parent.displayName, _this.field().displayName].join(' - ');
        }).extend({ rateLimit: 0 }));
        return _this;
    }
    return SummaryInfoFieldlist;
}(SummaryInfo));
exports.SummaryInfoFieldlist = SummaryInfoFieldlist;


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var reportWizardState_1 = __webpack_require__(18);
var _pageSetupUtils_1 = __webpack_require__(340);
var xrReport_1 = __webpack_require__(39);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var analytics_wizard_1 = __webpack_require__(7);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var analytics_wizard_internal_1 = __webpack_require__(59);
var PreviewPageHelper = (function (_super) {
    __extends(PreviewPageHelper, _super);
    function PreviewPageHelper(settings) {
        var _this = _super.call(this) || this;
        _this.width = ko.observable(0);
        _this.height = ko.observable(0);
        _this.marginLeft = ko.observable(0);
        _this.marginRight = ko.observable(0);
        _this.marginTop = ko.observable(0);
        _this.marginBottom = ko.observable(0);
        _this.pagePreviewElement = ko.observable(null);
        if (settings) {
            _this.width = settings.width;
            _this.height = settings.height;
            _this.marginLeft = settings.marginLeft;
            _this.marginRight = settings.marginRight;
            _this.marginTop = settings.marginTop;
            _this.marginBottom = settings.marginBottom;
        }
        var elementWidth = ko.computed(function () { return _this.pagePreviewElement() && _this.pagePreviewElement().width() || 200; }).extend({ throttle: 100 });
        var elementHeight = ko.computed(function () { return _this.pagePreviewElement() && _this.pagePreviewElement().height() || 292; }).extend({ throttle: 100 });
        var previewRatio = ko.computed(function () { return Math.min(elementWidth() / _this.width(), elementHeight() / _this.height()); });
        var resizeHandler = function () {
            _this.pagePreviewElement.valueHasMutated();
        };
        window.addEventListener('resize', resizeHandler);
        _this._disposables.push({
            dispose: function () {
                _this.pagePreviewElement(null);
                window.removeEventListener('resize', resizeHandler);
            }
        }, elementWidth, elementHeight, previewRatio, _this.previewPageHeight = ko.pureComputed(function () { return _this.height() * previewRatio(); }), _this.previewPageWidth = ko.pureComputed(function () { return Math.round(_this.width() * previewRatio()); }), _this.previewTopMargin = ko.pureComputed(function () { return Math.round(_this.marginTop() * previewRatio()); }), _this.previewRightMargin = ko.pureComputed(function () { return Math.round(_this.marginRight() * previewRatio()); }), _this.previewBottomMargin = ko.pureComputed(function () { return Math.round(_this.marginBottom() * previewRatio()); }), _this.previewLeftMargin = ko.pureComputed(function () { return Math.round(_this.marginLeft() * previewRatio()); }));
        return _this;
    }
    PreviewPageHelper.prototype.cachePagePreviewElement = function ($element) {
        var _this = this;
        setTimeout(function () {
            _this.pagePreviewElement($element);
        }, 100);
    };
    PreviewPageHelper.prototype.updatePageSettings = function (pageSetup) {
        this.width(pageSetup.width);
        this.height(pageSetup.height);
        this.marginTop(pageSetup.marginTop);
        this.marginRight(pageSetup.marginRight);
        this.marginBottom(pageSetup.marginBottom);
        this.marginLeft(pageSetup.marginLeft);
    };
    return PreviewPageHelper;
}(analytics_utils_1.Disposable));
exports.PreviewPageHelper = PreviewPageHelper;
var ConfigureReportPageSettingsPage = (function (_super) {
    __extends(ConfigureReportPageSettingsPage, _super);
    function ConfigureReportPageSettingsPage() {
        var _a;
        var _this = _super.call(this) || this;
        _this.lookupData = {
            paperKind: xrReport_1.paperKind.valuesArray
                .map(function (x) { return { value: x.value, displayName: analytics_utils_1.getLocalization(x.displayValue, x.localizationId) }; })
                .sort(function (a, b) { return a.value === 'Custom' ? 1 : b.value === 'Custom' ? -1 : a.displayName.localeCompare(b.displayName); }),
            unit: [
                { value: reportWizardState_1.GraphicsUnit.Inch, displayName: analytics_utils_1.getLocalization('Inch', 'AnalyticsCoreStringId.Wizard_Inch') },
                { value: reportWizardState_1.GraphicsUnit.Millimeter, displayName: analytics_utils_1.getLocalization('Millimeter', 'AnalyticsCoreStringId.Wizard_Millimeter') },
                { value: reportWizardState_1.GraphicsUnit.Pixel, displayName: analytics_utils_1.getLocalization('Pixel', 'ASPxReportsStringId.ReportDesigner_Wizard_Pixel') }
            ]
        };
        _this.paperKind = ko.observable(reportWizardState_1.defaultPageSetupState.paperKind);
        _this.landscape = ko.observable(reportWizardState_1.defaultPageSetupState.landscape);
        _this.width = ko.observable(reportWizardState_1.defaultPageSetupState.width);
        _this.height = ko.observable(reportWizardState_1.defaultPageSetupState.height);
        _this._disposables.push(_this.fixedSize = ko.computed(function () { return _this.paperKind() !== 'Custom'; }));
        _this.marginTop = ko.observable(reportWizardState_1.defaultPageSetupState.marginTop);
        _this.marginRight = ko.observable(reportWizardState_1.defaultPageSetupState.marginRight);
        _this.marginBottom = ko.observable(reportWizardState_1.defaultPageSetupState.marginBottom);
        _this.marginLeft = ko.observable(reportWizardState_1.defaultPageSetupState.marginLeft);
        _this._disposables.push(_this.previewPageHelper = new PreviewPageHelper({
            height: _this.height,
            width: _this.width,
            marginTop: _this.marginTop,
            marginRight: _this.marginRight,
            marginBottom: _this.marginBottom,
            marginLeft: _this.marginLeft
        }));
        _this._unit = ko.observable(reportWizardState_1.defaultPageSetupState.unit);
        _this._disposables.push(_this.unit = ko.computed({
            read: function () { return _this._unit(); },
            write: function (newVal) {
                var converter = _pageSetupUtils_1.PageSetupHelper.getConverter(_this._unit(), newVal);
                [_this.width, _this.height, _this.marginTop, _this.marginRight, _this.marginBottom, _this.marginLeft].forEach(function (x) { x(converter(x())); });
                _this._unit(newVal);
            }
        }));
        _this._disposables.push(_this.paperKind.subscribe(function (newVal) {
            var _a;
            if (newVal !== 'Custom') {
                var convert = _pageSetupUtils_1.PageSetupHelper.getConverter(reportWizardState_1.GraphicsUnit.Inch, _this._unit());
                var width = convert(analytics_internal_1.papperKindMapper[newVal].width / 100);
                var height = convert(analytics_internal_1.papperKindMapper[newVal].height / 100);
                if (_this.landscape())
                    _a = [height, width], width = _a[0], height = _a[1];
                _this.width(width);
                _this.height(height);
            }
        }));
        _this._disposables.push(_this.landscape.subscribe(function (newVal) {
            var _a;
            var width = _this.height();
            var height = _this.width();
            _this.width(width);
            _this.height(height);
            var t = _this.marginTop(), r = _this.marginRight(), b = _this.marginBottom(), l = _this.marginLeft();
            _a = newVal
                ? [l, t, r, b]
                : [r, b, l, t], t = _a[0], r = _a[1], b = _a[2], l = _a[3];
            _this.marginTop(t);
            _this.marginRight(r);
            _this.marginBottom(b);
            _this.marginLeft(l);
        }));
        _this._disposables.push(_this.valueFormat = ko.pureComputed(function () {
            switch (_this._unit()) {
                case reportWizardState_1.GraphicsUnit.Inch:
                    return '#0.00 "';
                case reportWizardState_1.GraphicsUnit.Millimeter:
                    return '#0.0 mm';
                case reportWizardState_1.GraphicsUnit.Pixel:
                    return '#0 px';
            }
        }));
        (_a = _this._disposables).push.apply(_a, analytics_wizard_internal_1.subscribeProperties([
            _this.paperKind,
            _this.landscape,
            _this.width,
            _this.height,
            _this.marginTop,
            _this.marginLeft,
            _this.marginRight,
            _this.marginBottom,
            _this.unit
        ], function () { return _this._onChange(); }));
        return _this;
    }
    ConfigureReportPageSettingsPage.prototype.canFinish = function () {
        return true;
    };
    ConfigureReportPageSettingsPage.prototype.initialize = function (state) {
        this.paperKind(state.paperKind);
        this.landscape(state.landscape);
        this.unit(state.unit);
        if (state.paperKind === 'Custom') {
            this.width(state.width);
            this.height(state.height);
        }
        this.marginLeft(state.marginLeft);
        this.marginRight(state.marginRight);
        this.marginTop(state.marginTop);
        this.marginBottom(state.marginBottom);
        return $.Deferred().resolve().promise();
    };
    ConfigureReportPageSettingsPage.prototype.commit = function () {
        return $.Deferred().resolve({
            paperKind: this.paperKind(),
            unit: this.unit(),
            width: this.width(),
            height: this.height(),
            marginLeft: this.marginLeft(),
            marginRight: this.marginRight(),
            marginTop: this.marginTop(),
            marginBottom: this.marginBottom(),
            landscape: this.landscape()
        }).promise();
    };
    return ConfigureReportPageSettingsPage;
}(analytics_wizard_1.WizardPageBase));
exports.ConfigureReportPageSettingsPage = ConfigureReportPageSettingsPage;
function _applyPageSetting(data, state) {
    state.height = data.height;
    state.landscape = data.landscape;
    state.marginBottom = data.marginBottom;
    state.marginLeft = data.marginLeft;
    state.marginRight = data.marginRight;
    state.marginTop = data.marginTop;
    state.paperKind = data.paperKind;
    state.unit = data.unit;
    state.width = data.width;
}
exports._applyPageSetting = _applyPageSetting;
function _registerConfigureReportPageSettingsPage(factory) {
    factory.registerMetadata(pageId_1.ReportWizardPageId.ConfigureReportPageSettingsPage, {
        create: function () { return new ConfigureReportPageSettingsPage(); },
        getState: function (state) { return state.pageSetup; },
        setState: function (data, state) {
            _applyPageSetting(data, state);
        },
        resetState: function (state, defaultState) {
            _applyPageSetting(defaultState, state);
        },
        template: 'dxrd-page-pageSetup',
        description: analytics_utils_1.getLocalization('Specify report page settings.', 'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_Description')
    });
}
exports._registerConfigureReportPageSettingsPage = _registerConfigureReportPageSettingsPage;


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _labelWizardUtils_1 = __webpack_require__(228);
var _utils_1 = __webpack_require__(74);
var reportWizardState_1 = __webpack_require__(18);
var _selectLabelTypePage_1 = __webpack_require__(229);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_wizard_1 = __webpack_require__(7);
var analytics_internal_1 = __webpack_require__(2);
var analytics_wizard_internal_1 = __webpack_require__(59);
var CustomizeLabelPage = (function (_super) {
    __extends(CustomizeLabelPage, _super);
    function CustomizeLabelPage() {
        var _a;
        var _this = _super.call(this) || this;
        _this._id = ko.observable(0);
        _this._labelWidth = ko.observable(0);
        _this._labelHeight = ko.observable(0);
        _this._horizontalPitch = ko.observable(0);
        _this._verticalPitch = ko.observable(0);
        _this._topMargin = ko.observable(0);
        _this._leftMargin = ko.observable(0);
        _this._rightMargin = ko.observable(0);
        _this._bottomMargin = ko.observable(0);
        _this._rowsCount = ko.pureComputed(function () {
            return _this._getLabelsCount(_this._pageHeight(), _this._verticalPitch(), _this._labelHeight(), _this._topMargin() + _this._bottomMargin());
        });
        _this._columnsCount = ko.pureComputed(function () {
            return _this._getLabelsCount(_this._pageWidth(), _this._horizontalPitch(), _this._labelWidth(), _this._leftMargin() + _this._rightMargin());
        });
        _this._pageHeight = ko.pureComputed(function () {
            if (_this._selectedPaperSize().unit === _this.unit())
                return _this._selectedPaperSize().height;
            if (_this._selectedPaperSize().unit === reportWizardState_1.GraphicsUnit.Millimeter)
                return _this._selectedPaperSize().height * CustomizeLabelPage._CONVERSION_COEEFICIENT;
            return _this._selectedPaperSize().height / CustomizeLabelPage._CONVERSION_COEEFICIENT;
        });
        _this._pageWidth = ko.pureComputed(function () {
            if (_this._selectedPaperSize().unit === _this.unit())
                return _this._selectedPaperSize().width;
            if (_this._selectedPaperSize().unit === reportWizardState_1.GraphicsUnit.Millimeter)
                return _this._selectedPaperSize().width * CustomizeLabelPage._CONVERSION_COEEFICIENT;
            return _this._selectedPaperSize().width / CustomizeLabelPage._CONVERSION_COEEFICIENT;
        });
        _this.paperKinds = function () { return (_this._labelData.paperKinds); };
        _this._selectedPaperSize = ko.observable({ 'id': 1, 'enumId': 9, 'name': 'A4', 'width': 210.0, 'height': 297.0, 'unit': 6, 'isRollPaper': false });
        _this.unit = ko.observable();
        _this._stepUnit = ko.pureComputed(function () { return _this.unit() === reportWizardState_1.GraphicsUnit.Inch ? 0.01 : 0.1; });
        _this.labelWidth = ko.computed({
            read: function () { return parseFloat(_this._getFormattedValueInUnits(_this._labelWidth())); },
            write: function (value) { return _this._labelWidth(value); }
        });
        _this.labelHeight = ko.computed({
            read: function () { return parseFloat(_this._getFormattedValueInUnits(_this._labelHeight())); },
            write: function (value) { return _this._labelHeight(value); }
        });
        _this.horizontalPitch = ko.computed({
            read: function () { return parseFloat(_this._getFormattedValueInUnits(_this._horizontalPitch())); },
            write: function (value) { return _this._horizontalPitch(value); }
        });
        _this.verticalPitch = ko.computed({
            read: function () { return parseFloat(_this._getFormattedValueInUnits(_this._verticalPitch())); },
            write: function (value) { return _this._verticalPitch(value); }
        });
        _this.topMargin = ko.computed({
            read: function () { return parseFloat(_this._getFormattedValueInUnits(_this._topMargin())); },
            write: function (value) { return _this._topMargin(value); }
        });
        _this.leftMargin = ko.computed({
            read: function () { return parseFloat(_this._getFormattedValueInUnits(_this._leftMargin())); },
            write: function (value) { return _this._leftMargin(value); }
        });
        _this.rightMargin = ko.computed({
            read: function () { return parseFloat(_this._getFormattedValueInUnits(_this._rightMargin())); },
            write: function (value) { return _this._rightMargin(value); }
        });
        _this.bottomMargin = ko.computed({
            read: function () { return parseFloat(_this._getFormattedValueInUnits(_this._bottomMargin())); },
            write: function (value) { return _this._bottomMargin(value); }
        });
        _this._labelsCountText = ko.pureComputed(function () {
            return _this._rowsCount() * _this._columnsCount() + ' ' + analytics_utils_1.getLocalization('labels on the page', 'ASPxReportsStringId.ReportDesigner_Wizard_CustomizeLabelPage_LabelCountText') + ', ' + _this._columnsCount() + ' x ' + _this._rowsCount();
        });
        _this._pageSizeText = ko.pureComputed(function () {
            return CustomizeLabelPage._getPageSizeText(_this._pageWidth(), _this._pageHeight(), _this.unit());
        });
        _this._units = [
            { text: analytics_utils_1.getLocalization('Inch', 'AnalyticsCoreStringId.Wizard_Inch'), value: reportWizardState_1.GraphicsUnit.Inch },
            { text: analytics_utils_1.getLocalization('Millimeter', 'AnalyticsCoreStringId.Wizard_Millimeter'), value: reportWizardState_1.GraphicsUnit.Millimeter }
        ];
        _this._disposables.push(_this._rowsCount, _this._columnsCount, _this._pageHeight, _this._pageWidth);
        _this._disposables.push(_this.unit.subscribe(function (newUnit) {
            if (newUnit === reportWizardState_1.GraphicsUnit.Inch) {
                _this._labelWidth(_this._labelWidth() * CustomizeLabelPage._CONVERSION_COEEFICIENT);
                _this._labelHeight(_this._labelHeight() * CustomizeLabelPage._CONVERSION_COEEFICIENT);
                _this._horizontalPitch(_this._horizontalPitch() * CustomizeLabelPage._CONVERSION_COEEFICIENT);
                _this._verticalPitch(_this._verticalPitch() * CustomizeLabelPage._CONVERSION_COEEFICIENT);
                _this._topMargin(_this._topMargin() * CustomizeLabelPage._CONVERSION_COEEFICIENT);
                _this._leftMargin(_this._leftMargin() * CustomizeLabelPage._CONVERSION_COEEFICIENT);
                _this._rightMargin(_this._rightMargin() * CustomizeLabelPage._CONVERSION_COEEFICIENT);
                _this._bottomMargin(_this._bottomMargin() * CustomizeLabelPage._CONVERSION_COEEFICIENT);
            }
            else if (newUnit === reportWizardState_1.GraphicsUnit.Millimeter) {
                _this._labelWidth(_this._labelWidth() / CustomizeLabelPage._CONVERSION_COEEFICIENT);
                _this._labelHeight(_this._labelHeight() / CustomizeLabelPage._CONVERSION_COEEFICIENT);
                _this._horizontalPitch(_this._horizontalPitch() / CustomizeLabelPage._CONVERSION_COEEFICIENT);
                _this._verticalPitch(_this._verticalPitch() / CustomizeLabelPage._CONVERSION_COEEFICIENT);
                _this._topMargin(_this._topMargin() / CustomizeLabelPage._CONVERSION_COEEFICIENT);
                _this._leftMargin(_this._leftMargin() / CustomizeLabelPage._CONVERSION_COEEFICIENT);
                _this._rightMargin(_this._rightMargin() / CustomizeLabelPage._CONVERSION_COEEFICIENT);
                _this._bottomMargin(_this._bottomMargin() / CustomizeLabelPage._CONVERSION_COEEFICIENT);
            }
        }));
        (_a = _this._disposables).push.apply(_a, analytics_wizard_internal_1.subscribeProperties([
            _this._labelWidth,
            _this._labelHeight,
            _this._horizontalPitch,
            _this._verticalPitch,
            _this._topMargin,
            _this._leftMargin,
            _this._rightMargin,
            _this._bottomMargin,
            _this.unit,
            _this._selectedPaperSize
        ], function () { return _this._onChange(); }));
        _this._disposables.push(_this._stepUnit, _this.labelWidth, _this.labelHeight, _this.horizontalPitch, _this.verticalPitch, _this.topMargin, _this.leftMargin, _this.rightMargin, _this.bottomMargin, _this._labelsCountText, _this._pageSizeText);
        return _this;
    }
    CustomizeLabelPage.prototype._getFormattedValueInUnits = function (value) {
        return _utils_1.getFormattedValueInUnits(value, this.unit());
    };
    CustomizeLabelPage.prototype._getLabelsCount = function (paperDimentionInLabelUnit, labelPitch, labelWidth, margin) {
        return Math.floor((paperDimentionInLabelUnit - margin + (labelPitch - labelWidth)) / labelPitch);
    };
    CustomizeLabelPage.prototype.canNext = function () {
        return false;
    };
    CustomizeLabelPage.prototype.canFinish = function () {
        return true;
    };
    CustomizeLabelPage.prototype.initialize = function (labelDetails) {
        var _this = this;
        _selectLabelTypePage_1.initializeLabelReportWizardPromise();
        return _selectLabelTypePage_1.labelReportWizardPromise.done(function (labelData) {
            _this._labelData = labelData;
            _this._id(labelDetails.id);
            _this.unit(labelDetails.unit);
            _this._selectedPaperSize(analytics_internal_1.findFirstItemMatchesCondition(_this.paperKinds(), function (item) { return item.id === labelDetails.paperKindId; }));
            _this._labelWidth(labelDetails.width);
            _this._labelHeight(labelDetails.height);
            _this._horizontalPitch(labelDetails.hPitch);
            _this._verticalPitch(labelDetails.vPitch);
            _this._topMargin(labelDetails.topMargin);
            _this._leftMargin(labelDetails.leftMargin);
            _this._rightMargin(labelDetails.rightMargin);
            _this._bottomMargin(labelDetails.bottomMargin);
        });
    };
    CustomizeLabelPage.prototype.commit = function () {
        var labelDetails = {};
        labelDetails.width = this._labelWidth();
        labelDetails.height = this._labelHeight();
        labelDetails.hPitch = this._horizontalPitch();
        labelDetails.vPitch = this._verticalPitch();
        labelDetails.topMargin = this._topMargin();
        labelDetails.leftMargin = this._leftMargin();
        labelDetails.rightMargin = this._rightMargin();
        labelDetails.bottomMargin = this._bottomMargin();
        labelDetails.unit = this.unit();
        labelDetails.paperKindId = this._selectedPaperSize().id;
        return $.Deferred().resolve(labelDetails).promise();
    };
    CustomizeLabelPage._getPageSizeText = function (width, height, unit) {
        return _utils_1.getFormattedValueInUnits(width, unit) + ' x ' + _utils_1.getFormattedValueInUnits(height, unit) + (unit === reportWizardState_1.GraphicsUnit.Inch ? ' in' : ' mm');
    };
    CustomizeLabelPage._CONVERSION_COEEFICIENT = _labelWizardUtils_1.CONVERSION_COEEFICIENT;
    return CustomizeLabelPage;
}(analytics_wizard_1.WizardPageBase));
exports.CustomizeLabelPage = CustomizeLabelPage;
function _registerCustomizeLabelPage(factory) {
    factory.registerMetadata(pageId_1.ReportWizardPageId.CustomizeLabelPage, {
        setState: function (labelDetails, state) {
            state.width = labelDetails.width;
            state.height = labelDetails.height;
            state.hPitch = labelDetails.hPitch;
            state.vPitch = labelDetails.vPitch;
            state.topMargin = labelDetails.topMargin;
            state.leftMargin = labelDetails.leftMargin;
            state.rightMargin = labelDetails.rightMargin;
            state.bottomMargin = labelDetails.bottomMargin;
            state.unit = labelDetails.unit;
            state.paperKindId = labelDetails.paperKindId;
        },
        getState: function (state) {
            return state.labelDetails;
        },
        resetState: function (state, defaultState) {
            state.width = defaultState.width;
            state.height = defaultState.height;
            state.hPitch = defaultState.hPitch;
            state.vPitch = defaultState.vPitch;
            state.topMargin = defaultState.topMargin;
            state.leftMargin = defaultState.leftMargin;
            state.rightMargin = defaultState.rightMargin;
            state.bottomMargin = defaultState.bottomMargin;
            state.unit = defaultState.unit;
            state.paperKindId = defaultState.paperKindId;
        },
        create: function () {
            return new CustomizeLabelPage();
        },
        template: 'dxrd-page-customizeLabel',
        description: analytics_utils_1.getLocalization("Choose the page size and customize the label's parameters.", 'ASPxReportsStringId.ReportDesigner_Wizard_LabelPageSize')
    });
}
exports._registerCustomizeLabelPage = _registerCustomizeLabelPage;


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var settings_1 = __webpack_require__(12);
var _qBRequestWrapper_1 = __webpack_require__(73);
var chooseAvailableDataSourcePage_1 = __webpack_require__(24);
var analytics_internal_1 = __webpack_require__(2);
var analytics_wizard_1 = __webpack_require__(7);
var $ = __webpack_require__(3);
var objectItemCreation_1 = __webpack_require__(41);
var ReportWizardService = (function () {
    function ReportWizardService() {
    }
    ReportWizardService.createNewWizardRequest = function (reportWizardState, requestType, state, customizeWizardModelAction, oldReportJSON) {
        var dataSourceJSON = null;
        reportWizardState.dataSource = reportWizardState.dataSource || reportWizardState.newDataSource;
        if (reportWizardState.dataSource) {
            dataSourceJSON = JSON.parse(reportWizardState.dataSource).data;
        }
        var wizardModel = new requestType(reportWizardState);
        customizeWizardModelAction && customizeWizardModelAction(wizardModel);
        var requestJson = JSON.stringify({
            reportModel: wizardModel,
            dataSource: dataSourceJSON,
            oldReport: oldReportJSON,
            state: state,
            colorScheme: reportWizardState.colorScheme && (reportWizardState.colorScheme.name === 'Custom' ? reportWizardState.colorScheme.baseColor : reportWizardState.colorScheme.name)
        });
        return encodeURIComponent(requestJson);
    };
    ReportWizardService.generateReportFromWizardState = function (reportWizardState, requestType, state, customizeWizardModelAction, oldReportJSON) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'generateReportFromWizardModel', this.createNewWizardRequest(reportWizardState, requestType, state, customizeWizardModelAction, oldReportJSON));
    };
    ReportWizardService.getLabelReportWizardData = function () {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'labelReportWizardData', '');
    };
    ReportWizardService.createNewJsonDataSource = function (state, createJsonCallback) {
        var jsonDataSource = analytics_wizard_1._restoreJsonDataSourceFromState(state);
        var deferred = $.Deferred();
        _qBRequestWrapper_1.QBRequestWrapper().saveJsonSource(state.newConnectionName, jsonDataSource).done(function (connectionName) {
            state.jsonSource = null;
            state.connectionName = connectionName;
            createJsonCallback(analytics_wizard_1._restoreJsonDataSourceFromState(state))
                .done(function (result) {
                result.data = objectItemCreation_1.createNewObjectItem(result.data);
                deferred.resolve(chooseAvailableDataSourcePage_1._convertToStateDataSource(result));
            })
                .fail(function () { return deferred.reject(); });
        }).fail(function () { return deferred.reject(); });
        return deferred.promise();
    };
    return ReportWizardService;
}());
exports.ReportWizardService = ReportWizardService;


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _masterDetailWizardUtils_1 = __webpack_require__(150);
var reportWizardState_1 = __webpack_require__(18);
var chooseAvailableDataSourcePage_1 = __webpack_require__(24);
var _dataUtils_1 = __webpack_require__(60);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var analytics_wizard_1 = __webpack_require__(7);
var analytics_wizard_internal_1 = __webpack_require__(59);
var SelectDataMembersPage = (function (_super) {
    __extends(SelectDataMembersPage, _super);
    function SelectDataMembersPage(_fieldListCallBack, _hideDataMemberSubItems) {
        if (_hideDataMemberSubItems === void 0) { _hideDataMemberSubItems = false; }
        var _this = _super.call(this) || this;
        _this._fieldListCallBack = _fieldListCallBack;
        _this._hideDataMemberSubItems = _hideDataMemberSubItems;
        _this._rootItems = ko.observableArray([]);
        _this._dataMemberSelectedPath = ko.observable(null);
        _this._fieldSelectedPath = ko.observable(null);
        _this._checkedDataMembers = ko.observableArray([]);
        _this._checkedFields = ko.observableArray([]);
        _this._showDataSource = false;
        _this._afterCheckToggled = function (node) {
            if (!analytics_internal_1.isList(node))
                return;
            if (!node.unChecked()) {
                if (_this._checkedDataMembers.indexOf(node) === -1) {
                    if (!_this._multiSelectMode) {
                        _this._checkedDataMembers()[0] && _this._checkedDataMembers()[0].setChecked(false);
                        _this._checkedDataMembers([node]);
                    }
                    else {
                        _this._checkedDataMembers.push(node);
                    }
                    _this._fieldSelectedPath(node.path);
                }
            }
            else
                _this._checkedDataMembers.remove(node);
            _this._onChange();
        };
        _this._afterCheckToggledFields = function (node) {
            _this._processNode(node);
            _this._onChange();
        };
        _this._createMasterDetailTreeNode = function (item, isChecked, path) {
            var node = new analytics_wizard_internal_1.DataMemberTreeNode(item.name, item.displayName, item.specifics, isChecked, path, _this._afterCheckToggledFields);
            _this._disposables.push(node);
            return node;
        };
        _this._createMasterDetailFirstTabTreeNode = function (item, isChecked, path) {
            var checked = isChecked || (_this._showDataSource ? [_this.dataSourcePath, _this.initialFullDataMember].join('.') : _this.initialFullDataMember) === path;
            var node = new _masterDetailWizardUtils_1.DataMemberCustomCheckedTreeNode(item.name, item.displayName, item.specifics, checked, path, _this._afterCheckToggled);
            _this._disposables.push(node);
            return node;
        };
        _this._createMasterDetailLeafTreeNode = function (item, isChecked, path) {
            var node = new analytics_wizard_internal_1.FieldTreeNode(item.name, item.displayName, item.specifics, isChecked, path, _this._afterCheckToggledFields);
            _this._disposables.push(node);
            return node;
        };
        _this._showFirstLevelDataMembers = ko.observable(false);
        _this._multiSelectMode = true;
        _this._selectDataMembersCaption = analytics_utils_1.getLocalization('Select data members', 'ASPxReportsStringId.ReportDesigner_MasterDetailWizard_ChooseDataMembers_SelectDataMembers');
        _this._selectDataFieldsCaption = analytics_utils_1.getLocalization('Select data fields', 'ASPxReportsStringId.ReportDesigner_MasterDetailWizard_ChooseDataMembers_SelectDataFields');
        var fieldListProvider = new analytics_internal_1.FieldListProvider(_this._wrapFieldListCallback(_this._fieldListCallBack), ko.observableArray([]));
        _this._disposables.push(_this._dataMemberItemsProvider = new analytics_wizard_internal_1.TreeNodeItemsProvider(fieldListProvider, _this._rootItems, _this._createMasterDetailFirstTabTreeNode, _this._createMasterDetailLeafTreeNode));
        _this._disposables.push(_this._fieldMemberItemsProvider = new analytics_wizard_internal_1.TreeNodeItemsProvider(fieldListProvider, _this._rootItems, _this._createMasterDetailTreeNode, _this._createMasterDetailLeafTreeNode));
        _this._availableFieldsController = new _masterDetailWizardUtils_1.AvailableFieldsTreeListController(_this._checkedDataMembers);
        _this._disposables.push(ko.computed(function () {
            var item = _this._availableFieldsController.selectedItem;
            item && item.collapsed.peek() && item.toggleCollapsed();
        }));
        _this._dataMemberFieldListModel = {
            itemsProvider: _this._dataMemberItemsProvider,
            selectedPath: _this._dataMemberSelectedPath,
            treeListController: new _masterDetailWizardUtils_1.MasterDetailTreeListController(_this._showFirstLevelDataMembers),
            templateName: 'dxrd-treelist-with-checkbox'
        };
        _this._fieldMemberFieldListModel = {
            itemsProvider: _this._fieldMemberItemsProvider,
            selectedPath: _this._fieldSelectedPath,
            treeListController: _this._availableFieldsController,
            templateName: 'dxrd-treelist-with-checkbox'
        };
        return _this;
    }
    SelectDataMembersPage.prototype._wrapFieldListCallback = function (itemsCallback) {
        var _this = this;
        return function (pathRequest) {
            if (_this._hideDataMemberSubItems) {
                return $.Deferred().resolve([]).promise();
            }
            else {
                return itemsCallback(new analytics_utils_1.PathRequest(_this._showDataSource ? pathRequest.fullPath : _this.dataSourcePath + '.' + pathRequest.fullPath), _this._dataSource);
            }
        };
    };
    Object.defineProperty(SelectDataMembersPage.prototype, "dataSourcePath", {
        get: function () {
            return (this._dataSource.id || this._dataSource.ref);
        },
        enumerable: true,
        configurable: true
    });
    SelectDataMembersPage.prototype.getDataMemberSelectedPath = function (state) {
        if (state.masterDetailInfoCollection.length > 0)
            return null;
        return state.dataMember;
    };
    SelectDataMembersPage.prototype._beginInternal = function (state) {
        var _this = this;
        if (state.reportType === reportWizardState_1.ReportType.Vertical) {
            this._multiSelectMode = false;
            this._showFirstLevelDataMembers(true);
        }
        this._dataSource = chooseAvailableDataSourcePage_1._restoreDataSourceFromState(state.newDataSource || state.dataSource);
        var dataMember = this.getDataMemberSelectedPath(state);
        this.initialFullDataMember = state.dataMember;
        if (state.masterDetailInfoCollection.length === 0) {
            return this._fieldListCallBack(new analytics_utils_1.PathRequest(this.dataSourcePath), this._dataSource)
                .done(function (fields) {
                _this._fieldSelectedPath(null);
                _this._checkedDataMembers([]);
                _this._showDataSource = false;
                if (_dataUtils_1.includeNonListItem(fields)) {
                    _this._dataMemberSelectedPath([_this.dataSourcePath, dataMember].join('.'));
                    _this._showDataSource = true;
                    _this._rootItems([{
                            name: _this.dataSourcePath,
                            displayName: _this._dataSource.name,
                            specifics: 'List'
                        }]);
                }
                else {
                    _this._dataMemberSelectedPath(dataMember);
                    _this._rootItems(fields.map(function (value) {
                        return {
                            name: value.name,
                            displayName: value.displayName || value.name,
                            specifics: 'List'
                        };
                    }));
                }
            });
        }
        else {
            return $.Deferred().resolve().promise();
        }
    };
    SelectDataMembersPage.prototype._processFields = function (node) {
        if (!node.unChecked()) {
            if (this._checkedFields.indexOf(node) === -1) {
                this._checkedFields.push(node);
            }
        }
        else
            this._checkedFields.remove(node);
        this._onChange();
    };
    SelectDataMembersPage.prototype._processNode = function (node) {
        var _this = this;
        if (analytics_internal_1.isList(node)) {
            node.children().forEach(function (item) {
                if (analytics_internal_1.isList(item)) {
                    _this._processNode(item);
                }
                else {
                    _this._processFields(item);
                }
            });
        }
        else {
            this._processFields(node);
        }
    };
    SelectDataMembersPage.prototype.canNext = function () {
        return this._fieldMemberItemsProvider.hasCheckedItems();
    };
    SelectDataMembersPage.prototype.canFinish = function () {
        return true;
    };
    SelectDataMembersPage.prototype.selectDataMember = function (dataMemberPath) {
        var _this = this;
        this._dataMemberItemsProvider.selectItemByPath(dataMemberPath).always(function () { return _this._onChange(); });
    };
    SelectDataMembersPage.prototype.selectAllDataMembers = function () {
        var _this = this;
        this._dataMemberItemsProvider.selectAllItems(false).always(function () { return _this._onChange(); });
    };
    SelectDataMembersPage.prototype.selectDataField = function (dataFieldPath) {
        var _this = this;
        var pathParts = dataFieldPath.split('.');
        pathParts.pop();
        this._dataMemberItemsProvider.selectItemByPath(pathParts.join('.')).always(function () {
            return _this._fieldMemberItemsProvider.selectItemByPath(dataFieldPath).always(function () { return _this._onChange(); });
        });
    };
    SelectDataMembersPage.prototype.selectDataFields = function (dataMemberPath) {
        var _this = this;
        this._dataMemberItemsProvider.selectItemByPath(dataMemberPath).always(function () {
            _this._fieldMemberItemsProvider.selectItemsByPath(dataMemberPath).always(function () { return _this._onChange(); });
        });
    };
    SelectDataMembersPage.prototype.selectAllDataFields = function () {
        var _this = this;
        this._dataMemberItemsProvider.selectAllItems(false).always(function () {
            return _this._fieldMemberItemsProvider.selectAllItems().always(function () { return _this._onChange(); });
        });
    };
    SelectDataMembersPage.prototype.initialize = function (state) {
        return this._beginInternal(state);
    };
    SelectDataMembersPage.prototype._haveCheckedFields = function () {
        return this._checkedFields().length !== 0;
    };
    SelectDataMembersPage.prototype.commit = function () {
        var _this = this;
        return $.Deferred().resolve({
            masterDetailInfoCollection: (this._fieldMemberItemsProvider.getRootItems().filter(function (item) { return item.isList && !item.isComplex; }).map(function (item) {
                if (_this._showDataSource)
                    item = $.extend({}, item, { name: '' });
                return new _masterDetailWizardUtils_1.MasterDetailQueryInfo(item);
            }))
        }).promise();
    };
    return SelectDataMembersPage;
}(analytics_wizard_1.WizardPageBase));
exports.SelectDataMembersPage = SelectDataMembersPage;
function _registerSelectDataMembersPage(factory, reportWizardOptions, pageId) {
    if (pageId === void 0) { pageId = pageId_1.ReportWizardPageId.SelectDataMembersPage; }
    factory.registerMetadata(pageId, {
        create: function () {
            return new SelectDataMembersPage(reportWizardOptions.callbacks.fieldListsCallback, reportWizardOptions.hideDataMemberSubItems);
        },
        description: analytics_utils_1.getLocalization('Select data members to assign to the report and its detail reports and fields to display in these reports.', 'ASPxReportsStringId.ReportDesigner_MasterDetailWizard_ChooseDataMembers_Description'),
        template: 'dxrd-page-masterdetail-select-reportdata',
        getState: function (state) { return state; },
        setState: function (data, state) { return state.masterDetailInfoCollection = data.masterDetailInfoCollection; },
        resetState: function (state, defaultState) { return state.masterDetailInfoCollection = defaultState.masterDetailInfoCollection; }
    });
}
exports._registerSelectDataMembersPage = _registerSelectDataMembersPage;


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var ReportDialogBase = (function (_super) {
    __extends(ReportDialogBase, _super);
    function ReportDialogBase() {
        var _this = _super.call(this) || this;
        _this._visible = ko.observable(false);
        _this.width = ko.observable(690);
        _this.height = ko.observable(420);
        _this.template = ko.observable('');
        _this.model = ko.observable(null);
        _this.tab = ko.observable(null);
        _this.disabled = ko.observable(false);
        _this.visible = ko.computed({
            read: function () {
                return _this._visible();
            },
            write: function (newVal) {
                if (_this.disabled())
                    return;
                _this._visible(newVal);
                if (!newVal)
                    _this.tab(null);
            }
        });
        _this.container = function (element) { return analytics_internal_1.getParentContainer(element); };
        _this._disposables.push(_this.visible);
        return _this;
    }
    ReportDialogBase.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.tab(null);
    };
    ReportDialogBase.prototype.show = function (tab) {
        if (tab) {
            this.tab(tab);
            this.model().setUrl(tab.context().url());
        }
        this.model().onShow(tab);
        this.visible(true);
    };
    ReportDialogBase.prototype.customize = function (template, model) {
        this.template(template);
        this.model(model);
        this.buttons = model.popupButtons;
    };
    ReportDialogBase.prototype.cancel = function () {
        this.visible(false);
    };
    return ReportDialogBase;
}(analytics_utils_1.Disposable));
exports.ReportDialogBase = ReportDialogBase;


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var xrBand_1 = __webpack_require__(15);
var analytics_widgets_internal_1 = __webpack_require__(8);
function b64ToUint6(nChr) {
    return nChr > 64 && nChr < 91 ?
        nChr - 65
        : nChr > 96 && nChr < 123 ?
            nChr - 71
            : nChr > 47 && nChr < 58 ?
                nChr + 4
                : nChr === 43 ?
                    62
                    : nChr === 47 ?
                        63
                        :
                            0;
}
function base64DecToArr(sBase64, nBlockSize) {
    var sB64Enc = sBase64.replace(/[^A-Za-z0-9\+\/]/g, ''), nInLen = sB64Enc.length, nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2, aBytes = new Uint8Array(nOutLen);
    for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {
        nMod4 = nInIdx & 3;
        nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;
        if (nMod4 === 3 || nInLen - nInIdx === 1) {
            for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {
                aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;
            }
            nUint24 = 0;
        }
    }
    return aBytes;
}
function _arrayBufferToString(buf, callback) {
    var bb = new Blob([new Uint16Array(buf)]);
    var f = new FileReader();
    f.onload = function (e) {
        callback(btoa(e.target['result']));
    };
    f.readAsText(bb, 'UTF-16');
}
function btoaAtob16(utf16Base64, resultCallback) {
    try {
        resultCallback(btoa(String.fromCharCode.apply(null, new Uint16Array(base64DecToArr(utf16Base64, 2).buffer))));
    }
    catch (e) {
        _arrayBufferToString(base64DecToArr(utf16Base64, 2).buffer, resultCallback);
    }
}
function base64UTF16LEtobase64UTF8(base64UTF16, resultCallback) {
    base64UTF16 == undefined ? resultCallback(undefined) : atob(base64UTF16).indexOf('{\\rtf1') === 0 ? resultCallback(base64UTF16) : btoaAtob16(base64UTF16, resultCallback);
}
exports.base64UTF16LEtobase64UTF8 = base64UTF16LEtobase64UTF8;
function _isReorderBand(dropTarget, dragFrom) {
    return xrBand_1.BandViewModel.isReorderingBand(dropTarget.getControlModel()) &&
        xrBand_1.BandViewModel.isReorderingBand(dragFrom) &&
        dropTarget.getControlModel().controlType === dragFrom.controlType &&
        dropTarget.getControlModel().parentModel() === dragFrom.parentModel();
}
exports._isReorderBand = _isReorderBand;
function _isMarginBand(band) {
    return (band.controlType === 'TopMarginBand' || band.controlType === 'BottomMarginBand');
}
exports._isMarginBand = _isMarginBand;
function _isPageBand(band) {
    return (band.controlType === 'PageHeaderBand' || band.controlType === 'PageFooterBand');
}
exports._isPageBand = _isPageBand;
exports.availableFonts = analytics_widgets_internal_1.availableFonts;


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DefaultCrossTabControlEnum;
(function (DefaultCrossTabControlEnum) {
    DefaultCrossTabControlEnum["XRCrossTab"] = "XRCrossTab";
    DefaultCrossTabControlEnum["XRPivotGrid"] = "XRPivotGrid";
})(DefaultCrossTabControlEnum = exports.DefaultCrossTabControlEnum || (exports.DefaultCrossTabControlEnum = {}));


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var xrCrossTab_1 = __webpack_require__(98);
var xrPivotgrid_1 = __webpack_require__(68);
var settings_1 = __webpack_require__(12);
var _baseConverter_1 = __webpack_require__(239);
var analytics_utils_1 = __webpack_require__(0);
var enums_1 = __webpack_require__(58);
var xrChart_1 = __webpack_require__(130);
var xrCrossTabCell_1 = __webpack_require__(71);
var _styleHelper_1 = __webpack_require__(91);
var pivotgridfield_1 = __webpack_require__(70);
var style_1 = __webpack_require__(37);
var _controlConverterService_1 = __webpack_require__(400);
var CrossTabConverter = (function (_super) {
    __extends(CrossTabConverter, _super);
    function CrossTabConverter(_selectionProvider, _context) {
        var _this = _super.call(this) || this;
        _this._selectionProvider = _selectionProvider;
        _this._context = _context;
        _this._detailLink = 'https://docs.devexpress.com/XtraReports/DevExpress.XtraReports.UI.XRPivotGrid#convert-to-the-cross-tab-control';
        _this.popupOptions.height = 316;
        _this.popupOptions.confirmMessage = analytics_utils_1.getLocalization('The Cross Tab control does not support specific Pivot Grid functionality. Do you want to continue?', 'ASPxReportsStringId.ReportDesigner_ConvertPivotGridToCrossTab_Message_Confirmation');
        _this.popupOptions.infoMessage = analytics_utils_1.getLocalization("You can use the 'Revert to Original Pivot Grid' action in the Cross Tab properties window to restore the Pivot Grid control.", 'ASPxReportsStringId.ReportDesigner_ConvertPivotGridToCrossTab_Message_Info');
        _this.popupOptions.linkText = analytics_utils_1.getLocalization('[More infomation about Cross Tab conversion]', 'ASPxReportsStringId.ReportDesigner_ConvertPivotGridToCrossTab_Message_LinkText');
        _this.popupOptions.linkUrl = _this._detailLink;
        return _this;
    }
    CrossTabConverter.prototype._applyChanges = function () {
        this._warnings = [];
        var pivotGrid = this._model;
        this._undoEngine = analytics_utils_1.UndoEngine.tryGetUndoEngine(pivotGrid);
        this._undoEngine && this._undoEngine.start();
        var crossTab = settings_1.controlsFactory().createControl(settings_1.controlsFactory().controlsMap['XRCrossTab'].defaultVal, pivotGrid.parentModel());
        pivotGrid.getInfo().forEach(function (item) {
            if (crossTab[item.propertyName] && ko.isObservable(pivotGrid[item.propertyName]))
                crossTab[item.propertyName](pivotGrid[item.propertyName]());
        });
        crossTab.location.x(pivotGrid.location.x());
        crossTab.location.y(pivotGrid.location.y());
        crossTab.name('CrossTab_' + pivotGrid.name());
        this._convertOptions(pivotGrid, crossTab);
        var convertedFields = this._convertFields(pivotGrid, crossTab);
        this._convertStyles(pivotGrid, crossTab, convertedFields);
        this._applyVisibility(pivotGrid, crossTab);
        this._applyText(pivotGrid, crossTab);
        this._validateChartLinked(pivotGrid);
        if (ko.isObservable(crossTab.size.width))
            crossTab.size.width.valueHasMutated();
        this._saveOriginalLayout(pivotGrid, crossTab);
    };
    CrossTabConverter.prototype._convertStyles = function (pivotGrid, crossTab, convertedFields) {
        var _this = this;
        var root = crossTab.root;
        var resultStyleGroups = [];
        crossTab.cells().forEach(function (cell) {
            var deafultStyle = root.findStyle(cell.styleName());
            var cellStyle = _styleHelper_1.StylesHelper.generateStyle(deafultStyle);
            _this._applyStyles(pivotGrid, cell, cellStyle);
            pivotGrid.fields().forEach(function (field) { return cell.field() == convertedFields[field.name()] && _this._applyStyles(field, cell, cellStyle); });
            cellStyle = _styleHelper_1.StylesHelper.styleEqualityComparer(deafultStyle, cellStyle) ? deafultStyle : cellStyle;
            var styleAdded = false;
            for (var _i = 0, resultStyleGroups_1 = resultStyleGroups; _i < resultStyleGroups_1.length; _i++) {
                var group = resultStyleGroups_1[_i];
                if (group.style == cellStyle) {
                    group.cells.push(cell);
                    styleAdded = true;
                    break;
                }
            }
            !styleAdded && resultStyleGroups.push({ style: cellStyle, cells: [cell] });
        });
        crossTab.onDelete();
        if (resultStyleGroups.length === 1) {
            this._prepareGeneralStyle(resultStyleGroups, crossTab, root);
            return;
        }
        if (resultStyleGroups.length === 3)
            if (this._prepareStandardStyles(resultStyleGroups, crossTab, root))
                return;
        this._prepareNoStyles(resultStyleGroups, crossTab);
    };
    CrossTabConverter.prototype._prepareNoStyles = function (resultStyleGroups, crossTab) {
        resultStyleGroups.forEach(function (group) { return group.cells.forEach(function (x) { return _styleHelper_1.stylesProperties.forEach(function (element) {
            var value = group.style[element] && group.style.isPropertyModified(element) && group.style[element]();
            if (value) {
                x[element](group.style[element]());
            }
        }); }); });
        crossTab['generalStyleName']('');
        crossTab['headerAreaStyleName']('');
        crossTab['dataAreaStyleName']('');
        crossTab['totalAreaStyleName']('');
    };
    CrossTabConverter.prototype._prepareGeneralStyle = function (resultStyleGroups, crossTab, root) {
        var generalStyle = resultStyleGroups[0].style;
        generalStyle.name(crossTab['generalStyleName']());
        root.styles.push(generalStyle);
        crossTab['headerAreaStyleName']('');
        crossTab['dataAreaStyleName']('');
        crossTab['totalAreaStyleName']('');
    };
    CrossTabConverter.prototype._prepareStandardStyles = function (resultStyleGroups, crossTab, root) {
        var headerStyle = analytics_internal_1.findFirstItemMatchesCondition(resultStyleGroups, function (item) {
            return item.cells.every(function (x) { return xrCrossTabCell_1.XRCrossTabCellViewModel.cellKinds.Header.indexOf(x.kind()) !== -1; });
        }).style;
        headerStyle.name(crossTab['headerAreaStyleName']());
        if (!headerStyle)
            return false;
        var dataStyle = analytics_internal_1.findFirstItemMatchesCondition(resultStyleGroups, function (item) {
            return item.cells.every(function (x) { return xrCrossTabCell_1.XRCrossTabCellViewModel.cellKinds.Data.indexOf(x.kind()) !== -1; });
        }).style;
        dataStyle.name(crossTab['dataAreaStyleName']());
        if (!dataStyle)
            return false;
        var totalStyle = analytics_internal_1.findFirstItemMatchesCondition(resultStyleGroups, function (item) {
            return item.cells.every(function (x) { return xrCrossTabCell_1.XRCrossTabCellViewModel.cellKinds.Total.indexOf(x.kind()) !== -1; });
        }).style;
        if (!totalStyle)
            return false;
        totalStyle.name(crossTab['totalAreaStyleName']());
        crossTab['generalStyleName']('');
        root.styles.push(headerStyle, dataStyle, totalStyle);
        return true;
    };
    CrossTabConverter.prototype._applyStyles = function (source, cell, cellStyle) {
        xrCrossTabCell_1.XRCrossTabCellViewModel.cellKinds.Header.indexOf(cell.kind()) == -1 && this._applyStyle(source.appearances.cellAppearance, cell);
        if (cell.kind() == enums_1.CellKind.Corner || cell.kind() == enums_1.CellKind.DataHeader) {
            this._applyStyle(source.appearances.fieldHeaderAppearance, cellStyle);
        }
        if (cell.kind() === enums_1.CellKind.Data) {
            this._applyStyle(source.appearances.cellAppearance, cellStyle);
        }
        else if (cell.isBindable()) {
            this._applyStyle(source.appearances.fieldValueAppearance, cellStyle);
        }
        if (cell.kind() == enums_1.CellKind.RowTotalHeader || cell.kind() == enums_1.CellKind.ColumnTotalHeader) {
            this._applyStyle(source.appearances.fieldValueTotalAppearance, cellStyle);
            if (cell.rowLevel === undefined && cell.columnLevel == undefined) {
                this._applyStyle(source.appearances.fieldValueGrandTotalAppearance, cellStyle);
            }
        }
        if (cell.kind() == enums_1.CellKind.GrandTotal && (cell.rowLevel === undefined || cell.columnLevel == undefined) ||
            cell.kind() == enums_1.CellKind.RowTotal && cell.rowLevel == undefined || cell.kind() == enums_1.CellKind.ColumnTotal && cell.columnLevel == undefined) {
            this._applyStyle(source.appearances.grandTotalCellAppearance, cellStyle);
        }
        else if (cell.kind() == enums_1.CellKind.RowTotal || cell.kind() == enums_1.CellKind.ColumnTotal) {
            this._applyStyle(source.appearances.totalCellAppearance, cellStyle);
        }
    };
    CrossTabConverter.prototype._applyStyle = function (style, target) {
        pivotgridfield_1.appearanceInfo.forEach(function (element) {
            var propertyName = element.propertyName;
            if (propertyName == 'textOptions') {
                var result = '';
                var vertical = style.textOptions.textVerticalAlignment();
                if (vertical == 'Center')
                    result += 'Middle';
                else if (vertical != 'Default')
                    result += vertical;
                var horizontal = style.textOptions.textHorizontalAlignment();
                if (horizontal == 'Near')
                    result += 'Left';
                if (horizontal == 'Far')
                    result += 'Right';
                if (horizontal == 'Center')
                    result = 'Center';
                result && target['textAlignment'](result);
            }
            else {
                var value = style[propertyName] && style[propertyName]() && style[propertyName]();
                if (value && value != style_1.StyleModel.defaults[propertyName]) {
                    target[propertyName](value);
                }
            }
        });
    };
    CrossTabConverter.prototype._convertOptions = function (pivotGrid, crossTab) {
        crossTab.layoutOptions.columnTotalsPosition(pivotGrid['optionsView'].columnTotalsLocation() === 'Far' ?
            enums_1.TotalsPosition[enums_1.TotalsPosition.AfterData] : enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]);
        crossTab.layoutOptions.rowTotalsPosition(pivotGrid['optionsView'].rowTotalsLocation() === 'Far' ?
            enums_1.TotalsPosition[enums_1.TotalsPosition.AfterData] : enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]);
        crossTab['printOptions'].printTotalsForSingleValues(pivotGrid['optionsView'].showTotalsForSingleValues());
        crossTab['printOptions'].repeatColumnHeaders(pivotGrid['optionsPrint'].printColumnAreaOnEveryPage());
        crossTab['printOptions'].repeatRowHeaders(pivotGrid['optionsPrint'].printRowAreaOnEveryPage());
        crossTab.layoutOptions.dataFieldLayout(pivotGrid['optionsDataField'].area() === 'RowArea'
            ? enums_1.DataFieldLayout[enums_1.DataFieldLayout.InColumn] : enums_1.DataFieldLayout[enums_1.DataFieldLayout.InRow]);
    };
    CrossTabConverter.prototype._convertFields = function (pivotGrid, crossTab) {
        var _this = this;
        var convertedFields = {};
        var addField = function (type, pivotField) {
            var field = crossTab.getInfo().filter(function (info) { return info.propertyName === type; })[0].addHandler();
            _this._copyPropertiesToField(field, pivotField);
            crossTab[type].push(field);
            var dependentCell = crossTab.cells().filter(function (cell) { return cell.field() == field; })[0];
            dependentCell.size.width(pivotField['width']());
            convertedFields[pivotField.name()] = field;
        };
        pivotGrid.fields().forEach(function (x) {
            if (x['unboundExpression']()) {
                _this._warnings.push(analytics_internal_1.formatUnicorn('Cannot convert Field {0} - unbound expression is not supported', x.name()));
            }
            else {
                if (x.area() == 'ColumnArea')
                    addField('columnFields', x);
                else if (x.area() == 'RowArea')
                    addField('rowFields', x);
                else if (x.area() == 'DataArea')
                    addField('dataFields', x);
                else
                    _this._warnings.push(analytics_internal_1.formatUnicorn('Cannot convert Field {0} - area is not supported', x.name()));
            }
        });
        return convertedFields;
    };
    CrossTabConverter.prototype._copyPropertiesToField = function (crossTabField, pivotField) {
        crossTabField.fieldName(pivotField.fieldName());
        if (crossTabField instanceof xrCrossTab_1.CrossTabDataFieldModel) {
            if (pivotField.summaryType() != 'Custom') {
                crossTabField['summaryType'](pivotField.summaryType());
                crossTabField['summaryDisplayType'](pivotField.summaryDisplayType());
            }
            else
                this._warnings.push(analytics_internal_1.formatUnicorn('Pivot Field {0} with a Custom Summary Type is not supported.', pivotField.fieldName()));
        }
        else {
            if (pivotField.groupInterval() != 'Custom') {
                crossTabField.crossTabGroupInterval(pivotField.groupInterval());
                crossTabField.crossTabGroupIntervalNumericRange(pivotField.groupIntervalNumericRange());
            }
            else {
                this._warnings.push(analytics_internal_1.formatUnicorn('Pivot Field {0} with a Custom Group Interval is not supported.', pivotField.fieldName()));
            }
            crossTabField.sortOrder(pivotField.sortOrder() === 'Ascending' ? 'Ascending' : 'Descending');
            if (pivotField.sortBySummaryInfo.summaryType() != 'Custom') {
                crossTabField.crossTabSortBySummaryInfo.fieldName(pivotField.sortBySummaryInfo.fieldName());
                crossTabField.crossTabSortBySummaryInfo.summaryType(pivotField.sortBySummaryInfo.summaryType());
            }
            else {
                this._warnings.push(analytics_internal_1.formatUnicorn('Pivot Field {0} with a Custom Summary Type is not supported.', pivotField.fieldName()));
            }
        }
    };
    CrossTabConverter.prototype._saveOriginalLayout = function (pivotGrid, crossTab) {
        var _this = this;
        var originalDataSource = pivotGrid.dataSource();
        var originalDataMember = pivotGrid.dataMember();
        pivotGrid.dataSource(null);
        pivotGrid.dataMember(null);
        var layout = new analytics_utils_1.ModelSerializer().serialize(pivotGrid);
        _controlConverterService_1.ControlConverterService.getXmlStringFromJson(layout, function (result) {
            var parentControls = pivotGrid.parentModel()['controls'];
            crossTab.originalPivotGridLayout(result);
            parentControls.splice(parentControls.indexOf(pivotGrid), 1, crossTab);
            _this._selectionProvider.focused(crossTab.surface);
            _this.popupOptions.visible(false);
            _this._warnings.forEach(function (x) { return console.warn(x); });
            pivotGrid.dataSource(originalDataSource);
            pivotGrid.dataMember(originalDataMember);
            _this._undoEngine && _this._undoEngine.end();
        }, function (error) {
            _this._undoEngine && _this._undoEngine.end();
            _this._undoEngine && _this._undoEngine.undo();
        });
    };
    CrossTabConverter.prototype._applyVisibility = function (pivotGrid, crossTab) {
        crossTab.cells().forEach(function (cell) {
            if ((!pivotGrid['optionsView'].showColumnTotals() && cell.kind() == enums_1.CellKind.ColumnTotalHeader && cell.columnLevel !== undefined)
                || (!pivotGrid['optionsView'].showColumnGrandTotals() && cell.kind() == enums_1.CellKind.ColumnTotalHeader && cell.columnLevel === undefined)) {
                cell.columnVisible(false);
            }
            if ((!pivotGrid['optionsView'].showRowTotals() && cell.rowLevel !== undefined && cell.kind() == enums_1.CellKind.RowTotalHeader)
                || (!pivotGrid['optionsView'].showRowGrandTotals() && cell.rowLevel === undefined && cell.kind() == enums_1.CellKind.RowTotalHeader)) {
                cell.rowVisible(false);
            }
        });
    };
    CrossTabConverter.prototype._applyText = function (pivotGrid, crossTab) {
        var _this = this;
        crossTab.cells().forEach(function (cell) {
            var cellKind = cell.kind();
            var formatInfo;
            var pivotGridFieldItem = _this._findRelatedPivotGridItem(pivotGrid, cell.dataLevel, cell.columnLevel, cell.rowLevel);
            if (cellKind == enums_1.CellKind.ColumnHeader || cellKind == enums_1.CellKind.RowHeader) {
                formatInfo = pivotGridFieldItem.valueFormat;
            }
            else if ((cellKind === enums_1.CellKind.ColumnTotalHeader && cell.columnLevel !== undefined)
                || (cellKind === enums_1.CellKind.RowTotalHeader && cell.rowLevel !== undefined)) {
                formatInfo = !!pivotGridFieldItem.totalValueFormat.formatString() ? pivotGridFieldItem.totalValueFormat : {
                    formatType: ko.observable('Numeric'),
                    formatString: ko.observable('{0} Total')
                };
            }
            else {
                if (pivotGridFieldItem) {
                    var isTotal = cellKind === enums_1.CellKind.RowTotal || cellKind === enums_1.CellKind.ColumnTotal;
                    var isGrandTotal = cellKind === enums_1.CellKind.GrandTotal;
                    var cellFormat = !pivotGridFieldItem.cellFormat.formatString() ? null : pivotGridFieldItem.cellFormat;
                    var totalCellFormat = !pivotGridFieldItem.totalCellFormat.formatString() ? cellFormat : pivotGridFieldItem.totalCellFormat;
                    if (isGrandTotal)
                        cellFormat = !pivotGridFieldItem.grandTotalCellFormat.formatString() ? totalCellFormat : pivotGridFieldItem.grandTotalCellFormat;
                    if (isTotal)
                        cellFormat = totalCellFormat || cellFormat;
                    if (cellFormat == null || !cellFormat.formatString()) {
                        if (pivotGridFieldItem.summaryDisplayType().indexOf('Percent') === 0) {
                            cellFormat = {
                                formatType: ko.observable('Numeric'),
                                formatString: ko.observable('{0:p}')
                            };
                        }
                        else {
                            if (pivotGridFieldItem.summaryDisplayType().indexOf('Index') === 0)
                                cellFormat = {
                                    formatType: ko.observable('Numeric'),
                                    formatString: ko.observable('{0:f2}')
                                };
                            else if (pivotGridFieldItem.summaryType() !== 'Count' && pivotGridFieldItem.summaryType() !== 'CountDistinct' && pivotGridFieldItem.summaryDisplayType().indexOf('RankIn') === -1) {
                                var fieldType = pivotGridFieldItem.getFieldType();
                                if (['Float', 'Double', 'Decimal'].some(function (x) { return x === fieldType; }) && ((pivotGridFieldItem.groupInterval() !== 'Default' || !!pivotGridFieldItem.unboundExpression()) || pivotGridFieldItem.unboundType() === 'Decimal'))
                                    cellFormat = {
                                        formatType: ko.observable('Numeric'),
                                        formatString: ko.observable('{0:c}')
                                    };
                            }
                        }
                    }
                    formatInfo = cellFormat;
                }
            }
            if (formatInfo && formatInfo.formatType() !== 'None' && formatInfo.formatString()) {
                cell.textFormatString(formatInfo.formatString());
            }
            if (cellKind == enums_1.CellKind.Corner || cellKind == enums_1.CellKind.DataHeader) {
                if (pivotGridFieldItem.caption && pivotGridFieldItem.caption())
                    cell.text(pivotGridFieldItem.caption());
            }
        });
    };
    CrossTabConverter.prototype._findRelatedPivotGridItem = function (pivotGrid, dataLevel, columnLevel, rowLevel) {
        if (dataLevel > -1) {
            return pivotGrid.fields().filter(function (x) { return x.area() === 'DataArea'; })[dataLevel];
        }
        else if (columnLevel > -1) {
            return pivotGrid.fields().filter(function (x) { return x.area() === 'ColumnArea'; })[columnLevel];
        }
        else if (rowLevel > -1) {
            return pivotGrid.fields().filter(function (x) { return x.area() === 'RowArea'; })[rowLevel];
        }
    };
    CrossTabConverter.prototype._validateChartLinked = function (pivotGrid) {
        var _this = this;
        var controlsHelper = this._context() && this._context().controlsHelper;
        controlsHelper && controlsHelper.allControls().forEach(function (control) {
            if (control instanceof xrChart_1.XRChartViewModel) {
                if (control.dataSource() == pivotGrid) {
                    _this._warnings.push(analytics_internal_1.formatUnicorn('Chart {0} uses PivotGrid as a DataSource, but the CrossTab can not be linked with Chart.', control.name()));
                }
            }
        });
    };
    return CrossTabConverter;
}(_baseConverter_1.BaseConverter));
exports.CrossTabConverter = CrossTabConverter;
var PivotGridConverter = (function (_super) {
    __extends(PivotGridConverter, _super);
    function PivotGridConverter(_selectionProvider) {
        var _this = _super.call(this) || this;
        _this._selectionProvider = _selectionProvider;
        _this.popupOptions.confirmMessage = analytics_utils_1.getLocalization('All changes made to the Cross Tab will be lost. ' +
            'Do you want to continue?', 'ReportStringId.UD_Msg_RevertCrossTabToPivotGrid');
        _this.popupOptions.height = 240;
        return _this;
    }
    PivotGridConverter.prototype._applyChanges = function () {
        var _this = this;
        var model = this._model;
        if (!model.originalPivotGridLayout())
            return;
        _controlConverterService_1.ControlConverterService.getControlModelFromXmlString(model.originalPivotGridLayout(), function (result) {
            var parentControls = model.parentModel()['controls'];
            var pivotGrid = new xrPivotgrid_1.XRPivotGridViewModel(result, model.parentModel());
            pivotGrid.location.x(model.location.x());
            pivotGrid.location.y(model.location.y());
            pivotGrid.dataSource(model.dataSource());
            pivotGrid.dataMember(model['dataMember']());
            parentControls.splice(parentControls.indexOf(model), 1, pivotGrid);
            model.onDelete();
            _this._selectionProvider.focused(pivotGrid.surface);
            _this.popupOptions.visible(false);
        }, function (error) { });
    };
    return PivotGridConverter;
}(_baseConverter_1.BaseConverter));
exports.PivotGridConverter = PivotGridConverter;


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_elements_1 = __webpack_require__(5);
var ko = __webpack_require__(1);
var SeriesViewViewModel = (function (_super) {
    __extends(SeriesViewViewModel, _super);
    function SeriesViewViewModel(model, serializer) {
        var _this = this;
        model['@TypeNameSerializable'] = model['@TypeNameSerializable'] || 'SideBySideBarSeriesView';
        _this = _super.call(this, model, serializer) || this;
        if (_this['titles'])
            _title_1.assignTitleActions(_this['titles']);
        if (_this['indicators'])
            _indicator_1.assignIndicatorActions(_this['indicators']);
        _this._createMarkerDependences();
        _this._createLinkOptionsDependences();
        _this['isPropertyDisabled'] = function (propertyName) {
            return _this._createPropertyDisabledDependence(propertyName, 'heightToWidthRatio', _this['heightToWidthRatioAuto'], [true]) ||
                _this._createPropertyDisabledDependence(propertyName, 'minSize', _this['autoSize'], [true]) ||
                _this._createPropertyDisabledDependence(propertyName, 'maxSize', _this['autoSize'], [true]) ||
                _this._createPropertyDisabledDependence(propertyName, 'barDepth', _this['barDepthAuto'], [true]) ||
                _this._createPropertyDisabledDependence(propertyName, 'showFacet', _this['model'], ['Cone', 'Pyramid']);
        };
        return _this;
    }
    SeriesViewViewModel.from = function (model, serializer) {
        return ko.observable(new SeriesViewViewModel(model || {}, serializer));
    };
    SeriesViewViewModel.prototype.dispose = function () {
        this._disposables.forEach(function (x) { return x.dispose(); });
    };
    SeriesViewViewModel.toJson = function (value, serializer, refs) {
        value = ko.unwrap(value);
        return serializer.serialize(value, value.getInfo(), refs);
    };
    SeriesViewViewModel.prototype._getInfo = function (typeName) {
        return [_series_1.typeNameSerializable].concat(_view_1.viewMapper[typeName]);
    };
    SeriesViewViewModel.prototype._createPropertyDisabledDependence = function (propertyName, depLeftPropertyName, depRightProperty, depValues, reverse) {
        if (reverse === void 0) { reverse = false; }
        if (propertyName !== depLeftPropertyName || !depRightProperty)
            return false;
        var isDisabled = false;
        for (var i = 0; i < depValues.length; i++) {
            if (depRightProperty() === depValues[i]) {
                isDisabled = true;
                break;
            }
        }
        return reverse ? !isDisabled : isDisabled;
    };
    SeriesViewViewModel.prototype._createMarkerDependences = function () {
        var _this = this;
        ['minValueMarker', 'maxValueMarker', 'marker1', 'marker2', 'markerOptions', 'lineMarkerOptions', 'bubbleMarkerOptions', 'pointMarkerOptions'].forEach(function (propertyName) {
            if (_this[propertyName]) {
                _this[propertyName].isPropertyDisabled = function (innerName) {
                    return _this._createPropertyDisabledDependence(innerName, 'starPointCount', _this[propertyName].kind, ['Star'], true);
                };
            }
        });
    };
    SeriesViewViewModel.prototype._createLinkOptionsDependences = function () {
        var _this = this;
        if (!!this['linkOptions']) {
            this._disposables.push(this['linkOptions'].color.subscribe(function (newVal) {
                _this['linkOptions'].colorSource('OwnColor');
            }));
        }
    };
    SeriesViewViewModel.prototype.preInitProperties = function (model) {
        var _this = this;
        this.getInfo = function () { return _this._getInfo(model['@TypeNameSerializable']); };
    };
    return SeriesViewViewModel;
}(analytics_elements_1.SerializableModel));
exports.SeriesViewViewModel = SeriesViewViewModel;
var _title_1 = __webpack_require__(112);
var _series_1 = __webpack_require__(77);
var _view_1 = __webpack_require__(116);
var _indicator_1 = __webpack_require__(163);


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var _editorTemplates_1 = __webpack_require__(22);
var analytics_internal_1 = __webpack_require__(2);
exports.dataFilterSerializationsInfo = [
    { propertyName: 'columnName', displayName: 'Column Name', editor: ko.bindingHandlers['displayNameExtender'] ? analytics_widgets_1.editorTemplates.getEditor('field') : _editorTemplates_1.editorTemplates.getEditor('fieldChart'), modelName: '@ColumnNameSerializable', localizationId: 'DevExpress.XtraCharts.DataFilter.ColumnName' },
    {
        propertyName: 'dataType', displayName: 'Data Type', defaultVal: 'System.String', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), modelName: '@DataTypeSerializable',
        valuesArray: [{ value: 'System.Boolean', displayValue: 'System.Boolean' }, { value: 'System.Byte', displayValue: 'System.Byte' }, { value: 'System.Char', displayValue: 'System.Char' }, { value: 'System.DateTime', displayValue: 'System.DateTime' }, { value: 'System.Decimal', displayValue: 'System.Decimal' }, { value: 'System.Double', displayValue: 'System.Double' }, { value: 'System.Guid', displayValue: 'System.Guid' }, { value: 'System.Int16', displayValue: 'System.Int16' }, { value: 'System.Int32', displayValue: 'System.Int32' }, { value: 'System.Int64', displayValue: 'System.Int64' }, { value: 'System.SByte', displayValue: 'System.SByte' }, { value: 'System.Single', displayValue: 'System.Single' }, { value: 'System.String', displayValue: 'System.String' }, { value: 'System.TimeSpan', displayValue: 'System.TimeSpan' }, { value: 'System.UInt16', displayValue: 'System.UInt16' }, { value: 'System.UInt32', displayValue: 'System.UInt32' }, { value: 'System.UInt64', displayValue: 'System.UInt64' }],
        localizationId: 'DevExpress.XtraCharts.DataFilter.DataType'
    },
    {
        propertyName: 'condition', displayName: 'Condition', defaultVal: 'Equal', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), modelName: '@Condition',
        valuesArray: [{ value: 'Equal', displayValue: 'Equal', localizationId: 'DevExpress.XtraCharts.DataFilterCondition.Equal' }, { value: 'GreaterThan', displayValue: 'GreaterThan' }, { value: 'GreaterThanOrEqual', displayValue: 'GreaterThanOrEqual' }, { value: 'LessThan', displayValue: 'LessThan' }, { value: 'LessThanOrEqual', displayValue: 'LessThanOrEqual' }, { value: 'NotEqual', displayValue: 'NotEqual' }],
        localizationId: 'DevExpress.XtraReports.UI.FormattingRule.Condition'
    },
    { propertyName: 'value', displayName: 'Value', editor: analytics_widgets_1.editorTemplates.getEditor('text'), modelName: '@InvariantValueSerializable', localizationId: 'AnalyticsCoreStringId.FilterEditor_Operand_Type_Value' }
];
var DataFilterModel = (function () {
    function DataFilterModel(model, serializer) {
        var _this = this;
        this.columnName = ko.observable('');
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(this, model);
        this.name = ko.pureComputed(function () {
            return !!_this.columnName() ? _this.columnName() : analytics_internal_1.getLocalization('DataFilter', 'ChartStringId.DefaultDataFilterName');
        });
    }
    DataFilterModel.createNew = function () {
        return new (exports.DefaultDataFilterModel())({}, new analytics_utils_1.ModelSerializer());
    };
    DataFilterModel.prototype.getInfo = function () {
        return exports.dataFilterSerializationsInfo;
    };
    return DataFilterModel;
}());
exports.DataFilterModel = DataFilterModel;
exports.DefaultDataFilterModel = analytics_internal_1.createGlobalModuleVariableFunc(DataFilterModel);


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var analytics_widgets_internal_1 = __webpack_require__(8);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var SummaryFunctionModel = (function () {
    function SummaryFunctionModel(functionName, args) {
        var _this = this;
        this.functionName = ko.observable();
        this.args = ko.observableArray();
        this.functionName(functionName);
        this.args(args.map(function (x) { return { value: ko.observable(x) }; }));
        this.functionName.subscribe(function (newVal) {
            _this._updateArgs(newVal);
        });
    }
    SummaryFunctionModel.from = function (val) {
        var functionName = null, args = [];
        if (val) {
            functionName = val.split('(')[0];
            args = val.split('(')[1].split(')')[0].split(',');
            if (args[0] === '') {
                args = [];
            }
            else {
                args = args.map(function (x) { return x.split('[')[1].split(']')[0]; });
            }
        }
        return new SummaryFunctionModel(functionName, args);
    };
    SummaryFunctionModel.toJson = function (value) {
        if (!value.functionName()) {
            return {};
        }
        return value.functionName() + '(' + value.args().map(function (x) { return '[' + x.value() + ']'; }).join(',') + ')';
    };
    SummaryFunctionModel.prototype._updateArgs = function (functionName) {
        if (SummaryFunctionModel.availableItems.indexOf(functionName) !== -1) {
            if (functionName === 'COUNT' || !functionName) {
                this.args([]);
            }
            else if (this.args().length === 0) {
                this.args.push({ value: ko.observable('') });
            }
            else if (this.args().length > 1) {
                this.args.splice(1, this.args().length - 1);
            }
        }
    };
    SummaryFunctionModel.availableItems = ['SUM', 'MIN', 'MAX', 'AVERAGE', 'COUNT'];
    return SummaryFunctionModel;
}());
exports.SummaryFunctionModel = SummaryFunctionModel;
var SummaryFunctionEditor = (function (_super) {
    __extends(SummaryFunctionEditor, _super);
    function SummaryFunctionEditor(modelPropertyInfo, level, parentDisabled) {
        var _this = _super.call(this, modelPropertyInfo, level, parentDisabled) || this;
        _this.argumentTemplateName = ko.bindingHandlers['displayNameExtender'] ? 'dxrd-field' : 'dxcd-field';
        _this.actionsAreAvailable = ko.observable(false);
        var subscription = null;
        _this.memberPadding = { paddingLeft: (level + 1) * analytics_widgets_internal_1.propertiesGridEditorsPaddingLeft() };
        _this._model.subscribe(function (newVal) {
            subscription && subscription.dispose();
            subscription = ko.computed(function () {
                _this.actionsAreAvailable(_this.value().functionName() && SummaryFunctionModel.availableItems.indexOf(_this.value() && _this.value().functionName()) === -1);
            });
        });
        return _this;
    }
    SummaryFunctionEditor.prototype.getLocalization = function (displayName, localizationId) {
        return analytics_utils_1.getLocalization(displayName, localizationId);
    };
    SummaryFunctionEditor.prototype.add = function () {
        this.value().args.push({ value: ko.observable('') });
    };
    SummaryFunctionEditor.prototype.remove = function (index) {
        this.value().args.splice(index, 1);
    };
    SummaryFunctionEditor.prototype.availableItems = function () {
        return SummaryFunctionModel.availableItems;
    };
    return SummaryFunctionEditor;
}(analytics_widgets_1.FieldListEditor));
exports.SummaryFunctionEditor = SummaryFunctionEditor;


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _series_1 = __webpack_require__(77);
var analytics_elements_1 = __webpack_require__(5);
var $ = __webpack_require__(3);
var FillStyle = (function (_super) {
    __extends(FillStyle, _super);
    function FillStyle(model, info, gradientTypeName, serializer) {
        var _this = _super.call(this, model, serializer, info) || this;
        _this.gradientTypeName = gradientTypeName;
        _this.updateOptions(_this.fillMode(), serializer, model['Options']);
        _this._disposables.push(_this.fillMode.subscribe(function (newValue) {
            _this.updateOptions(newValue, serializer, {});
        }));
        return _this;
    }
    FillStyle.from = function (info, gradientTypeName) {
        return function (model, serializer) {
            return new FillStyle(model || {}, info, gradientTypeName, serializer);
        };
    };
    FillStyle.toJson = function (model, serializer, refs) {
        return serializer.serialize(model, undefined, refs);
    };
    FillStyle.prototype._optionsTypeMap = function (unitType) {
        switch (unitType) {
            case 'Gradient': return this.gradientTypeName;
            case 'Hatch': return 'HatchFillOptions';
            default: return undefined;
        }
    };
    FillStyle.prototype.isPropertyVisible = function (propertyName) {
        return propertyName !== 'options' || (propertyName === 'options' && this[propertyName]());
    };
    FillStyle.prototype.updateOptions = function (fillMode, serializer, optionsObject) {
        var newObject = $.extend({ '@TypeNameSerializable': this._optionsTypeMap(fillMode) }, optionsObject);
        var optionsInfo = _series_1.fillModeMapper[fillMode];
        this.options(new analytics_elements_1.SerializableModel(newObject, serializer, optionsInfo));
    };
    return FillStyle;
}(analytics_elements_1.SerializableModel));
exports.FillStyle = FillStyle;


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var _indicators_1 = __webpack_require__(250);
var _utils_1 = __webpack_require__(62);
var _elementCollection_1 = __webpack_require__(44);
var Indicator = (function (_super) {
    __extends(Indicator, _super);
    function Indicator(model, parent, serializer) {
        return _super.call(this, model, parent, serializer, _indicators_1.indicatorMapper[model['@TypeNameSerializable']]) || this;
    }
    Indicator.prefix = 'indicator';
    return Indicator;
}(_elementCollection_1.ChartElementCollectionItemBase));
exports.Indicator = Indicator;
function assignIndicatorActions(indicators) {
    var addIndicator = function (model, display) {
        model['@Name'] = analytics_internal_1.getUniqueName(indicators().map(function (x) { return x['name'](); }), display);
        indicators()['innerActions'][0].closePopover();
        indicators.push(new Indicator(model, indicators));
    };
    var actions = Object.keys(_indicators_1.indicatorMapper).map(function (x) {
        var display = analytics_internal_1.getLocalization(x, 'ChartStringId.Ind' + x);
        return {
            text: x,
            display: display,
            clickAction: function () { return addIndicator({ '@TypeNameSerializable': x }, display); }
        };
    });
    var id = 'addindicators-action_' + analytics_internal_1.guid();
    indicators()['innerActions'] = _utils_1.createInnerActionsWithPopover(analytics_internal_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'), id, actions, 'dxcd-indicators-list');
}
exports.assignIndicatorActions = assignIndicatorActions;


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _constantLine_1 = __webpack_require__(251);
var _scaleBreak_1 = __webpack_require__(252);
var _strip_1 = __webpack_require__(253);
var analytics_elements_1 = __webpack_require__(5);
var AxisXYViewModel = (function (_super) {
    __extends(AxisXYViewModel, _super);
    function AxisXYViewModel(model, serializer, info) {
        var _this = _super.call(this, model, serializer, info || _axis_1.axisXYSerializationsInfo) || this;
        _this.constantLines = _utils_1.deserializeModelArray(model && model.ConstantLines, function (item, parent) { return new _constantLine_1.ConstantLineViewModel(item, parent, serializer); }, _constantLine_1.ConstantLineViewModel.prefix);
        _this.scaleBreaks = _utils_1.deserializeModelArray(model && model.ScaleBreaks, function (item, parent) { return new _scaleBreak_1.ScaleBreakViewModel(item, parent, serializer); }, _scaleBreak_1.ScaleBreakViewModel.prefix);
        _this.strips = _utils_1.deserializeModelArray(model && model.Strips, function (item, parent) { return new _strip_1.StripViewModel(item, parent, serializer); }, _strip_1.StripViewModel.prefix);
        return _this;
    }
    AxisXYViewModel.from = function (info) {
        return function (model, serializer) {
            return new AxisXYViewModel(model || {}, serializer, info);
        };
    };
    AxisXYViewModel.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, undefined, refs);
    };
    return AxisXYViewModel;
}(analytics_elements_1.SerializableModel));
exports.AxisXYViewModel = AxisXYViewModel;
var _axis_1 = __webpack_require__(30);
var _utils_1 = __webpack_require__(50);


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _secondaryAxisViewModel_1 = __webpack_require__(166);
var _additionalPane_1 = __webpack_require__(256);
var _diagram_1 = __webpack_require__(117);
var analytics_utils_1 = __webpack_require__(0);
var analytics_elements_1 = __webpack_require__(5);
var $ = __webpack_require__(3);
var _utils_1 = __webpack_require__(50);
var DiagramViewModel = (function (_super) {
    __extends(DiagramViewModel, _super);
    function DiagramViewModel(model, serializer) {
        return _super.call(this, model, serializer, _diagram_1.diagramSerializationsInfo) || this;
    }
    DiagramViewModel.createDiagram = function (model, type, serializer) {
        if (serializer === void 0) { serializer = new analytics_utils_1.ModelSerializer(); }
        var info = _diagram_1.diagramMapper[type].info;
        var newDiagram = {
            getInfo: function () {
                return info;
            }
        };
        serializer.deserialize(newDiagram, $.extend(model, { '@TypeNameSerializable': _diagram_1.diagramMapper[type].type }));
        if (info.filter(function (x) { return x.propertyName === _diagram_1.secondaryAxesX.propertyName; }).length > 0) {
            var createAxes = function (item, parent) { return new _secondaryAxisViewModel_1.SecondaryAxisViewModel(item, parent, serializer); };
            newDiagram.secondaryAxesX = _utils_1.deserializeModelArray(model && model.SecondaryAxesX, createAxes, _secondaryAxisViewModel_1.SecondaryAxisViewModel.xPrefix);
            newDiagram.secondaryAxesY = _utils_1.deserializeModelArray(model && model.SecondaryAxesY, createAxes, _secondaryAxisViewModel_1.SecondaryAxisViewModel.yPrefix);
        }
        if (info.filter(function (x) { return x.propertyName === _diagram_1.panes.propertyName; }).length > 0) {
            newDiagram.panes = _utils_1.deserializeModelArray(model && model.Panes, function (item, parent) { return new _additionalPane_1.AdditionalPaneViewModel(item, parent, serializer); }, _additionalPane_1.AdditionalPaneViewModel.prefix);
        }
        return newDiagram;
    };
    DiagramViewModel.from = function (model, serializer) {
        return new DiagramViewModel(model || {}, serializer);
    };
    DiagramViewModel.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, null, refs);
    };
    return DiagramViewModel;
}(analytics_elements_1.SerializableModel));
exports.DiagramViewModel = DiagramViewModel;


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _axisXYViewModel_1 = __webpack_require__(164);
var _axis_1 = __webpack_require__(113);
var _axis_2 = __webpack_require__(30);
var SecondaryAxisViewModel = (function (_super) {
    __extends(SecondaryAxisViewModel, _super);
    function SecondaryAxisViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, serializer, _axis_2.secondaryAxisXYSerializationsInfo) || this;
        _axis_1.initCollectionItem(_this, parent)();
        return _this;
    }
    Object.defineProperty(SecondaryAxisViewModel.prototype, "axisID", {
        get: function () {
            return this.parent().indexOf(this);
        },
        enumerable: true,
        configurable: true
    });
    SecondaryAxisViewModel.xPrefix = 'Secondary Axis X';
    SecondaryAxisViewModel.yPrefix = 'Secondary Axis Y';
    return SecondaryAxisViewModel;
}(_axisXYViewModel_1.AxisXYViewModel));
exports.SecondaryAxisViewModel = SecondaryAxisViewModel;


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _dataMemberBase_1 = __webpack_require__(75);
var _value_1 = __webpack_require__(76);
var ValueWeightDataMembers = (function (_super) {
    __extends(ValueWeightDataMembers, _super);
    function ValueWeightDataMembers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ValueWeightDataMembers.prototype.getInfo = function () {
        return _value_1.valueWeightSerializationsInfo;
    };
    Object.defineProperty(ValueWeightDataMembers.prototype, "arrayValueDataMemberNames", {
        get: function () { return ['value', 'weight']; },
        enumerable: true,
        configurable: true
    });
    return ValueWeightDataMembers;
}(_dataMemberBase_1.DataMemberBase));
exports.ValueWeightDataMembers = ValueWeightDataMembers;


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _dataMemberBase_1 = __webpack_require__(75);
var _value_1 = __webpack_require__(76);
var Value1Value2DataMembers = (function (_super) {
    __extends(Value1Value2DataMembers, _super);
    function Value1Value2DataMembers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Value1Value2DataMembers.prototype.getInfo = function () {
        return _value_1.value1Value2SerializationsInfo;
    };
    Object.defineProperty(Value1Value2DataMembers.prototype, "arrayValueDataMemberNames", {
        get: function () { return ['value1', 'value2']; },
        enumerable: true,
        configurable: true
    });
    return Value1Value2DataMembers;
}(_dataMemberBase_1.DataMemberBase));
exports.Value1Value2DataMembers = Value1Value2DataMembers;


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _dataMemberBase_1 = __webpack_require__(75);
var _value_1 = __webpack_require__(76);
var StockValueDataMembers = (function (_super) {
    __extends(StockValueDataMembers, _super);
    function StockValueDataMembers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StockValueDataMembers.prototype.getInfo = function () {
        return _value_1.stockValueSerializationsInfo;
    };
    Object.defineProperty(StockValueDataMembers.prototype, "arrayValueDataMemberNames", {
        get: function () { return ['low', 'high', 'open', 'close']; },
        enumerable: true,
        configurable: true
    });
    return StockValueDataMembers;
}(_dataMemberBase_1.DataMemberBase));
exports.StockValueDataMembers = StockValueDataMembers;


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _chart_1 = __webpack_require__(118);
var _initializer_1 = __webpack_require__(171);
var _chart_2 = __webpack_require__(19);
var _template_1 = __webpack_require__(111);
var _utils_1 = __webpack_require__(62);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var ChartControlViewModel = (function (_super) {
    __extends(ChartControlViewModel, _super);
    function ChartControlViewModel(options) {
        var _this = _super.call(this) || this;
        _this.fieldListProvider = ko.observable(null);
        _this.chart = options.chart ? options.chart : new _chart_1.ChartViewModel(options.chartSource, new analytics_utils_1.ModelSerializer());
        _this.dataSource = options.dataSource;
        _this.parameters = options.parameters;
        _this._initChartElementFunctions();
        ['seriesDataMember', 'dataMember'].forEach(function (val) {
            _this[val] = ko.computed({
                read: function () {
                    return _this.chart.dataContainer[val]();
                }, write: function (newVal) {
                    _this.chart.dataContainer[val](newVal);
                }
            });
        });
        return _this;
    }
    ChartControlViewModel.prototype.getInfo = function () {
        return _chart_2.chartControlSerializationsInfo;
    };
    ChartControlViewModel.prototype.getControlFactory = function () {
        return _initializer_1.controlsFactory;
    };
    ChartControlViewModel.prototype.isSeriesPropertyDisabled = function (name) {
        if (!this.dataSource()) {
            return name === 'argumentDataMember' || name === 'valueDataMembers' || name === 'colorDataMember' || name === 'filterString';
        }
    };
    ChartControlViewModel.prototype.isSeriesTemplatePropertyDisabled = function (name) {
        if (!this.dataSource()) {
            return name === 'argumentDataMember' || name === 'valueDataMembers' || name === 'valueScaleType' || name === 'filterString';
        }
    };
    ChartControlViewModel.prototype._getSeriesActualArgumentScaleType = function (argumentDataMember) {
        var deffered = $.Deferred();
        if (this.fieldListProvider() && argumentDataMember) {
            var seriesDataMember = this.getPath('seriesDataMember');
            var argumentFieldName = argumentDataMember;
            var argumentDataMemberPathComponents = argumentDataMember.split('.');
            if (argumentDataMemberPathComponents.length > 1) {
                argumentFieldName = argumentDataMemberPathComponents.pop();
                argumentDataMemberPathComponents.splice(0, 0, seriesDataMember);
                seriesDataMember = argumentDataMemberPathComponents.join('.');
            }
            this.fieldListProvider().getItems(new analytics_utils_1.PathRequest(seriesDataMember))
                .done(function (items) {
                var result = items.filter(function (item) { return item.name === argumentFieldName; })[0];
                var _scaleType = _template_1.ScaleType.Numerical;
                if (result && result.specifics) {
                    if (_utils_1._isNumericTypeSpecific(result.specifics))
                        _scaleType = _template_1.ScaleType.Numerical;
                    else if (_utils_1._isDateTypeSpecific(result.specifics))
                        _scaleType = _template_1.ScaleType.DateTime;
                    else
                        _scaleType = _template_1.ScaleType.Qualitative;
                }
                deffered.resolve(_scaleType);
            })
                .fail(function () {
                deffered.resolve(_template_1.ScaleType.Numerical);
            });
        }
        else {
            deffered.resolve(_template_1.ScaleType.Numerical);
        }
        return deffered.promise();
    };
    ChartControlViewModel.prototype._initSeries = function (series) {
        var _this = this;
        series['getPath'] = function (propertyName) {
            if (propertyName === 'argumentDataMember' || propertyName === 'colorDataMember' || propertyName === 'summaryFunction') {
                return _this.getPath('seriesDataMember');
            }
        };
        series['isPropertyDisabled'] = function (name) {
            return series._isPropertyDisabled(name) || _this.isSeriesPropertyDisabled(name);
        };
        series._disposables.push(series.filterString.helper.parameters = ko.computed(function () {
            return _this.parameters && _this.parameters();
        }));
        series.valueDataMembers()['getPath'] = function (propertyName) {
            return _this.getPath('seriesDataMember');
        };
        series._disposables.push(series.valueDataMembers.subscribe(function (newVal) {
            newVal['getPath'] = function (propertyName) {
                return _this.getPath('seriesDataMember');
            };
        }));
        series._disposables.push(series.argumentDataMember.subscribe(function (newValue) {
            if (_this.chart.dataContainer.seriesTemplate.argumentScaleType() !== 'Auto')
                return;
            _this._getSeriesActualArgumentScaleType(newValue).done(function (scaleType) {
                series._actualArgumentScaleType(scaleType);
            });
        }));
        series._disposables.push(series.argumentScaleType.subscribe(function (newVal) {
            if (newVal !== 'Auto' && newVal !== 'Qualitative')
                _this._getSeriesActualArgumentScaleType(series.argumentDataMember()).done(function (scaleType) {
                    if (scaleType !== _template_1.ScaleTypeMap[newVal])
                        series.argumentDataMember('');
                });
            series._actualArgumentScaleType(newVal == 'Auto' ? _template_1.ScaleType.Numerical : _template_1.ScaleTypeMap[newVal]);
        }));
    };
    ChartControlViewModel.prototype._initChartElementFunctions = function () {
        var _this = this;
        this._initSeries(this.chart.dataContainer.seriesTemplate);
        this.chart.dataContainer.series().forEach(function (series) { return _this._initSeries(series); });
        this._disposables.push(this.chart.dataContainer.series.subscribe(function (args) {
            if (args[0].status === 'added') {
                _this._initSeries(args[0].value);
            }
        }, null, 'arrayChange'));
        this.chart.dataContainer.seriesTemplate['getPath'] = function (propertyName) {
            return _this.getPath('seriesDataMember');
        };
        this.chart.dataContainer.seriesTemplate['isPropertyDisabled'] = function (name) {
            return _this.chart.dataContainer.seriesTemplate._isPropertyDisabled(name) || _this.isSeriesTemplatePropertyDisabled(name);
        };
        this._disposables.push(this.chart.dataContainer.seriesTemplate.filterString.helper.parameters = ko.computed(function () {
            return _this.parameters && _this.parameters();
        }));
        this.chart.dataContainer.seriesTemplate.valueDataMembers()['getPath'] = function (propertyName) {
            return _this.getPath('seriesDataMember');
        };
        this._disposables.push(this.chart.dataContainer.seriesTemplate.valueDataMembers.subscribe(function (newValue) {
            newValue['getPath'] = function (propertyName) {
                return _this.getPath('seriesDataMember');
            };
        }));
        this._disposables.push(this.chart.dataContainer.seriesTemplate.argumentDataMember.subscribe(function (newValue) {
            if (_this.chart.dataContainer.seriesTemplate.argumentScaleType() !== 'Auto')
                return;
            _this._getSeriesActualArgumentScaleType(newValue).done(function (scaleType) {
                _this.chart.dataContainer.seriesTemplate._actualArgumentScaleType(scaleType);
            });
        }));
    };
    ChartControlViewModel.prototype.getPath = function (propertyName) {
        var dataSourceInfo = this.dataSource();
        var dataSourceName = (dataSourceInfo && dataSourceInfo.data && (dataSourceInfo.id || dataSourceInfo.ref)) || '';
        if (propertyName === 'seriesDataMember' || propertyName === 'valueDataMembers' || propertyName === 'colorDataMember') {
            return analytics_internal_1.getFullPath(dataSourceName, this.chart.dataContainer.dataMember());
        }
        else if (propertyName === 'dataMember') {
            return dataSourceName;
        }
    };
    ChartControlViewModel.prototype.serialize = function () {
        return (new analytics_utils_1.ModelSerializer()).serialize(this);
    };
    ChartControlViewModel.prototype.save = function () {
        var data = this.serialize();
        if (this.onSave) {
            this.onSave(data);
        }
        return data;
    };
    ChartControlViewModel.prototype.isPropertyDisabled = function (name) {
        return !this.dataSource() && (name === 'seriesDataMember' || name === 'dataMember');
    };
    return ChartControlViewModel;
}(analytics_utils_1.Disposable));
exports.ChartControlViewModel = ChartControlViewModel;


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var ko = __webpack_require__(1);
var _controller_1 = __webpack_require__(244);
var _provider_1 = __webpack_require__(246);
var _axis_1 = __webpack_require__(30);
var _chart_1 = __webpack_require__(19);
var _requests_1 = __webpack_require__(107);
var _control_1 = __webpack_require__(170);
var _surface_1 = __webpack_require__(259);
var $ = __webpack_require__(3);
exports.ActionId = {
    Save: 'dxxcd-save'
};
var ChartDesignerElements = {
    Main: 'dx-chart-middlePart',
    Toolbar: 'dxcd-toolbar',
    RightPanel: 'dx-right-panel-lightweight',
    LeftPanel: 'dx-chart-leftPanel'
};
exports.controlsFactory = new analytics_utils_1.ControlsFactory();
function registerControls() {
    exports.controlsFactory.registerControl('ChartControl', {
        info: _chart_1.chartControlSerializationsInfo,
        surfaceType: _surface_1.ChartControlSurface,
        type: _control_1.ChartControlViewModel,
        elementActionsTypes: [],
        isContainer: true,
        nonToolboxItem: true
    });
}
exports.registerControls = registerControls;
var _chartLimitation = false;
function _setChartLimitation(chartLimitation) {
    _chartLimitation = chartLimitation;
    _chart_1.viewBindableSerializationInfo.valuesArray = _chart_1.createViewsArray(chartLimitation);
}
exports._setChartLimitation = _setChartLimitation;
function customizeDesignerActions(designerModel, nextCustomizer) {
    var chart = designerModel.model;
    return (function (actions) {
        var save = {
            id: exports.ActionId.Save,
            text: 'Save',
            imageClassName: 'dxrd-image-save',
            imageTemplateName: 'dxrd-svg-menu-save',
            disabled: ko.observable(false),
            visible: true,
            hasSeparator: true,
            hotKey: { ctrlKey: true, keyCode: 'S'.charCodeAt(0) },
            clickAction: function () {
                chart().save();
            }
        };
        actions.splice(0, 0, save);
        nextCustomizer && nextCustomizer(actions);
    });
}
function updateChartSurfaceContentSize(element, surfaceSize, rtl) {
    if (rtl === void 0) { rtl = false; }
    var $element = $(element);
    return function () {
        var rightAreaWidth = $element.find('.dxrd-right-panel')[0]['offsetWidth'];
        var leftAreaWidth = $element.find('.dx-chart-left-panel')[0]['offsetWidth'];
        var otherWidth = rightAreaWidth + leftAreaWidth, surfaceWidth = $element.find('.dxcd-designer')[0]['offsetWidth'] - (otherWidth + 5);
        $element.find('.dxrd-surface-wrapper').eq(0).css({
            'right': !rtl ? rightAreaWidth : leftAreaWidth,
            'left': rtl ? rightAreaWidth : leftAreaWidth,
            'width': surfaceWidth
        });
        surfaceSize(surfaceWidth);
    };
}
exports.updateChartSurfaceContentSize = updateChartSurfaceContentSize;
function subscribeTreelistArray(chartStructureProvider, array, getPath, subscribeNewItem) {
    return array.subscribe(function (args) {
        args.forEach(function (changeSet) {
            if (changeSet.status) {
                var selectedPath = '';
                var path = getPath();
                if (changeSet.status === 'deleted') {
                    selectedPath = array().length === 0 ? path.join('.') : [].concat(path, '0').join('.');
                }
                else if (changeSet.status === 'added') {
                    selectedPath = [].concat(path, changeSet.index).join('.');
                    subscribeNewItem && subscribeNewItem(changeSet.value, array, path);
                }
                chartStructureProvider.selectedPath(selectedPath);
            }
        });
    }, null, 'arrayChange');
}
exports.subscribeTreelistArray = subscribeTreelistArray;
function getPropertyInfo(serializationsInfo, index, pathComponets) {
    var info = serializationsInfo.filter(function (info) { return info.propertyName === pathComponets[index]; })[0];
    if (info && info.info && index++ < pathComponets.length)
        info = getPropertyInfo(info.info, index, pathComponets);
    return info;
}
exports.getPropertyInfo = getPropertyInfo;
function wrapSelectedElement(selectedElement, selectedElementInfo, displayName, propertyName) {
    if (propertyName === void 0) { propertyName = 'element'; }
    var object = {};
    object[propertyName] = selectedElement;
    object['owner'] = ko.unwrap(selectedElement)['owner'];
    object['getInfo'] = function () {
        return [$.extend({}, selectedElementInfo, { displayName: displayName, propertyName: propertyName })];
    };
    return object;
}
function createChartStructure(chart, selectedItem, subscriptions, surface, undoEngine, dragdrophandler) {
    var fakeChart = {
        dataSource: chart.dataSource,
        dataMember: chart.chart.dataContainer.dataMember,
        seriesDataMember: chart.chart.dataContainer.seriesDataMember,
        seriesTemplate: chart.chart.dataContainer.seriesTemplate,
        series: chart.chart.dataContainer.series,
        diagram: ko.computed(function () {
            if (chart.chart.dataContainer.series().length > 0 || !!chart.chart.dataContainer.seriesDataMember()) {
                return chart.chart.diagram();
            }
            return null;
        }),
        titles: chart.chart.titles,
        backImage: chart.chart['backImage'],
        legend: chart.chart['legend'],
        legends: chart.chart.legends,
        emptyChartText: chart.chart['emptyChartText'],
        paletteName: chart.chart['paletteName'],
        getInfo: function () {
            return _chart_1.fakeChartSerializationInfo;
        },
        getPath: function (propertyName) { return chart.getPath(propertyName); },
        isPropertyDisabled: function (propertyName) { return chart.isPropertyDisabled(propertyName); },
        className: function () { return 'chart'; }
    };
    var chartStructureProvider = new _provider_1.ChartStructureObjectProvider(fakeChart, 'Chart', 'DevExpress.XtraReports.UI.XRChart');
    var chartStructureTreeListController = new _controller_1.ChartStructureTreeListController(['chart', 'Chart', 'titles', 'legend', 'legends', 'series', 'diagram', 'indicators',
        'defaultPane', 'panes', 'axisX', 'axisY', 'secondaryAxesX', 'secondaryAxesY', 'constantLines', 'scaleBreaks', 'strips', 'seriesTemplate', 'label', 'points'], ['chart', 'diagram', 'axisX', 'axisY', 'titles', 'indicators', 'legends', 'series', 'panes', 'secondaryAxesX', 'secondaryAxesY', 'seriesTemplate', 'constantLines', 'scaleBreaks', 'strips', 'SeriesViewModel', 'SecondaryAxisViewModel'], function (newItem) {
        var selectedElement = chartStructureProvider.selectedMember();
        if (newItem.data.specifics === 'points') {
            selectedElement = wrapSelectedElement(ko.observableArray(selectedElement), _chart_1.points, newItem.data.displayName, 'points');
        }
        else if (Array.isArray(selectedElement)) {
            selectedElement = wrapSelectedElement(selectedElement, { editor: _editorTemplates_1.editorTemplates.getEditor('collection') }, newItem.data.displayName);
        }
        selectedItem(selectedElement);
    }, surface, undoEngine, dragdrophandler);
    var chartStructure = {
        itemsProvider: chartStructureProvider,
        treeListController: chartStructureTreeListController,
        expandRootItems: true,
        selectedPath: chartStructureProvider.selectedPath
    };
    chartStructureProvider.selectedPath('Chart');
    selectedItem(null);
    subscriptions.push(fakeChart.diagram);
    subscriptions.push(subscribeTreelistArray(chartStructureProvider, chart.chart.dataContainer.series, function () { return ['Chart', 'series']; }));
    subscriptions.push(subscribeTreelistArray(chartStructureProvider, chart.chart.titles, function () { return ['Chart', 'titles']; }));
    subscriptions.push(subscribeTreelistArray(chartStructureProvider, chart.chart.legends, function () { return ['Chart', 'legends']; }));
    var diagramSubscriptions = [];
    var subscribeDiagram = function (diagram) {
        diagramSubscriptions.forEach(function (val) { return val.dispose(); });
        var axisCollectionNames = ['constantLines', 'scaleBreaks', 'strips'];
        var subscribeAxis = function (axis, array, path) {
            axisCollectionNames.forEach(function (propertyName) {
                diagramSubscriptions.push(subscribeTreelistArray(chartStructureProvider, axis[propertyName], function () { return [].concat(path, array.indexOf(axis), propertyName); }));
            });
        };
        ['axisX', 'axisY'].forEach(function (propertyName) {
            if (diagram[propertyName]) {
                axisCollectionNames.forEach(function (innerPropertyName) {
                    if (diagram[propertyName][innerPropertyName]) {
                        diagramSubscriptions.push(subscribeTreelistArray(chartStructureProvider, diagram[propertyName][innerPropertyName], function () { return ['Chart', 'diagram', propertyName, innerPropertyName]; }));
                    }
                });
            }
        });
        ['secondaryAxesX', 'secondaryAxesY'].forEach(function (propertyName) {
            if (diagram[propertyName]) {
                diagramSubscriptions.push(subscribeTreelistArray(chartStructureProvider, diagram[propertyName], function () { return ['Chart', 'diagram', propertyName]; }, subscribeAxis));
                var axis = ko.unwrap(diagram[propertyName]);
                for (var i = 0; i < axis.length; i++) {
                    subscribeAxis(axis[i], axis, ['Chart', 'diagram', propertyName]);
                }
            }
        });
        if (diagram.panes) {
            diagramSubscriptions.push(subscribeTreelistArray(chartStructureProvider, diagram.panes, function () { return ['Chart', 'diagram', 'panes']; }));
        }
        [].push.apply(subscriptions, diagramSubscriptions);
    };
    subscribeDiagram(chart.chart.diagram());
    chart.chart.diagram.subscribe(function (newVal) {
        subscribeDiagram(newVal);
    });
    return chartStructure;
}
exports.createChartStructure = createChartStructure;
function createArrayOfNames(collectionProperty, defaultVal) {
    return ko.computed(function () {
        return (defaultVal && [defaultVal] || []).concat(collectionProperty().map(function (x) { return x.name(); }));
    });
}
function createChartDesigner(element, options, applyBindings) {
    if (applyBindings === void 0) { applyBindings = true; }
    if (options.localization) {
        analytics_utils_1.addCultureInfo(options.localization);
    }
    options.callbacks.fieldLists = options.callbacks.fieldLists || _requests_1.ChartRequests.fieldListCallback;
    registerControls();
    var chartControlModel = ko.observable(), surface = ko.observable(), dataBindingsProvider = ko.observable(), size = new analytics_elements_1.Size(options.data.width, options.data.height);
    var chartStructure = ko.observable(null);
    var chartSelectedItem = ko.observable(null);
    var subscriptions = [];
    var groups = ko.observableArray();
    var chartSourceSubscription = null;
    var undoModel = ko.observable({});
    var initChartControlModel = function (newModel) {
        surface() && surface()._disposables.forEach(function (item) { item.dispose(); });
        subscriptions.forEach(function (item) { return item.dispose(); });
        subscriptions = [];
        if (newModel) {
            groups(newModel.chart.dataContainer.series().map(function (x) { return x.view()['group'] || x['stackedGroup']; }).filter(function (x) { return !!x; }).map(function (x) { return x(); }));
            chartControlModel(newModel);
            undoModel(newModel);
            surface() && surface()._disposables.forEach(function (item) { item.dispose(); });
            surface(new _surface_1.ChartControlSurface(newModel, ko.observable(1), size));
            var fieldListProvider = ko.unwrap(options.fieldListProvider);
            if (!!fieldListProvider) {
                dataBindingsProvider(fieldListProvider);
            }
            else {
                var _chartSources = options.data.dataSource && options.data.dataSource() ? [options.data.dataSource()] : [];
                if (options.data.availableChartDataSources) {
                    _chartSources = options.data.availableChartDataSources().map(function (x) {
                        return x.value;
                    });
                }
                var realChartSources = ko.observableArray(_chartSources);
                dataBindingsProvider(new analytics_internal_1.FieldListProvider(options.callbacks.fieldLists, realChartSources));
            }
            newModel.fieldListProvider(dataBindingsProvider());
            designerModel.dragHelperContent = new analytics_internal_1.DragHelperContent(null);
            chartStructure(createChartStructure(newModel, chartSelectedItem, subscriptions, surface, designerModel.undoEngine, designerModel.dragHelperContent));
        }
        designerModel.undoEngine().clearHistory();
    };
    var init = function (chartSourceValue) {
        var newModel = new _control_1.ChartControlViewModel({
            chartSource: chartSourceValue,
            dataSource: options.data.dataSource,
            callbacks: options.callbacks,
            size: {
                height: ko.observable(options.data.height),
                width: ko.observable(options.data.width),
                isPropertyDisabled: function (name) { return true; }
            }
        });
        initChartControlModel(newModel);
    };
    var undoEngine = new analytics_utils_1.UndoEngine(undoModel, ['viewType'], 'getInfo');
    undoEngine['_disposeUndoEngineSubscriptionsName'] += 'chartdesigner';
    var designerModel = {
        model: chartControlModel,
        chartStructure: chartStructure,
        rightPanelHeader: function () { return analytics_utils_1.getLocalization('Chart Structure', 'ChartDesignerStringIDs.ChartStructureDockPanelTitle'); },
        surface: surface,
        undoEngine: ko.observable(undoEngine),
        tabPanel: new analytics_utils_1.TabPanel({
            tabs: [
                new analytics_utils_1.TabInfo({
                    text: 'Properties',
                    template: 'dxrd-propertygridtab',
                    model: new analytics_widgets_1.ObjectProperties(chartSelectedItem),
                    localizationId: 'AnalyticsCoreStringId.Cmd_Properties'
                })
            ],
            rtl: options.rtl
        }),
        surfaceSize: ko.observable(0),
        isLoading: ko.observable(true),
        rtl: options.rtl,
        groups: groups,
        applyGroup: function (groupName) {
            if (groups().indexOf(groupName) === -1 && !!groupName) {
                groups.push(groupName);
            }
        }
    };
    analytics_internal_1.appendStaticContextToRootViewModel(designerModel, analytics_internal_1.staticContext);
    if (options.data.chartSource) {
        chartSourceSubscription = options.data.chartSource.subscribe(function (newValue) {
            init(newValue);
        });
        init(options.data.chartSource());
    }
    else {
        options.data.chart.subscribe(function (newVal) {
            initChartControlModel(newVal);
        });
        initChartControlModel(options.data.chart());
    }
    designerModel.panes = createArrayOfNames(function () {
        var panes = chartControlModel().chart.diagram().panes;
        return panes && panes() || [];
    }, _view_1.paneName.defaultVal);
    designerModel.legends = createArrayOfNames(function () {
        var legends = chartControlModel().chart.legends;
        return legends && legends() || [];
    }, _axis_1.legendName.defaultVal);
    designerModel.axisX = createArrayOfNames(function () {
        var axisX = chartControlModel().chart.diagram().secondaryAxesX;
        return axisX && axisX() || [];
    }, _view_1.axisXName.defaultVal);
    designerModel.axisY = createArrayOfNames(function () {
        var axisY = chartControlModel().chart.diagram().secondaryAxesY;
        return axisY && axisY() || [];
    }, _view_1.axisYName.defaultVal);
    if (options.data.availableChartDataSources) {
        designerModel.chartDataSources = options.data.availableChartDataSources;
    }
    else {
        var displayedChartSources = options.data.dataSource && options.data.dataSource() ? [{ displayName: options.data.dataSource().name, value: options.data.dataSource() }] : [];
        designerModel.chartDataSources = ko.observableArray(displayedChartSources);
    }
    designerModel.rootStyle = 'dxcd-designer dxd-back-primary';
    designerModel.parts = [
        { id: ChartDesignerElements.Main, templateName: ChartDesignerElements.Main, model: designerModel },
        { id: ChartDesignerElements.Toolbar, templateName: ChartDesignerElements.Toolbar, model: designerModel },
        { id: ChartDesignerElements.RightPanel, templateName: ChartDesignerElements.RightPanel, model: designerModel },
        { id: ChartDesignerElements.LeftPanel, templateName: ChartDesignerElements.LeftPanel, model: designerModel }
    ];
    designerModel.dataBindingsProvider = dataBindingsProvider;
    designerModel.actionLists = new analytics_internal_1.ActionLists(surface, null, designerModel.undoEngine, customizeDesignerActions(designerModel, options.callbacks.customizeActions));
    designerModel.isLoading(false);
    if (applyBindings) {
        $(element).children().remove();
        ko.applyBindings(designerModel, element);
    }
    var updateSurfaceContentSize_ = updateChartSurfaceContentSize(element, designerModel.surfaceSize, designerModel.rtl);
    designerModel.tabPanel.width.subscribe(function () {
        updateSurfaceContentSize_();
    });
    designerModel.subscriptions = subscriptions;
    designerModel.chartSourceSubscription = chartSourceSubscription;
    designerModel.updateSurfaceSize = function () {
        updateSurfaceContentSize_();
    };
    if (applyBindings) {
        designerModel.updateSurfaceSize();
    }
    options.callbacks && options.callbacks.init && options.callbacks.init(designerModel);
    return designerModel;
}
exports.createChartDesigner = createChartDesigner;
ko.bindingHandlers['dxChartDesigner'] = {
    init: function (element, valueAccessor) {
        var options = ko.unwrap(valueAccessor()) || {};
        $(element).children().remove();
        var templateHtml = analytics_widgets_1.getTemplate('dxrd-designer'), $element = $(element).append(templateHtml);
        var designerModel = createChartDesigner($element[0], options, false);
        ko.applyBindings(designerModel, $element.children()[0]);
        var visibleSubscription = options.visible.subscribe(function (val) {
            if (val)
                designerModel.updateSurfaceSize();
        });
        designerModel.updateSurfaceSize();
        analytics_internal_1.addDisposeCallback(element, function () {
            designerModel.model() && designerModel.model()._disposables.forEach(function (item) { return item.dispose(); });
            designerModel.subscriptions.forEach(function (item) { return item.dispose(); });
            designerModel.chartSourceSubscription && designerModel.chartSourceSubscription.dispose();
            designerModel.subscriptions = [];
            visibleSubscription.dispose();
            designerModel = null;
        });
        return { controlsDescendantBindings: true };
    }
};
var _editorTemplates_1 = __webpack_require__(22);
var _view_1 = __webpack_require__(116);


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_internal_1 = __webpack_require__(8);
var _addVariablesToExpressionEditor_1 = __webpack_require__(173);
var ReportExpressionEditorAdapter = (function (_super) {
    __extends(ReportExpressionEditorAdapter, _super);
    function ReportExpressionEditorAdapter(values, value) {
        var _this = _super.call(this) || this;
        _this.values = values;
        _this.value = value;
        _this.popupVisible = ko.observable(false);
        return _this;
    }
    ReportExpressionEditorAdapter.prototype._onHidingPopup = function (e) {
        if (this._relatedControlClassName)
            e.component.content().classList.remove(this._relatedControlClassName);
    };
    ReportExpressionEditorAdapter.prototype._onShowingPopup = function (editableObject) {
        var _this = this;
        return function (e) {
            if (editableObject && editableObject.expressionObj) {
                var type = editableObject.controlType || 'unknown';
                _this._relatedControlClassName = 'dx-expression-popup-related-' + type.toLowerCase().split('.').join('_');
                $(e.component.content())[0].classList.add(_this._relatedControlClassName);
            }
        };
    };
    ReportExpressionEditorAdapter.prototype.patchOptions = function (reportExplorerProvider, editableObject) {
        var _this = this;
        if (!this.value()) {
            return false;
        }
        else {
            if (!this.value()['customizeCategories']) {
                this.value()['customizeCategories'] = function (sender, groups, onClick) {
                    groups.splice(0, 0, _this._createReportItems(reportExplorerProvider, onClick));
                    if (_this.values() && _this.values().length > 0) {
                        groups.splice(2, 0, _this._createValuesTab());
                    }
                    _addVariablesToExpressionEditor_1.addVariablesToExpressionEditor(groups, _this.value().eventName === 'PrintOnPage' ? function (items) {
                        items.push({ text: 'Arguments.PageIndex', val: '[Arguments.PageIndex]', descriptionStringId: 'ReportStringId.ExpressionEditor_Description_Arguments_PageIndex' });
                        items.push({ text: 'Arguments.PageCount', val: '[Arguments.PageCount]', descriptionStringId: 'ReportStringId.ExpressionEditor_Description_Arguments_PageCount' });
                        return items;
                    } : undefined);
                };
                this.value().onHiding = this._onHidingPopup;
                this.value().onShowing = this._onShowingPopup(editableObject);
            }
            return true;
        }
    };
    ReportExpressionEditorAdapter.prototype._createReportItems = function (reportExplorerProvider, onClick) {
        var item = {
            displayName: analytics_utils_1.getLocalization('Report Items', 'ReportStringId.ExpressionEditor_ItemInfo_ReportItems'),
            content: {
                showDescription: false,
                isSelected: ko.observable(false),
                data: {
                    fields: {
                        itemsProvider: reportExplorerProvider,
                        expandRootItems: true,
                        selectedPath: ko.observable(''),
                        templateName: 'dx-ee-treelist-item',
                        treeListController: new analytics_widgets_internal_1.ExpressionEditorTreeListController('', function (item, element) { onClick('[' + ['ReportItems', item.text].join('.') + ']'); })
                    }
                },
                name: 'dx-expressioneditor-fields'
            }
        };
        return item;
    };
    ReportExpressionEditorAdapter.prototype._createValuesTab = function () {
        var items = this.values().map(function (item) {
            var display = item.value || item;
            return {
                text: "'" + display + "'",
                displayName: display
            };
        });
        return analytics_widgets_internal_1.createExpressionEditorCollectionToolOptions(items, 'Values', 'ReportStringId.ExpressionEditor_ItemInfo_Values', false);
    };
    return ReportExpressionEditorAdapter;
}(analytics_utils_1.Disposable));
exports.ReportExpressionEditorAdapter = ReportExpressionEditorAdapter;


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_internal_1 = __webpack_require__(8);
function addVariablesToExpressionEditor(categories, customizeItems) {
    if (customizeItems === void 0) { customizeItems = function (items) { return items; }; }
    var items = customizeItems([
        { text: 'DataSource.CurrentRowIndex', class: 'dx-expression-variables-datasource', val: '[DataSource.CurrentRowIndex]', descriptionStringId: 'ReportStringId.ExpressionEditor_ItemInfo_Variables_CurrentRowIndex_Description' },
        { text: 'DataSource.RowCount', class: 'dx-expression-variables-datasource', val: '[DataSource.RowCount]', descriptionStringId: 'ReportStringId.ExpressionEditor_ItemInfo_Variables_RowCount_Description' },
        { text: 'DataSource.CurrentRowHierarchyLevel', class: 'dx-expression-variables-datasource', val: '[DataSource.CurrentRowHierarchyLevel]', descriptionStringId: 'ReportStringId.ExpressionEditor_ItemInfo_Variables_CurrentRowHierarchyLevel_Description' },
        { text: 'Arguments.GroupRowIndex', class: 'dx-expression-variables-arguments', val: '[Arguments.GroupRowIndex]', descriptionStringId: '' },
        { text: 'Arguments.GroupColumnIndex', class: 'dx-expression-variables-arguments', val: '[Arguments.GroupColumnIndex]', descriptionStringId: '' }
    ]);
    categories.push(analytics_widgets_internal_1.createExpressionEditorCollectionToolOptions(items, 'Variables', 'ReportStringId.ExpressionEditor_ItemInfo_Variables', true));
}
exports.addVariablesToExpressionEditor = addVariablesToExpressionEditor;


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var parameterHelper_1 = __webpack_require__(479);
var ReportParameterHelper = (function (_super) {
    __extends(ReportParameterHelper, _super);
    function ReportParameterHelper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ReportParameterHelper;
}(parameterHelper_1.ParameterHelper));
exports.ReportParameterHelper = ReportParameterHelper;


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_internal_1 = __webpack_require__(8);
var ParameterTypesHelper = (function () {
    function ParameterTypesHelper() {
    }
    ParameterTypesHelper.prototype._getTypeInfo = function (typeName) {
        var values = ParameterTypesHelper.typeValues.filter(function (type) { return type.value === typeName; });
        return values.length > 0 ? values[0] : null;
    };
    ParameterTypesHelper.prototype._tryConvertValue = function (value, typeName) {
        var condition = function (val) { return val !== void 0 && val !== null && !isNaN(typeof val === 'string' ? '' : val); };
        if (!condition(value)) {
            return { isValid: false, newValue: null };
        }
        var typeValue = this._getTypeInfo(typeName), newValue = (typeValue && typeValue.valueConverter) ? typeValue.valueConverter(value, this.getDefaultValue(typeName)) : value;
        return { isValid: condition(newValue), newValue: newValue };
    };
    ParameterTypesHelper.prototype.convertSingleValue = function (value, typeName) {
        var result = this._tryConvertValue(value, typeName);
        return result.isValid ? result.newValue : this.getDefaultValue(typeName);
    };
    ParameterTypesHelper.prototype.getSpecifics = function (typeName) {
        var typeValue = this._getTypeInfo(typeName);
        return typeValue ? typeValue.specifics : 'default';
    };
    ParameterTypesHelper.prototype.getIcon = function (typeName) {
        var typeValue = this._getTypeInfo(typeName);
        return typeValue && typeValue.icon;
    };
    ParameterTypesHelper.prototype.getDefaultValue = function (typeName) {
        var typeValue = this._getTypeInfo(typeName);
        var _value = typeValue ? typeValue.defaultValue : '';
        if (_value instanceof Date) {
            _value = new Date(_value);
        }
        return _value;
    };
    ParameterTypesHelper.defaultGuidValue = '00000000-0000-0000-0000-000000000000';
    ParameterTypesHelper.typeValues = [
        { value: 'System.String', displayValue: 'String', defaultValue: '', specifics: 'String', valueConverter: function (val) { return val.toString(); }, localizationId: 'UtilsUIStringId.Parameter_Type_String' },
        { value: 'System.DateTime', displayValue: 'Date', defaultValue: new Date(new Date().setHours(0, 0, 0, 0)), specifics: 'Date', valueConverter: function (val) { return analytics_internal_1.parseDate(val); }, localizationId: 'UtilsUIStringId.Parameter_Type_DateTime' },
        { value: 'System.Int16', displayValue: 'Number (16 bit integer)', defaultValue: '0', specifics: 'Integer', valueConverter: function (val, defaultValue) { return analytics_internal_1.integerValueConverter(val, defaultValue, 'System.Int16'); }, localizationId: 'UtilsUIStringId.Parameter_Type_Int16' },
        { value: 'System.Int32', displayValue: 'Number (32 bit integer)', defaultValue: '0', specifics: 'Integer', valueConverter: function (val, defaultValue) { return analytics_internal_1.integerValueConverter(val, defaultValue, 'System.Int32'); }, localizationId: 'UtilsUIStringId.Parameter_Type_Int32' },
        { value: 'System.Int64', displayValue: 'Number (64 bit integer)', defaultValue: '0', specifics: 'Integer', valueConverter: function (val, defaultValue) { return analytics_internal_1.integerValueConverter(val, defaultValue, 'System.Int64'); }, localizationId: 'UtilsUIStringId.Parameter_Type_Int64' },
        { value: 'System.Single', displayValue: 'Number (floating-point)', defaultValue: '0', specifics: 'Float', valueConverter: function (val, defaultValue) { return analytics_internal_1.floatValueConverter(val, defaultValue, 'System.Single'); }, localizationId: 'UtilsUIStringId.Parameter_Type_Float' },
        { value: 'System.Double', displayValue: 'Number (double-precision floating-point)', defaultValue: '0', specifics: 'Float', valueConverter: function (val, defaultValue) { return analytics_internal_1.floatValueConverter(val, defaultValue, 'System.Double'); }, localizationId: 'UtilsUIStringId.Parameter_Type_Double' },
        { value: 'System.Decimal', displayValue: 'Number (decimal)', defaultValue: '0', specifics: 'Float', valueConverter: function (val, defaultValue) { return analytics_internal_1.floatValueConverter(val, defaultValue, 'System.Decimal'); }, localizationId: 'UtilsUIStringId.Parameter_Type_Decimal' },
        { value: 'System.Boolean', displayValue: 'Boolean', defaultValue: false, specifics: 'Bool', valueConverter: function (val) { return String(val).toLowerCase() === 'true' ? true : (String(val).toLowerCase() === 'false' ? false : null); }, localizationId: 'UtilsUIStringId.Parameter_Type_Boolean' },
        { value: 'System.Guid', displayValue: 'Guid', defaultValue: ParameterTypesHelper.defaultGuidValue, valueConverter: function (val) { return analytics_widgets_internal_1.validateGuid(val) ? val : ParameterTypesHelper.defaultGuidValue; }, specifics: 'guid', localizationId: 'UtilsUIStringId.Parameter_Type_Guid' }
    ];
    return ParameterTypesHelper;
}());
exports.ParameterTypesHelper = ParameterTypesHelper;


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var customFunctions_1 = __webpack_require__(80);
var analytics_utils_1 = __webpack_require__(0);
function createExpressionProperty(object, propertyName, suffix) {
    if (suffix === void 0) { suffix = 'ExpressionObj'; }
    if (!object.expressionBindings().filter(function (binding) { return binding.propertyName() === propertyName; })[0]) {
        var newExpression = new ParameterExpressionBinding({});
        newExpression.propertyName(propertyName);
        object.expressionBindings.push(newExpression);
    }
    var propertyExpression = object.expressionBindings().filter(function (binding) { return binding.propertyName() === propertyName; })[0];
    var expressionProperty = {
        value: propertyExpression.expression,
        customizeCategories: propertyName !== 'Value' ? function () { } : function (tool, categories) {
            var fields = categories.filter(function (item) { return item.content.name == 'dx-expressioneditor-fields'; })[0];
            if (fields)
                categories.splice(categories.indexOf(fields), 1);
        },
        functions: customFunctions_1.reportFunctionDisplay.filter(function (cat) { return cat.category != 'Summary' && cat.category != 'Aggregate'; })
    };
    var wrappedExpressionOptions = new _wrappedExpressionOptions_1.WrappedExpressionOptions(expressionProperty, {
        addExpression: function (value) {
            if (object.expressionBindings().indexOf(propertyExpression) === -1)
                object.expressionBindings.push(propertyExpression);
            propertyExpression.expression(value);
        },
        removeExpression: function (expression) {
            object.expressionBindings.remove(propertyExpression);
            wrappedExpressionOptions.isValid(true);
        }
    });
    object._disposables.push(ko.computed(function () {
        if (object.expressionBindings().indexOf(propertyExpression) !== -1) {
            wrappedExpressionOptions.expression(propertyExpression);
        }
        else
            wrappedExpressionOptions.expression(null);
    }), wrappedExpressionOptions);
    object[propertyName + suffix] = wrappedExpressionOptions;
    return wrappedExpressionOptions;
}
exports.createExpressionProperty = createExpressionProperty;
var ParameterExpressionBinding = (function () {
    function ParameterExpressionBinding(model, serializer) {
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(this, model);
    }
    ParameterExpressionBinding.prototype.getInfo = function () {
        return parameterExpressionBinding_1.parameterExpressionBindingSerializationsInfo;
    };
    ParameterExpressionBinding.prototype.isEmpty = function () {
        return !this.expression();
    };
    ParameterExpressionBinding.expressionSuff = 'ExpressionObj';
    return ParameterExpressionBinding;
}());
exports.ParameterExpressionBinding = ParameterExpressionBinding;
var parameterExpressionBinding_1 = __webpack_require__(121);
var _wrappedExpressionOptions_1 = __webpack_require__(84);


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function createIDataMemberInfoByName(name, specifics) {
    if (specifics === void 0) { specifics = 'list'; }
    return {
        displayName: name,
        name: name,
        specifics: specifics,
        isList: specifics === 'list' ? true : false
    };
}
exports.createIDataMemberInfoByName = createIDataMemberInfoByName;


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var lookUpValue_1 = __webpack_require__(272);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var LookUpValue = (function () {
    function LookUpValue(model, serializer) {
        var _this = this;
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(this, model);
        this.value = ko.pureComputed({
            read: function () {
                return _this._value() && _this._value().content();
            },
            write: function (newValue) {
                _this._value() && _this._value().content(newValue);
            }
        });
    }
    LookUpValue.createNew = function () {
        return new LookUpValue({});
    };
    LookUpValue.from = function (model, serializer) {
        return new LookUpValue(model, serializer);
    };
    LookUpValue.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, lookUpValue_1.lookUpValueSerializationInfo, refs);
    };
    LookUpValue.prototype.getInfo = function () {
        if (this.valueInfo) {
            return lookUpValue_1.lookUpValueSerializationInfo.concat(this.valueInfo());
        }
        return lookUpValue_1.lookUpValueSerializationInfo;
    };
    Object.defineProperty(LookUpValue.prototype, "isEmpty", {
        get: function () {
            return this._value() === null || this._value() === undefined;
        },
        enumerable: true,
        configurable: true
    });
    return LookUpValue;
}());
exports.LookUpValue = LookUpValue;


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var objectStorageItem_1 = __webpack_require__(38);
var analytics_utils_1 = __webpack_require__(0);
var analytics_elements_1 = __webpack_require__(5);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_widgets_1 = __webpack_require__(4);
var TableInfoCollectionItem = (function (_super) {
    __extends(TableInfoCollectionItem, _super);
    function TableInfoCollectionItem(model, dataSource, dsHelper, serializer) {
        var _this = _super.call(this, model, serializer, tableInfoCollectionItemSerializationsInfo) || this;
        _this.filterString = ko.observable(null);
        var options = new analytics_widgets_1.FilterStringOptions(_this['_filterString'], ko.pureComputed(function () {
            return dsHelper() && (dsHelper().getDataSourcePath(dataSource) + '.' + _this['tableName']());
        }), ko.pureComputed(function () { return !dataSource; }));
        options.helper.canChoiceParameters = true;
        _this.filterString(options);
        return _this;
    }
    return TableInfoCollectionItem;
}(analytics_elements_1.SerializableModel));
exports.TableInfoCollectionItem = TableInfoCollectionItem;
var tableInfoCollectionItemSerializationsInfo = [metadata_1.filterString, metadata_1.filterStringEditable, { propertyName: 'tableName', modelName: '@TableName' }];
var UniversalDataSource = (function (_super) {
    __extends(UniversalDataSource, _super);
    function UniversalDataSource(model, dsHelperProvider, serializer) {
        var _this = _super.call(this, $.extend({ '@ObjectType': 'DevExpress.ReportServer.Infrastructure.Data.UniversalDataSource' }, model), dsHelperProvider, serializer) || this;
        _this.parameters = analytics_utils_1.deserializeArray(model.Parameters || [], function (item) { return new objectStorageItem_1.ObjectStorageParameter(item, serializer); });
        _this.tableInfoCollection = analytics_utils_1.deserializeArray(model.TableInfoCollection || [], function (item) { return new TableInfoCollectionItem(item, _this, dsHelperProvider, serializer); });
        _this.spParameterInfoCollection = analytics_utils_1.deserializeArray(model.StoredProcedureParameterInfoCollection || [], function (item) { return new objectStorageItem_1.ObjectStorageParameter(item, serializer); });
        return _this;
    }
    UniversalDataSource.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.parameters);
        this.disposeObservableArray(this.tableInfoCollection);
        this.disposeObservableArray(this.spParameterInfoCollection);
        this.resetObservableArray(this.parameters);
        this.resetObservableArray(this.tableInfoCollection);
        this.resetObservableArray(this.spParameterInfoCollection);
    };
    UniversalDataSource.prototype.getInfo = function () {
        return _super.prototype.getInfo.call(this).concat([
            { propertyName: 'parameters', modelName: 'Parameters', array: true },
            { propertyName: 'tableInfoCollection', modelName: 'TableInfoCollection', array: true },
            { propertyName: 'spParameterInfoCollection', modelName: 'StoredProcedureParameterInfoCollection', array: true },
            { propertyName: 'name', modelName: '@Name' }
        ]);
    };
    return UniversalDataSource;
}(objectStorageItem_1.ObjectItem));
exports.UniversalDataSource = UniversalDataSource;


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ExtensionModel = (function () {
    function ExtensionModel(model, serializer) {
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(this, model);
    }
    ExtensionModel.prototype.getInfo = function () {
        return extensionSerializationInfo;
    };
    return ExtensionModel;
}());
exports.ExtensionModel = ExtensionModel;
var extensionSerializationInfo = [
    { propertyName: 'key', modelName: '@Key' },
    { propertyName: 'value', modelName: '@Value' }
];


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var metadata_1 = __webpack_require__(6);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var editorTemplates_1 = __webpack_require__(9);
var calculatedFieldScriptsInfo = [
    { propertyName: 'onGetValue', modelName: '@OnGetValue', displayName: 'Get a Value', localizationId: 'DevExpress.XtraReports.UI.CalculatedFieldScripts.OnGetValue', editor: editorTemplates_1.designerEditorTemplates.getEditor('scriptsBox') }
];
exports.calculatedFieldScripts = { propertyName: 'scripts', modelName: 'Scripts', displayName: 'Scripts', localizationId: 'DevExpress.XtraReports.UI.CalculatedField.Scripts', info: calculatedFieldScriptsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.calculatedFieldSerializationInfo = [
    { propertyName: 'calculatedFieldName', modelName: '@Name' },
    { propertyName: 'nameEditable', displayName: 'Name', validationRules: analytics_internal_1.nameValidationRules, editor: editorTemplates_1.designerEditorTemplates.getEditor('name'), localizationId: 'DevExpress.XtraReports.UI.XRControl.Name' },
    metadata_1.displayName,
    {
        propertyName: 'fieldType', modelName: '@FieldType', displayName: 'Field Type', localizationId: 'DevExpress.XtraReports.UI.CalculatedField.FieldType', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'None', from: analytics_utils_1.fromEnum,
        valuesArray: [
            { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.FieldType.None' },
            { value: 'String', displayValue: 'String', localizationId: 'DevExpress.XtraReports.UI.FieldType.String' },
            { value: 'DateTime', displayValue: 'DateTime', localizationId: 'DevExpress.XtraReports.UI.FieldType.DateTime' },
            { value: 'TimeSpan', displayValue: 'TimeSpan', localizationId: 'DevExpress.XtraReports.UI.FieldType.TimeSpan' },
            { value: 'Byte', displayValue: 'Byte', localizationId: 'DevExpress.XtraReports.UI.FieldType.Byte' },
            { value: 'Int16', displayValue: 'Int16', localizationId: 'DevExpress.XtraReports.UI.FieldType.Int16' },
            { value: 'Int32', displayValue: 'Int32', localizationId: 'DevExpress.XtraReports.UI.FieldType.Int32' },
            { value: 'Float', displayValue: 'Float', localizationId: 'DevExpress.XtraReports.UI.FieldType.Float' },
            { value: 'Double', displayValue: 'Double', localizationId: 'DevExpress.XtraReports.UI.FieldType.Double' },
            { value: 'Decimal', displayValue: 'Decimal', localizationId: 'DevExpress.XtraReports.UI.FieldType.Decimal' },
            { value: 'Boolean', displayValue: 'Boolean', localizationId: 'DevExpress.XtraReports.UI.FieldType.Boolean' }
        ]
    },
    metadata_1.dataSource,
    metadata_1.dataMember,
    { propertyName: 'expression', modelName: '@Expression', displayName: 'Expression', localizationId: 'DevExpress.XtraReports.UI.CalculatedField.Expression', defaultVal: '' },
    { propertyName: 'expressionObj', displayName: 'Expression', localizationId: 'DevExpress.XtraReports.UI.CalculatedField.Expression', editor: analytics_widgets_1.editorTemplates.getEditor('expressionEditor') },
    exports.calculatedFieldScripts
];


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var BandsHolder = (function (_super) {
    __extends(BandsHolder, _super);
    function BandsHolder(_container) {
        var _this = _super.call(this) || this;
        _this._container = _container;
        _this.bands = ko.observableArray();
        if (_container instanceof xrReport_1.ReportSurface || _container instanceof xrDetailReportBand_1.DetailReportBandSurface)
            _this._disposables.push(_this.verticalBandsContainer = new _vericalBandContainer_1.VerticalBandsContainerSurface(_container));
        _this._disposables.push(_this.multiColumn = ko.computed(function () {
            var containerMultiColumn = _container['multiColumn'] && _container['multiColumn']();
            if (containerMultiColumn && containerMultiColumn.haveColumns()) {
                return containerMultiColumn;
            }
            else {
                var detailBand = _this.bands().filter(function (item) { return item instanceof xrDetailBand_1.DetailBandSurface; })[0];
                if (detailBand && detailBand.multiColumn() && detailBand.multiColumn().haveColumns())
                    return detailBand.multiColumn();
                else
                    return null;
            }
        }));
        return _this;
    }
    BandsHolder.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.bands);
        this.resetObservableArray(this.bands);
    };
    BandsHolder.prototype._createBandsMapCollection = function (elementModels, callbacks) {
        var position = 0;
        elementModels.peek().forEach(function (item) { return callbacks.addItem(callbacks.createItem(item), position++); });
        callbacks.callMutated();
        return elementModels.subscribe(function (args) {
            args.forEach(function (changeSet) {
                if (changeSet.status === 'deleted') {
                    callbacks.removeItem(changeSet.value.surface);
                    callbacks.callMutated();
                }
            });
            args.forEach(function (changeSet) {
                if (changeSet.status === 'added') {
                    callbacks.addItem(callbacks.createItem(changeSet.value), changeSet.index);
                    callbacks.callMutated();
                }
            });
        }, null, 'arrayChange');
    };
    BandsHolder.prototype._addHorizontalBand = function (item, index) {
        var verticalBandsPosition = this.verticalBandsContainer && this.verticalBandsContainer.bandPosition();
        if (index === undefined)
            return this.bands().push(item);
        if (verticalBandsPosition > 0 && index > verticalBandsPosition) {
            index -= this.verticalBandsContainer.verticalBands().length;
        }
        this.bands().splice(index, 0, item);
    };
    BandsHolder.prototype._addVerticalBand = function (item, index) {
        this.verticalBandsContainer.verticalBands().splice(index > 0 ? index : 0, 0, item);
    };
    BandsHolder.prototype.initialize = function (bands) {
        var _this = this;
        var isVerticalChanged = false;
        var isHorizontalChanged = false;
        this._disposables.push(this._createBandsMapCollection(bands, {
            addItem: function (item, index) {
                if (item instanceof xrVerticalBand_1.VerticalBandSurface) {
                    _this._addVerticalBand(item, index - _this.verticalBandsContainer.bandPosition());
                    isVerticalChanged = true;
                }
                else {
                    isHorizontalChanged = true;
                    _this._addHorizontalBand(item, index);
                }
            },
            callMutated: function () {
                isHorizontalChanged && _this.bands.valueHasMutated();
                isVerticalChanged && _this.verticalBandsContainer && _this.verticalBandsContainer.verticalBands.valueHasMutated();
                isHorizontalChanged = false;
                isVerticalChanged = false;
            },
            createItem: function (item) { return _this._container._createSurface(item); },
            removeItem: function (item) {
                if (item instanceof xrVerticalBand_1.VerticalBandSurface) {
                    _this.verticalBandsContainer.verticalBands().splice(_this.verticalBandsContainer.verticalBands().indexOf(item), 1);
                    isVerticalChanged = true;
                }
                else {
                    _this.bands().splice(_this.bands().indexOf(item), 1);
                    isHorizontalChanged = true;
                }
            }
        }));
    };
    BandsHolder.prototype.getHeight = function () {
        var minHeight = (this.verticalBandsContainer && this.verticalBandsContainer.height()) || 0;
        this.bands().forEach(function (band) { minHeight += band.height(); });
        return minHeight;
    };
    BandsHolder.prototype.getTotalHeight = function () {
        var height = this.verticalBandsContainer && this.verticalBandsContainer._height() || 0;
        return height + (this.bands() || []).reduce(function (acc, x) { return acc + x._totalHeight(); }, 0);
    };
    BandsHolder.prototype.getBandAbsolutePositionY = function (band) {
        var newY = 0;
        var bandIndex;
        var parentBands = ko.unwrap(this.bands);
        if (parentBands && parentBands.length !== 0) {
            bandIndex = parentBands.indexOf(band);
            if (bandIndex === -1)
                return newY;
            if (bandIndex > 0 && parentBands[bandIndex - 1]) {
                newY = parentBands[bandIndex - 1].absolutePosition.y() + parentBands[bandIndex - 1].height();
            }
            else if (bandIndex === 0 && this._container['absolutePosition']) {
                newY = this._container['absolutePosition'].y();
            }
            if (this.verticalBandsContainer) {
                if (bandIndex === this.verticalBandsContainer.getBandPosition()) {
                    newY = this.verticalBandsContainer.topOffset() + this.verticalBandsContainer.height();
                }
            }
        }
        return newY;
    };
    BandsHolder.prototype.checkUnderCursor = function () {
        var isOver = false;
        [this.bands(), this.verticalBandsContainer.verticalBands()].forEach(function (collection) {
            for (var i = 0; i < collection.length; i++) {
                isOver = collection[i].underCursor().isOver;
                if (isOver)
                    return isOver;
            }
        });
        return isOver;
    };
    return BandsHolder;
}(analytics_utils_1.Disposable));
exports.BandsHolder = BandsHolder;
var xrReport_1 = __webpack_require__(16);
var xrDetailBand_1 = __webpack_require__(86);
var xrDetailReportBand_1 = __webpack_require__(66);
var xrVerticalBand_1 = __webpack_require__(25);
var _vericalBandContainer_1 = __webpack_require__(276);


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var ko = __webpack_require__(1);
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var MultiColumn = (function (_super) {
    __extends(MultiColumn, _super);
    function MultiColumn(model, pageWidth, margins, serializer) {
        var _this = _super.call(this, model || {}, serializer, exports.multiColumnSerializationsInfo) || this;
        _this.grayAreaWidth = ko.observable(0);
        _this._disposables.push(_this.realColumnWidth = ko.pureComputed(function () {
            var bandWidth = pageWidth() - margins.left() - margins.right(), result = bandWidth;
            _this.grayAreaWidth(0);
            if (_this.mode() === 'UseColumnWidth') {
                if (_this.columnWidth() > bandWidth) {
                    _this.grayAreaWidth(0);
                    result = bandWidth - _this.columnSpacing();
                }
                else if (_this.columnWidth() > 0) {
                    _this.grayAreaWidth(bandWidth - _this.columnWidth() - _this.columnSpacing());
                    result = _this.columnWidth();
                }
            }
            else if (_this.mode() === 'UseColumnCount' && _this.columnCount() > 1) {
                result = (bandWidth - _this.columnSpacing() * (_this.columnCount() - 1)) / _this.columnCount();
                _this.grayAreaWidth(bandWidth - result - _this.columnSpacing());
            }
            return result;
        }));
        _this._disposables.push(_this.columnWidth.subscribe(function (newVal) { _this.mode('UseColumnWidth'); }));
        _this._disposables.push(_this.columnCount.subscribe(function (newVal) { _this.mode('UseColumnCount'); }));
        return _this;
    }
    MultiColumn.unitProperties = ['columnWidth', 'columnSpacing'];
    return MultiColumn;
}(analytics_elements_1.SerializableModel));
exports.MultiColumn = MultiColumn;
exports.multiColumnSerializationsInfo = [
    { propertyName: 'columnCount', modelName: '@ColumnCount', displayName: 'Column Count', localizationId: 'DevExpress.XtraReports.UI.MultiColumn.ColumnCount', defaultVal: 1, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), from: analytics_utils_1.floatFromModel },
    { propertyName: 'columnWidth', modelName: '@ColumnWidth', displayName: 'Column Width', localizationId: 'DevExpress.XtraReports.UI.MultiColumn.ColumnWidth', defaultVal: 0, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), from: analytics_utils_1.floatFromModel },
    { propertyName: 'columnSpacing', modelName: '@ColumnSpacing', displayName: 'Column Spacing', localizationId: 'DevExpress.XtraReports.UI.MultiColumn.ColumnSpacing', defaultVal: 0, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), from: analytics_utils_1.floatFromModel },
    {
        propertyName: 'layout', modelName: '@Layout', displayName: 'Layout', localizationId: 'DevExpress.XtraReports.UI.MultiColumn.Layout', defaultVal: 'DownThenAcross', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
            { value: 'DownThenAcross', displayValue: 'DownThenAcross', localizationId: 'DevExpress.XtraPrinting.ColumnLayout.DownThenAcross' },
            { value: 'AcrossThenDown', displayValue: 'AcrossThenDown', localizationId: 'DevExpress.XtraPrinting.ColumnLayout.AcrossThenDown' }
        ]
    }, {
        propertyName: 'mode', modelName: '@Mode', displayName: 'Mode', localizationId: 'DevExpress.XtraReports.UI.MultiColumn.Mode', defaultVal: 'None', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
            { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.MultiColumnMode.None' },
            { value: 'UseColumnCount', displayValue: 'UseColumnCount', localizationId: 'DevExpress.XtraReports.UI.MultiColumnMode.UseColumnCount' },
            { value: 'UseColumnWidth', displayValue: 'UseColumnWidth', localizationId: 'DevExpress.XtraReports.UI.MultiColumnMode.UseColumnWidth' }
        ]
    }
];
var MultiColumnSurface = (function (_super) {
    __extends(MultiColumnSurface, _super);
    function MultiColumnSurface(multiColumn, context) {
        var _this = _super.call(this) || this;
        _this._disposables.push(_this.grayAreaWidth = ko.pureComputed(function () {
            return analytics_internal_1.unitsToPixel(multiColumn.grayAreaWidth(), context.measureUnit(), context.zoom());
        }), _this.columnWidth = ko.pureComputed(function () {
            return analytics_internal_1.unitsToPixel(multiColumn.realColumnWidth(), context.measureUnit(), context.zoom());
        }), _this.columnSpacing = ko.pureComputed(function () {
            return analytics_internal_1.unitsToPixel(multiColumn.columnSpacing(), context.measureUnit(), context.zoom());
        }), _this.columnSpacingLeft = ko.pureComputed(function () {
            var columnWidth = _this.columnWidth();
            return !context.rtl() ? columnWidth : context.margins.right() + _this.grayAreaWidth();
        }), _this.grayAreaLeft = ko.pureComputed(function () {
            var columnWidth = _this.columnWidth();
            return !context.rtl() ? columnWidth + _this.columnSpacing() : context.margins.right();
        }), _this.haveColumns = ko.pureComputed(function () {
            return multiColumn.columnCount() > 1 && multiColumn.mode() !== 'None';
        }));
        return _this;
    }
    return MultiColumnSurface;
}(analytics_utils_1.Disposable));
exports.MultiColumnSurface = MultiColumnSurface;


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.expressionBindingSerializationsInfo = [
    { propertyName: 'eventName', modelName: '@EventName' },
    { propertyName: 'propertyName', modelName: '@PropertyName' },
    { propertyName: 'expression', modelName: '@Expression' },
];
exports.expressionBindings = { propertyName: 'expressionBindings', modelName: 'ExpressionBindings', array: true, info: exports.expressionBindingSerializationsInfo };


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var multiColumn_1 = __webpack_require__(183);
exports.multiColumn = { propertyName: 'multiColumn', modelName: 'MultiColumn', displayName: 'Multi-Column Options', localizationId: 'DevExpress.XtraReports.UI.DetailBand.MultiColumn', info: multiColumn_1.multiColumnSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var xrDetailBand_1 = __webpack_require__(86);
var xrVerticalBand_1 = __webpack_require__(25);
var _bandUtils_1 = __webpack_require__(65);
function addBandToContainer(container, control) {
    control.parentModel(container);
    if (control instanceof xrDetailBand_1.DetailBand) {
        container.bands().filter(function (x) { return x instanceof xrVerticalBand_1.VerticalBandViewModel; }).forEach(function (x) { return container.removeChild(x); });
    }
    else if (control instanceof xrVerticalBand_1.VerticalBandViewModel) {
        if (container.bands().every(function (x) { return !(x instanceof xrVerticalBand_1.VerticalBandViewModel); })) {
            var detailBand = container.bands().filter(function (x) { return x instanceof xrDetailBand_1.DetailBand; })[0];
            detailBand && container.removeChild(detailBand);
            if (control.controlType !== 'VerticalDetailBand')
                container.createChild({ '@ControlType': 'VerticalDetailBand', '@HeightF': container.root.dpi() });
        }
        else {
            var band = container.bands().filter(function (x) { return x instanceof xrVerticalBand_1.VerticalBandViewModel; })[0];
            if (band)
                control.height(band.height());
        }
    }
    _bandUtils_1.insertBand(container.bands, control);
}
exports.addBandToContainer = addBandToContainer;


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var Anchoring = (function (_super) {
    __extends(Anchoring, _super);
    function Anchoring(subscrible, model, anchoringProperty) {
        var _this = _super.call(this) || this;
        _this.state = Anchoring.states.complete;
        _this.anchoring = anchoringProperty;
        _this.start(subscrible, model);
        return _this;
    }
    Anchoring.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.subscribtion.dispose();
    };
    Anchoring.prototype.start = function (subscrible, model) {
        var _this = this;
        this.subscribtion && this.subscribtion.dispose();
        var oldVal = ko.observable(subscrible());
        this.subscribtion = subscrible.subscribe(function (newVal) {
            if (_this.state !== Anchoring.states.fromControls) {
                _this.state = Anchoring.states.inProgress;
                _this.anchorSubscribtion(newVal, oldVal, model);
            }
            oldVal(newVal);
            _this.state = Anchoring.states.complete;
        });
    };
    Anchoring.states = {
        inProgress: 'inProgress',
        complete: 'complete',
        fromControls: 'fromControls'
    };
    return Anchoring;
}(analytics_utils_1.Disposable));
exports.Anchoring = Anchoring;
var VerticalAcnhoring = (function (_super) {
    __extends(VerticalAcnhoring, _super);
    function VerticalAcnhoring(subscrible, model, anchoringProperty) {
        var _this = _super.call(this, subscrible, model, anchoringProperty) || this;
        _this.anchorSubscribtion = function (parentSizeValue, oldValue, model) {
            if (analytics_internal_1.checkModelReady(model.root) && isFinite(oldValue()) && oldValue()) {
                if (_this.anchoring() === 'Both') {
                    var newSize = model.size.height() + parentSizeValue - oldValue();
                    model.size.height(newSize > 0 ? newSize : 1);
                }
                if (_this.anchoring() === 'Bottom') {
                    var newLocation = model.location.y() + parentSizeValue - oldValue();
                    model.location.y(newLocation > 0 ? newLocation : 0);
                }
            }
        };
        _this._disposables.push(model.size.height.subscribe(function (newVal) {
            if (_this.state === Anchoring.states.complete) {
                _this.state = Anchoring.states.fromControls;
            }
        }));
        _this._disposables.push(model.location.y.subscribe(function (newVal) {
            if (_this.state === Anchoring.states.complete) {
                _this.state = Anchoring.states.fromControls;
            }
        }));
        return _this;
    }
    return VerticalAcnhoring;
}(Anchoring));
exports.VerticalAcnhoring = VerticalAcnhoring;
var HorizontalAnchoring = (function (_super) {
    __extends(HorizontalAnchoring, _super);
    function HorizontalAnchoring(subscrible, model, anchoringProperty) {
        var _this = _super.call(this, subscrible, model, anchoringProperty) || this;
        _this.anchorSubscribtion = function (parentSizeValue, oldValue, model) {
            if (analytics_internal_1.checkModelReady(model.root) && isFinite(oldValue()) && oldValue()) {
                if (_this.anchoring() === 'Both') {
                    var newSize = model.size.width() + parentSizeValue - oldValue();
                    model.size.width(newSize > 0 ? newSize : 1);
                }
                if (_this.anchoring() === 'Right') {
                    var newLocation = model.location.x() + parentSizeValue - oldValue();
                    model.location.x(newLocation > 0 ? newLocation : 0);
                }
            }
        };
        return _this;
    }
    return HorizontalAnchoring;
}(Anchoring));
exports.HorizontalAnchoring = HorizontalAnchoring;


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var xrPicturebox_1 = __webpack_require__(89);
var analytics_internal_1 = __webpack_require__(2);
exports.foreColorWatermark = analytics_internal_1.extend({}, metadata_1.foreColor, { defaultVal: 'Red' });
exports.fontWatermark = analytics_internal_1.extend({}, metadata_1.font, { defaultVal: 'Verdana, 36pt' });
exports.watermarkSerializationsInfo = [
    exports.fontWatermark, exports.foreColorWatermark,
    { propertyName: 'textTransparency', modelName: '@TextTransparency', displayName: 'Text Transparency', localizationId: 'DevExpress.XtraPrinting.Drawing.PageWatermark.TextTransparency', defaultVal: 50, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') },
    {
        propertyName: 'text', modelName: '@Text', displayName: 'Text', localizable: true, localizationId: 'DevExpress.XtraPrinting.Drawing.PageWatermark.Text', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('comboboxEditable'),
        valuesArray: [{ value: 'ASAP', displayValue: 'ASAP', localizationId: 'PreviewStringId.WMForm_Watermark_Asap' }, { value: 'CONFIDENTIAL', displayValue: 'CONFIDENTIAL', localizationId: 'PreviewStringId.WMForm_Watermark_Confidential' }, { value: 'COPY', displayValue: 'COPY', localizationId: 'PreviewStringId.WMForm_Watermark_Copy' }, { value: 'DO NOT COPY', displayValue: 'DO NOT COPY', localizationId: 'PreviewStringId.WMForm_Watermark_DoNotCopy' }, { value: 'DRAFT', displayValue: 'DRAFT', localizationId: 'PreviewStringId.WMForm_Watermark_Draft' }, { value: 'EVALUATION', displayValue: 'EVALUATION', localizationId: 'PreviewStringId.WMForm_Watermark_Evaluation' }, { value: 'ORIGINAL', displayValue: 'ORIGINAL', localizationId: 'PreviewStringId.WMForm_Watermark_Original' }, { value: 'PERSONAL', displayValue: 'PERSONAL', localizationId: 'PreviewStringId.WMForm_Watermark_Personal' }, { value: 'SAMPLE', displayValue: 'SAMPLE', localizationId: 'PreviewStringId.WMForm_Watermark_Sample' }, { value: 'TOP SECRET', displayValue: 'TOP SECRET', localizationId: 'PreviewStringId.WMForm_Watermark_TopSecret' }, { value: 'URGENT', displayValue: 'URGENT', localizationId: 'PreviewStringId.WMForm_Watermark_Urgent' }]
    },
    {
        propertyName: 'textDirection', modelName: '@TextDirection', displayName: 'Text Direction', localizationId: 'DevExpress.XtraPrinting.Drawing.PageWatermark.TextDirection', defaultVal: 'ForwardDiagonal', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
        valuesArray: [
            { value: 'Horizontal', displayValue: 'Horizontal', localizationId: 'DevExpress.XtraPrinting.Drawing.DirectionMode.Horizontal' },
            { value: 'ForwardDiagonal', displayValue: 'ForwardDiagonal', localizationId: 'DevExpress.XtraPrinting.Drawing.DirectionMode.ForwardDiagonal' },
            { value: 'BackwardDiagonal', displayValue: 'BackwardDiagonal', localizationId: 'DevExpress.XtraPrinting.Drawing.DirectionMode.BackwardDiagonal' },
            { value: 'Vertical', displayValue: 'Vertical', localizationId: 'DevExpress.XtraPrinting.Drawing.DirectionMode.Vertical' }
        ]
    },
    xrPicturebox_1.imageSource,
    { propertyName: 'imageTransparency', modelName: '@ImageTransparency', displayName: 'Image Transparency', localizationId: 'DevExpress.XtraPrinting.Drawing.PageWatermark.ImageTransparency', defaultVal: 0, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') },
    { propertyName: 'imageTiling', modelName: '@ImageTiling', displayName: 'Image Tiling', localizationId: 'DevExpress.XtraPrinting.Drawing.PageWatermark.ImageTiling', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool },
    {
        propertyName: 'imageAlign', modelName: '@ImageAlign', displayName: 'Image Alignment', localizationId: 'DevExpress.XtraPrinting.Drawing.PageWatermark.ImageAlign', defaultVal: 'MiddleCenter', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
        valuesArray: [
            { value: 'TopLeft', displayValue: 'TopLeft', localizationId: 'System.Drawing.ContentAlignment.TopLeft' },
            { value: 'TopCenter', displayValue: 'TopCenter', localizationId: 'System.Drawing.ContentAlignment.TopCenter' },
            { value: 'TopRight', displayValue: 'TopRight', localizationId: 'System.Drawing.ContentAlignment.TopRight' },
            { value: 'MiddleLeft', displayValue: 'MiddleLeft', localizationId: 'System.Drawing.ContentAlignment.MiddleLeft' },
            { value: 'MiddleCenter', displayValue: 'MiddleCenter', localizationId: 'System.Drawing.ContentAlignment.MiddleCenter' },
            { value: 'MiddleRight', displayValue: 'MiddleRight', localizationId: 'System.Drawing.ContentAlignment.MiddleRight' },
            { value: 'BottomLeft', displayValue: 'BottomLeft', localizationId: 'System.Drawing.ContentAlignment.BottomLeft' },
            { value: 'BottomCenter', displayValue: 'BottomCenter', localizationId: 'System.Drawing.ContentAlignment.BottomCenter' },
            { value: 'BottomRight', displayValue: 'BottomRight', localizationId: 'System.Drawing.ContentAlignment.BottomRight' }
        ]
    },
    {
        propertyName: 'imageViewMode', modelName: '@ImageViewMode', displayName: 'Image View Mode', localizationId: 'DevExpress.XtraPrinting.Drawing.PageWatermark.ImageViewMode', defaultVal: 'Clip', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
            { value: 'Clip', displayValue: 'Clip', localizationId: 'DevExpress.XtraPrinting.Drawing.ImageViewMode.Clip' },
            { value: 'Stretch', displayValue: 'Stretch', localizationId: 'DevExpress.XtraPrinting.Drawing.ImageViewMode.Stretch' },
            { value: 'Zoom', displayValue: 'Zoom', localizationId: 'DevExpress.XtraPrinting.Drawing.ImageViewMode.Zoom' }
        ]
    },
    { propertyName: 'pageRange', modelName: '@PageRange', displayName: 'Page Range', localizationId: 'DevExpress.XtraPrinting.Drawing.Watermark.PageRange', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('text') },
    { propertyName: 'showBehind', modelName: '@ShowBehind', defaultVal: true, from: analytics_utils_1.parseBool, displayName: 'Show Behind', localizationId: 'DevExpress.XtraPrinting.Drawing.PageWatermark.ShowBehind', editor: analytics_widgets_1.editorTemplates.getEditor('bool') }
];


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
function getUnitProperties(object) {
    var properties = object && object['constructor'] && object['constructor'].unitProperties;
    if (properties) {
        return {
            reCalculateObject: function (coef) {
                for (var i = 0; i < properties.length; i++) {
                    var propertyName = properties[i];
                    var property = object['_' + propertyName] || object[propertyName];
                    var innerProperties = getUnitProperties(property);
                    if (innerProperties) {
                        innerProperties.reCalculateObject(coef);
                    }
                    else {
                        !!ko.unwrap(property) && property(analytics_internal_1.roundingXDecimals(ko.unwrap(property) * coef));
                    }
                }
            },
            calcProperty: function (val, coef) { return val && analytics_internal_1.roundingXDecimals(val * coef); },
            properties: properties
        };
    }
}
exports.getUnitProperties = getUnitProperties;


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var ko = __webpack_require__(1);
var analytics_elements_1 = __webpack_require__(5);
var imageSource_1 = __webpack_require__(40);
var checkEditingField_1 = __webpack_require__(119);
function getDefaultCheckSize(checkState) {
    if (checkState === void 0) { checkState = checkEditingField_1.GlyphStyle.StandardBox1; }
    if (checkState === checkEditingField_1.GlyphStyle.StandardBox1)
        return new analytics_elements_1.Size(13, 13);
    else
        return new analytics_elements_1.Size(16, 16);
}
exports.getDefaultCheckSize = getDefaultCheckSize;
function _getCustomGlyphsInfo(type) {
    return {
        propertyName: type,
        modelName: '@' + type,
        editor: { header: 'dxrd-image-loadfile', editorType: analytics_widgets_1.Editor },
        displayName: type,
        localizationId: 'DevExpress.XtraReports.UI.CheckBoxGlyphs.' + type,
        from: function (val) { return ko.observable(imageSource_1.ImageSource.parse(val)); },
        toJsonObject: imageSource_1.ImageSource.toString,
        defaultVal: null
    };
}
exports._getCustomGlyphsInfo = _getCustomGlyphsInfo;


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var expressionBinding_1 = __webpack_require__(184);
var metadata_1 = __webpack_require__(6);
var analytics_widgets_1 = __webpack_require__(4);
var customFunctions_1 = __webpack_require__(80);
var _wrappedExpressionOptions_1 = __webpack_require__(84);
var _dataBindingMode_1 = __webpack_require__(33);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_widgets_internal_1 = __webpack_require__(8);
var editorTemplates_1 = __webpack_require__(9);
var colors = ['Transparent', 'AliceBlue', 'AntiqueWhite', 'Aqua', 'Aquamarine', 'Azure', 'Beige', 'Bisque', 'Black', 'BlanchedAlmond', 'Blue', 'BlueViolet', 'Brown', 'BurlyWood', 'CadetBlue', 'Chartreuse', 'Chocolate', 'Coral', 'CornflowerBlue', 'Cornsilk', 'Crimson', 'Cyan', 'DarkBlue', 'DarkCyan', 'DarkGoldenrod', 'DarkGray', 'DarkGreen', 'DarkKhaki', 'DarkMagenta', 'DarkOliveGreen', 'DarkOrange', 'DarkOrchid', 'DarkRed', 'DarkSalmon', 'DarkSeaGreen', 'DarkSlateBlue', 'DarkSlateGray', 'DarkTurquoise', 'DarkViolet', 'DeepPink', 'DeepSkyBlue', 'DimGray', 'DodgerBlue', 'Firebrick', 'FloralWhite', 'ForestGreen', 'Fuchsia', 'Gainsboro', 'GhostWhite', 'Gold', 'Goldenrod', 'Gray', 'Green', 'GreenYellow', 'Honeydew', 'HotPink', 'IndianRed', 'Indigo', 'Ivory', 'Khaki', 'Lavender', 'LavenderBlush', 'LawnGreen', 'LemonChiffon', 'LightBlue', 'LightCoral', 'LightCyan', 'LightGoldenrodYellow', 'LightGreen', 'LightGray', 'LightPink', 'LightSalmon', 'LightSeaGreen', 'LightSkyBlue', 'LightSlateGray', 'LightSteelBlue', 'LightYellow', 'Lime', 'LimeGreen', 'Linen', 'Magenta', 'Maroon', 'MediumAquamarine', 'MediumBlue', 'MediumOrchid', 'MediumPurple', 'MediumSeaGreen', 'MediumSlateBlue', 'MediumSpringGreen', 'MediumTurquoise', 'MediumVioletRed', 'MidnightBlue', 'MintCream', 'MistyRose', 'Moccasin', 'NavajoWhite', 'Navy', 'OldLace', 'Olive', 'OliveDrab', 'Orange', 'OrangeRed', 'Orchid', 'PaleGoldenrod', 'PaleGreen', 'PaleTurquoise', 'PaleVioletRed', 'PapayaWhip', 'PeachPuff', 'Peru', 'Pink', 'Plum', 'PowderBlue', 'Purple', 'Red', 'RosyBrown', 'RoyalBlue', 'SaddleBrown', 'Salmon', 'SandyBrown', 'SeaGreen', 'SeaShell', 'Sienna', 'Silver', 'SkyBlue', 'SlateBlue', 'SlateGray', 'Snow', 'SpringGreen', 'SteelBlue', 'Tan', 'Teal', 'Thistle', 'Tomato', 'Turquoise', 'Violet', 'Wheat', 'White', 'WhiteSmoke', 'Yellow', 'YellowGreen'];
var ExpressionWrapper = (function (_super) {
    __extends(ExpressionWrapper, _super);
    function ExpressionWrapper(_bindingMode, _fieldListProvider) {
        if (_bindingMode === void 0) { _bindingMode = _dataBindingMode_1.DataBindingMode.Expressions; }
        var _this = _super.call(this) || this;
        _this._bindingMode = _bindingMode;
        _this._fieldListProvider = _fieldListProvider;
        _this._valuesDictionary = {
            ForeColor: colors,
            BackColor: colors,
            FillColor: colors,
            BorderColor: colors,
            Borders: ['Left', 'Right', 'Top', 'Bottom', 'All'],
            BorderDashStyle: metadata_1.borderDashStyleValues,
            TextAlignment: metadata_1.textAlignmentValues,
            Name: Object.keys(ko.unwrap(analytics_widgets_internal_1.availableFonts))
        };
        _this._displayNameDictionary = {
            Text: { localizationId: 'DevExpress.XtraReports.UI.XRControl.Text', displayName: 'Text' },
            Visible: { localizationId: 'DevExpress.XtraReports.UI.XRControl.Visible', displayName: 'Visible' },
            NavigateUrl: { localizationId: 'DevExpress.XtraReports.UI.XRControl.NavigateUrl', displayName: 'Navigate Url' },
            Bookmark: { localizationId: 'DevExpress.XtraReports.UI.XRControl.Bookmark', displayName: 'Bookmark' },
            Tag: { localizationId: 'DevExpress.XtraReports.UI.XRControl.Tag', displayName: 'Tag' },
            LeftF: { localizationId: 'DevExpress.XtraReports.UI.XRControl.Left', displayName: 'Left' },
            TopF: { localizationId: 'DevExpress.XtraReports.UI.XRControl.Top', displayName: 'Top' },
            WidthF: { localizationId: 'DevExpress.XtraReports.UI.XRControl.Width', displayName: 'Width' },
            HeightF: { localizationId: 'DevExpress.XtraReports.UI.XRControl.Height', displayName: 'Height' },
            StyleName: { localizationId: 'DevExpress.XtraReports.UI.XRControl.StyleName', displayName: 'Style Name' },
            ForeColor: { localizationId: 'DevExpress.XtraReports.UI.XRControl.ForeColor', displayName: 'Foreground Color' },
            BackColor: { localizationId: 'DevExpress.XtraReports.UI.XRControl.BackColor', displayName: 'Background Color' },
            BorderColor: { localizationId: 'DevExpress.XtraReports.UI.XRControl.BorderColor', displayName: 'Border Color' },
            Borders: { localizationId: 'DevExpress.XtraReports.UI.XRControl.Borders', displayName: 'Borders' },
            BorderWidth: { localizationId: 'DevExpress.XtraReports.UI.XRControl.BorderWidth', displayName: 'Border Width' },
            BorderDashStyle: { localizationId: 'DevExpress.XtraReports.UI.XRControl.BorderDashStyle', displayName: 'Border Dash Style' },
            TextAlignment: { localizationId: 'DevExpress.XtraReports.UI.XRControl.TextAlignment', displayName: 'Text Alignment' },
            Font: { localizationId: 'DevExpress.XtraReports.UI.XRControl.Font', displayName: 'Font' },
            Padding: { localizationId: 'DevExpress.XtraReports.UI.XRControl.Padding', displayName: 'Padding' },
            Appearance: { localizationId: 'ReportStringId.CatAppearance', displayName: 'Appearance' },
            Layout: { localizationId: 'ReportStringId.CatLayout', displayName: 'Layout' },
            Name: { localizationId: 'AnalyticsCoreStringId.FormatFontName', displayName: 'Name' },
            Size: { localizationId: 'AnalyticsCoreStringId.Font.Size', displayName: 'Size' },
            Italic: { localizationId: 'System.Drawing.Font.Italic', displayName: 'Italic' },
            Strikeout: { localizationId: 'System.Drawing.Font.Strikeout', displayName: 'Strikeout' },
            Bold: { localizationId: 'System.Drawing.Font.Bold', displayName: 'Bold' },
            Underline: { localizationId: 'System.Drawing.Font.Underline', displayName: 'Underline' },
            Left: { localizationId: 'AnalyticsCoreStringId.PaddingInfo.Left', displayName: 'Left' },
            Right: { localizationId: 'AnalyticsCoreStringId.PaddingInfo.Right', displayName: 'Right' },
            Top: { localizationId: 'AnalyticsCoreStringId.PaddingInfo.Top', displayName: 'Top' },
            Bottom: { localizationId: 'AnalyticsCoreStringId.PaddingInfo.Bottom', displayName: 'Bottom' },
            CheckBoxState: { localizationId: 'DevExpress.XtraReports.UI.XRCheckBox.CheckBoxState', displayName: 'Check Box State' },
            Image: { localizationId: 'DevExpress.XtraReports.UI.XRPictureBox.Image', displayName: 'Image' },
            ImageSource: { localizationId: 'DevExpress.XtraReports.UI.XRPictureBox.ImageSource', displayName: 'Image Source' },
            ImageUrl: { localizationId: 'DevExpress.XtraReports.UI.XRPictureBox.ImageUrl', displayName: 'Image Url' },
            BinaryData: { localizationId: 'DevExpress.XtraReports.UI.XRBarCode.BinaryData', displayName: 'Binary Data' },
            TargetValue: { localizationId: 'DevExpress.XtraReports.UI.XRGauge.TargetValue', displayName: 'Target Value' },
            ActualValue: { localizationId: 'DevExpress.XtraReports.UI.XRGauge.ActualValue', displayName: 'Actual Value' },
            PrintOnPage: { localizationId: 'DevExpress.XtraReports.UI.XRControlEvents.OnPrintOnPage', displayName: 'PrintOnPage' },
            BeforePrint: { localizationId: 'DevExpress.XtraReports.UI.XRControlEvents.OnBeforePrint', displayName: 'BeforePrint' },
            Minimum: { localizationId: 'DevExpress.XtraReports.UI.XRGauge.Minimum', displayName: 'Minimum' },
            Maximum: { localizationId: 'DevExpress.XtraReports.UI.XRGauge.Maximum', displayName: 'Maximum' },
            FillColor: { localizationId: 'DevExpress.XtraReports.UI.XRShape.FillColor', displayName: 'Fill Color' }
        };
        _this._expressionsInfo = {};
        _this._expressionsSerializationInfoCache = {};
        return _this;
    }
    ExpressionWrapper.prototype.dispose = function () {
        this._expressionsInfo = null;
        this._expressionsSerializationInfoCache = null;
        this._fieldListProvider = null;
    };
    ExpressionWrapper.createExpression = function (propertyName, eventName, expression) {
        return {
            getInfo: function () { return expressionBinding_1.expressionBindingSerializationsInfo; },
            eventName: ko.observable(eventName),
            expression: ko.observable(expression),
            propertyName: ko.observable(propertyName)
        };
    };
    ExpressionWrapper.prototype._createPropertyByName = function (propertyName, prefix) {
        var result = {
            propertyName: prefix ? [prefix, propertyName].join('.') : propertyName,
            modelName: propertyName,
            displayName: propertyName,
            editor: editorTemplates_1.designerEditorTemplates.getEditor('reportexpressionComplex')
        };
        if (this._displayNameDictionary[propertyName]) {
            result.localizationId = this._displayNameDictionary[propertyName].localizationId;
            result.displayName = this._displayNameDictionary[propertyName].displayName;
        }
        if (this._valuesDictionary[propertyName]) {
            result.valuesArray = this._valuesDictionary[propertyName];
        }
        return result;
    };
    ExpressionWrapper.prototype._createInfo = function (rootInfo, prefix, path) {
        var _this = this;
        var info = rootInfo;
        for (var i = 0; i < path.length; i++) {
            if (typeof (path[i]) !== 'string' && Array.isArray(path[i])) {
                info.push.apply(info, path[i].map(function (innerProperty) { return _this._createPropertyByName(innerProperty, path[i - 1]); }));
            }
            else {
                var currentInfo = info.filter(function (x) { return x.propertyName === path[i]; })[0];
                if (!currentInfo) {
                    currentInfo = this._createPropertyByName(path[i]);
                    if (i !== path.length - 1) {
                        currentInfo.editor = analytics_widgets_1.editorTemplates.getEditor('objecteditor');
                        currentInfo.info = [];
                    }
                    info.push(currentInfo);
                }
                info = currentInfo.info;
            }
        }
        return rootInfo;
    };
    ExpressionWrapper.prototype._addControlInfo = function (controlType) {
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        if (!this._expressionsSerializationInfoCache[controlType]) {
            this._expressionsSerializationInfoCache[controlType] = [];
        }
        this._expressionsSerializationInfoCache[controlType] = this._createInfo(this._expressionsSerializationInfoCache[controlType], '', params.filter(function (x) { return !!x; }));
    };
    ExpressionWrapper.prototype._createSerializationInfo = function (controlType, useEvents) {
        var _this = this;
        if (useEvents === void 0) { useEvents = false; }
        var propertyNames = Object.keys(this._expressionsInfo[controlType]);
        propertyNames.forEach(function (propertyName) {
            var propertyDescriptor = _this._expressionsInfo[controlType][propertyName];
            if (!useEvents) {
                if (propertyDescriptor.events.indexOf('BeforePrint') !== -1)
                    _this._addControlInfo(controlType, propertyDescriptor.group, propertyName, propertyDescriptor.objectProperties);
            }
            else {
                propertyDescriptor.events.forEach(function (eventName) {
                    _this._addControlInfo(controlType, eventName, propertyDescriptor.group, propertyName, propertyDescriptor.objectProperties);
                });
            }
        });
    };
    ExpressionWrapper.prototype._getPropertyDescriptors = function (controlType, expressionName) {
        var propertyNames = Object.keys(this._expressionsInfo[controlType]);
        if (!propertyNames.some(function (propertyName) { return propertyName === expressionName; }))
            return null;
        return this._expressionsInfo[controlType][expressionName];
    };
    ExpressionWrapper.prototype._getExpressionFromArray = function (propertyName, eventName, expressions) {
        return expressions().filter(function (x) {
            return x.propertyName() === propertyName &&
                x.eventName() === eventName;
        })[0];
    };
    ExpressionWrapper.prototype._createExpressionMap = function (propertyName, eventName, expressions, subscriptions, path, summaryRunning) {
        var _this = this;
        var functions = !!summaryRunning && !!summaryRunning(propertyName)
            ? ko.computed(function () { return summaryRunning(propertyName)() ? _this._summaryFunctions() : customFunctions_1.reportFunctionDisplay; })
            : customFunctions_1.reportFunctionDisplay;
        var expressionOptions = new _wrappedExpressionOptions_1.WrappedExpressionOptions({
            path: path || ko.observable(''),
            functions: functions
        }, {
            addExpression: function (newVal) {
                expressions.push(ExpressionWrapper.createExpression(propertyName, eventName, newVal));
            },
            removeExpression: function (expression) {
                expressions.remove(expression);
            }
        }, this._fieldListProvider, eventName);
        expressionOptions._disposables.push(functions);
        expressionOptions.expression(this._getExpressionFromArray(propertyName, eventName, expressions));
        return expressionOptions;
    };
    ExpressionWrapper.prototype._summaryFunctions = function () {
        var createNewItemDelegate = function (funcName, paramCount) {
            return [{
                    paramCount: paramCount,
                    text: 'sum' + funcName + '()',
                    descriptionStringId: 'ReportStringId.ExpressionEditor_Description_Function_Summary' + funcName
                }];
        };
        var summaryCategory = {
            display: 'Summary',
            localizationId: 'ReportStringId.ExpressionEditor_ItemInfo_FunctionSummary',
            category: 'Summary',
            items: {}
        };
        ['Avg', 'Count', 'Sum', 'RunningSum', 'Percentage', 'Max', 'Min', 'Median', 'Var', 'VarP', 'StdDev', 'StdDevP', 'DAvg', 'DCount', 'DSum', 'DVar', 'DVarP', 'DStdDev', 'DStdDevP', 'RecordNumber',
            { name: 'WAvg', paramCount: 2 }
        ].forEach(function (func) {
            if (typeof func === 'string') {
                summaryCategory.items[func] = createNewItemDelegate(func, 1);
            }
            else {
                summaryCategory.items[func.name] = createNewItemDelegate(func.name, func.paramCount);
            }
        });
        return customFunctions_1.reportFunctionDisplay
            .filter(function (cat) { return cat.category != 'Aggregate'; })
            .concat([summaryCategory]);
    };
    ExpressionWrapper.prototype._mapExpressionsToObjectByEventName = function (object, eventName, expressions, subscriptions, path, summaryRunning) {
        var _this = this;
        var properties = object.getInfo();
        properties.forEach(function (info) {
            if (!ko.isObservable(object[info.propertyName])) {
                _this._mapExpressionsToObjectByEventName(object[info.propertyName], eventName, expressions, subscriptions, path, summaryRunning);
            }
            else {
                object[info.propertyName] = _this._createExpressionMap(info.propertyName, eventName, expressions, subscriptions, path, summaryRunning);
                object[info.propertyName].serializationInfo = info;
                subscriptions.push(object[info.propertyName]);
            }
        });
    };
    ExpressionWrapper.prototype._allExpressions = function (object, condition) {
        var _this = this;
        var positive = true;
        var properties = object.getInfo();
        properties.forEach(function (info) {
            if (!positive)
                return;
            if (object[info.propertyName] instanceof Object && !(object[info.propertyName] instanceof _wrappedExpressionOptions_1.WrappedExpressionOptions)) {
                positive = _this._allExpressions(object[info.propertyName], condition);
            }
            else {
                positive = condition(object[info.propertyName]);
            }
        });
        return positive;
    };
    ExpressionWrapper.prototype._isValidExpressions = function (object) {
        return this._allExpressions(object, function (expr) { return expr.isValid(); });
    };
    ExpressionWrapper.prototype._isWarningExpressions = function (object) {
        return !this._allExpressions(object, function (expr) { return !expr.warningMessage(); });
    };
    ExpressionWrapper.prototype._getExpressionByPropertyName = function (object, propertyNameToSearch) {
        if (!object)
            return;
        if (object[propertyNameToSearch]) {
            return object[propertyNameToSearch];
        }
        else {
            var properties = object.getInfo();
            var innerObjectPropertyNames = properties.filter(function (info) { return !(object[info.propertyName] instanceof _wrappedExpressionOptions_1.WrappedExpressionOptions); });
            for (var i = 0; i < innerObjectPropertyNames.length; i++) {
                var result = this._getExpressionByPropertyName(object[innerObjectPropertyNames[i].propertyName], propertyNameToSearch);
                if (result)
                    return result;
            }
        }
    };
    ExpressionWrapper.prototype._mapExpressionsToObject = function (controlType, expressions, path, summaryRunning) {
        var _this = this;
        if (this._bindingMode === _dataBindingMode_1.DataBindingMode.Bindings) {
            return null;
        }
        var useEvents = this._bindingMode === _dataBindingMode_1.DataBindingMode.ExpressionsAdvanced;
        var subscriptions = [];
        if (!this._expressionsSerializationInfoCache[controlType]) {
            this._createSerializationInfo(controlType, useEvents);
        }
        var stateObj = {
            getInfo: function () { return _this._expressionsSerializationInfoCache[controlType]; },
            getExpression: function (propertyName, eventName) {
                if (useEvents) {
                    return _this._getExpressionByPropertyName(stateObj[eventName], propertyName);
                }
                else {
                    return _this._getExpressionByPropertyName(stateObj, propertyName);
                }
            },
            getExpressionsTreeItems: function (expressionName) {
                var propertyDescriptor = _this._getPropertyDescriptors(controlType, expressionName);
                if (!propertyDescriptor)
                    return null;
                var expressionTreeItems = [];
                var isComplexProperty = !!(propertyDescriptor.objectProperties || []).length;
                var generateExpressionItem = function (currentExpressionName, parentExpressionName) {
                    var expressionTreeItem = {
                        innerItems: null,
                        expressionName: currentExpressionName,
                    };
                    var expressionObjPropertyName = parentExpressionName ? [parentExpressionName, currentExpressionName].join('.') : currentExpressionName;
                    if (useEvents) {
                        propertyDescriptor.events.forEach(function (eventName) {
                            var innerExpressionObj = stateObj.getExpression(expressionObjPropertyName, eventName);
                            if (!innerExpressionObj)
                                return;
                            var serializationInfo = innerExpressionObj['serializationInfo'];
                            expressionTreeItem.displayName = serializationInfo && serializationInfo.displayName;
                            expressionTreeItem.localizationId = serializationInfo && serializationInfo.localizationId;
                            expressionTreeItem.innerItems = expressionTreeItem.innerItems || [];
                            var eventInfo = _this._displayNameDictionary[eventName];
                            expressionTreeItem.innerItems.push({
                                eventName: eventName,
                                displayName: eventInfo && eventInfo.displayName,
                                localizationId: eventInfo && eventInfo.localizationId,
                                expressionName: currentExpressionName,
                                expressionObj: innerExpressionObj
                            });
                        });
                    }
                    else {
                        var innerExpressionObj = stateObj.getExpression(expressionObjPropertyName);
                        if (!innerExpressionObj)
                            return;
                        expressionTreeItem.expressionObj = innerExpressionObj;
                        var serializationInfo = innerExpressionObj['serializationInfo'];
                        expressionTreeItem.displayName = serializationInfo.displayName;
                        expressionTreeItem.localizationId = serializationInfo.localizationId;
                    }
                    expressionTreeItems.push(expressionTreeItem);
                };
                if (isComplexProperty) {
                    (propertyDescriptor.objectProperties || []).forEach(function (innerExpresionName) { generateExpressionItem(innerExpresionName, expressionName); });
                }
                else {
                    generateExpressionItem(expressionName);
                }
                return expressionTreeItems;
            },
            dispose: function () {
                subscriptions.forEach(function (x) { return x.dispose(); });
                subscriptions.splice(0);
            },
            validateExpression: function () {
                return _this._isValidExpressions(stateObj);
            },
            hasWarning: function () {
                return _this._isWarningExpressions(stateObj);
            }
        };
        new analytics_utils_1.ModelSerializer().deserialize(stateObj, {});
        if (useEvents) {
            var properties = stateObj.getInfo();
            properties.forEach(function (info) {
                _this._mapExpressionsToObjectByEventName(stateObj[info.propertyName], info.propertyName, expressions, subscriptions, path, summaryRunning);
            });
        }
        else {
            this._mapExpressionsToObjectByEventName(stateObj, 'BeforePrint', expressions, subscriptions, path, summaryRunning);
        }
        subscriptions.push(expressions.subscribe(function (args) {
            args.forEach(function (arg) {
                if (arg.status === 'deleted') {
                    stateObj.getExpression(arg.value.propertyName(), arg.value.eventName()).expression(null);
                }
                else if (arg.status === 'added') {
                    stateObj.getExpression(arg.value.propertyName(), arg.value.eventName()).expression(arg.value);
                }
            });
        }, null, 'arrayChange'));
        return { stateObj: stateObj, subscriptions: subscriptions };
    };
    ExpressionWrapper.prototype.setPropertyDescription = function (controlType, propertyName, events, objectProperties, group) {
        if (!this._expressionsInfo[controlType])
            this._expressionsInfo[controlType] = {};
        this._expressionsInfo[controlType][propertyName] = {
            events: events,
            group: group,
            objectProperties: objectProperties
        };
    };
    ExpressionWrapper.prototype.hidePropertyDescriptions = function (controlType) {
        var _this = this;
        var propertyNames = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            propertyNames[_i - 1] = arguments[_i];
        }
        propertyNames.forEach(function (propertyName) {
            if (propertyName.indexOf('.') !== -1) {
                var propertyPath = propertyName.split('.');
                if (propertyPath.length > 2)
                    return;
                var expressionInfo = _this._expressionsInfo[controlType][propertyPath[0]];
                if (!expressionInfo || !expressionInfo.objectProperties)
                    return;
                var index = expressionInfo.objectProperties.indexOf(propertyPath[1]);
                if (index === -1)
                    return;
                expressionInfo.objectProperties.splice(index, 1);
                if (expressionInfo.objectProperties.length === 0)
                    delete _this._expressionsInfo[controlType][propertyPath[0]];
                return;
            }
            delete _this._expressionsInfo[controlType][propertyName];
        });
    };
    ExpressionWrapper.prototype.createExpressionsObject = function (controlType, expressions, path, summaryRunning) {
        var result = this._mapExpressionsToObject(controlType, expressions, path, summaryRunning);
        if (!result)
            return;
        return result.stateObj;
    };
    ExpressionWrapper.prototype.setLocalizationId = function (propertyName, localizationId, displayName) {
        this._displayNameDictionary[propertyName] = {
            localizationId: localizationId,
            displayName: displayName || propertyName
        };
    };
    ExpressionWrapper.prototype.setValues = function (propertyName, values) {
        this._valuesDictionary[propertyName] = values;
    };
    return ExpressionWrapper;
}(analytics_utils_1.Disposable));
exports.ExpressionWrapper = ExpressionWrapper;


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var ko = __webpack_require__(1);
var XRPageBreakSurface = (function (_super) {
    __extends(XRPageBreakSurface, _super);
    function XRPageBreakSurface(control, context) {
        var _this = _super.call(this, control, context, XRPageBreakSurface._unitProperties) || this;
        _this._disposables.push(_this._width);
        _this.template = 'dxrd-pagebreak';
        _this.contenttemplate = 'dxrd-line-content';
        _this.selectiontemplate = 'dxrd-pagebreak-selection';
        _this._disposables.push(_this.linePosition = ko.pureComputed(function () {
            var rect = _this.rect();
            return {
                'x1': 0,
                'x2': rect.width,
                'y1': rect.height / 2,
                'y2': rect.height / 2
            };
        }));
        _this.contentCss = ko.observable({
            'stroke': 'black',
            'strokeWidth': 1,
            'strokeDasharray': '4px, 4px'
        });
        _this._disposables.push(_this.lineHeight = ko.pureComputed(function () {
            return _this['position'].lineHeight() / _this._context.zoom();
        }));
        _this.css = ko.observable({});
        _this._disposables.push(_this.isIntersect = ko.pureComputed(function () { return false; }));
        return _this;
    }
    XRPageBreakSurface.prototype.preInitProperties = function (control, context) {
        this._width = ko.pureComputed({
            read: function () {
                return context.pageWidth() - context.margins.right() - context.margins.left();
            },
            write: function () { }
        });
    };
    Object.defineProperty(XRPageBreakSurface.prototype, "isIntersectionDeny", {
        get: function () { return true; },
        enumerable: true,
        configurable: true
    });
    XRPageBreakSurface._unitProperties = {
        _x: function (o) {
            return ko.observable(0);
        },
        _y: function (o) {
            return o.location.y;
        },
        _height: function (o) {
            return ko.observable(2);
        }
    };
    return XRPageBreakSurface;
}(xrControl_1.XRControlSurfaceBase));
exports.XRPageBreakSurface = XRPageBreakSurface;


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var XRPageInfoSurface = (function (_super) {
    __extends(XRPageInfoSurface, _super);
    function XRPageInfoSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this.displayText = function () {
            var format = control['textFormatString'] && control.textFormatString();
            if (format)
                return format;
            var value = control['pageInfo'](), info = exports.pageInfoValuesMap.filter(function (item) { return item.value === value; })[0];
            if (info)
                return info.displayValue;
            return value;
        };
        return _this;
    }
    return XRPageInfoSurface;
}(xrControl_1.XRControlSurface));
exports.XRPageInfoSurface = XRPageInfoSurface;
var XRPageInfoViewModel = (function (_super) {
    __extends(XRPageInfoViewModel, _super);
    function XRPageInfoViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, parent, serializer) || this;
        var format = _this['_model']['@Format'];
        if (format) {
            if (!_this.textFormatString()) {
                _this.textFormatString(format);
            }
            delete _this['_model']['@Format'];
        }
        return _this;
    }
    return XRPageInfoViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRPageInfoViewModel = XRPageInfoViewModel;
exports.pageInfoValuesMap = [
    { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraPrinting.PageInfo.None' },
    { value: 'Number', displayValue: 'Page Number', localizationId: 'DevExpress.XtraPrinting.PageInfo.Number' },
    { value: 'NumberOfTotal', displayValue: "'Current of Total' Page Numbers", localizationId: 'DevExpress.XtraPrinting.PageInfo.NumberOfTotal' },
    { value: 'RomLowNumber', displayValue: 'Page Number (Roman, Lowercase)', localizationId: 'DevExpress.XtraPrinting.PageInfo.RomLowNumber' },
    { value: 'RomHiNumber', displayValue: 'Page Number (Roman, Uppercase)', localizationId: 'DevExpress.XtraPrinting.PageInfo.RomHiNumber' },
    { value: 'DateTime', displayValue: 'Current Date and Time', localizationId: 'DevExpress.XtraPrinting.PageInfo.DateTime' },
    { value: 'UserName', displayValue: 'User Name', localizationId: 'DevExpress.XtraPrinting.PageInfo.UserName' },
    { value: 'Total', displayValue: 'Page Count', localizationId: 'DevExpress.XtraPrinting.PageInfo.Total' }
];


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var xrPdfContent_1 = __webpack_require__(137);
var ko = __webpack_require__(1);
var _reportRenderingService_1 = __webpack_require__(95);
var analytics_internal_1 = __webpack_require__(2);
var _xrTodoControl_1 = __webpack_require__(138);
var XRPdfContentViewModel = (function (_super) {
    __extends(XRPdfContentViewModel, _super);
    function XRPdfContentViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, parent, serializer) || this;
        _this.imageSource = ko.observable('');
        if (!!_this.sourceUrl())
            _this.source(null);
        var parentSize = function () { return (_this.parentModel() ? _this.parentModel().size.width() : 0); };
        _this._disposables.push(_this.sourceUrl.subscribe(function (newVal) {
            if (!!newVal)
                _this.source(null);
            _this._getPdfContentData(!!newVal);
        }), _this.source.subscribe(function (newVal) {
            if (!!newVal)
                _this.sourceUrl('');
            _this._getPdfContentData(!!newVal);
        }), ko.computed(function () {
            if (_this.generateOwnPages()) {
                _this.size.width(parentSize());
                _this.location.x(0);
            }
        }), _this.location.x.subscribe(function (val) {
            if (_this.generateOwnPages())
                _this.location.x(0);
        }), _this.size.width.subscribe(function (val) {
            if (_this.generateOwnPages())
                _this.size.width(parentSize());
        }), _this.generateOwnPages.subscribe(function (val) {
            _this._getPdfContentData(true);
        }), _this.pageRange.subscribe(function (val) {
            _this._getPdfContentData(false);
        }));
        _this.generateOwnPages.valueHasMutated();
        _this._disposables.push(_this.textContent = ko.pureComputed(function () {
            var sourceUrlExpression = _this.getExpressionBinding('SourceUrl');
            var sourceExpression = _this.getExpressionBinding('Source');
            var prefix = analytics_internal_1.getLocalization('Source', 'DevExpress.XtraReports.UI.XRPdfContent.Source');
            var suffix = analytics_internal_1.getLocalization('(none)', 'DxDesignerStringId.None');
            if ((_this.sourceUrl())) {
                prefix = analytics_internal_1.getLocalization('Source Url', 'DevExpress.XtraReports.UI.XRPdfContent.SourceUrl');
                suffix = _this.sourceUrl();
            }
            else if (sourceUrlExpression != null) {
                prefix = analytics_internal_1.getLocalization('Source Url', 'DevExpress.XtraReports.UI.XRPdfContent.SourceUrl');
                suffix = sourceUrlExpression;
            }
            else if (_this.source()) {
                suffix = analytics_internal_1.getLocalization('PDF Content', 'ReportStringId.XRPdfContent_Content');
            }
            else if (sourceExpression != null) {
                suffix = sourceExpression;
            }
            return prefix + ': ' + suffix;
        }));
        return _this;
    }
    XRPdfContentViewModel.prototype.canFit = function () {
        return this.size.width() / this.size.height() != this.imageWidth / this.imageHeight;
    };
    XRPdfContentViewModel.prototype.fitToContent = function () {
        if (!this.imageSource())
            return;
        var width = this.size.width();
        var height = this.size.height();
        var coif = this.imageWidth / this.imageHeight;
        if (coif === 0 || !this.canFit())
            return;
        if (width / height > this.imageWidth / this.imageHeight) {
            this.size.width(height * coif);
        }
        else {
            this.size.height(width / coif);
        }
    };
    XRPdfContentViewModel.prototype._getPdfContentData = function (checkSource) {
        var _this = this;
        var source = this.sourceUrl() || this.source();
        if (this.generateOwnPages() || (checkSource && (!source && !this._sourceItem || !!this._sourceItem && this._sourceItem === source)))
            return;
        this._sourceItem = source;
        _reportRenderingService_1.ReportRenderingService.getPdfContentData(this).done(function (result) {
            _this.pageCount(result.PageCount);
            _this.imageSource('data:image/png;base64,' + result.Img);
            _this.imageWidth = result.Width;
            _this.imageHeight = result.Height;
        }).fail(function (jqXHR) {
            analytics_internal_1.NotifyAboutWarning('It is impossible to get Pdf Content Preview');
        });
    };
    XRPdfContentViewModel.prototype._getExpressionNameByPropertyName = function (propertyName) {
        var modelName = _super.prototype._getExpressionNameByPropertyName.call(this, propertyName);
        if (!!modelName && xrPdfContent_1.pdfSource.modelName.indexOf(modelName) !== -1)
            return 'Source';
        return modelName;
    };
    return XRPdfContentViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRPdfContentViewModel = XRPdfContentViewModel;
var XRPdfContentSurface = (function (_super) {
    __extends(XRPdfContentSurface, _super);
    function XRPdfContentSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this.selectiontemplate = 'dxrd-pdfcontent-selection';
        _this.contenttemplate = 'dxrd-pdfcontent-control-content';
        _this.template = 'dxrd-control';
        _this.displayText = function () { return _this.getControlModel().name(); };
        _this.generateOwnPages = control.generateOwnPages;
        _this._handles = ko.observable(_this._getHandles(_this.generateOwnPages()));
        _this._disposables.push(_this.contentCss = ko.computed(function () {
            var imageSource = control.imageSource();
            if (_this.generateOwnPages() || !imageSource)
                return { background: 'unset' };
            return analytics_internal_1.extend({}, { background: ' url(' + imageSource + ') 50% 50% / contain no-repeat content-box transparent' });
        }));
        return _this;
    }
    XRPdfContentSurface.prototype._getHandles = function (generateOwnPages) {
        return generateOwnPages ? 's,n' : 'all';
    };
    XRPdfContentSurface.prototype.getResizableOptions = function (resizeHandler) {
        var _this = this;
        this._disposables.push(this.generateOwnPages.subscribe(function (newVal) {
            _this._handles(_this._getHandles(newVal));
        }));
        return analytics_internal_1.extend(true, {}, resizeHandler, {
            handles: this._handles
        });
    };
    return XRPdfContentSurface;
}(_xrTodoControl_1.TodoControlSurface));
exports.XRPdfContentSurface = XRPdfContentSurface;


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var xrTableRow_1 = __webpack_require__(48);
var _tableCalculationProvider_1 = __webpack_require__(302);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var XRTableControlViewModel = (function (_super) {
    __extends(XRTableControlViewModel, _super);
    function XRTableControlViewModel(control, parent, serializer) {
        var _this = _super.call(this, control, parent, serializer) || this;
        _this.rows = ko.observableArray();
        _this._disposables.push(_this.rowsTotalWeight = ko.pureComputed(function () {
            var result = 0;
            _this.rows().forEach(function (row) {
                result += row.weight();
            });
            return result;
        }));
        _this._disposables.push(_this.pixelHeightWeight = ko.pureComputed(function () {
            return _this.size.height() !== 0 ? _this.rowsTotalWeight() / _this.size.height() : 0;
        }));
        var deserializedRows = analytics_utils_1.deserializeArray(control.Rows, function (item) { return new xrTableRow_1.XRTableRowViewModel(item, _this, serializer); });
        _this.rows(deserializedRows());
        _this.tableCalculationProvider = new _tableCalculationProvider_1.TableCalculationProvider(_this);
        return _this;
    }
    XRTableControlViewModel.prototype._getAdjacentCells = function (condition) {
        var adjacentCells = [];
        this.rows().forEach(function (row) {
            row.cells().filter(function (cell) { return condition(cell); }).forEach(function (cell) {
                adjacentCells.push(cell);
            });
        });
        return adjacentCells;
    };
    XRTableControlViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.rows);
        this.resetObservableArray(this.rows);
    };
    XRTableControlViewModel.prototype.updateRowLocation = function (row, deltaHeight) {
        var oldHeight = row.height();
        var rowIndex = this.rows().indexOf(row);
        if (rowIndex > 0) {
            var topRowHeight = this.rows()[rowIndex - 1].height;
            var topHeight = topRowHeight() - deltaHeight;
            topRowHeight(topHeight > 0 ? topHeight : 0);
        }
        else {
            var deltaWeight = (row.weight() / oldHeight) * deltaHeight;
            row.weight(row.weight() + deltaWeight);
            this.location.y(this.location.y() - deltaHeight);
            this.size.height(this.size.height() + deltaHeight);
        }
    };
    XRTableControlViewModel.prototype.addChild = function (control, position, onComponentAdded) {
        if (control instanceof xrTableRow_1.XRTableRowViewModel) {
            if (this.rows().indexOf(control) === -1) {
                control.parentModel(this);
                if (position != null) {
                    this.rows.splice(position, 0, control);
                }
                else {
                    this.rows.push(control);
                }
                if ($.isFunction(onComponentAdded))
                    onComponentAdded({ parent: this, model: control });
            }
        }
        else {
            throw new Error('Trying to add non a row to the table.');
        }
    };
    XRTableControlViewModel.prototype.insertRow = function (selectedRow, isRowAbove, onComponentAdded) {
        var selectedRowHeight = selectedRow.height(), newRow = new xrTableRow_1.XRTableRowViewModel({
            '@ControlType': 'XRTableRow',
            '@Weight': selectedRow.weight(),
            '@HeightF': selectedRowHeight,
        }, this), indexSelectedRow = this.rows.indexOf(selectedRow);
        selectedRow.cells().forEach(function (cell) {
            newRow.createChild({ '@ControlType': 'XRTableCell', '@Weight': cell.weight(), '@Padding': '2,2,0,0,100', '@Multiline': 'true' });
        });
        this.addChild(newRow, indexSelectedRow + (isRowAbove ? 0 : 1), onComponentAdded);
        this.size.height(this.size.height() + selectedRowHeight);
    };
    XRTableControlViewModel.prototype.removeChild = function (selectedRow) {
        if (this.rows().length > 0 && this.rows().indexOf(selectedRow) !== -1) {
            var index = this.rows().indexOf(selectedRow);
            this.size.height(this.size.height() - selectedRow.height());
            this.rows.splice(index, 1);
        }
        if (this.rows().length === 0) {
            this.parentModel().removeChild(this);
        }
    };
    XRTableControlViewModel.prototype.insertColumn = function (selectedCell, isRight, onComponentAdded) {
        var selectedCellX = selectedCell.surface.rect().left, selectedCellRight = selectedCell.surface.rect().left + selectedCell.surface.rect().width, adjacentCells = this._getAdjacentCells(function (cell) { return isRight ? ((cell.surface.rect().left + cell.surface.rect().width) === selectedCellRight) : (cell.surface.rect().left === selectedCellX); });
        adjacentCells.forEach(function (cell) {
            cell.parentModel().insertCellCopy(cell, isRight, onComponentAdded);
        });
    };
    XRTableControlViewModel.prototype.addColumnToCalculation = function (diff, last) {
        if (last === void 0) { last = false; }
        var rows = this.rows();
        for (var i = 0; i < rows.length; i++) {
            rows[i].addCellToCalculation(last ? rows[i].cells().length - 1 : 0, diff);
        }
    };
    return XRTableControlViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRTableControlViewModel = XRTableControlViewModel;
var XRTableSurface = (function (_super) {
    __extends(XRTableSurface, _super);
    function XRTableSurface(control, context) {
        var _this = _super.call(this, control, context, XRTableSurface._unitProperties) || this;
        _this._isUpdating = false;
        _this.template = 'dxrd-table';
        _this.selectiontemplate = 'dxrd-table-selection';
        _this._disposables.push(_this.css = ko.pureComputed(function () {
            return {};
        }));
        _this._disposables.push(_this.contentCss = ko.pureComputed(function () {
            return {};
        }));
        return _this;
    }
    XRTableSurface.prototype._getChildrenHolderName = function () { return 'rows'; };
    XRTableSurface.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.rows);
        this.resetObservableArray(this.rows);
    };
    XRTableSurface.prototype._isCellInColumn = function (cell, locationStart, locationEnd) {
        return Math.abs(cell.rect().left - locationStart) < 0.01 && Math.abs(cell.rect().left + cell.rect().width - locationEnd) < 0.01;
    };
    XRTableSurface.prototype.selectColumn = function (selection, cellSurface) {
        var _this = this;
        selection.initialize(this);
        var locationStart = cellSurface.rect().left, locationEnd = locationStart + cellSurface.rect().width;
        selection.selecting({ control: cellSurface, cancel: false });
        this.rows().forEach(function (rowSurface) {
            rowSurface.cells().forEach(function (cellSurface) {
                if (_this._isCellInColumn(cellSurface, locationStart, locationEnd)) {
                    selection.selecting({ control: cellSurface, cancel: false });
                    return true;
                }
            });
        });
    };
    XRTableSurface.prototype.isThereIntersectionWithChildCollection = function () {
        return false;
    };
    XRTableSurface._unitProperties = {
        _x: function (o) {
            return o.location.x;
        },
        _y: function (o) {
            return o.location.y;
        },
        _width: function (o) {
            return o.size.width;
        },
        _height: function (o) {
            return o.size.height;
        }
    };
    return XRTableSurface;
}(xrControl_1.XRControlSurfaceBase));
exports.XRTableSurface = XRTableSurface;


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrTextControl_1 = __webpack_require__(135);
var TableActionDirection;
(function (TableActionDirection) {
    TableActionDirection[TableActionDirection["vertical"] = 0] = "vertical";
    TableActionDirection[TableActionDirection["horizontal"] = 1] = "horizontal";
})(TableActionDirection = exports.TableActionDirection || (exports.TableActionDirection = {}));
var TableComponentSurface = (function (_super) {
    __extends(TableComponentSurface, _super);
    function TableComponentSurface() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableComponentSurface.prototype._getNeededProperties = function (rect) {
        if (this.direction === TableActionDirection.vertical) {
            return {
                positionProperty: rect.top === undefined ? this.rect().top : rect.top,
                secondaryPositionProperty: rect.bottom,
                sizeProperty: rect.height
            };
        }
        else {
            return {
                positionProperty: rect.left === undefined ? this.rect().left : rect.left,
                secondaryPositionProperty: rect.right,
                sizeProperty: rect.width
            };
        }
    };
    TableComponentSurface.prototype._generateRect = function (rect, result) {
        if (this.direction === TableActionDirection.vertical) {
            rect.top = result.positionProperty === undefined ? rect.top : result.positionProperty;
            rect.bottom = result.secondaryPositionProperty === undefined ? rect.bottom : result.secondaryPositionProperty;
            rect.height = result.sizeProperty === undefined ? rect.height : result.sizeProperty;
        }
        else {
            rect.left = result.positionProperty === undefined ? rect.left : result.positionProperty;
            rect.right = result.secondaryPositionProperty === undefined ? rect.right : result.secondaryPositionProperty;
            rect.width = result.sizeProperty === undefined ? rect.width : result.sizeProperty;
            delete rect.height;
        }
        return rect;
    };
    TableComponentSurface.prototype.beforeRectUpdated = function (rect) {
        var incomingRect = this._getNeededProperties(rect);
        var currentRect = this._getNeededProperties(this.rect());
        var model = this.getControlModel();
        var parentModel = this.parent.getControlModel();
        if (incomingRect.secondaryPositionProperty !== undefined) {
            incomingRect.positionProperty = currentRect.positionProperty;
            incomingRect.sizeProperty = incomingRect.secondaryPositionProperty < incomingRect.positionProperty ? 0
                : incomingRect.secondaryPositionProperty - incomingRect.positionProperty;
        }
        if (incomingRect.positionProperty > currentRect.secondaryPositionProperty) {
            incomingRect.positionProperty = currentRect.secondaryPositionProperty;
            return this._generateRect(rect, incomingRect);
        }
        if (incomingRect.sizeProperty === undefined) {
            incomingRect.sizeProperty = currentRect.sizeProperty + currentRect.positionProperty - incomingRect.positionProperty;
        }
        var childCollectionName = this.parent._getChildrenHolderName();
        var positionRedused = parseInt(currentRect.positionProperty) > incomingRect.positionProperty;
        var sizeIncreased = parseInt(currentRect.sizeProperty) < incomingRect.sizeProperty && !positionRedused;
        var position = parentModel[childCollectionName]().indexOf(model);
        if (position !== 0 && positionRedused) {
            var prevElementRect = this._getNeededProperties(parentModel[childCollectionName]()[position - 1].surface.rect());
            if (prevElementRect.positionProperty > incomingRect.positionProperty) {
                incomingRect.sizeProperty -= (prevElementRect.positionProperty - incomingRect.positionProperty);
                incomingRect.positionProperty = prevElementRect.positionProperty;
            }
        }
        if (sizeIncreased && position !== parentModel[childCollectionName]().length - 1) {
            var nextElementRect = this._getNeededProperties(parentModel[childCollectionName]()[position + 1].surface.rect());
            if (nextElementRect.secondaryPositionProperty < incomingRect.positionProperty + incomingRect.sizeProperty) {
                incomingRect.sizeProperty = nextElementRect.secondaryPositionProperty - incomingRect.positionProperty;
            }
        }
        return this._generateRect(rect, incomingRect);
    };
    return TableComponentSurface;
}(xrTextControl_1.XRTextControlSurfaceBase));
exports.TableComponentSurface = TableComponentSurface;


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var xrReportelement_1 = __webpack_require__(27);
var _localizationUtils_1 = __webpack_require__(63);
var xrTableOfContentsLevel_1 = __webpack_require__(198);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var XRTableOfContentsViewModel = (function (_super) {
    __extends(XRTableOfContentsViewModel, _super);
    function XRTableOfContentsViewModel(control, parent, serializer) {
        var _this = _super.call(this, control, parent, serializer) || this;
        _this.borderDefault = ko.pureComputed(function () { return 'none'; });
        _this._disposables.push(_this.levelTitle = new xrTableOfContentsLevel_1.TableOfContentsLevel(control['LevelTitle'], _this, serializer, true));
        _this.levelTitleText = _this.levelTitle.text;
        _this._disposables.push(_this.levelDefault = new xrTableOfContentsLevel_1.TableOfContentsLevel(control['LevelDefault'], _this, serializer));
        _this.levels = analytics_utils_1.deserializeArray(control['Levels'], function (item) { return new xrTableOfContentsLevel_1.TableOfContentsLevel(item, _this, serializer); });
        _this._disposables.push(_this.allLevels = ko.computed(function () {
            var array = [_this.levelTitle];
            Array.prototype.push.apply(array, _this.levels());
            array.push(_this.levelDefault);
            return array;
        }));
        _this._disposables.push(_this.size.height = ko.computed({
            read: function () { return _this.levelDefault.top() + _this.levelDefault.height(); },
            write: $.noop
        }));
        _this._disposables.push(_this.size.width = ko.computed({
            read: function () { return (_this.parentModel() ? _this.parentModel().size.width() : 0); },
            write: $.noop
        }));
        _this._disposables.push(_this.location.x = ko.computed({
            read: function () { return 0; },
            write: function () { }
        }));
        _this._disposables.push(_this.borderDefault);
        return _this;
    }
    XRTableOfContentsViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.levels);
        this.resetObservableArray(this.levels);
    };
    XRTableOfContentsViewModel.prototype.createLocalizationProvider = function () {
        return new _localizationUtils_1.TableOfContentLocalizationProvider(this);
    };
    Object.defineProperty(XRTableOfContentsViewModel.prototype, "textEditableProperty", {
        get: function () { return this.levelTitleText; },
        enumerable: true,
        configurable: true
    });
    XRTableOfContentsViewModel.unitProperties = [].concat(['levelTitle', 'levelDefault'], xrReportelement_1.XRReportElementViewModel.unitProperties);
    return XRTableOfContentsViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRTableOfContentsViewModel = XRTableOfContentsViewModel;
var XRTableOfContentsSurface = (function (_super) {
    __extends(XRTableOfContentsSurface, _super);
    function XRTableOfContentsSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this.levels = ko.observableArray();
        _this._disposables.push(_this.levelTitle = new xrTableOfContentsLevel_1.TableOfContentsLevelSurface(control.levelTitle, context));
        _this._disposables.push(_this.levelDefault = new xrTableOfContentsLevel_1.TableOfContentsLevelSurface(control.levelDefault, context));
        _this._disposables.push(analytics_internal_1.createObservableArrayMapCollection(control.levels, _this.levels, function (item) { return new xrTableOfContentsLevel_1.TableOfContentsLevelSurface(item, context); }));
        _this.template = 'dxrd-table-of-contents';
        _this.selectiontemplate = 'dxrd-table-of-contents-selected';
        return _this;
    }
    XRTableOfContentsSurface.prototype.isThereIntersectionWithChildCollection = function () {
        return false;
    };
    XRTableOfContentsSurface.prototype.isThereIntersectionWithUsefulArea = function () {
        return false;
    };
    XRTableOfContentsSurface.prototype.isThereIntersectionWithParentCollection = function () {
        return false;
    };
    return XRTableOfContentsSurface;
}(xrControl_1.XRControlSurface));
exports.XRTableOfContentsSurface = XRTableOfContentsSurface;


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = __webpack_require__(42);
var _locker_1 = __webpack_require__(32);
var settings_1 = __webpack_require__(12);
var xrControl_1 = __webpack_require__(10);
var analytics_elements_1 = __webpack_require__(5);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var defaultTableOfContentsLevelHeight_1 = __webpack_require__(199);
var TableOfContentsLevel = (function (_super) {
    __extends(TableOfContentsLevel, _super);
    function TableOfContentsLevel(model, parent, serializer, isTitle) {
        if (isTitle === void 0) { isTitle = false; }
        var _this = _super.call(this, $.extend({ '@ControlType': 'TableOfContentsLevel', isTitle: isTitle }, model), parent, serializer) || this;
        _this.borderWidth = parent.borderWidth;
        _this.borderColor = parent.borderColor;
        _this.borders = parent.borders;
        _this.dpi = parent.dpi;
        if (_this.padding) {
            _this._createPaddingDependencies();
        }
        _this.borderDashStyle = parent.borderDashStyle;
        _this.borderDefault = parent.borderDefault;
        _this._disposables.push(_this._levelIndex = ko.pureComputed(function () { return parent.allLevels().indexOf(_this); }));
        _this._disposables.push(_this._indentFactor = ko.pureComputed(function () { return _utils_1.recalculateUnit(60, _this.parentModel().dpi()); }));
        _this.indent = _this.indent || ko.observable(0);
        _this._disposables.push(_this.left = ko.pureComputed({
            read: function () {
                if (!_this.indent)
                    return 0;
                if (_this.indent() !== null && _this.indent() !== undefined)
                    return _this.indent();
                return _this._levelIndex() === 0 ? 0 : (_this._levelIndex() - 1) * _this._indentFactor();
            },
            write: $.noop
        }));
        _this._disposables.push(_this.width = ko.pureComputed({
            read: function () { return parent.size.width() - _this.left(); },
            write: $.noop
        }));
        _this._disposables.push(_this.name = ko.pureComputed(function () {
            if (_this.isTitle)
                return null;
            if (_this._levelIndex() == parent.allLevels().length - 1)
                return 'Level (Default)';
            return 'Level ' + _this._levelIndex();
        }));
        _this._disposables.push(_this.top = ko.computed({
            read: function () {
                var previousLevel = parent.allLevels()[_this._levelIndex() - 1];
                return previousLevel ? previousLevel.top() + previousLevel.height() : 0;
            },
            write: $.noop,
            deferEvaluation: true
        }));
        _this.lockedInUserDesigner = parent.lockedInUserDesigner;
        return _this;
    }
    TableOfContentsLevel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.parentModel(null);
    };
    TableOfContentsLevel.createNew = function (parent) {
        return new TableOfContentsLevel({ '@Height': _utils_1.recalculateUnit(defaultTableOfContentsLevelHeight_1.levelDefaultHeight, parent.dpi()) }, parent);
    };
    TableOfContentsLevel.prototype._createPaddingDependencies = function () {
        var _this = this;
        this.paddingObj = new analytics_elements_1.PaddingModel();
        this._disposables.push(this.paddingObj);
        this.paddingObj.applyFromString(this['padding']());
        this.paddingObj.dpi = ko.computed(function () { return _this.dpi && _this.dpi(); });
        var lock = new _locker_1.Locker().lock;
        this._disposables.push(this.padding.subscribe(function (newVal) { return lock(function () { return _this.paddingObj.applyFromString(newVal); }); }));
        ['left', 'right', 'top', 'bottom'].forEach(function (name) {
            _this._disposables.push(_this.paddingObj[name].subscribe(function (newVal) {
                if (_this.root['isModelReady'] && _this.root['isModelReady']() || !_this.root['isModelReady'])
                    lock(function () { return _this.padding(_this.paddingObj.toString()); });
            }));
        });
        this._disposables.push(this.paddingObj.dpi.subscribe(function (newVal) { return lock(function () {
            if (_this.padding())
                _this.padding(_this.paddingObj.toString());
        }); }));
        this.paddingObj['resetValue'] = function () {
            lock(function () {
                ['left', 'right', 'top', 'bottom'].forEach(function (name) { return _this.paddingObj[name](null); });
                _this.padding(_this.paddingObj.toString());
                _this.paddingObj.applyFromString(_this.padding());
            });
        };
    };
    TableOfContentsLevel.prototype.preInitProperties = function (model) {
        this.isTitle = model.isTitle;
        delete model['isTitle'];
    };
    TableOfContentsLevel.prototype.getInfo = function () {
        return this.isTitle ? xrTableOfContents_1.tocTitleSerializationsInfo : xrTableOfContentsLevel_1.tocLevelSerializationsInfo;
    };
    TableOfContentsLevel.prototype.isPropertyModified = function (name) {
        return false;
    };
    TableOfContentsLevel.prototype.getControlFactory = function () {
        return settings_1.controlsFactory();
    };
    TableOfContentsLevel.prototype.rtl = function () {
        return this.parentModel() && this.parentModel().rtl();
    };
    TableOfContentsLevel.unitProperties = ['height', 'indent'];
    return TableOfContentsLevel;
}(analytics_elements_1.ElementViewModel));
exports.TableOfContentsLevel = TableOfContentsLevel;
var TableOfContentsLevelSurface = (function (_super) {
    __extends(TableOfContentsLevelSurface, _super);
    function TableOfContentsLevelSurface(control, context) {
        var _this = _super.call(this, control, context, TableOfContentsLevelSurface._unitProperties) || this;
        _this._leaderSymbolWidth = ko.pureComputed(function () {
            if (!TableOfContentsLevelSurface._$leaderSymbol)
                TableOfContentsLevelSurface._$leaderSymbol = $('<span />').hide().appendTo('body');
            TableOfContentsLevelSurface._$leaderSymbol.html(_this.getControlModel().leaderSymbol()).css(_this.contentCss());
            return TableOfContentsLevelSurface._$leaderSymbol.width();
        });
        _this.leaderSymbols = ko.pureComputed(function () {
            var elementWidth = _this.contentWidthWithoutZoom();
            if (elementWidth <= 0 || _this._leaderSymbolWidth() === 0)
                return '';
            var symbolsCount = elementWidth / _this._leaderSymbolWidth();
            var symbol = _this.getControlModel().leaderSymbol();
            var a = [];
            while (a.length < symbolsCount) {
                a.push(symbol);
            }
            return a.join('');
        });
        _this._disposables.push(_this.isIntersect = ko.computed(function () { return false; }));
        _this._disposables.push(_this.leaderSymbols);
        _this.text = control.text;
        _this.template = 'dxrd-table-of-contents-level';
        return _this;
    }
    TableOfContentsLevelSurface.prototype.resizable = function (resizeHandler, element) {
        return $.extend({}, resizeHandler, {
            handles: 's',
            $selectedNodes: $(element),
            minimumHeight: 10
        });
    };
    TableOfContentsLevelSurface.prototype.rtlLayout = function () {
        return this._control.rtl();
    };
    TableOfContentsLevelSurface._unitProperties = {
        _height: function (o) {
            return o.height;
        },
        _width: function (o) {
            return o.width;
        },
        _x: function (o) {
            return o.left;
        },
        _y: function (o) {
            return o.top;
        },
    };
    return TableOfContentsLevelSurface;
}(xrControl_1.XRControlSurfaceBase));
exports.TableOfContentsLevelSurface = TableOfContentsLevelSurface;
var xrTableOfContents_1 = __webpack_require__(141);
var xrTableOfContentsLevel_1 = __webpack_require__(200);


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.levelDefaultHeight = 23;


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var defaultTableOfContentsLevelHeight_1 = __webpack_require__(199);
var font = { propertyName: 'font', localizable: true, modelName: '@Font', defaultVal: 'Times New Roman, 9.75pt', displayName: 'Font', localizationId: 'DevExpress.XtraReports.UI.XRTableOfContentsLevelBase.Font', editor: analytics_widgets_1.editorTemplates.getEditor('font') };
var backColor = { propertyName: 'backColor', modelName: '@BackColor', defaultVal: 'Transparent', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, displayName: 'Background Color', localizationId: 'DevExpress.XtraReports.UI.XRControl.BackColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') };
var foreColor = { propertyName: 'foreColor', modelName: '@ForeColor', defaultVal: 'Black', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, displayName: 'Foreground Color', localizationId: 'DevExpress.XtraReports.UI.XRControl.ForeColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') };
exports.baseTocLevelSerializationsInfo = [
    backColor,
    font,
    foreColor,
    { propertyName: 'height', modelName: '@Height', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: defaultTableOfContentsLevelHeight_1.levelDefaultHeight, displayName: 'Height', localizationId: 'DevExpress.XtraReports.UI.XRTableOfContentsLevelBase.Height', from: analytics_utils_1.floatFromModel, editorOptions: { min: 10 } }
].concat(metadata_1.paddingGroup);
exports.tocLevelSerializationsInfo = [
    { propertyName: 'leaderSymbol', modelName: '@LeaderSymbol', editor: analytics_widgets_1.editorTemplates.getEditor('text'), defaultVal: '.', displayName: 'Leader Symbol', localizationId: 'DevExpress.XtraReports.UI.XRTableOfContentsLevel.LeaderSymbol', editorOptions: { maxLength: 1 } },
    { propertyName: 'indent', modelName: '@Indent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: null, displayName: 'Indent', localizationId: 'DevExpress.XtraReports.UI.XRTableOfContentsLevel.Indent', from: analytics_utils_1.floatFromModel }
].concat(exports.baseTocLevelSerializationsInfo);


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var bandsMetadata_1 = __webpack_require__(26);
var xrBandMetaData_1 = __webpack_require__(53);
var groupfieldMetaData_1 = __webpack_require__(52);
var scriptMetadata_1 = __webpack_require__(13);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
exports.groupUnion = {
    propertyName: 'groupUnion',
    modelName: '@GroupUnion', displayName: 'Group Union', localizationId: 'DevExpress.XtraReports.UI.GroupHeaderBand.GroupUnion', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'None', from: analytics_utils_1.fromEnum,
    valuesArray: [
        { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.GroupUnion.None' },
        { value: 'WholePage', displayValue: 'Whole Page', localizationId: 'DevExpress.XtraReports.UI.GroupUnion.WholePage' },
        { value: 'WithFirstDetail', displayValue: 'With First Detail', localizationId: 'DevExpress.XtraReports.UI.GroupUnion.WithFirstDetail' }
    ]
};
exports.groupFooterUnion = {
    propertyName: 'groupFooterUnion',
    modelName: '@GroupUnion', displayName: 'Group Union', localizationId: 'DevExpress.XtraReports.UI.GroupFooterBand.GroupUnion', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'None', from: analytics_utils_1.fromEnum,
    valuesArray: [
        { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.GroupFooterUnion.None' },
        { value: 'WithLastDetail', displayValue: 'With Last Detail', localizationId: 'DevExpress.XtraReports.UI.GroupFooterUnion.WithLastDetail' }
    ]
};
var groupBand = [metadata_1.keepTogetherDefaultValueFalse, bandsMetadata_1.level, bandsMetadata_1.pageBreak, bandsMetadata_1.repeatEveryPage].concat(xrBandMetaData_1.bandSerializationInfo);
var sortingSummarySerializationsInfo = [
    { propertyName: 'enabled', modelName: '@Enabled', displayName: 'Enabled', localizationId: 'DevExpress.XtraReports.UI.XRGroupSortingSummary.Enabled', defaultVal: false, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool') },
    {
        propertyName: 'Function', modelName: '@Function', displayName: 'Function', localizationId: 'DevExpress.XtraReports.UI.XRGroupSortingSummary.Function', defaultVal: 'Sum', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
        get valuesArray() {
            return metadata_1.getSummaryFunctionValues();
        }
    },
    { propertyName: 'fieldName', modelName: '@FieldName', displayName: 'Field Name', localizationId: 'DevExpress.XtraReports.UI.XRGroupSortingSummary.FieldName', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('field') },
    { propertyName: 'ignoreNullValues', modelName: '@IgnoreNullValues', displayName: 'Ignore Null Values', localizationId: 'DevExpress.XtraReports.UI.XRGroupSortingSummary.IgnoreNullValues', defaultVal: false, from: analytics_utils_1.parseBool, editor: analytics_widgets_1.editorTemplates.getEditor('bool') },
    {
        propertyName: 'sortOrder', modelName: '@SortOrder', displayName: 'SortOrder', localizationId: 'DevExpress.XtraReports.UI.XRGroupSortingSummary.SortOrder', defaultVal: 'Ascending', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
        valuesArray: [
            { value: 'Ascending', displayValue: 'Ascending', localizationId: 'DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending' },
            { value: 'Descending', displayValue: 'Descending', localizationId: 'DevExpress.XtraReports.UI.XRColumnSortOrder.Descending' }
        ]
    },
];
exports.sortingSummary = { propertyName: 'sortingSummary', modelName: 'SortingSummary', displayName: 'Sorting Summary', localizationId: 'DevExpress.XtraReports.UI.GroupHeaderBand.SortingSummary', info: sortingSummarySerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.groupHeaderBandSerializationInfo = [groupfieldMetaData_1.groupFields, exports.groupUnion, exports.sortingSummary, bandsMetadata_1.drillDownDetailReportExpanded,
    bandsMetadata_1.drillDownControl, scriptMetadata_1.groupHeaderBandScripts].concat(groupBand);
exports.groupFooterBandSerializationInfo = [exports.groupFooterUnion, bandsMetadata_1.printAtBottom, scriptMetadata_1.groupBandScripts].concat(groupBand);
exports.popularPropertiesGroupFooter = ['groupFooterUnion', 'pageBreak', 'keepTogether', 'repeatEveryPage', 'printAtBottom'];
exports.popularPropertiesGroupHeader = ['groupFields', 'groupUnion', 'level', 'pageBreak', 'keepTogether', bandsMetadata_1.printAcrossBands.propertyName, 'repeatEveryPage'];


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var scriptMetadata_1 = __webpack_require__(13);
var xrBandMetaData_1 = __webpack_require__(53);
var bandsMetadata_1 = __webpack_require__(26);
var analytics_widgets_1 = __webpack_require__(4);
exports.printOn = {
    propertyName: 'printOn',
    modelName: '@PrintOn', displayName: 'Print On', localizationId: 'DevExpress.XtraReports.UI.PageBand.PrintOn', defaultVal: 'AllPages',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        { value: 'AllPages', displayValue: 'All Pages', localizationId: 'DevExpress.XtraReports.UI.PrintOnPages.AllPages' },
        { value: 'NotWithReportHeader', displayValue: 'Not with Report Header', localizationId: 'DevExpress.XtraReports.UI.PrintOnPages.NotWithReportHeader' },
        { value: 'NotWithReportFooter', displayValue: 'Not with Report Footer', localizationId: 'DevExpress.XtraReports.UI.PrintOnPages.NotWithReportFooter' },
        { value: 'NotWithReportHeaderAndReportFooter', displayValue: 'Not with Report Header and Report Footer', localizationId: 'DevExpress.XtraReports.UI.PrintOnPages.NotWithReportHeaderAndReportFooter' }
    ]
};
exports.pageBandSerializationInfoPageHeader = [exports.printOn, scriptMetadata_1.commonBandScripts].concat(xrBandMetaData_1.bandSerializationInfo);
exports.pageBandSerializationInfo = [exports.printOn, scriptMetadata_1.commonBandScripts].concat(xrBandMetaData_1.bandSerializationInfo);
exports.popularPropertiesPageHeader = ['printOn', bandsMetadata_1.printAcrossBands.propertyName];
exports.popularPropertiesPageFooter = ['printOn'];


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var xrBandMetaData_1 = __webpack_require__(53);
var bandsMetadata_1 = __webpack_require__(26);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var width = { propertyName: 'width', modelName: '@WidthF', defaultVal: 300, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Width', localizationId: 'DevExpress.XtraReports.UI.XRControl.Width', from: analytics_utils_1.floatFromModel, localizable: true };
exports.commonVerticalBandProperties = [width, metadata_1.keepTogetherDefaultValueFalse].concat(xrBandMetaData_1.bandSerializationInfo);
exports.bandLayout = {
    propertyName: 'bandLayout',
    modelName: '@BandLayout',
    displayName: 'Band Layout',
    localizationId: 'DevExpress.XtraReports.UI.VerticalDetailBand.BandLayout',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        { value: 'AcrossOnly', displayValue: 'Across Only', localizationId: 'DevExpress.XtraReports.UI.VerticalBandLayout.AcrossOnly' },
        { value: 'AcrossThenDown', displayValue: 'Across Then Down', localizationId: 'DevExpress.XtraReports.UI.VerticalBandLayout.AcrossThenDown' }
    ],
    defaultVal: 'AcrossOnly'
};
exports.verticalHeaderBandSerializationInfo = [bandsMetadata_1.repeatEveryPage].concat(exports.commonVerticalBandProperties);
exports.popularPropertiesVerticalHeaderBand = ['repeatEveryPage'];
exports.verticalTotalBandSerializationInfo = [].concat(exports.commonVerticalBandProperties);
exports.popularPropertiesVerticalTotalBand = [];


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var metadata_1 = __webpack_require__(6);
var style_1 = __webpack_require__(21);
var formattingrules_1 = __webpack_require__(36);
var dataBinding_1 = __webpack_require__(17);
var editOptions_1 = __webpack_require__(47);
var sortingOptions_1 = __webpack_require__(88);
var _metaUtils_1 = __webpack_require__(23);
var metadataGroups_1 = __webpack_require__(11);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var editorTemplates_1 = __webpack_require__(9);
exports.cellVerticalSpacing = { propertyName: 'verticalSpacing', localizable: true, modelName: '@CellVerticalSpacing', defaultVal: 0, displayName: 'Cell Vertical Spacing', localizationId: 'DevExpress.XtraReports.UI.XRCharacterComb.CellVerticalSpacing', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.cellHorizontalSpacing = { propertyName: 'horizontalSpacing', localizable: true, modelName: '@CellHorizontalSpacing', defaultVal: 0, displayName: 'Cell Horizontal Spacing', localizationId: 'DevExpress.XtraReports.UI.XRCharacterComb.CellHorizontalSpacing', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
exports.cellWidth = {
    propertyName: 'cellWidth', modelName: '@CellWidth', defaultVal: 25, displayName: 'Cell Width', localizable: true, localizationId: 'DevExpress.XtraReports.UI.XRCharacterComb.CellWidth', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), editorOptions: { placeholder: ko.observable(analytics_utils_1.getLocalization('(Auto)', 'ASPxReportsStringId.ReportDesigner_PropertyGrid_AutoValueString')) }
};
exports.cellHeight = {
    propertyName: 'cellHeight', modelName: '@CellHeight', defaultVal: 25, displayName: 'Cell Height', localizable: true, localizationId: 'DevExpress.XtraReports.UI.XRCharacterComb.CellHeight', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), editorOptions: { placeholder: ko.observable(analytics_utils_1.getLocalization('(Auto)', 'ASPxReportsStringId.ReportDesigner_PropertyGrid_AutoValueString')) }
};
exports.cellSizeMode = {
    propertyName: 'sizeMode', modelName: '@CellSizeMode', displayName: 'Cell Size Mode', localizationId: 'DevExpress.XtraReports.UI.XRCharacterComb.CellSizeMode', defaultVal: 'AutoSize', editor: editorTemplates_1.designerEditorTemplates.getEditor('comboboxUndo'),
    valuesArray: [
        { value: 'Custom', displayValue: 'Custom', localizationId: 'DevExpress.XtraPrinting.SizeMode.Custom' },
        { value: 'AutoWidth', displayValue: 'Auto Width', localizationId: 'DevExpress.XtraPrinting.SizeMode.AutoWidth' },
        { value: 'AutoHeight', displayValue: 'Auto Height', localizationId: 'DevExpress.XtraPrinting.SizeMode.AutoHeight' },
        { value: 'AutoSize', displayValue: 'Auto Size', localizationId: 'DevExpress.XtraPrinting.SizeMode.AutoSize' }
    ]
};
var wordWrap = { propertyName: 'wordWrap', modelName: '@WordWrap', defaultVal: true, from: analytics_utils_1.parseBool, displayName: 'Word Wrap', localizationId: 'DevExpress.XtraReports.UI.XRControl.WordWrap', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.characterCombFont = { propertyName: 'font', modelName: '@Font', displayName: 'Font', localizationId: 'DevExpress.XtraReports.UI.XRControl.Font', editor: editorTemplates_1.designerEditorTemplates.getEditor('fontUndo') };
exports.characterCombBorders = { propertyName: 'borders', modelName: '@Borders', displayName: 'Borders', localizationId: 'DevExpress.XtraReports.UI.XRControl.Borders', defaultVal: 'All', editor: analytics_widgets_1.editorTemplates.getEditor('borders') };
exports.characterCombBorderDashStyle = $.extend({}, metadata_1.borderDashStyle, { valuesArray: metadata_1.borderDashStyleValues });
exports.characterCombSerializationsInfo = [
    style_1.styleName, style_1.evenStyleName, style_1.oddStyleName, style_1.stylePriority, metadata_1.canPublish, metadata_1.backColor, metadata_1.autoWidth,
    formattingrules_1.formattingRuleLinks, exports.cellSizeMode, wordWrap, exports.cellWidth, exports.cellHeight, exports.cellVerticalSpacing, exports.cellHorizontalSpacing, dataBinding_1.dataBindings(['Text']),
    metadata_1.textAlignment, metadata_1.text, metadata_1.textFormatString, metadata_1.textArea, metadata_1.nullValueText, metadata_1.keepTogetherDefaultValueFalse, metadata_1.summary, metadata_1.multiline, wordWrap,
    metadata_1.xlsxFormatString, metadata_1.rtl, exports.characterCombBorders, metadata_1.borderWidth, exports.characterCombBorderDashStyle, metadata_1.borderColor, exports.characterCombFont, metadata_1.foreColor, editOptions_1.editOptions, sortingOptions_1.interactiveSorting
].concat(_metaUtils_1.createSinglePopularBindingInfos('Text'), metadataGroups_1.baseControlProperties, metadataGroups_1.navigationGroup, metadataGroups_1.canGrowShrinkGroup, metadataGroups_1.processGroup, metadataGroups_1.sizeLocation);


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var glyphOptions_1 = __webpack_require__(284);
var editOptions_1 = __webpack_require__(47);
var editOptions_2 = __webpack_require__(90);
var metadata_1 = __webpack_require__(6);
var anchoring_1 = __webpack_require__(20);
var scriptMetadata_1 = __webpack_require__(13);
var dataBinding_1 = __webpack_require__(17);
var _metaUtils_1 = __webpack_require__(23);
var metadataGroups_1 = __webpack_require__(11);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var $ = __webpack_require__(3);
exports.checkState = {
    propertyName: 'checkBoxState',
    modelName: '@CheckBoxState', displayName: 'Check Box State', localizationId: 'DevExpress.XtraReports.UI.XRCheckBox.CheckBoxState', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    defaultVal: 'Unchecked',
    valuesArray: [
        { value: 'Unchecked', displayValue: 'Unchecked', localizationId: 'StringId.CheckUnchecked' },
        { value: 'Checked', displayValue: 'Checked', localizationId: 'StringId.CheckChecked' },
        { value: 'Indeterminate', displayValue: 'Indeterminate', localizationId: 'StringId.CheckIndeterminate' }
    ]
};
exports.checked = { propertyName: 'checked', modelName: '@Checked', defaultVal: false, from: analytics_utils_1.parseBool, displayName: 'Checked', localizationId: 'DevExpress.XtraReports.UI.XRCheckBox.Checked', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.glyphOptions = {
    propertyName: 'glyphOptions',
    modelName: 'GlyphOptions',
    displayName: 'Glyph Options',
    localizationId: 'DevExpress.XtraReports.UI.XRCheckBox.GlyphOptions',
    editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'),
    from: function (model, serializer) { return new glyphOptions_1.GlyphOptions(model, serializer); },
    toJsonObject: function (value, serializer) { return serializer.serialize(value); }
};
exports.checkEditOptions = $.extend({}, editOptions_1.editOptions, {
    propertyName: 'checkEditOptions',
    from: function (model, serializer) { return new editOptions_2.CheckEditOptions(model, serializer); }
});
exports.checkboxSerializationsInfo = [
    exports.checkState, exports.checked, metadata_1.text, metadata_1.textFormatString, metadata_1.wordWrap, metadata_1.keepTogether, anchoring_1.anchorVertical, anchoring_1.anchorHorizontal, exports.glyphOptions,
    $.extend({}, metadata_1.textAlignment, { defaultVal: 'MiddleLeft' }),
    scriptMetadata_1.textControlScripts, metadata_1.textTrimming, metadata_1.xlsxFormatString,
    dataBinding_1.dataBindings(['Text', 'NavigateUrl', 'Tag', 'Bookmark', 'CheckBoxState']),
    metadata_1.rtl,
    exports.checkEditOptions
].concat(_metaUtils_1.createPopularBindingInfos({ propertyName: 'CheckBoxState', localizationId: 'DevExpress.XtraReports.UI.XRCheckBox.CheckBoxState' }), _metaUtils_1.createPopularBindingInfos({ propertyName: 'Text', localizationId: 'DevExpress.XtraReports.UI.XRCheckBox.Text' }), metadataGroups_1.sizeLocation, metadataGroups_1.commonControlProperties, metadataGroups_1.fontGroup, metadataGroups_1.navigationGroup);
exports.popularPropertiesCheckBox = ['checkBoxState', 'popularDataBindingCheckState', 'text', 'popularDataBindingText', 'glyphOptions', 'bookmark', 'bookmarkParent'];


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var metadata_1 = __webpack_require__(6);
var metadataGroups_1 = __webpack_require__(11);
var analytics_utils_1 = __webpack_require__(0);
var analytics_elements_1 = __webpack_require__(5);
var $ = __webpack_require__(3);
var editorTemplates_1 = __webpack_require__(9);
exports.crossBandLineWidth = { propertyName: 'width', modelName: '@WidthF', defaultVal: 1, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Width', localizationId: 'DevExpress.XtraReports.UI.XRControl.Width', from: analytics_utils_1.floatFromModel };
exports.startPoint = { propertyName: 'startPoint', modelName: '@StartPointFloat', from: analytics_elements_1.Point.fromString, displayName: 'Start Point', localizationId: 'DevExpress.XtraReports.UI.XRCrossBandControl.StartPoint', localizable: true, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.endPoint = { propertyName: 'endPoint', modelName: '@EndPointFloat', from: analytics_elements_1.Point.fromString, displayName: 'End Point', localizationId: 'DevExpress.XtraReports.UI.XRCrossBandControl.EndPoint', localizable: true, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.startBand = { propertyName: 'startBand', modelName: '@StartBand', link: true, displayName: 'Start Band', localizationId: 'DevExpress.XtraReports.UI.XRCrossBandControl.StartBand', editor: editorTemplates_1.designerEditorTemplates.getEditor('bands') };
exports.endBand = { propertyName: 'endBand', modelName: '@EndBand', link: true, displayName: 'End Band', localizationId: 'DevExpress.XtraReports.UI.XRCrossBandControl.EndBand', editor: editorTemplates_1.designerEditorTemplates.getEditor('bands') };
exports.borderDashStyleCrossband = {
    propertyName: 'borderDashStyleCrossband', modelName: '@BorderDashStyle',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), displayName: 'Border Dash Style', localizationId: 'DevExpress.XtraReports.UI.XRControl.BorderDashStyle', valuesArray: metadata_1.borderDashStyleValues
};
exports.width = { propertyName: 'width', modelName: '@WidthF', defaultVal: 0, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Width', localizationId: 'DevExpress.XtraReports.UI.XRControl.Width', from: analytics_utils_1.floatFromModel, localizable: true };
exports.crossBandBoxControlSerializationsInfo = [
    exports.startPoint, exports.startBand, exports.endPoint, exports.endBand, exports.width,
    metadata_1.borderColor, exports.borderDashStyleCrossband, metadata_1.canPublish,
    $.extend({}, metadata_1.borders, { defaultVal: 'All' }),
    $.extend({}, metadata_1.borderWidth, { defaultVal: 2 }),
    { propertyName: 'locationF', modelName: '@LocationFloat', from: analytics_elements_1.Point.fromString },
].concat(metadataGroups_1.baseControlProperties);
exports.crossBandLineControlSerializationsInfo = [
    exports.startPoint, exports.startBand, exports.endPoint, exports.endBand, exports.width,
    metadata_1.foreColor, metadata_1.lineStyle, exports.crossBandLineWidth, metadata_1.canPublish,
    { propertyName: 'locationF', modelName: '@LocationFloat', from: analytics_elements_1.Point.fromString, }
].concat(metadataGroups_1.baseControlProperties);
exports.popularPropertiesCrossLine = ['lineStyle'];


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
exports.crossTabPrintOptionsInfo = [
    {
        propertyName: 'printLayout', modelName: '@PrintLayout', displayName: 'PrintLayout', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabPrintOptions.PrintLayout', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'AcrossOnly', valuesArray: [
            { displayValue: 'AcrossOnly', value: 'AcrossOnly', localizationId: 'DevExpress.XtraReports.UI.PrintLayout.AcrossOnly' },
            { displayValue: 'AcrossThenDown', value: 'AcrossThenDown', localizationId: 'DevExpress.XtraReports.UI.PrintLayout.AcrossThenDown' },
        ]
    }, { propertyName: 'acrossThenDownOffset', modelName: '@AcrossThenDownOffset', displayName: 'Across Then Down Offset', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabPrintOptions.AcrossThenDownOffset', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 10 },
    { propertyName: 'repeatRowHeaders', modelName: '@RepeatRowHeaders', displayName: 'Repeat Row Headers', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabPrintOptions.RepeatRowHeaders', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool },
    { propertyName: 'repeatColumnHeaders', modelName: '@RepeatColumnHeaders', displayName: 'Repeat Column Headers', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabPrintOptions.RepeatColumnHeaders', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool },
    { propertyName: 'printTotalsForSingleValues', modelName: '@PrintTotalsForSingleValues', displayName: 'Print Totals For Single Values', localizationId: 'DevExpress.XtraReports.UI.CrossTab.CrossTabPrintOptions.PrintTotalsForSingleValues', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool }
];
exports.crossTabPrintOptions = { propertyName: 'printOptions', modelName: 'PrintOptions', localizationId: 'DevExpress.XtraReports.UI.XRCrossTab.PrintOptions', displayName: 'Print Options', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: exports.crossTabPrintOptionsInfo };


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var anchoring_1 = __webpack_require__(20);
var scriptMetadata_1 = __webpack_require__(13);
var metadata_1 = __webpack_require__(6);
var dataBinding_1 = __webpack_require__(17);
var xrGauge_1 = __webpack_require__(136);
var _metaUtils_1 = __webpack_require__(23);
var metadataGroups_1 = __webpack_require__(11);
var analytics_utils_1 = __webpack_require__(0);
var editorTemplates_1 = __webpack_require__(9);
exports.actualValue = { propertyName: 'actualValue', defaultVal: null, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Actual Value', localizationId: 'DevExpress.XtraReports.UI.XRGauge.ActualValue', modelName: '@ActualValue' };
exports.maximum = { propertyName: 'maximum', defaultVal: null, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Maximum', localizationId: 'DevExpress.XtraReports.UI.XRGauge.Maximum', modelName: '@Maximum' };
exports.minimum = { propertyName: 'minimum', modelName: '@Minimum', defaultVal: null, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Minimum', localizationId: 'DevExpress.XtraReports.UI.XRGauge.Minimum' };
exports.tickmarkCount = { propertyName: 'tickmarkCount', modelName: '@TickmarkCount', defaultVal: 11, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Tickmark Count', localizationId: 'DevExpress.XtraReports.UI.XRGauge.TickmarkCount' };
exports.targetValue = { propertyName: 'targetValue', modelName: '@TargetValue', defaultVal: null, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Target Value', localizationId: 'DevExpress.XtraReports.UI.XRGauge.TargetValue' };
exports.viewStyle = { propertyName: 'viewStyle', modelName: '@ViewStyle', displayName: 'View Style', localizationId: 'DevExpress.XtraReports.UI.XRGauge.ViewStyle', editor: editorTemplates_1.designerEditorTemplates.getEditor('viewStyle') };
exports.viewTheme = {
    propertyName: 'viewTheme', modelName: '@ViewTheme',
    defaultVal: 'FlatLight', displayName: 'View Theme', localizationId: 'DevExpress.XtraReports.UI.XRGauge.ViewTheme', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        { value: 'FlatLight', displayValue: 'FlatLight', localizationId: 'GaugesPresetsStringId.ThemeFlatLight' },
        { value: 'FlatDark', displayValue: 'FlatDark', localizationId: 'GaugesPresetsStringId.ThemeFlatDark' }
    ]
};
exports.viewType = {
    propertyName: 'viewType', modelName: '@ViewType',
    defaultVal: 'Circular', displayName: 'View Type', localizationId: 'DevExpress.XtraReports.UI.XRGauge.ViewType', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [
        { value: 'Circular', displayValue: 'Circular', localizationId: 'ASPxReportsStringId.ReportDesigner_GaugeViewType_Circular' },
        { value: 'Linear', displayValue: 'Linear', localizationId: 'ASPxReportsStringId.ReportDesigner_GaugeViewType_Linear' }
    ]
};
exports.xrGaugeSerializationInfo = [
    exports.viewStyle, exports.viewTheme, exports.viewType, exports.actualValue, exports.tickmarkCount, exports.maximum, exports.minimum, exports.targetValue, anchoring_1.anchorVertical, anchoring_1.anchorHorizontal, scriptMetadata_1.controlScripts, metadata_1.imageType,
    dataBinding_1.dataBindings(['ActualValue', 'Bookmark', 'Maximum', 'Minimum', 'NavigateUrl', 'Tag', 'TargetValue'])
].concat(xrGauge_1.XRGaugeViewModel.bindings
    .map(function (name) {
    return _metaUtils_1.createPopularBindingInfos({ propertyName: name, localizationId: 'DevExpress.XtraReports.UI.XRGauge.' + name });
})
    .reduce(function (a, b) { return a.concat(b); }))
    .concat(metadataGroups_1.sizeLocation, metadataGroups_1.commonControlProperties, metadataGroups_1.navigationGroup);
exports.popularPropertiesGauge = ['viewType', 'viewStyle', 'viewTheme', 'actualValue', 'popularDataBindingActualValue', 'targetValue', 'popularDataBindingTargetValue',
    'minimum', 'popularDataBindingMinimum', 'maximum', 'popularDataBindingMaximum'];


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var anchoring_1 = __webpack_require__(20);
var scriptMetadata_1 = __webpack_require__(13);
var dataBinding_1 = __webpack_require__(17);
var metadataGroups_1 = __webpack_require__(11);
var analytics_widgets_1 = __webpack_require__(4);
exports.lineDirection = {
    propertyName: 'lineDirection',
    modelName: '@LineDirection',
    defaultVal: 'Horizontal',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    displayName: 'Line Direction', localizationId: 'DevExpress.XtraReports.UI.XRLine.LineDirection',
    valuesArray: [
        { value: 'Horizontal', displayValue: 'Horizontal', localizationId: 'DevExpress.XtraReports.UI.LineDirection.Horizontal' },
        { value: 'Vertical', displayValue: 'Vertical', localizationId: 'DevExpress.XtraReports.UI.LineDirection.Vertical' },
        { value: 'Slant', displayValue: 'Slant', localizationId: 'DevExpress.XtraReports.UI.LineDirection.Slant' },
        { value: 'BackSlant', displayValue: 'BackSlant', localizationId: 'DevExpress.XtraReports.UI.LineDirection.BackSlant' }
    ]
};
exports.lineSerializationsInfo = [
    metadata_1.foreColor, metadata_1.keepTogether, anchoring_1.anchorVertical, anchoring_1.anchorHorizontal,
    metadata_1.lineWidth, exports.lineDirection, metadata_1.lineStyle, scriptMetadata_1.controlScripts,
    dataBinding_1.dataBindings(['Tag'])
].concat(metadataGroups_1.sizeLocation, metadataGroups_1.commonControlProperties);
exports.popularPropertiesLine = ['lineDirection', 'lineStyle', 'lineWidth', 'anchorVertical', 'anchorHorizontal'];


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var anchoring_1 = __webpack_require__(20);
var metadata_1 = __webpack_require__(6);
var scriptMetadata_1 = __webpack_require__(13);
var dataBinding_1 = __webpack_require__(17);
var metadataGroups_1 = __webpack_require__(11);
var analytics_utils_1 = __webpack_require__(0);
var xrPageinfo_1 = __webpack_require__(193);
var editorTemplates_1 = __webpack_require__(9);
exports.pageInfo = {
    propertyName: 'pageInfo',
    modelName: '@PageInfo', defaultVal: 'NumberOfTotal', displayName: 'Page Information', localizationId: 'DevExpress.XtraReports.UI.XRPageInfo.PageInfo',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: xrPageinfo_1.pageInfoValuesMap
};
exports.startPageNumber = {
    propertyName: 'startPageNumber',
    modelName: '@StartPageNumber', displayName: 'Start Page Number', localizationId: 'DevExpress.XtraReports.UI.XRPageInfo.StartPageNumber', defaultVal: 1, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric')
};
exports.runningBand = {
    propertyName: 'runningBand', modelName: '@RunningBand', link: true, displayName: 'Running Band', localizationId: 'DevExpress.XtraReports.UI.XRPageInfo.RunningBand', editor: editorTemplates_1.designerEditorTemplates.getEditor('runningBand')
};
exports.pageInfoSerializationsInfo = [
    anchoring_1.anchorVertical, anchoring_1.anchorHorizontal, metadata_1.textAlignment, metadata_1.wordWrap, metadata_1.textFormatString, exports.pageInfo, exports.startPageNumber, exports.runningBand, scriptMetadata_1.textControlScripts, metadata_1.rtl,
    dataBinding_1.dataBindings(['Bookmark', 'NavigateUrl', 'Tag']),
].concat(metadataGroups_1.sizeLocation, metadataGroups_1.commonControlProperties, metadataGroups_1.fontGroup, metadataGroups_1.navigationGroup).filter(function (x) { return x != metadata_1.accessibleDescription; });
exports.popularPropertiesPageInfo = ['pageInfo', 'startPageNumber', 'textFormatString', 'runningBand', 'anchorVertical'];


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var pivotgridfield_1 = __webpack_require__(70);
var analytics_widgets_1 = __webpack_require__(4);
var metadata_1 = __webpack_require__(6);
var anchoring_1 = __webpack_require__(20);
var scriptMetadata_1 = __webpack_require__(13);
var metadataGroups_1 = __webpack_require__(11);
var style_1 = __webpack_require__(21);
var analytics_utils_1 = __webpack_require__(0);
var editorTemplates_1 = __webpack_require__(9);
var linesAppearance = { propertyName: 'linesAppearance', modelName: 'Lines', displayName: 'Lines', localizationId: 'DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.Lines', info: pivotgridfield_1.appearanceInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.pivotGridAppearances = { propertyName: 'appearances', modelName: 'Appearance', displayName: 'Appearance', localizationId: 'DevExpress.XtraReports.UI.XRPivotGrid.Appearance', info: pivotgridfield_1.appearancesInfo.concat(linesAppearance), editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var criteriaString = { propertyName: '_criteriaString', modelName: '@CriteriaString' };
var criteriaStringEditable = { propertyName: 'criteriaString', displayName: 'Criteria', localizationId: 'DevExpress.XtraPivotGrid.Prefilter.Criteria', defaultVal: '', editor: editorTemplates_1.designerEditorTemplates.getEditor('pivotCriteria') };
var enabled = { propertyName: 'enabled', modelName: '@Enabled', displayName: 'Enabled', localizationId: 'DevExpress.XtraPivotGrid.PrefilterBase.Enabled', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool };
var prefilterSerializationsInfo = [criteriaString, criteriaStringEditable, enabled];
exports.prefilter = { propertyName: 'prefilter', modelName: 'Prefilter', displayName: 'Prefilter', localizationId: 'DevExpress.XtraReports.UI.XRPivotGrid.Prefilter', info: prefilterSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var autoTransposeChart = { propertyName: 'autoTransposeChart', modelName: '@AutoTransposeChart', displayName: 'Auto Transpose Chart', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.AutoTransposeChart', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, dataProvideMode = {
    propertyName: 'dataProvideMode', modelName: '@DataProvideMode', displayName: 'Data Provide Mode', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.DataProvideMode', defaultVal: 'ProvideLastLevelData', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'ProvideLastLevelData', displayValue: 'Provide Last Level Data', localizationId: 'DevExpress.XtraPivotGrid.PivotChartDataProvideMode.ProvideLastLevelData' },
        { value: 'UseCustomSettings', displayValue: 'Use Custom Settings', localizationId: 'DevExpress.XtraPivotGrid.PivotChartDataProvideMode.UseCustomSettings' }
    ]
}, dataProvidePriority = {
    propertyName: 'dataProvidePriority', modelName: '@DataProvidePriority', displayName: 'Data Provide Priority', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.DataProvidePriority', defaultVal: 'Rows', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'Columns', displayValue: 'Columns', localizationId: 'DevExpress.XtraPivotGrid.PivotChartDataProvidePriority.Columns' },
        { value: 'Rows', displayValue: 'Rows', localizationId: 'DevExpress.XtraPivotGrid.PivotChartDataProvidePriority.Rows' }
    ]
}, fieldValuesProvideMode = {
    propertyName: 'fieldValuesProvideMode', modelName: '@FieldValuesProvideMode', displayName: 'Field Values Provide Mode', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.FieldValuesProvideMode', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraPivotGrid.PivotChartFieldValuesProvideMode.Default' },
        { value: 'DisplayText', displayValue: 'Display Text', localizationId: 'DevExpress.XtraPivotGrid.PivotChartFieldValuesProvideMode.DisplayText' },
        { value: 'Value', displayValue: 'Value', localizationId: 'DevExpress.XtraPivotGrid.PivotChartFieldValuesProvideMode.Value' }
    ]
}, maxAllowedPointCountInSeries = { propertyName: 'maxAllowedPointCountInSeries', modelName: '@MaxAllowedPointCountInSeries', displayName: 'Max Allowed Point Count In Series', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.MaxAllowedPointCountInSeries', defaultVal: 100, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, maxAllowedSeriesCount = { propertyName: 'maxAllowedSeriesCount', modelName: '@MaxAllowedSeriesCount', displayName: 'Max Allowed Series Count', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.MaxAllowedSeriesCount', defaultVal: 10, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, provideColumnCustomTotals = { propertyName: 'provideColumnCustomTotals', modelName: '@ProvideColumnCustomTotals', displayName: 'Provide Column Custom Totals', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.ProvideColumnCustomTotals', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, provideColumnGrandTotals = { propertyName: 'provideColumnGrandTotals', modelName: '@ProvideColumnGrandTotals', displayName: 'Provide Column Grand Totals', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.ProvideColumnGrandTotals', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, provideColumnTotals = { propertyName: 'provideColumnTotals', modelName: '@ProvideColumnTotals', displayName: 'Provide Column Totals', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.ProvideColumnTotals', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, provideDataByColumns = { propertyName: 'provideDataByColumns', modelName: '@ProvideDataByColumns', displayName: 'Provide Data By Columns', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.ProvideDataByColumns', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, provideDataFieldsOnSeries = { propertyName: 'provideDataFieldsOnSeries', modelName: '@ProvideDataFieldsOnSeries', displayName: 'Provide Data Fields On Series', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.ProvideDataFieldsOnSeries', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, provideEmptyCells = { propertyName: 'provideEmptyCells', modelName: '@ProvideEmptyCells', displayName: 'Provide Empty Cells', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.ProvideEmptyCells', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, provideRowCustomTotals = { propertyName: 'provideRowCustomTotals', modelName: '@ProvideRowCustomTotals', displayName: 'Provide Row Custom Totals', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.ProvideRowCustomTotals', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, provideRowGrandTotals = { propertyName: 'provideRowGrandTotals', modelName: '@ProvideRowGrandTotals', displayName: 'Provide Row Grand Totals', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.ProvideRowGrandTotals', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, provideRowTotals = { propertyName: 'provideRowTotals', modelName: '@ProvideRowTotals', displayName: 'Provide Row Totals', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.ProvideRowTotals', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, optionsChartDataSourceInfo = [autoTransposeChart, dataProvideMode, dataProvidePriority, fieldValuesProvideMode, maxAllowedPointCountInSeries,
    maxAllowedSeriesCount, provideColumnCustomTotals, provideColumnGrandTotals, provideColumnTotals, provideDataByColumns, provideDataFieldsOnSeries, provideEmptyCells,
    provideRowCustomTotals, provideRowGrandTotals, provideRowTotals], optionsChartDataSource = { propertyName: 'optionsChartDataSource', modelName: 'OptionsChartDataSource', displayName: 'Options Chart Data Source', localizationId: 'DevExpress.XtraReports.UI.XRPivotGrid.OptionsChartDataSource', info: optionsChartDataSourceInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var allowCrossGroupVariation = { propertyName: 'allowCrossGroupVariation', modelName: '@AllowCrossGroupVariation', displayName: 'Allow Cross Group Variation', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsData.AllowCrossGroupVariation', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, autoExpandGroups = { propertyName: 'autoExpandGroups', modelName: '@AutoExpandGroups', displayName: 'Aut oExpand Groups', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsData.AutoExpandGroups', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: metadata_1.defaultBooleanValuesArray }, caseSensitive = { propertyName: 'caseSensitive', modelName: '@CaseSensitive', displayName: 'Case Sensitive', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsData.CaseSensitive', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, dataFieldUnboundExpressionMode = {
    propertyName: 'dataFieldUnboundExpressionMode', modelName: '@DataFieldUnboundExpressionMode', displayName: 'Data Field Unbound Expression Mode', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsData.DataFieldUnboundExpressionMode', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraPivotGrid.DataFieldUnboundExpressionMode.Default' },
        { value: 'UseSummaryValues', displayValue: 'Use Summary Values', localizationId: 'DevExpress.XtraPivotGrid.DataFieldUnboundExpressionMode.UseSummaryValues' }
    ]
}, drillDownMaxRowCount = { propertyName: 'DrillDownMaxRowCount', modelName: '@DrillDownMaxRowCount', displayName: 'Drill Down Max Row Count', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsData.DrillDownMaxRowCount', defaultVal: -1, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, filterByVisibleFieldsOnly = { propertyName: 'filterByVisibleFieldsOnly', modelName: '@FilterByVisibleFieldsOnly', displayName: 'Filter By Visible Fields Only', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsData.FilterByVisibleFieldsOnly', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, dataProcessingEngine = {
    propertyName: 'dataProcessingEngine', modelName: '@DataProcessingEngine', displayName: 'Data Processing Engine', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsData.DataProcessingEngine', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'Default', displayValue: 'Default', localizationId: 'DevExpress.XtraPivotGrid.PivotDataProcessingEngine.Default' },
        { value: 'Legacy', displayValue: 'Legacy', localizationId: 'DevExpress.XtraPivotGrid.PivotDataProcessingEngine.Legacy' },
        { value: 'LegacyOptimized', displayValue: 'Legacy Optimized', localizationId: 'DevExpress.XtraPivotGrid.PivotDataProcessingEngine.LegacyOptimized' }
    ]
}, optionsDataInfo = [allowCrossGroupVariation, autoExpandGroups, caseSensitive, dataFieldUnboundExpressionMode, drillDownMaxRowCount, filterByVisibleFieldsOnly, dataProcessingEngine], optionsData = { propertyName: 'optionsData', modelName: 'OptionsData', displayName: 'Data Options', localizationId: 'DevExpress.XtraReports.UI.XRPivotGrid.OptionsData', info: optionsDataInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var area = {
    propertyName: 'area', modelName: '@Area', displayName: 'Area', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsDataField.Area', defaultVal: 'None', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraPivotGrid.PivotDataArea.None' },
        { value: 'ColumnArea', displayValue: 'Column Area', localizationId: 'DevExpress.XtraPivotGrid.PivotDataArea.ColumnArea' },
        { value: 'RowArea', displayValue: 'Row Area', localizationId: 'DevExpress.XtraPivotGrid.PivotDataArea.RowArea' }
    ]
}, areaIndex = { propertyName: 'areaIndex', modelName: '@AreaIndex', displayName: 'Area Index', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsDataField.AreaIndex', defaultVal: -1, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, columnValueLineCount = { propertyName: 'columnValueLineCount', modelName: '@ColumnValueLineCount', displayName: 'Column Value Line Count', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsDataFieldEx.ColumnValueLineCount', defaultVal: 1, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, fieldNaming = {
    propertyName: 'fieldNaming', modelName: '@FieldNaming', displayName: 'Field Naming', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsDataField.FieldNaming', defaultVal: 'FieldName', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'FieldName', displayValue: 'Field Name', localizationId: 'DevExpress.XtraPivotGrid.DataFieldNaming.FieldName' },
        { value: 'Name', displayValue: 'Name', localizationId: 'DevExpress.XtraPivotGrid.DataFieldNaming.Name' }
    ]
}, rowHeaderWidth = { propertyName: 'rowHeaderWidth', modelName: '@RowHeaderWidth', displayName: 'Row Header Width', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsDataField.RowHeaderWidth', defaultVal: 100, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, rowValueLineCount = { propertyName: 'rowValueLineCount', modelName: '@RowValueLineCount', displayName: 'Row Value Line Count', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsDataFieldEx.RowValueLineCount', defaultVal: 1, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, optionsDataFieldInfo = [area, areaIndex, pivotgridfield_1.caption, columnValueLineCount, fieldNaming, rowHeaderWidth, rowValueLineCount], optionsDataField = { propertyName: 'optionsDataField', modelName: 'OptionsDataField', displayName: 'Data Field Options', localizationId: 'DevExpress.XtraReports.UI.XRPivotGrid.OptionsDataField', info: optionsDataFieldInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var columnFieldValueSeparator = { propertyName: 'columnFieldValueSeparator', modelName: '@ColumnFieldValueSeparator', displayName: 'Column Field Value Separator', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.ColumnFieldValueSeparator', defaultVal: 0, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, columnHeaderPaddingBottom = { propertyName: 'columnHeaderPaddingBottom', modelName: '@ColumnHeaderPaddingBottom', displayName: 'Column Header Padding Bottom', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.ColumnHeaderPaddingBottom', defaultVal: -1, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, filterSeparatorBarPadding = { propertyName: 'filterSeparatorBarPadding', modelName: '@FilterSeparatorBarPadding', displayName: 'Filter Separator Bar Padding', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.FilterSeparatorBarPadding', defaultVal: -1, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, mergeColumnFieldValues = { propertyName: 'mergeColumnFieldValues', modelName: '@MergeColumnFieldValues', displayName: 'Merge Column Field Values', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.MergeColumnFieldValues', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, mergeRowFieldValues = { propertyName: 'mergeRowFieldValues', modelName: '@MergeRowFieldValues', displayName: 'Merge Row Field Values', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.MergeRowFieldValues', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, printColumnFieldValues = { propertyName: 'printColumnFieldValues', modelName: '@PrintColumnFieldValues', displayName: 'Print Column FieldValues', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintColumnFieldValues', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, printColumnHeaders = { propertyName: 'printColumnHeaders', modelName: '@PrintColumnHeaders', displayName: 'Print Column Headers', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintColumnHeaders', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: metadata_1.defaultBooleanValuesArray }, printDataHeaders = { propertyName: 'printDataHeaders', modelName: '@PrintDataHeaders', displayName: 'Print Data Headers', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintDataHeaders', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: metadata_1.defaultBooleanValuesArray }, printFilterHeaders = { propertyName: 'printFilterHeaders', modelName: '@PrintFilterHeaders', displayName: 'Print Filter Headers', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintFilterHeaders', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: metadata_1.defaultBooleanValuesArray }, printHeadersOnEveryPage = { propertyName: 'printHeadersOnEveryPage', modelName: '@PrintHeadersOnEveryPage', displayName: 'Print Headers on Every Page', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintHeadersOnEveryPage', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, printColumnAreaOnEveryPage = { propertyName: 'printColumnAreaOnEveryPage', modelName: '@PrintColumnAreaOnEveryPage', displayName: 'Print Column Area on Every Page', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintColumnAreaOnEveryPage', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, printRowAreaOnEveryPage = { propertyName: 'printRowAreaOnEveryPage', modelName: '@PrintRowAreaOnEveryPage', displayName: 'Print Row Area on Every Page', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintRowAreaOnEveryPage', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, printHorzLines = { propertyName: 'printHorzLines', modelName: '@PrintHorzLines', displayName: 'Print Horizontal Lines', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintHorzLines', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: metadata_1.defaultBooleanValuesArray }, printRowFieldValues = { propertyName: 'printRowFieldValues', modelName: '@PrintRowFieldValues', displayName: 'Print Row FieldValues', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintRowFieldValues', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, printRowHeaders = { propertyName: 'printRowHeaders', modelName: '@PrintRowHeaders', displayName: 'Print Row Headers', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintRowHeaders', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: metadata_1.defaultBooleanValuesArray }, printUnusedFilterFields = { propertyName: 'printUnusedFilterFields', modelName: '@PrintUnusedFilterFields', displayName: 'Print Unused Filter Fields', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintUnusedFilterFields', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, printVertLines = { propertyName: 'printVertLines', modelName: '@PrintVertLines', displayName: 'Print Vertical Lines', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintVertLines', defaultVal: 'Default', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: metadata_1.defaultBooleanValuesArray }, rowFieldValueSeparator = { propertyName: 'rowFieldValueSeparator', modelName: '@RowFieldValueSeparator', displayName: 'Row Field Value Separator', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.RowFieldValueSeparator', defaultVal: 0, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, usePrintAppearance = { propertyName: 'usePrintAppearance', modelName: '@UsePrintAppearance', displayName: 'Use Print Appearance', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.UsePrintAppearance', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, optionsPrintInfo = [columnFieldValueSeparator, columnHeaderPaddingBottom, filterSeparatorBarPadding, mergeColumnFieldValues, mergeRowFieldValues, printColumnAreaOnEveryPage, printColumnFieldValues, printColumnHeaders, printDataHeaders, printFilterHeaders,
    printHeadersOnEveryPage, printHorzLines, printRowFieldValues, printRowHeaders, printRowAreaOnEveryPage, printUnusedFilterFields, printVertLines, rowFieldValueSeparator, usePrintAppearance], optionsPrint = { propertyName: 'optionsPrint', modelName: 'OptionsPrint', displayName: 'Print Options', localizationId: 'DevExpress.XtraReports.UI.XRPivotGrid.OptionsPrint', info: optionsPrintInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var columnTotalsLocation = { propertyName: 'columnTotalsLocation', modelName: '@ColumnTotalsLocation', displayName: 'Column Totals Location', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ColumnTotalsLocation', defaultVal: 'Far', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Near', displayValue: 'Near', localizationId: 'DevExpress.XtraPivotGrid.PivotTotalsLocation.Near' }, { value: 'Far', displayValue: 'Far ', localizationId: 'DevExpress.XtraPivotGrid.PivotTotalsLocation.Far' }] }, groupFieldsInCustomizationWindow = { propertyName: 'groupFieldsInCustomizationWindow', modelName: '@GroupFieldsInCustomizationWindow', displayName: 'Group Fields in the Customization Window', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsView.GroupFieldsInCustomizationWindow', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, rowTotalsLocation = {
    propertyName: 'rowTotalsLocation', modelName: '@RowTotalsLocation', displayName: 'Row Totals Location', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.RowTotalsLocation', defaultVal: 'Far', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'Near', displayValue: 'Near', localizationId: 'DevExpress.XtraPivotGrid.PivotRowTotalsLocation.Near' },
        { value: 'Far', displayValue: 'Far', localizationId: 'DevExpress.XtraPivotGrid.PivotRowTotalsLocation.Far' },
        { value: 'Tree', displayValue: 'Tree', localizationId: 'DevExpress.XtraPivotGrid.PivotRowTotalsLocation.Tree' }
    ]
}, rowTreeOffset = { propertyName: 'rowTreeOffset', modelName: '@RowTreeOffset', displayName: 'Row Tree Offset', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsViewBase.RowTreeOffset', defaultVal: 21, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, rowTreeWidth = { propertyName: 'rowTreeWidth', modelName: '@RowTreeWidth', displayName: 'Row Tree Width', localizationId: 'DevExpress.XtraPivotGrid.PivotGridOptionsViewBase.RowTreeWidth', defaultVal: 100, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, showColumnGrandTotalHeader = { propertyName: 'showColumnGrandTotalHeader', modelName: '@ShowColumnGrandTotalHeader', displayName: 'Show Column Grand Total Header', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowColumnGrandTotalHeader', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showColumnGrandTotals = { propertyName: 'showColumnGrandTotals', modelName: '@ShowColumnGrandTotals', displayName: 'Show Column Grand Totals', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowColumnGrandTotals', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showColumnHeaders = { propertyName: 'showColumnHeaders', modelName: '@ShowColumnHeaders', displayName: 'Show Column Headers', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowColumnHeaders', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showColumnTotals = { propertyName: 'showColumnTotals', modelName: '@ShowColumnTotals', displayName: 'Show Column Totals', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowColumnTotals', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showCustomTotalsForSingleValues = { propertyName: 'showCustomTotalsForSingleValues', modelName: '@ShowCustomTotalsForSingleValues', displayName: 'Show Custom Totals For Single Values', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowCustomTotalsForSingleValues', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showDataHeaders = { propertyName: 'showDataHeaders', modelName: '@ShowDataHeaders', displayName: 'Show Data Headers', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowDataHeaders', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showFilterHeaders = { propertyName: 'showFilterHeaders', modelName: '@ShowFilterHeaders', displayName: 'Show Filter Headers', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowFilterHeaders', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showFilterSeparatorBar = { propertyName: 'showFilterSeparatorBar', modelName: '@ShowFilterSeparatorBar', displayName: 'Show Filter Separator Bar', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowFilterSeparatorBar', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showGrandTotalsForSingleValues = { propertyName: 'showGrandTotalsForSingleValues', modelName: '@ShowGrandTotalsForSingleValues', displayName: 'Show Grand Totals For Single Values', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowGrandTotalsForSingleValues', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showHorzLines = { propertyName: 'showHorzLines', modelName: '@ShowHorzLines', displayName: 'Show Horz Lines', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowHorzLines', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showRowGrandTotalHeader = { propertyName: 'showRowGrandTotalHeader', modelName: '@ShowRowGrandTotalHeader', displayName: 'Show Row Grand Total Header', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowRowGrandTotalHeader', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showRowGrandTotals = { propertyName: 'showRowGrandTotals', modelName: '@ShowRowGrandTotals', displayName: 'Show Row Grand Totals', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowRowGrandTotals', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showRowHeaders = { propertyName: 'showRowHeaders', modelName: '@ShowRowHeaders', displayName: 'Show Row Headers', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowRowHeaders', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showRowTotals = { propertyName: 'showRowTotals', modelName: '@ShowRowTotals', displayName: 'Show Row Totals', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowRowTotals', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showTotalsForSingleValues = { propertyName: 'showTotalsForSingleValues', modelName: '@ShowTotalsForSingleValues', displayName: 'Show Totals For Single Values', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowTotalsForSingleValues', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, showVertLines = { propertyName: 'showVertLines', modelName: '@ShowVertLines', displayName: 'Show Vert Lines', localizationId: 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowVertLines', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, optionsViewInfo = [columnTotalsLocation, groupFieldsInCustomizationWindow, rowTotalsLocation, rowTreeOffset, rowTreeWidth, showColumnGrandTotalHeader, showColumnGrandTotals, showColumnHeaders, showColumnTotals, showCustomTotalsForSingleValues,
    showDataHeaders, showFilterHeaders, showFilterSeparatorBar, showGrandTotalsForSingleValues, showHorzLines, showRowGrandTotalHeader, showRowGrandTotals, showRowHeaders, showRowTotals,
    showTotalsForSingleValues, showVertLines], optionsView = { propertyName: 'optionsView', modelName: 'OptionsView', displayName: 'View Options', localizationId: 'DevExpress.XtraReports.UI.XRPivotGrid.OptionsView', info: optionsViewInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.pivotGridOptions = [optionsChartDataSource, optionsDataField, optionsData, optionsPrint, optionsView];
exports.pivotGridSerializationsInfo = [
    exports.pivotGridAppearances,
    anchoring_1.anchorVertical, anchoring_1.anchorHorizontal, metadata_1.dataSource, metadata_1.dataMember, exports.prefilter,
    metadata_1.keepTogether,
    pivotgridfield_1.pivotGridFieldsSerializable, scriptMetadata_1.pivotScripts, metadata_1.rtl
].concat(metadataGroups_1.baseControlProperties, metadataGroups_1.sizeLocation, metadataGroups_1.bookmarkGroup, style_1.pivotGridStyles, exports.pivotGridOptions);


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var metadata_1 = __webpack_require__(6);
var anchoring_1 = __webpack_require__(20);
var scriptMetadata_1 = __webpack_require__(13);
var dataBinding_1 = __webpack_require__(17);
var metadataGroups_1 = __webpack_require__(11);
var editorTemplates_1 = __webpack_require__(9);
var _metaUtils_1 = __webpack_require__(23);
exports.rtf = { propertyName: '_rtf', defaultVal: '', displayName: 'RTF', editor: analytics_widgets_1.editorTemplates.getEditor('stringArray'), localizationId: 'ASPxReportsStringId.ExportName_rtf' };
exports.textRtf = { propertyName: 'textRtf', defaultVal: '', displayName: 'Text', localizationId: 'DevExpress.XtraReports.UI.XRRichTextBase.RtfText', editor: analytics_widgets_1.editorTemplates.getEditor('stringArray') };
exports.serializableRtfString = { propertyName: 'serializableRtfString', modelName: '@SerializableRtfString' };
exports.newDocumentData = { propertyName: '_newDocumentData', displayName: 'Load File', localizationId: 'AnalyticsCoreStringId.UploadFile', editor: editorTemplates_1.designerEditorTemplates.getEditor('richTextLoad') };
exports.richTextSerializationsInfo = [
    exports.serializableRtfString,
    exports.rtf, exports.textRtf,
    exports.newDocumentData,
    metadata_1.nullValueText, metadata_1.keepTogetherDefaultValueFalse, anchoring_1.anchorVertical, anchoring_1.anchorHorizontal, scriptMetadata_1.textControlScripts,
    dataBinding_1.dataBindings(['Bookmark', 'Html', 'NavigateUrl', 'Rtf', 'Tag']),
    _metaUtils_1.createPopularBindingInfo({ bindingName: 'Html', propertyName: 'popularDataBindingHtml', displayName: 'Html Data Binding', localizationId: 'ReportStringId.STag_Name_HtmlDataBinding' }, false),
    _metaUtils_1.createPopularBindingInfo({ bindingName: 'Html', propertyName: 'popularExpressionHtml', displayName: 'Html Expression', localizationId: 'ReportStringId.STag_Name_HtmlExpressionBinding' }),
    _metaUtils_1.createPopularBindingInfo({ bindingName: 'Rtf', propertyName: 'popularDataBindingRtf', displayName: 'Rtf Data Binding', localizationId: 'ReportStringId.STag_Name_RtfDataBinding' }, false),
    _metaUtils_1.createPopularBindingInfo({ bindingName: 'Rtf', propertyName: 'popularExpressionRtf', displayName: 'Rtf Expression', localizationId: 'ReportStringId.STag_Name_RtfExpressionBinding' }),
].concat(metadataGroups_1.sizeLocation, metadataGroups_1.fontGroup, metadataGroups_1.commonControlProperties, metadataGroups_1.navigationGroup, metadataGroups_1.processGroup, metadataGroups_1.canGrowShrinkGroup).filter(function (x) { return x != metadata_1.accessibleDescription; });
exports.popularPropertiesRichText = ['rtf', 'popularDataBindingRtf', 'popularExpressionRtf', 'html', 'popularDataBindingHtml', 'popularExpressionHtml', '_newDocumentData', 'bookmark', 'bookmarkParent', 'canGrow', 'canShrink'];


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var anchoring_1 = __webpack_require__(20);
var scriptMetadata_1 = __webpack_require__(13);
var dataBinding_1 = __webpack_require__(17);
var metadataGroups_1 = __webpack_require__(11);
var analytics_widgets_1 = __webpack_require__(4);
exports.processHiddenCellMode = {
    propertyName: 'processHiddenCellMode',
    modelName: '@ProcessHiddenCellMode',
    displayName: 'Process Hidden Cell Mode',
    valuesArray: [
        { value: 'LeaveEmptySpace', displayValue: 'Leave Empty Space' },
        { value: 'ResizeCellsEqually', displayValue: 'Resize Cells Equally' },
        { value: 'ResizeCellsProportionally', displayValue: 'Resize Cells Proportionally' },
        { value: 'StretchPreviousCell', displayValue: 'Stretch Previous Cell' },
        { value: 'StretchNextCell', displayValue: 'Stretch Next Cell' },
        { value: 'DecreaseTableWidth', displayValue: 'Decrease Table Width' }
    ],
    defaultVal: 'LeaveEmptySpace',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    localizationId: 'DevExpress.XtraReports.UI.XRTable.ProcessHiddenCellMode'
};
exports.tableSerializationsInfo = [
    metadata_1.expressionableFont, metadata_1.foreColor, metadata_1.keepTogetherDefaultValueFalse, anchoring_1.anchorVertical, anchoring_1.anchorHorizontal, scriptMetadata_1.commonScripts,
    { propertyName: 'rows', modelName: 'Rows', array: true },
    dataBinding_1.dataBindings(['Bookmark', 'Tag']),
    metadata_1.rtl,
    metadata_1.textAlignment,
    exports.processHiddenCellMode,
].concat(metadataGroups_1.sizeLocation, metadataGroups_1.commonControlProperties, metadataGroups_1.bookmarkGroup).filter(function (x) { return x != metadata_1.accessibleDescription; });
exports.popularPropertiesTable = ['bookmark', 'bookmarkParent'];


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var anchoring_1 = __webpack_require__(20);
var scriptMetadata_1 = __webpack_require__(13);
var dataBinding_1 = __webpack_require__(17);
var _metaUtils_1 = __webpack_require__(23);
var metadataGroups_1 = __webpack_require__(11);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var $ = __webpack_require__(3);
exports.segmentWidth = { propertyName: 'segmentWidth', modelName: '@SegmentWidth', defaultVal: 4, from: analytics_utils_1.floatFromModel, editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), displayName: 'Segment Width', localizationId: 'DevExpress.XtraReports.UI.XRZipCode.SegmentWidth' };
exports.zipCodeSerializationInfo = [
    metadata_1.foreColor, exports.segmentWidth, metadata_1.keepTogether, anchoring_1.anchorVertical, anchoring_1.anchorHorizontal, scriptMetadata_1.textControlScripts,
    $.extend({}, metadata_1.text, { defaultVal: '0' }), metadata_1.textFormatString,
    dataBinding_1.dataBindings(['Bookmark', 'NavigateUrl', 'Tag', 'Text'])
].concat(_metaUtils_1.createSinglePopularBindingInfos('Text'), metadataGroups_1.sizeLocation, metadataGroups_1.commonControlProperties, metadataGroups_1.navigationGroup);
exports.popularPropertiesZipCode = ['text', 'popularDataBinding', 'segmentWidth', 'bookmark', 'bookmarkParent'];


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var metadata_1 = __webpack_require__(6);
var metadataGroups_1 = __webpack_require__(11);
var scriptMetadata_1 = __webpack_require__(13);
var showSignatureDate = {
    propertyName: 'showSignatureDate', modelName: '@ShowSignatureDate', defaultVal: 'true', from: analytics_utils_1.parseBool,
    displayName: 'Show Signature Date', localizationId: 'DevExpress.XtraReports.UI.XRPdfSignature.ShowSignatureDate',
    editor: analytics_widgets_1.editorTemplates.getEditor('bool')
};
var showCertificateName = {
    propertyName: 'showCertificateName', modelName: '@ShowCertificateName', defaultVal: 'true', from: analytics_utils_1.parseBool,
    displayName: 'Show Certificate Name', localizationId: 'DevExpress.XtraReports.UI.XRPdfSignature.ShowCertificateName',
    editor: analytics_widgets_1.editorTemplates.getEditor('bool')
};
var showLocation = {
    propertyName: 'showLocation', modelName: '@ShowLocation', defaultVal: 'true', from: analytics_utils_1.parseBool,
    displayName: 'Show Location', localizationId: 'DevExpress.XtraReports.UI.XRPdfSignature.ShowLocation',
    editor: analytics_widgets_1.editorTemplates.getEditor('bool')
};
var showSignatureReason = {
    propertyName: 'showSignatureReason', modelName: '@ShowSignatureReason', defaultVal: 'true', from: analytics_utils_1.parseBool,
    displayName: 'Show Signature Reason', localizationId: 'DevExpress.XtraReports.UI.XRPdfSignature.ShowSignatureReason',
    editor: analytics_widgets_1.editorTemplates.getEditor('bool')
};
var showDistinguishedName = {
    propertyName: 'showDistinguishedName', modelName: '@ShowDistinguishedName', defaultVal: 'true', from: analytics_utils_1.parseBool,
    displayName: 'Show Distinguished Name', localizationId: 'DevExpress.XtraReports.UI.XRPdfSignature.ShowDistinguishedName',
    editor: analytics_widgets_1.editorTemplates.getEditor('bool')
};
var showCaptions = {
    propertyName: 'showCaptions', modelName: '@ShowCaptions', defaultVal: 'true', from: analytics_utils_1.parseBool,
    displayName: 'Show Captions', localizationId: 'DevExpress.XtraReports.UI.XRPdfSignature.ShowCaptions',
    editor: analytics_widgets_1.editorTemplates.getEditor('bool')
};
var displayDocumentSignature = {
    propertyName: 'displayDocumentSignature', modelName: '@DisplayDocumentSignature', defaultVal: 'true', from: analytics_utils_1.parseBool,
    displayName: 'Display Document Signature', localizationId: 'DevExpress.XtraReports.UI.XRPdfSignature.DisplayDocumentSignature',
    editor: analytics_widgets_1.editorTemplates.getEditor('bool')
};
var imageDisplayMode = {
    propertyName: 'imageDisplayMode', modelName: '@ImageDisplayMode', defaultVal: 'Show',
    displayName: 'Image Display Mode', localizationId: 'DevExpress.XtraReports.UI.XRPdfSignature.ImageDisplayMode',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { displayValue: 'Show', localizationId: 'DevExpress.XtraPrinting.SignatureImageDisplayMode.Show', value: 'Show' },
        { displayValue: 'Hide', localizationId: 'DevExpress.XtraPrinting.SignatureImageDisplayMode.Hide', value: 'Hide' },
        { displayValue: 'Show Certificate Name As Image', localizationId: 'DevExpress.XtraPrinting.SignatureImageDisplayMode.ShowCertificateNameAsImage', value: 'ShowCertificateNameAsImage' }
    ]
};
var signatureOptionsInfo = [
    imageDisplayMode, displayDocumentSignature, showCaptions, showCertificateName, showDistinguishedName, showLocation, showSignatureDate, showSignatureReason
];
exports.signatureOptions = {
    propertyName: 'signatureOptions', modelName: 'SignatureOptions', visible: false,
    displayName: 'Signature Options', localizationId: 'DevExpress.XtraReports.UI.XRPdfSignature.SignatureOptions',
    editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'),
    from: function (model, serializer) {
        if (model === void 0) { model = {}; }
        if (serializer === void 0) { serializer = new analytics_utils_1.ModelSerializer(); }
        var options = {
            getInfo: function () { return signatureOptionsInfo; },
            isPropertyDisabled: function (propertyName) {
                return propertyName !== displayDocumentSignature.propertyName && !!this[displayDocumentSignature.propertyName]();
            }
        };
        serializer.deserialize(options, model);
        return options;
    },
    toJsonObject: function (value, serializer, refs) {
        return serializer.serialize(value, signatureOptionsInfo, refs);
    }
};
exports.pdfSignatureInfo = [exports.signatureOptions, scriptMetadata_1.commonScripts].concat(metadataGroups_1.sizeLocation, metadataGroups_1.commonControlProperties, metadataGroups_1.fontGroup, metadataGroups_1.navigationGroup).filter(function (x) { return x != metadata_1.accessibleDescription; });


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var style_1 = __webpack_require__(21);
var _chart_1 = __webpack_require__(19);
var xrPivotgrid_1 = __webpack_require__(211);
var xrBarcode_1 = __webpack_require__(129);
var metadata_1 = __webpack_require__(6);
var xrCrossband_1 = __webpack_require__(206);
var pivotgridfield_1 = __webpack_require__(70);
var xrShape_1 = __webpack_require__(139);
var xrCharactercomb_1 = __webpack_require__(204);
var xrCheckbox_1 = __webpack_require__(205);
var xrLine_1 = __webpack_require__(209);
var xrReport_1 = __webpack_require__(39);
var xrSparkline_1 = __webpack_require__(140);
var xrGauge_1 = __webpack_require__(208);
var formattingrules_1 = __webpack_require__(36);
var anchoring_1 = __webpack_require__(20);
var bandsMetadata_1 = __webpack_require__(26);
var xrDetailBandMetaData_1 = __webpack_require__(124);
var xrSubreport_1 = __webpack_require__(96);
var groupfieldMetaData_1 = __webpack_require__(52);
var xrGroupBandMetaData_1 = __webpack_require__(201);
var multiColumnMetaData_1 = __webpack_require__(185);
var xrPageinfo_1 = __webpack_require__(210);
var xrPageBandMetaData_1 = __webpack_require__(202);
var _common_1 = __webpack_require__(35);
var xrTableCell_1 = __webpack_require__(145);
var xrZipcode_1 = __webpack_require__(214);
var xrPicturebox_1 = __webpack_require__(89);
var scriptMetadata_1 = __webpack_require__(13);
var xrTableOfContents_1 = __webpack_require__(141);
var editOptions_1 = __webpack_require__(47);
var sortingOptions_1 = __webpack_require__(88);
var xrTable_1 = __webpack_require__(213);
var sortBySummary_1 = __webpack_require__(94);
var xrRichText_1 = __webpack_require__(212);
var xrChart_1 = __webpack_require__(144);
var dataBinding_1 = __webpack_require__(17);
var xrPdfContent_1 = __webpack_require__(137);
var analytics_utils_1 = __webpack_require__(0);
var _editorTemplates_1 = __webpack_require__(22);
var xrPdfSignature_1 = __webpack_require__(215);
var layoutOptions_1 = __webpack_require__(143);
var printOptions_1 = __webpack_require__(207);
var xrCrossTabCell_1 = __webpack_require__(99);
var fields_1 = __webpack_require__(57);
var metadata_2 = __webpack_require__(453);
exports.groups = {
    'Styles': {
        info: style_1.stylesInfo,
        displayName: function () { return analytics_utils_1.getLocalization('Styles', 'DevExpress.XtraReports.UI.XRPivotGrid.Styles'); }
    },
    'Appearance': {
        info: [
            _chart_1.appearanceName, xrPivotgrid_1.pivotGridAppearances, xrBarcode_1.alignment, metadata_1.backColor, metadata_1.borderColor,
            metadata_1.borderDashStyle, xrCrossband_1.borderDashStyleCrossband, metadata_1.borderWidth, metadata_1.borders,
            pivotgridfield_1.caption, pivotgridfield_1.cellFormat, pivotgridfield_1.columnValueLineCount,
            pivotgridfield_1.displayFolder, pivotgridfield_1.emptyCellText, pivotgridfield_1.emptyValueText,
            xrShape_1.fillColor, metadata_1.font, metadata_1.expressionableFont, xrCharactercomb_1.characterCombFont, metadata_1.foreColor,
            xrCheckbox_1.glyphOptions,
            pivotgridfield_1.grandTotalCellFormat, pivotgridfield_1.grandTotalText,
            xrLine_1.lineDirection, metadata_1.lineStyle, metadata_1.lineWidth, metadata_1.padding, xrReport_1.pageColor,
            _chart_1.paletteName, metadata_1.imageType, pivotgridfield_1.rowValueLineCount,
            xrPdfSignature_1.signatureOptions, xrSparkline_1.sparklineFake,
            style_1.stylePriority, metadata_1.textAlignment, metadata_1.textTrimming, pivotgridfield_1.totalCellFormat,
            pivotgridfield_1.totalValueFormat, pivotgridfield_1.valueFormat, xrGauge_1.viewStyle, xrGauge_1.viewTheme,
            xrGauge_1.viewType, xrReport_1.watermark, formattingrules_1.formattingRuleLinks,
            xrCrossTabCell_1.columnIndex, xrCrossTabCell_1.rowIndex
        ],
        displayName: function () { return analytics_utils_1.getLocalization('Appearance', 'DevExpress.XtraReports.UI.XRPivotGrid.Appearance'); }
    },
    'Behavior': {
        info: [
            pivotgridfield_1.allowedAreas, anchoring_1.anchorVertical, anchoring_1.anchorHorizontal, metadata_1.angle,
            pivotgridfield_1.area, pivotgridfield_1.areaIndexEditable, xrBarcode_1.autoModule, metadata_1.allowMarkupText, metadata_1.autoWidth,
            xrBarcode_1.barCodeOrientation, metadata_1.canGrow, metadata_1.canPublish, metadata_1.canShrink, formattingrules_1.conditionObj,
            bandsMetadata_1.drillDownControl, bandsMetadata_1.drillDownDetailReportExpanded, xrDetailBandMetaData_1.hierarchyPrintOptions, xrDetailBandMetaData_1.fillEmptySpace,
            xrSubreport_1.generateOwnPages, xrCrossTabCell_1.columnAutoWidthMode, xrCrossTabCell_1.rowAutoHeightMode, xrCrossTabCell_1.rowVisible, xrCrossTabCell_1.columnVisible,
            pivotgridfield_1.groupInterval, pivotgridfield_1.groupIntervalNumericRange, pivotgridfield_1.totalsVisibility,
            metadata_1.displayName, formattingrules_1.formatting, groupfieldMetaData_1.groupFields, xrGroupBandMetaData_1.groupUnion, xrGroupBandMetaData_1.groupFooterUnion,
            metadata_1.keepTogether, bandsMetadata_1.keepTogetherWithDetailReports, bandsMetadata_1.level,
            xrBarcode_1.moduleInfo, metadata_1.multiline, multiColumnMetaData_1.multiColumn,
            bandsMetadata_1.pageBreak, xrPageinfo_1.pageInfo, bandsMetadata_1.printAtBottom, xrPageBandMetaData_1.printOn, bandsMetadata_1.printAcrossBands, metadata_1.processDuplicatesMode, metadata_1.processDuplicatesTarget, metadata_1.processNullValues,
            bandsMetadata_1.repeatEveryPage, xrReport_1.measureUnit, _common_1.rotated, xrPageinfo_1.runningBand, xrReport_1.requestParameters, xrTableCell_1.rowSpan,
            xrZipcode_1.segmentWidth, xrShape_1.shapeFake, xrPicturebox_1.sizing, xrPicturebox_1.imageAlignment, xrReport_1.showPreviewMarginLines, xrBarcode_1.showText, xrPageinfo_1.startPageNumber, xrShape_1.stretch, xrBarcode_1.barcodeFake,
            metadata_1.textFitMode, xrReport_1.verticalContentSplitting, metadata_1.visible, metadata_1.wordWrap, xrReport_1.scriptLanguage,
            xrReport_1.reportExportOptionsSerializationInfo, xrReport_1.horizontalContentSplitting,
            xrReport_1.scriptReferencesString, scriptMetadata_1.allScripts, xrGroupBandMetaData_1.sortingSummary,
            xrTableOfContents_1.tocTitle, xrTableOfContents_1.tocLevelDefault, xrTableOfContents_1.tocLevels, xrTableOfContents_1.maxNestingLevel,
            editOptions_1.editOptions, editOptions_1.textEditOptions, xrCheckbox_1.checkEditOptions, xrPicturebox_1.imageEditOptions, sortingOptions_1.interactiveSorting, pivotgridfield_1.sortBySummary,
            xrTable_1.processHiddenCellMode, layoutOptions_1.crossTabLayoutOptions, printOptions_1.crossTabPrintOptions
        ],
        displayName: function () { return analytics_utils_1.getLocalization('Behavior', 'ReportStringId.CatBehavior'); }
    },
    'Data': {
        info: [
            metadata_1.accessibleDescription, xrGauge_1.actualValue, _chart_1.seriesDataMember,
            xrCheckbox_1.checkState, xrCheckbox_1.checked, _editorTemplates_1.chartDataSource,
            metadata_1.dataSource, metadata_1.dataMember, metadata_1.dataAdapter, pivotgridfield_1.expandedInFieldsGroup, _chart_1.pivotGridDataSourceOptions,
            pivotgridfield_1.fieldName, metadata_1.filterStringEditable,
            xrPicturebox_1.imageSource, xrPicturebox_1.imageUrl, xrGauge_1.tickmarkCount, xrGauge_1.maximum, xrGauge_1.minimum, metadata_1.nullValueText, xrPivotgrid_1.prefilter,
            pivotgridfield_1.runningTotal, groupfieldMetaData_1.sortFields, metadata_1.summary, pivotgridfield_1.showNewValues,
            pivotgridfield_1.sortMode, pivotgridfield_1.sortOrder, pivotgridfield_1.summaryDisplayType,
            sortBySummary_1.summaryType,
            xrGauge_1.targetValue, metadata_1.tag, metadata_1.text, metadata_1.textArea, xrRichText_1.rtf, xrRichText_1.textRtf, xrRichText_1.newDocumentData, pivotgridfield_1.topValueCount, pivotgridfield_1.topValueShowOthers, pivotgridfield_1.topValueType,
            pivotgridfield_1.unboundExpression, pivotgridfield_1.unboundExpressionMode, pivotgridfield_1.unboundFieldName, pivotgridfield_1.unboundType, pivotgridfield_1.useNativeFormat,
            metadata_1.xlsxFormatString,
            pivotgridfield_1.pivotGridFieldsSerializable,
            xrSparkline_1.valueMember, xrSparkline_1.valueRange,
            xrSubreport_1.reportSourceUrl, xrReport_1.calculatedFields, xrSubreport_1.parameterBindings, xrReport_1.parametersInfo, xrChart_1.controlParametersInfo,
            dataBinding_1.dataBindings([]), metadata_1.textFormatString,
            xrPdfContent_1.pdfSource, xrPdfContent_1.pdfSourceUrl,
            fields_1.rowFields, fields_1.columnFields, fields_1.dataFields,
            fields_1.crossTabGroupInterval, fields_1.crossTabGroupIntervalNumericRange, fields_1.crossTabSortBySummaryInfo,
            metadata_2.pageRange, xrPdfContent_1.pageCount
        ],
        displayName: function () { return analytics_utils_1.getLocalization('Data', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Data'); }
    },
    'Design': {
        info: [metadata_1.name, xrReport_1.snapGridSize, xrReport_1.drawWatermark, xrReport_1.language],
        displayName: function () { return analytics_utils_1.getLocalization('Design', 'ReportStringId.CatDesign'); }
    },
    'Layout': {
        info: [
            xrCharactercomb_1.cellHeight, xrCharactercomb_1.cellHorizontalSpacing, xrCharactercomb_1.cellSizeMode, xrCharactercomb_1.cellVerticalSpacing, xrCharactercomb_1.cellWidth,
            xrCrossband_1.startBand, xrCrossband_1.startPoint, xrCrossband_1.endBand, xrCrossband_1.endPoint, bandsMetadata_1.height,
            metadata_1.location, metadata_1.size, pivotgridfield_1.minWidth, xrCrossband_1.width
        ],
        displayName: function () { return analytics_utils_1.getLocalization('Layout', 'DevExpress.XtraReports.UI.MultiColumn.Layout'); }
    },
    'Navigation': {
        info: [
            metadata_1.bookmark, metadata_1.bookmarkParent, xrReport_1.bookmarkDuplicateSuppress, metadata_1.target, metadata_1.navigateUrl
        ],
        displayName: function () { return analytics_utils_1.getLocalization('Navigation', 'ASPxReportsStringId.DocumentViewer_RibbonNavigationGroupText'); }
    },
    'Page Settings': {
        info: [
            xrReport_1.landscape, xrReport_1.rollPaper, xrReport_1.pageWidth, xrReport_1.pageHeight, xrReport_1.paperKind, xrReport_1.margins,
        ],
        displayName: function () { return analytics_utils_1.getLocalization('Page Settings', 'DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PageSettings'); }
    },
    'Printing': {
        info: [metadata_1.rtl, xrReport_1.rtlReport, xrReport_1.rtlLayout, metadata_1.reportPrintOptions],
        displayName: function () { return analytics_utils_1.getLocalization('Printing', 'ReportStringId.CatPrinting'); }
    },
    'Options': {
        info: xrPivotgrid_1.pivotGridOptions.concat(pivotgridfield_1.options),
        displayName: function () { return analytics_utils_1.getLocalization('Options', 'DevExpress.XtraPivotGrid.PivotGridFieldBase.Options'); }
    },
    'KPI': {
        info: [pivotgridfield_1.KPIGraphic],
        displayName: function () { return analytics_utils_1.getLocalization('Appearance', 'DevExpress.XtraReports.UI.XRPivotGrid.Appearance'); }
    },
};


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var analytics_wizard_1 = __webpack_require__(7);
var ReportWizardSettings = (function (_super) {
    __extends(ReportWizardSettings, _super);
    function ReportWizardSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ReportWizardSettings.prototype.createDefault = function (wizardSettings) {
        var newSettings = analytics_internal_1.extend({}, _super.prototype.createDefault.call(this, wizardSettings), { useFullscreenWizard: true, useMasterDetailWizard: true });
        if (!wizardSettings)
            return newSettings;
        if (wizardSettings.useFullscreenWizard !== undefined)
            newSettings.useFullscreenWizard = wizardSettings.useFullscreenWizard;
        if (wizardSettings.useMasterDetailWizard !== undefined)
            newSettings.useMasterDetailWizard = wizardSettings.useMasterDetailWizard;
        return newSettings;
    };
    return ReportWizardSettings;
}(analytics_wizard_1.DataSourceWizardSettings));
exports.ReportWizardSettings = ReportWizardSettings;


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var parametersDialogs_1 = __webpack_require__(320);
var parameter_1 = __webpack_require__(29);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var ParametersViewModel = (function (_super) {
    __extends(ParametersViewModel, _super);
    function ParametersViewModel(report) {
        var _this = _super.call(this) || this;
        _this.addAction = {
            clickAction: function () {
                return _this.add();
            },
            imageClassName: 'dxrd-image-add',
            imageTemplateName: 'dxrd-svg-operations-add',
            text: 'Add parameter',
            displayText: function () { return analytics_utils_1.getLocalization('Add parameter', 'AnalyticsCoreStringId.FieldListActions_AddParameter'); }
        };
        _this.removeAction = {
            clickAction: function (item) {
                _this.remove(item.data);
            },
            imageClassName: 'dxrd-image-recycle-bin',
            imageTemplateName: 'dxrd-svg-operations-recycle_bin',
            text: 'Remove parameter',
            displayText: function () { return analytics_utils_1.getLocalization('Remove parameter', 'ASPxReportsStringId.ReportDesigner_FieldListActions_RemoveParameter'); }
        };
        _this.editAction = {
            clickAction: function (item) {
                if (item.data instanceof parameter_1.Parameter) {
                    _this.edit(item.data);
                }
                else if (item.hasItems) {
                    _this.edit(item.items()[0].data);
                }
                else {
                    _this.edit(undefined);
                }
            },
            imageClassName: 'dxrd-image-edit',
            imageTemplateName: 'dxrd-svg-operations-edit',
            text: 'Edit parameter',
            displayText: function () { return analytics_utils_1.getLocalization('Edit parameter', 'ASPxReportsStringId.ReportDesigner_FieldListActions_EditParameter'); }
        };
        _this.parameters = report.parameters;
        _this.remove = function (parameter) {
            _this.parameters.splice(_this.parameters.indexOf(parameter), 1);
        };
        _this.add = function () {
            _this._addParametersDialog.show();
        };
        _this.edit = function (parameter) {
            _this._editParametersDialog.show(parameter);
        };
        _this._disposables.push(_this._addParametersDialog = new parametersDialogs_1.AddParameterDialog(report), _this._editParametersDialog = new parametersDialogs_1.EditParametersDialog(report));
        return _this;
    }
    ParametersViewModel.prototype.getActions = function (context) {
        var result = [];
        if (context.path.indexOf(parameter_1.Parameter.ParametersRefString) === 0) {
            if (context.pathParts.length === 1) {
                result.push(this.editAction);
                result.push(this.addAction);
            }
            else if (context.pathParts.length === 2) {
                result.push(this.editAction);
                result.push(this.removeAction);
            }
        }
        return result;
    };
    ParametersViewModel.prototype.beforeItemsFilled = function (request, items) {
        if (request.ref !== parameter_1.Parameter.ParametersRefString)
            return false;
        items.push.apply(items, request.fullPath === parameter_1.Parameter.ParametersRefString ? this.parameters.slice(0) : []);
        this.parameters().forEach(function (parameter) {
            if (parameter.isList && parameter.parameterName() === request.path) {
                items.push.apply(items, parameter.getRangeParameters());
            }
        });
        return true;
    };
    ParametersViewModel.prototype.afterItemsFilled = function (request, items) {
        if (!request.fullPath) {
            var parameters = analytics_internal_1.findFirstItemMatchesCondition(items, function (item) { return item.specifics === 'parameters'; });
            if (parameters)
                parameters.displayName = analytics_utils_1.getLocalization('Parameters', 'DevExpress.XtraReports.UI.XtraReport.Parameters');
            var noneDataSource = !request.fullPath && analytics_internal_1.findFirstItemMatchesCondition(items, function (item) { return item.specifics === 'none'; });
            if (noneDataSource)
                noneDataSource.displayName = analytics_internal_1.localizeNoneString('none');
        }
    };
    return ParametersViewModel;
}(analytics_utils_1.Disposable));
exports.ParametersViewModel = ParametersViewModel;


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _sqlDataSourceEditor_1 = __webpack_require__(147);
var _dataUtils_1 = __webpack_require__(60);
var _reportDataSourceService_1 = __webpack_require__(72);
var _qBRequestWrapper_1 = __webpack_require__(73);
var analytics_wizard_1 = __webpack_require__(7);
var analytics_data_1 = __webpack_require__(455);
var analytics_utils_1 = __webpack_require__(0);
var $ = __webpack_require__(3);
var JsonEditSchemaIterator = (function (_super) {
    __extends(JsonEditSchemaIterator, _super);
    function JsonEditSchemaIterator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    JsonEditSchemaIterator.prototype.getNextPageId = function (pageId) {
        if (!pageId)
            return analytics_wizard_1.JsonDataSourceWizardPageId.ChooseJsonSchemaPage;
        return _super.prototype.getNextPageId.call(this, pageId);
    };
    return JsonEditSchemaIterator;
}(analytics_wizard_1.DataSourceWizardPageIterator));
exports.JsonEditSchemaIterator = JsonEditSchemaIterator;
var JsonDataSourceEditor = (function (_super) {
    __extends(JsonDataSourceEditor, _super);
    function JsonDataSourceEditor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.editSchemaAction = {
            clickAction: function (item) {
                _this.editSchema(new analytics_utils_1.PathRequest(item.path).id);
            },
            position: 0,
            imageClassName: 'dx-image-edit',
            imageTemplateName: 'dxrd-svg-operations-edit',
            text: analytics_utils_1.getLocalization('Edit Schema...', 'DataAccessUIStringId.JsonDataSourceDesignerVerbEditSchema')
        };
        return _this;
    }
    JsonDataSourceEditor.prototype._applyDataSourceChange = function (source, dest) {
        var _this = this;
        return JsonDataSourceEditor.createJsonDataSourceInfo(source)
            .done(function (result) {
            if (dest) {
                dest.data['base64'](result.base64());
            }
            else {
                _dataUtils_1.addDataSourceToReport(_this._dsHelper(), _this._reportViewModel(), _this._undoEngine(), _this._itemsProvider(), result);
            }
        });
    };
    JsonDataSourceEditor.prototype.editSchema = function (dataSourceID) {
        var _this = this;
        var dataSourceInfo = this._findDataSource(dataSourceID);
        _reportDataSourceService_1.ReportDataSourceService.jsonDataSourceFromBase64(dataSourceInfo.data['base64']())
            .done(function (result) {
            var jsonDataSource = new analytics_data_1.JsonDataSource(JSON.parse(result.jsonDataSourceJSON), undefined, _qBRequestWrapper_1.QBRequestWrapper());
            jsonDataSource.name(dataSourceInfo.name);
            var jsonSerialized = new analytics_utils_1.ModelSerializer().serialize(jsonDataSource);
            var beforeInitEvent = function (e) {
                e.state.dataSourceType = analytics_wizard_1.DataSourceType.Json;
            };
            _this._wizard.events.addHandler('beforeInitialize', beforeInitEvent);
            _this._wizard.initialize(analytics_wizard_1._createDefaultDataSourceWizardState(undefined, {
                connectionName: jsonDataSource.connectionName(),
                dataSourceName: jsonSerialized['@Name'],
                jsonScheme: JSON.stringify(jsonSerialized['Schema']),
                jsonSource: JSON.stringify(jsonSerialized['Source']),
                rootElement: jsonSerialized['@RootElement']
            }), function (factory, stateManager) { return new JsonEditSchemaIterator(factory, stateManager, _this._wizard['_wizardOptions']); });
            _this._wizard.events.removeHandler('beforeInitialize', beforeInitEvent);
            _this._wizard.start();
            _this._wizard.isVisible(true);
        });
    };
    JsonDataSourceEditor.prototype.applyDataSourceWizardChanges = function (dataSourceWizardModel) {
        var jsonDataSource = analytics_wizard_1._restoreJsonDataSourceFromState(dataSourceWizardModel.jsonDataSourceWizard, undefined, dataSourceWizardModel.dataSourceId);
        var dataSource = jsonDataSource && this._dsHelper().findDataSourceInfoByName(jsonDataSource.name());
        return this._applyDataSourceChange(jsonDataSource, dataSource);
    };
    JsonDataSourceEditor.prototype.saveJsonSource = function (state, connections) {
        var _this = this;
        var jsonDataSourceState = state.jsonDataSourceWizard;
        var jsonDataSource = analytics_wizard_1._restoreJsonDataSourceFromState(jsonDataSourceState);
        var deferred = $.Deferred();
        _qBRequestWrapper_1.QBRequestWrapper().saveJsonSource(state.jsonDataSourceWizard.newConnectionName, jsonDataSource)
            .done(function (connectionName) {
            if (connections.json().every(function (x) { return x.name !== jsonDataSourceState.newConnectionName; })) {
                connections.json.push({
                    name: jsonDataSourceState.newConnectionName,
                    description: jsonDataSourceState.newConnectionName
                });
            }
            jsonDataSourceState.connectionName = connectionName;
            jsonDataSourceState.jsonSource = null;
            _this.applyDataSourceWizardChanges(state)
                .done(function (result) { deferred.resolve(result); })
                .fail(function () { return deferred.reject(); });
        })
            .fail(function (result) { JsonDataSourceEditor._onFail(result, deferred); });
        return deferred.promise();
    };
    JsonDataSourceEditor.createJsonDataSourceInfo = function (source) {
        var deferred = $.Deferred();
        _reportDataSourceService_1.ReportDataSourceService.getJsonDataSourceBase64(source)
            .done(function (result) {
            deferred.resolve({
                name: 'jsonDataSource',
                id: source.id,
                data: {
                    '@ObjectType': 'DevExpress.DataAccess.Json.JsonDataSource',
                    '@Base64': result.base64
                },
                isJsonDataSource: true,
                base64: function () { return result.base64; }
            });
        })
            .fail(function (result) { JsonDataSourceEditor._onFail(result, deferred); });
        return deferred.promise();
    };
    JsonDataSourceEditor.prototype.getActions = function (context) {
        var result = [];
        if (!context.data)
            return result;
        if (context.data['isJsonDataSource'] === true) {
            result.push(this.editSchemaAction);
        }
        return result;
    };
    return JsonDataSourceEditor;
}(_sqlDataSourceEditor_1.DataSourceEditorBase));
exports.JsonDataSourceEditor = JsonDataSourceEditor;


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function getDataSourceDataMember(control) {
    var dataSource = null, dataMember = null;
    while (!dataSource && control) {
        dataSource = dataSource || control['dataSource'] && control['dataSource']();
        dataMember = dataMember || control['dataMember'] && control['dataMember']();
        control = control.parentModel();
    }
    return { dataSource: dataSource, dataMember: dataMember };
}
exports.getDataSourceDataMember = getDataSourceDataMember;


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var settings_1 = __webpack_require__(12);
var analytics_internal_1 = __webpack_require__(2);
var $ = __webpack_require__(3);
var ReportScriptService = (function () {
    function ReportScriptService() {
    }
    ReportScriptService.validateScripts = function (report) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'validateScripts', encodeURIComponent(JSON.stringify({
            report: JSON.stringify({
                'XtraReportsLayoutSerializer': report.serialize()
            })
        })));
    };
    ReportScriptService.getCompletions = function (editor, session, pos, prefix, callback, report, editorInstance, guid) {
        if (guid) {
            return analytics_internal_1.ajax(settings_1.HandlerUri(), 'getCompletions', encodeURIComponent(JSON.stringify({
                Line: pos.row,
                Column: pos.column,
                Guid: guid,
                Script: editorInstance.getValue()
            })));
        }
        else {
            return $.Deferred().resolve().promise();
        }
    };
    ReportScriptService.setCodeDom = function (key, reportLayout) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'setReportLayout', encodeURIComponent(JSON.stringify({
            ReportLayout: reportLayout,
            Key: key
        })));
    };
    return ReportScriptService;
}());
exports.ReportScriptService = ReportScriptService;


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var ReportDummyCreator = (function () {
    function ReportDummyCreator() {
    }
    ReportDummyCreator._createDummy = function (report) {
        Object.keys(report).forEach(function (propertyName) {
            if (analytics_internal_1.isPlainObject(report[propertyName])) {
                ReportDummyCreator._createDummy(report[propertyName]);
                if (analytics_internal_1.isEmptyObject(report[propertyName]) || (Object.keys(report[propertyName]).length === 1 && report[propertyName]['@Ref']))
                    delete report[propertyName];
            }
            else if (propertyName !== '@Ref' &&
                propertyName.indexOf('Item') !== 0 &&
                propertyName !== '@Name' &&
                propertyName !== 'Name' &&
                propertyName !== '@ControlType' &&
                propertyName !== '@ObjectType' &&
                propertyName !== '@Content' &&
                propertyName !== '@Type' &&
                report[propertyName].toString().indexOf('#Ref-') !== 0) {
                delete report[propertyName];
            }
        });
        return report;
    };
    return ReportDummyCreator;
}());
exports.ReportDummyCreator = ReportDummyCreator;


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _sqlDataSourceEditor_1 = __webpack_require__(147);
var _reportDataSourceService_1 = __webpack_require__(72);
var _dataUtils_1 = __webpack_require__(60);
var analytics_wizard_1 = __webpack_require__(7);
var analytics_utils_1 = __webpack_require__(0);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var ObjectDataSourceEditParametersIterator = (function (_super) {
    __extends(ObjectDataSourceEditParametersIterator, _super);
    function ObjectDataSourceEditParametersIterator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ObjectDataSourceEditParametersIterator.prototype.getNextPageId = function (pageId) {
        if (!pageId)
            return analytics_wizard_1.ObjectDataSourceWizardPageId.ConfigureParametersPage;
        return _super.prototype.getNextPageId.call(this, pageId);
    };
    return ObjectDataSourceEditParametersIterator;
}(analytics_wizard_1.DataSourceWizardPageIterator));
exports.ObjectDataSourceEditParametersIterator = ObjectDataSourceEditParametersIterator;
var ObjectDataSourceEditor = (function (_super) {
    __extends(ObjectDataSourceEditor, _super);
    function ObjectDataSourceEditor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.editParametersAction = {
            clickAction: function (item) {
                _this.editSchema(new analytics_utils_1.PathRequest(item.path).id);
            },
            position: 0,
            imageClassName: 'dx-image-edit',
            imageTemplateName: 'dxrd-svg-operations-edit',
            text: analytics_utils_1.getLocalization('Edit Parameters...', 'AnalyticsCoreStringId.ObjectDSWizard_EditParameters')
        };
        return _this;
    }
    ObjectDataSourceEditor.createObjectDataSourceInfo = function (objectDataSourceWizard, objectDataSource, base64) {
        var deferred = $.Deferred();
        (base64 ?
            _reportDataSourceService_1.ReportDataSourceService.editObjectDataSourceParameters(objectDataSourceWizard, base64) :
            _reportDataSourceService_1.ReportDataSourceService.getObjectDataSourceBase64(objectDataSourceWizard))
            .done(function (base64) {
            var ctors = objectDataSourceWizard.ctor;
            var name = objectDataSourceWizard.dataSourceName || 'objectDataSource';
            var dataMembers = objectDataSourceWizard.dataMember;
            var info = {
                base64: base64,
                data: {
                    '@ObjectType': 'DevExpress.DataAccess.ObjectBinding.ObjectDataSource',
                    '@Base64': base64
                },
                name: name,
                id: objectDataSource.id,
                isObjectDataSource: true
            };
            info['hasParams'] = ((ctors && ctors.parameters.length > 0) || (dataMembers && dataMembers.parameters.length > 0));
            deferred.resolve(info);
        }).fail(function (error) {
            deferred.reject();
        });
        return deferred.promise();
    };
    ObjectDataSourceEditor.prototype.applyDataSourceWizardChanges = function (dataSourceWizardModel) {
        var _this = this;
        var objectDataSource = analytics_wizard_1._restoreObjectDataSourceFromState(dataSourceWizardModel.objectDataSourceWizard);
        var dataSourceInfo = objectDataSource && this._dsHelper().findDataSourceInfoByName(objectDataSource.name());
        var deferred = $.Deferred();
        ObjectDataSourceEditor.createObjectDataSourceInfo(dataSourceWizardModel.objectDataSourceWizard, objectDataSource, dataSourceInfo && dataSourceInfo.data.base64())
            .done(function (info) {
            if (dataSourceInfo) {
                dataSourceInfo.base64 = info.base64;
                dataSourceInfo.data.base64(info.base64);
                deferred.resolve(dataSourceInfo);
            }
            else {
                _dataUtils_1.addDataSourceToReport(_this._dsHelper(), _this._reportViewModel(), _this._undoEngine(), _this._itemsProvider(), info);
                deferred.resolve(info);
            }
        })
            .fail(function (error) {
            deferred.reject();
        });
        return deferred.promise();
    };
    ObjectDataSourceEditor.prototype.getActions = function (context) {
        var result = [];
        if (context.data && context.data['isObjectDataSource'] === true && context.data['hasParams']) {
            result.push(this.editParametersAction);
        }
        return result;
    };
    ObjectDataSourceEditor.prototype.editSchema = function (dataSourceID) {
        var _this = this;
        var dataSourceInfo = this._findDataSource(dataSourceID);
        _reportDataSourceService_1.ReportDataSourceService.objectDataSourceFromBase64(dataSourceInfo.data['base64']()).done(function (result) {
            var beforeInitEvent = function (e) {
                e.state.dataSourceType = analytics_wizard_1.DataSourceType.Object;
            };
            _this._wizard.events.addHandler('beforeInitialize', beforeInitEvent);
            _this._wizard.initialize(analytics_wizard_1._createDefaultDataSourceWizardState(undefined, undefined, {
                ctor: result.ctor,
                dataMember: result.dataMember,
                selectedType: result.selectedType,
                dataSourceName: dataSourceInfo.name
            }), function (factory, stateManager) { return new ObjectDataSourceEditParametersIterator(factory, stateManager, _this._wizard['_wizardOptions']); });
            _this._wizard.events.removeHandler('beforeInitialize', beforeInitEvent);
            _this._wizard.start();
            _this._wizard.isVisible(true);
        }).fail(function (result) {
            if (analytics_internal_1.getErrorMessage(result))
                analytics_internal_1.ShowMessage(analytics_internal_1.getErrorMessage(result));
        });
    };
    return ObjectDataSourceEditor;
}(_sqlDataSourceEditor_1.DataSourceEditorBase));
exports.ObjectDataSourceEditor = ObjectDataSourceEditor;


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var reportWizardState_1 = __webpack_require__(18);
var CommonRequestModel = (function () {
    function CommonRequestModel(state) {
        if (state.reportType === reportWizardState_1.ReportType.Label) {
            this.CustomLabelInformation = {
                Height: state.labelDetails.height,
                HorizontalPitch: state.labelDetails.hPitch,
                LeftMargin: state.labelDetails.leftMargin,
                RightMargin: state.labelDetails.rightMargin,
                PaperKindDataId: state.labelDetails.paperKindId,
                TopMargin: state.labelDetails.topMargin,
                BottomMargin: state.labelDetails.bottomMargin,
                Unit: state.labelDetails.unit === reportWizardState_1.GraphicsUnit.Inch ? reportWizardState_1.GraphicsUnit.Inch : reportWizardState_1.GraphicsUnit.Millimeter,
                VerticalPitch: state.labelDetails.vPitch,
                Width: state.labelDetails.width
            };
            this.LabelProductId = state.labelDetails.productId;
            this.LabelProductDetailId = state.labelDetails.id;
        }
        this.IgnoreNullValuesForSummary = state.ignoreNullValuesForSummary;
        this.ReportTitle = state.reportTitle;
        this.ReportType = state.reportType;
        if (state.dataMemberInfo != null || state.dataMemberPath != null) {
            this.DataMemberName = {
                DisplayName: state.dataMemberInfo.displayName,
                Name: state.dataMemberInfo.name,
                DataMemberType: 0
            };
            if (state.dataMemberInfo.name) {
                var index = state.dataMemberPath.indexOf('.');
                this.DataMemberName.Name = index > 0 ? state.dataMemberPath.substr(index + 1) : state.dataMemberPath;
            }
        }
        else {
            this.DataMemberName = null;
        }
    }
    return CommonRequestModel;
}());
exports.CommonRequestModel = CommonRequestModel;


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var PaperKind;
(function (PaperKind) {
    PaperKind[PaperKind["Custom"] = 0] = "Custom";
    PaperKind[PaperKind["Letter"] = 1] = "Letter";
    PaperKind[PaperKind["LetterSmall"] = 2] = "LetterSmall";
    PaperKind[PaperKind["Tabloid"] = 3] = "Tabloid";
    PaperKind[PaperKind["Ledger"] = 4] = "Ledger";
    PaperKind[PaperKind["Legal"] = 5] = "Legal";
    PaperKind[PaperKind["Statement"] = 6] = "Statement";
    PaperKind[PaperKind["Executive"] = 7] = "Executive";
    PaperKind[PaperKind["A3"] = 8] = "A3";
    PaperKind[PaperKind["A4"] = 9] = "A4";
    PaperKind[PaperKind["A4Small"] = 10] = "A4Small";
    PaperKind[PaperKind["A5"] = 11] = "A5";
    PaperKind[PaperKind["B4"] = 12] = "B4";
    PaperKind[PaperKind["B5"] = 13] = "B5";
    PaperKind[PaperKind["Folio"] = 14] = "Folio";
    PaperKind[PaperKind["Quarto"] = 15] = "Quarto";
    PaperKind[PaperKind["Standard10x14"] = 16] = "Standard10x14";
    PaperKind[PaperKind["Standard11x17"] = 17] = "Standard11x17";
    PaperKind[PaperKind["Note"] = 18] = "Note";
    PaperKind[PaperKind["Number9Envelope"] = 19] = "Number9Envelope";
    PaperKind[PaperKind["Number10Envelope"] = 20] = "Number10Envelope";
    PaperKind[PaperKind["Number11Envelope"] = 21] = "Number11Envelope";
    PaperKind[PaperKind["Number12Envelope"] = 22] = "Number12Envelope";
    PaperKind[PaperKind["Number14Envelope"] = 23] = "Number14Envelope";
    PaperKind[PaperKind["CSheet"] = 24] = "CSheet";
    PaperKind[PaperKind["DSheet"] = 25] = "DSheet";
    PaperKind[PaperKind["ESheet"] = 26] = "ESheet";
    PaperKind[PaperKind["DLEnvelope"] = 27] = "DLEnvelope";
    PaperKind[PaperKind["C5Envelope"] = 28] = "C5Envelope";
    PaperKind[PaperKind["C3Envelope"] = 29] = "C3Envelope";
    PaperKind[PaperKind["C4Envelope"] = 30] = "C4Envelope";
    PaperKind[PaperKind["C6Envelope"] = 31] = "C6Envelope";
    PaperKind[PaperKind["C65Envelope"] = 32] = "C65Envelope";
    PaperKind[PaperKind["B4Envelope"] = 33] = "B4Envelope";
    PaperKind[PaperKind["B5Envelope"] = 34] = "B5Envelope";
    PaperKind[PaperKind["B6Envelope"] = 35] = "B6Envelope";
    PaperKind[PaperKind["ItalyEnvelope"] = 36] = "ItalyEnvelope";
    PaperKind[PaperKind["MonarchEnvelope"] = 37] = "MonarchEnvelope";
    PaperKind[PaperKind["PersonalEnvelope"] = 38] = "PersonalEnvelope";
    PaperKind[PaperKind["USStandardFanfold"] = 39] = "USStandardFanfold";
    PaperKind[PaperKind["GermanStandardFanfold"] = 40] = "GermanStandardFanfold";
    PaperKind[PaperKind["GermanLegalFanfold"] = 41] = "GermanLegalFanfold";
    PaperKind[PaperKind["IsoB4"] = 42] = "IsoB4";
    PaperKind[PaperKind["JapanesePostcard"] = 43] = "JapanesePostcard";
    PaperKind[PaperKind["Standard9x11"] = 44] = "Standard9x11";
    PaperKind[PaperKind["Standard10x11"] = 45] = "Standard10x11";
    PaperKind[PaperKind["Standard15x11"] = 46] = "Standard15x11";
    PaperKind[PaperKind["InviteEnvelope"] = 47] = "InviteEnvelope";
    PaperKind[PaperKind["LetterExtra"] = 50] = "LetterExtra";
    PaperKind[PaperKind["LegalExtra"] = 51] = "LegalExtra";
    PaperKind[PaperKind["TabloidExtra"] = 52] = "TabloidExtra";
    PaperKind[PaperKind["A4Extra"] = 53] = "A4Extra";
    PaperKind[PaperKind["LetterTransverse"] = 54] = "LetterTransverse";
    PaperKind[PaperKind["A4Transverse"] = 55] = "A4Transverse";
    PaperKind[PaperKind["LetterExtraTransverse"] = 56] = "LetterExtraTransverse";
    PaperKind[PaperKind["APlus"] = 57] = "APlus";
    PaperKind[PaperKind["BPlus"] = 58] = "BPlus";
    PaperKind[PaperKind["LetterPlus"] = 59] = "LetterPlus";
    PaperKind[PaperKind["A4Plus"] = 60] = "A4Plus";
    PaperKind[PaperKind["A5Transverse"] = 61] = "A5Transverse";
    PaperKind[PaperKind["B5Transverse"] = 62] = "B5Transverse";
    PaperKind[PaperKind["A3Extra"] = 63] = "A3Extra";
    PaperKind[PaperKind["A5Extra"] = 64] = "A5Extra";
    PaperKind[PaperKind["B5Extra"] = 65] = "B5Extra";
    PaperKind[PaperKind["A2"] = 66] = "A2";
    PaperKind[PaperKind["A3Transverse"] = 67] = "A3Transverse";
    PaperKind[PaperKind["A3ExtraTransverse"] = 68] = "A3ExtraTransverse";
    PaperKind[PaperKind["JapaneseDoublePostcard"] = 69] = "JapaneseDoublePostcard";
    PaperKind[PaperKind["A6"] = 70] = "A6";
    PaperKind[PaperKind["JapaneseEnvelopeKakuNumber2"] = 71] = "JapaneseEnvelopeKakuNumber2";
    PaperKind[PaperKind["JapaneseEnvelopeKakuNumber3"] = 72] = "JapaneseEnvelopeKakuNumber3";
    PaperKind[PaperKind["JapaneseEnvelopeChouNumber3"] = 73] = "JapaneseEnvelopeChouNumber3";
    PaperKind[PaperKind["JapaneseEnvelopeChouNumber4"] = 74] = "JapaneseEnvelopeChouNumber4";
    PaperKind[PaperKind["LetterRotated"] = 75] = "LetterRotated";
    PaperKind[PaperKind["A3Rotated"] = 76] = "A3Rotated";
    PaperKind[PaperKind["A4Rotated"] = 77] = "A4Rotated";
    PaperKind[PaperKind["A5Rotated"] = 78] = "A5Rotated";
    PaperKind[PaperKind["B4JisRotated"] = 79] = "B4JisRotated";
    PaperKind[PaperKind["B5JisRotated"] = 80] = "B5JisRotated";
    PaperKind[PaperKind["JapanesePostcardRotated"] = 81] = "JapanesePostcardRotated";
    PaperKind[PaperKind["JapaneseDoublePostcardRotated"] = 82] = "JapaneseDoublePostcardRotated";
    PaperKind[PaperKind["A6Rotated"] = 83] = "A6Rotated";
    PaperKind[PaperKind["JapaneseEnvelopeKakuNumber2Rotated"] = 84] = "JapaneseEnvelopeKakuNumber2Rotated";
    PaperKind[PaperKind["JapaneseEnvelopeKakuNumber3Rotated"] = 85] = "JapaneseEnvelopeKakuNumber3Rotated";
    PaperKind[PaperKind["JapaneseEnvelopeChouNumber3Rotated"] = 86] = "JapaneseEnvelopeChouNumber3Rotated";
    PaperKind[PaperKind["JapaneseEnvelopeChouNumber4Rotated"] = 87] = "JapaneseEnvelopeChouNumber4Rotated";
    PaperKind[PaperKind["B6Jis"] = 88] = "B6Jis";
    PaperKind[PaperKind["B6JisRotated"] = 89] = "B6JisRotated";
    PaperKind[PaperKind["Standard12x11"] = 90] = "Standard12x11";
    PaperKind[PaperKind["JapaneseEnvelopeYouNumber4"] = 91] = "JapaneseEnvelopeYouNumber4";
    PaperKind[PaperKind["JapaneseEnvelopeYouNumber4Rotated"] = 92] = "JapaneseEnvelopeYouNumber4Rotated";
    PaperKind[PaperKind["Prc16K"] = 93] = "Prc16K";
    PaperKind[PaperKind["Prc32K"] = 94] = "Prc32K";
    PaperKind[PaperKind["Prc32KBig"] = 95] = "Prc32KBig";
    PaperKind[PaperKind["PrcEnvelopeNumber1"] = 96] = "PrcEnvelopeNumber1";
    PaperKind[PaperKind["PrcEnvelopeNumber2"] = 97] = "PrcEnvelopeNumber2";
    PaperKind[PaperKind["PrcEnvelopeNumber3"] = 98] = "PrcEnvelopeNumber3";
    PaperKind[PaperKind["PrcEnvelopeNumber4"] = 99] = "PrcEnvelopeNumber4";
    PaperKind[PaperKind["PrcEnvelopeNumber5"] = 100] = "PrcEnvelopeNumber5";
    PaperKind[PaperKind["PrcEnvelopeNumber6"] = 101] = "PrcEnvelopeNumber6";
    PaperKind[PaperKind["PrcEnvelopeNumber7"] = 102] = "PrcEnvelopeNumber7";
    PaperKind[PaperKind["PrcEnvelopeNumber8"] = 103] = "PrcEnvelopeNumber8";
    PaperKind[PaperKind["PrcEnvelopeNumber9"] = 104] = "PrcEnvelopeNumber9";
    PaperKind[PaperKind["PrcEnvelopeNumber10"] = 105] = "PrcEnvelopeNumber10";
    PaperKind[PaperKind["Prc16KRotated"] = 106] = "Prc16KRotated";
    PaperKind[PaperKind["Prc32KRotated"] = 107] = "Prc32KRotated";
    PaperKind[PaperKind["Prc32KBigRotated"] = 108] = "Prc32KBigRotated";
    PaperKind[PaperKind["PrcEnvelopeNumber1Rotated"] = 109] = "PrcEnvelopeNumber1Rotated";
    PaperKind[PaperKind["PrcEnvelopeNumber2Rotated"] = 110] = "PrcEnvelopeNumber2Rotated";
    PaperKind[PaperKind["PrcEnvelopeNumber3Rotated"] = 111] = "PrcEnvelopeNumber3Rotated";
    PaperKind[PaperKind["PrcEnvelopeNumber4Rotated"] = 112] = "PrcEnvelopeNumber4Rotated";
    PaperKind[PaperKind["PrcEnvelopeNumber5Rotated"] = 113] = "PrcEnvelopeNumber5Rotated";
    PaperKind[PaperKind["PrcEnvelopeNumber6Rotated"] = 114] = "PrcEnvelopeNumber6Rotated";
    PaperKind[PaperKind["PrcEnvelopeNumber7Rotated"] = 115] = "PrcEnvelopeNumber7Rotated";
    PaperKind[PaperKind["PrcEnvelopeNumber8Rotated"] = 116] = "PrcEnvelopeNumber8Rotated";
    PaperKind[PaperKind["PrcEnvelopeNumber9Rotated"] = 117] = "PrcEnvelopeNumber9Rotated";
    PaperKind[PaperKind["PrcEnvelopeNumber10Rotated"] = 118] = "PrcEnvelopeNumber10Rotated";
})(PaperKind = exports.PaperKind || (exports.PaperKind = {}));


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _masterDetailWizardUtils_1 = __webpack_require__(150);
var addGroupingLevelPage_1 = __webpack_require__(102);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_wizard_1 = __webpack_require__(7);
var metadata_1 = __webpack_require__(6);
var ChooseSummaryOptionsPage = (function (_super) {
    __extends(ChooseSummaryOptionsPage, _super);
    function ChooseSummaryOptionsPage() {
        var _this = _super.call(this) || this;
        _this._allColumns = {};
        _this._masterDetailColumns = {};
        _this._toggleIgnoreNullValues = function () {
            _this.ignoreNullValues(!_this.ignoreNullValues());
            _this._onChange();
        };
        _this._summaryOptions = ko.observableArray([]);
        _this.ignoreNullValues = ko.observable(false);
        _this._template = 'dxrd-page-masterdetail-summary';
        _this._reportTree = ko.observableArray([]);
        _this._currentPath = ko.observable('');
        _this._availableFields = ko.observableArray([]);
        _this._summaryInfos = ko.observableArray([]);
        _this._selectFieldToSummaryCaption = analytics_utils_1.getLocalization('Select fields and assign summary functions to them', 'ASPxReportsStringId.ReportDesigner_MasterDetailWizard_SummaryOptions_SelectFieldsAndSummaries');
        _this._fieldsCaption = analytics_utils_1.getLocalization('Fields', 'DevExpress.XtraReports.UI.XRPivotGrid.Fields');
        _this._summaryFunctionCaption = analytics_utils_1.getLocalization('Summary Functions', 'ASPxReportsStringId.ReportDesigner_MasterDetailWizard_SummaryOptions_SummaryFunctions');
        _this._ignoreNullValuesCaption = analytics_utils_1.getLocalization('Ignore null values', 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_IgnoreNullValues');
        _this._disposables.push(_this._currentPath.subscribe(function (newPath) {
            _this._changeQuery(newPath);
        }));
        return _this;
    }
    ChooseSummaryOptionsPage.prototype._createSummaryInfo = function () {
        var _this = this;
        var newItem = new _masterDetailWizardUtils_1.SummaryInfo(metadata_1.getSummaryFunctionValues());
        this._disposables.push(newItem.field.subscribe(function (newValue) {
            _this._createNewItemIfNeed();
        }));
        return newItem;
    };
    ChooseSummaryOptionsPage.prototype._createNewItemIfNeed = function () {
        var _summaryInfos = this._summaryInfos.peek();
        if (_summaryInfos.filter(function (item) { return !item.field(); }).length === 0 && _summaryInfos.length < this._availableFields.peek().length)
            this._summaryInfos.push(this._createSummaryInfo());
        var fieldNames = this._summaryInfos.peek().filter(function (item) { return !!item.field(); }).map(function (item) { return item.field().name; });
        this._displayedFields[this._currentPath()] && this._displayedFields[this._currentPath()]().forEach(function (item) { return item.visible(fieldNames.indexOf(item.name) === -1); });
        this._onChange();
    };
    ChooseSummaryOptionsPage.prototype._changeQuery = function (path) {
        this._currentPath(path);
        this._summaryInfoMapByDataMember[this._currentDataMember] = this._summaryInfos();
        this._currentDataMember = path;
        this._availableFields(this._masterDetailColumns[path] || []);
        this._summaryInfos(this._summaryInfoMapByDataMember[path] || []);
        this._createNewItemIfNeed();
    };
    ChooseSummaryOptionsPage.prototype._removeSummaryInfo = function (info) {
        var index = this._summaryInfos.indexOf(info);
        if (index === -1)
            return;
        this._summaryInfos.splice(index, 1);
        this._createNewItemIfNeed();
        this._onChange();
    };
    ChooseSummaryOptionsPage.prototype.canFinish = function () {
        return true;
    };
    ChooseSummaryOptionsPage.prototype.initialize = function (state) {
        var _this = this;
        this._masterDetailColumns = $.extend(true, {}, state.masterDetailSummaryOptionsColumns);
        this.ignoreNullValues(state.ignoreNullValuesForSummary);
        this._reportTree(addGroupingLevelPage_1._fillTreeQueries([], state.masterDetailInfoCollection, 0));
        this._currentDataMember = this._reportTree()[0].path;
        var allColumnsTest = {};
        this._reportTree().forEach(function (query) {
            allColumnsTest[query.path] = state.masterDetailSummaryOptionsColumns[query.path] && state.masterDetailSummaryOptionsColumns[query.path].map(function (field) { return field.name; });
        });
        var changes = [];
        $.each(allColumnsTest, function (key, value) {
            changes = changes.concat(ko.utils.compareArrays(_this._allColumns[key], value));
        });
        var isColumnsChanged = changes.some(function (change, index, array) { return change.status != 'retained'; });
        if (isColumnsChanged) {
            this._allColumns = allColumnsTest;
            this._summaryInfos([]);
            this._summaryInfoMapByDataMember = {};
            this._displayedFields = {};
            $.each(this._masterDetailColumns, function (key, value) {
                _this._displayedFields[key] = ko.observableArray([]);
                _this._displayedFields[key](value.map(function (item) {
                    return { name: item.name, displayName: item.displayName, visible: ko.observable(true) };
                }));
            });
        }
        else {
            this._summaryInfos(this._summaryInfoMapByDataMember[this._currentDataMember]);
        }
        this._changeQuery(this._currentDataMember);
        return $.Deferred().resolve().promise();
    };
    ChooseSummaryOptionsPage.prototype.commit = function () {
        this._summaryInfoMapByDataMember[this._currentDataMember] = this._summaryInfos();
        var masterDetailSummaryOptionsColumns = this._masterDetailColumns;
        var masterDetailSummariesInfo = {};
        $.each(this._summaryInfoMapByDataMember, function (key, value) {
            masterDetailSummariesInfo[key] = value.filter(function (item) { return !!item.field(); }).map(function (summaryOption) { return ({ column: summaryOption.field(), summaryFunctions: summaryOption.value.value().map(function (item) { return summaryOption.value.dataSource.map(function (option) { return option.value; }).indexOf(item); }) }); });
        });
        var ignoreNullValuesForSummary = this.ignoreNullValues();
        return $.Deferred().resolve({
            masterDetailSummaryOptionsColumns: masterDetailSummaryOptionsColumns,
            masterDetailSummariesInfo: masterDetailSummariesInfo,
            ignoreNullValuesForSummary: ignoreNullValuesForSummary
        }).promise();
    };
    return ChooseSummaryOptionsPage;
}(analytics_wizard_1.WizardPageBase));
exports.ChooseSummaryOptionsPage = ChooseSummaryOptionsPage;
function _registerChooseSummaryOptionsPage(factory) {
    factory.registerMetadata(pageId_1.ReportWizardPageId.ChooseSummaryOptionsPage, {
        create: function () {
            return new ChooseSummaryOptionsPage();
        },
        description: analytics_utils_1.getLocalization('Choose summary functions to calculate in reports.', 'ReportBoxDesignerStringId.Wizard_MasterDetailChooseSummaryOptions_Description'),
        template: 'dxrd-page-masterdetail-summary',
        getState: function (state) { return state; },
        setState: function (data, state) {
            state.masterDetailSummariesInfo = data.masterDetailSummariesInfo;
            state.ignoreNullValuesForSummary = data.ignoreNullValuesForSummary;
        },
        resetState: function (state, defaultState) {
            state.masterDetailSummariesInfo = defaultState.masterDetailSummariesInfo;
            state.ignoreNullValuesForSummary = defaultState.ignoreNullValuesForSummary;
        }
    });
}
exports._registerChooseSummaryOptionsPage = _registerChooseSummaryOptionsPage;


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var colorSchemaPageUtils_1 = __webpack_require__(339);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_wizard_1 = __webpack_require__(7);
var ChooseReportColorSchemePage = (function (_super) {
    __extends(ChooseReportColorSchemePage, _super);
    function ChooseReportColorSchemePage() {
        var _this = _super.call(this) || this;
        _this._scheme = ko.observable(null);
        _this._customColorScheme = new colorSchemaPageUtils_1.CustomColorScheme('Custom', 'ReportStringId.Wizard_ReportColorScheme_Custom', '255, 183, 227, 228');
        _this._lookupData = {
            scheme: [
                new colorSchemaPageUtils_1.ColorScheme('Grey', 'ReportStringId.Wizard_ReportColorScheme_Grey', '255, 75,75,75'),
                new colorSchemaPageUtils_1.ColorScheme('ColdGrey', 'ReportStringId.Wizard_ReportColorScheme_ColdGrey', '255, 93,98,110'),
                new colorSchemaPageUtils_1.ColorScheme('Cream', 'ReportStringId.Wizard_ReportColorScheme_Cream', '255, 227,202,166'),
                new colorSchemaPageUtils_1.ColorScheme('JeansBlue', 'ReportStringId.Wizard_ReportColorScheme_JeansBlue', '255, 69,94,178'),
                new colorSchemaPageUtils_1.ColorScheme('Blue', 'ReportStringId.Wizard_ReportColorScheme_Blue', '255, 23,104,196'),
                new colorSchemaPageUtils_1.ColorScheme('Yellow', 'ReportStringId.Wizard_ReportColorScheme_Yellow', '255, 255,209,107'),
                new colorSchemaPageUtils_1.ColorScheme('LightGreen', 'ReportStringId.Wizard_ReportColorScheme_LightGreen', '255, 181,211,142'),
                new colorSchemaPageUtils_1.ColorScheme('Mint', 'ReportStringId.Wizard_ReportColorScheme_Mint', '255, 46,148,130'),
                new colorSchemaPageUtils_1.ColorScheme('LightBlue', 'ReportStringId.Wizard_ReportColorScheme_LightBlue', '255, 153,212,246'),
                new colorSchemaPageUtils_1.ColorScheme('Azure', 'ReportStringId.Wizard_ReportColorScheme_Azure', '255, 57,159,228'),
                new colorSchemaPageUtils_1.ColorScheme('Coral', 'ReportStringId.Wizard_ReportColorScheme_Coral', '255, 250,128,114'),
                new colorSchemaPageUtils_1.ColorScheme('Red', 'ReportStringId.Wizard_ReportColorScheme_Red', '255, 196,66,79'),
                new colorSchemaPageUtils_1.ColorScheme('Raspberry', 'ReportStringId.Wizard_ReportColorScheme_Raspberry', '255, 152,51,91'),
                new colorSchemaPageUtils_1.ColorScheme('Violet', 'ReportStringId.Wizard_ReportColorScheme_Violet', '255, 113,69,168'),
                _this._customColorScheme
            ]
        };
        var customSubscription = null;
        _this._scheme(_this._lookupData.scheme[0]);
        _this._disposables.push(_this._scheme.subscribe(function (newVal) {
            if (newVal === _this._customColorScheme) {
                _this._disposables.push(customSubscription = _this._customColorScheme.color.subscribe(function () {
                    _this._onChange();
                }));
            }
            else {
                customSubscription && customSubscription.dispose();
            }
            _this._onChange();
        }));
        return _this;
    }
    ChooseReportColorSchemePage.prototype.addColorScheme = function (name, color, position) {
        if (position === void 0) { position = this._lookupData.scheme.length; }
        var scheme = new colorSchemaPageUtils_1.ColorScheme(name, undefined, color);
        scheme._isCustom = true;
        this._lookupData.scheme.splice(position, 0, scheme);
    };
    ChooseReportColorSchemePage.prototype.removeColorScheme = function () {
        var _this = this;
        var names = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            names[_i] = arguments[_i];
        }
        names.forEach(function (name) {
            var scheme = _this._lookupData.scheme.filter(function (x) { return x.name == name || x.displayName == name; })[0];
            if (scheme) {
                _this._lookupData.scheme.splice(_this._lookupData.scheme.indexOf(scheme), 1);
            }
        });
    };
    ChooseReportColorSchemePage.prototype.removeAllColorSchemes = function () {
        this._lookupData.scheme = [];
    };
    ChooseReportColorSchemePage.prototype.setCustomColor = function (color) {
        this._customColorScheme.editorColor(color.indexOf('rgb') === 0 ?
            color :
            analytics_utils_1.colorFromString(color)());
        this._customColorScheme.applyColor();
    };
    ChooseReportColorSchemePage.prototype._applyScheme = function (data) {
        this._scheme() && this._scheme().selected(false);
        data.selected(true);
        this._scheme(data);
    };
    ChooseReportColorSchemePage.prototype.canFinish = function () {
        return true;
    };
    ChooseReportColorSchemePage.prototype.initialize = function (state) {
        if (state.name === 'Custom') {
            this._customColorScheme.editorColor(state.baseColor);
            this._customColorScheme.applyColor();
        }
        var currentScheme = this._lookupData.scheme.filter(function (x) { return x.name === state.name; })[0];
        if (!currentScheme) {
            currentScheme = this._lookupData.scheme[0];
        }
        this._scheme(currentScheme);
        if (currentScheme)
            currentScheme.selected(true);
        return $.Deferred().resolve().promise();
    };
    ChooseReportColorSchemePage.prototype.commit = function () {
        var scheme = this._scheme();
        var result = scheme ? {
            name: scheme._isCustom ? 'Custom' : scheme.name,
            baseColor: scheme.baseColor,
            _color: ko.unwrap(scheme.color)
        } : {};
        return $.Deferred().resolve(result).promise();
    };
    return ChooseReportColorSchemePage;
}(analytics_wizard_1.WizardPageBase));
exports.ChooseReportColorSchemePage = ChooseReportColorSchemePage;
function _applyColorSchemeState(data, state) {
    state.baseColor = data.baseColor;
    state.name = data.name;
    state['_color'] = data['_color'];
}
exports._applyColorSchemeState = _applyColorSchemeState;
function _registerChooseReportColorSchemePage(factory) {
    factory.registerMetadata(pageId_1.ReportWizardPageId.ChooseReportColorSchemePage, {
        create: function () { return new ChooseReportColorSchemePage(); },
        getState: function (state) { return state.colorScheme; },
        setState: function (data, state) {
            _applyColorSchemeState(data, state);
        },
        resetState: function (state, defaultState) {
            _applyColorSchemeState(defaultState, state);
        },
        template: 'dxrd-page-colorScheme',
        description: analytics_utils_1.getLocalization('Choose a report color scheme.', 'ASPxReportsStringId.ReportDesigner_Wizard_ColorScheme_Description')
    });
}
exports._registerChooseReportColorSchemePage = _registerChooseReportColorSchemePage;


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CONVERSION_COEEFICIENT = 0.0393701;


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _reportWizardService_1 = __webpack_require__(153);
var $ = __webpack_require__(3);
exports.labelReportWizardPromise = null;
function initializeLabelReportWizardPromise() {
    if (!exports.labelReportWizardPromise) {
        var $def = $.Deferred();
        _reportWizardService_1.ReportWizardService.getLabelReportWizardData().done(function (data) { return $def.resolve(JSON.parse(data)); });
        exports.labelReportWizardPromise = $def.promise();
    }
}
exports.initializeLabelReportWizardPromise = initializeLabelReportWizardPromise;


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _dataSourceWizardHelper_1 = __webpack_require__(104);
var analytics_wizard_1 = __webpack_require__(7);
var ChooseJsonSchemaPage = (function (_super) {
    __extends(ChooseJsonSchemaPage, _super);
    function ChooseJsonSchemaPage(createJsonDataSourceInfo) {
        var _this = _super.call(this) || this;
        _this._dataSourceWizardHelper = new _dataSourceWizardHelper_1.DataSourceWizardHelper(_this, createJsonDataSourceInfo);
        return _this;
    }
    ChooseJsonSchemaPage.prototype.initialize = function (state) {
        this._dataSourceId = state.dataSourceId;
        return _super.prototype.initialize.call(this, state.jsonDataSourceWizard);
    };
    ChooseJsonSchemaPage.prototype.commit = function () {
        var _this = this;
        return this._dataSourceWizardHelper.commit(function () { return _super.prototype.commit.call(_this); }, function (state) { return analytics_wizard_1._restoreJsonDataSourceFromState(state, undefined, _this._dataSourceId); });
    };
    return ChooseJsonSchemaPage;
}(analytics_wizard_1.ChooseJsonSchemaPage));
exports.ChooseJsonSchemaPage = ChooseJsonSchemaPage;
function _registerChooseJsonSchemaPage(factory, callbacks) {
    _dataSourceWizardHelper_1.overrideJsonDataSourceWizardPage(factory, analytics_wizard_1.JsonDataSourceWizardPageId.ChooseJsonSchemaPage, {
        create: function () {
            return new ChooseJsonSchemaPage(callbacks.createJsonDataSourceInfo);
        },
        resetState: function (state) {
            delete state.jsonDataSourceWizard.dataSourceName;
            delete state.jsonDataSourceWizard.jsonScheme;
            delete state.jsonDataSourceWizard.rootElement;
        }
    });
}
exports._registerChooseJsonSchemaPage = _registerChooseJsonSchemaPage;


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var reportWizardState_1 = __webpack_require__(18);
var _selectLabelTypePage_1 = __webpack_require__(229);
var _utils_1 = __webpack_require__(74);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_wizard_1 = __webpack_require__(7);
var analytics_internal_1 = __webpack_require__(2);
var SelectLabelTypePage = (function (_super) {
    __extends(SelectLabelTypePage, _super);
    function SelectLabelTypePage() {
        var _this = _super.call(this) || this;
        _this._selectedPaperSize = ko.computed({
            read: function () {
                return analytics_internal_1.findFirstItemMatchesCondition(_this._labelData.paperKinds, function (item) { return item.id === _this._selectedLabelDetails().paperKindId; });
            },
            deferEvaluation: true
        });
        _this._selectedLabelProduct = ko.observable();
        _this._selectedLabelDetails = ko.observable();
        _this._labelDetails = ko.observable();
        _this._width = ko.pureComputed(function () { return _utils_1.getFormattedValueInUnits(_this._selectedLabelDetails().width, _this._selectedPaperSize().unit) + (_this._selectedPaperSize().unit === reportWizardState_1.GraphicsUnit.Inch ? ' in' : ' mm'); });
        _this._height = ko.pureComputed(function () { return _utils_1.getFormattedValueInUnits(_this._selectedLabelDetails().height, _this._selectedPaperSize().unit) + (_this._selectedPaperSize().unit === reportWizardState_1.GraphicsUnit.Inch ? ' in' : ' mm'); });
        _this._paperType = ko.pureComputed(function () { return _this._selectedPaperSize().name; });
        _this._pageSizeText = ko.pureComputed(function () { return _utils_1.getFormattedValueInUnits(_this._selectedPaperSize().width, _this._selectedPaperSize().unit) + ' x ' + _utils_1.getFormattedValueInUnits(_this._selectedPaperSize().height, _this._selectedPaperSize().unit) + (_this._selectedPaperSize().unit === reportWizardState_1.GraphicsUnit.Inch ? ' in' : ' mm'); });
        _this._disposables.push(_this._selectedLabelProduct.subscribe(function (newProductsType) {
            var labelDetails = _this._labelData.labelDetails.filter(function (item) { return item.productId === newProductsType.id; });
            _this._selectedLabelDetails(labelDetails[0]);
            _this._labelDetails({
                store: labelDetails,
                paginate: labelDetails.length > 200,
                pageSize: 100
            });
        }));
        _this._disposables.push(_this._selectedLabelDetails.subscribe(function () { return _this._onChange(); }));
        _this._disposables.push(_this._selectedPaperSize, _this._width, _this._height, _this._paperType, _this._pageSizeText);
        return _this;
    }
    SelectLabelTypePage.prototype.initialize = function (state) {
        var _this = this;
        _selectLabelTypePage_1.initializeLabelReportWizardPromise();
        return _selectLabelTypePage_1.labelReportWizardPromise.done(function (labelData) {
            _this._labelData = labelData;
            if (state.labelDetails) {
                if (!_this._selectedLabelProduct() || _this._selectedLabelProduct().id !== state.labelDetails.productId) {
                    _this._selectedLabelProduct(analytics_internal_1.findFirstItemMatchesCondition(_this._labelData.labelProducts, function (item) { return item.id === state.labelDetails.productId; }));
                }
                _this._selectedLabelDetails(analytics_internal_1.findFirstItemMatchesCondition(_this._labelData.labelDetails, function (item) { return item.id === state.labelDetails.id; }));
            }
            else {
                _this._selectedLabelProduct(_this._labelData.labelProducts[0]);
            }
        });
    };
    SelectLabelTypePage.prototype.canNext = function () {
        return !!this._selectedLabelDetails();
    };
    SelectLabelTypePage.prototype.canFinish = function () {
        return !!this._selectedLabelDetails();
    };
    SelectLabelTypePage.prototype.commit = function () {
        var labelDetails = this._selectedLabelDetails() ? $.extend({}, this._selectedLabelDetails()) : null;
        return $.Deferred().resolve({ labelDetails: labelDetails }).promise();
    };
    return SelectLabelTypePage;
}(analytics_wizard_1.WizardPageBase));
exports.SelectLabelTypePage = SelectLabelTypePage;
function _registerSelectLabelTypePage(factory) {
    factory.registerMetadata(pageId_1.ReportWizardPageId.SelectLabelTypePage, {
        setState: function (data, state) {
            if (data && (!state.labelDetails || data.labelDetails.id !== state.labelDetails.id))
                state.labelDetails = data.labelDetails;
        },
        getState: function (state) {
            return state;
        },
        resetState: function (state, defaultState) {
            state.labelDetails = defaultState.labelDetails;
        },
        create: function () {
            return new SelectLabelTypePage();
        },
        template: 'dxrd-page-selectPredefinedLabels',
        description: analytics_utils_1.getLocalization('Select the label type.', 'ASPxReportsStringId.ReportDesigner_Wizard_SelectLabelType')
    });
}
exports._registerSelectLabelTypePage = _registerSelectLabelTypePage;


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var reportWizardState_1 = __webpack_require__(18);
var chooseAvailableDataSourcePage_1 = __webpack_require__(24);
var _masterDetailRequestModel_1 = __webpack_require__(149);
var pageId_1 = __webpack_require__(14);
var chooseReportTypePage_1 = __webpack_require__(103);
var selectDataSourcePage_1 = __webpack_require__(347);
var specifySqlDataSourceSettingsPage_1 = __webpack_require__(348);
var specifyJsonDataSourceSettingsPage_1 = __webpack_require__(349);
var specifyObjectDataSourceSettingsPage_1 = __webpack_require__(350);
var defineReportLayoutPage_1 = __webpack_require__(233);
var specifyLabelSettingsPage_1 = __webpack_require__(353);
var specifyPageSettingsPage_1 = __webpack_require__(354);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var analytics_wizard_1 = __webpack_require__(7);
var ko = __webpack_require__(1);
var reportWizardStateCreating_1 = __webpack_require__(105);
var defineCrossTabPage_1 = __webpack_require__(356);
var FullscreenReportWizard = (function (_super) {
    __extends(FullscreenReportWizard, _super);
    function FullscreenReportWizard(pageFactory, _reportWizardOptions) {
        var _this = _super.call(this, pageFactory, _reportWizardOptions.callbacks.finishCallback) || this;
        _this._reportWizardOptions = _reportWizardOptions;
        _this._requestModelType = _masterDetailRequestModel_1.MasterDetailRequestModel;
        _this._availableDataSources = ko.observable([]);
        _this._extendCssClass = 'dxrd-master-detail-report-wizard ' + _this._extendCssClass;
        return _this;
    }
    FullscreenReportWizard.prototype._callBeforeFinishHandler = function (state, wizardModel) { };
    FullscreenReportWizard.prototype._callAfterFinishHandler = function (state, result) {
        this.events.call('afterFinish', { state: state, wizardResult: result });
    };
    FullscreenReportWizard.prototype._description = function () {
        return analytics_utils_1.getLocalization('Report Wizard', 'ASPxReportsStringId.ReportDesigner_Wizard_Header');
    };
    FullscreenReportWizard.prototype.initialize = function (state) {
        var _this = this;
        if (state === void 0) { state = reportWizardStateCreating_1.createReportWizardState(); }
        if (this._reportWizardOptions.dataSources().length === 1 && !this._reportWizardOptions.canCreateDataSource) {
            state.dataSource = chooseAvailableDataSourcePage_1._convertToStateDataSource(this._reportWizardOptions.dataSources()[0]);
        }
        if (this._reportWizardOptions.sqlDataSourceAvailable || !analytics_internal_1.isEmptyObject(state.sqlDataSourceWizard)) {
            state.dataSourceType = analytics_wizard_1.DataSourceType.Sql;
        }
        else if (this._reportWizardOptions.jsonDataSourceAvailable || state.jsonDataSourceWizard.jsonSource) {
            state.dataSourceType = analytics_wizard_1.DataSourceType.Json;
        }
        else if (this._reportWizardOptions.objectDataSourceAvailable || !analytics_internal_1.isEmptyObject(state.objectDataSourceWizard)) {
            state.dataSourceType = analytics_wizard_1.DataSourceType.Object;
        }
        else {
            state.dataSourceType = analytics_wizard_1.DataSourceType.NoData;
        }
        _super.prototype.initialize.call(this, state, function (factory, stateManager) { return new FullscreenReportWizardPageIterator(factory, stateManager, function (page) { return _this._onResetPage(page); }, _this._reportWizardOptions); });
    };
    return FullscreenReportWizard;
}(analytics_wizard_1.FullscreenWizard));
exports.FullscreenReportWizard = FullscreenReportWizard;
var FullscreenReportWizardPageIterator = (function (_super) {
    __extends(FullscreenReportWizardPageIterator, _super);
    function FullscreenReportWizardPageIterator(pagesFactory, stateManager, _onResetPage, _reportWizardOptions) {
        var _this = _super.call(this, pagesFactory, stateManager, _onResetPage) || this;
        _this._reportWizardOptions = _reportWizardOptions;
        return _this;
    }
    FullscreenReportWizardPageIterator.prototype.getNextPageId = function (pageId) {
        var _this = this;
        var getDefineLayoutPage = function () {
            return _this._getCurrentState().reportType === reportWizardState_1.ReportType.CrossTab ? pageId_1.FullscreenReportWizardPageId.DefineCrossTabPage : pageId_1.FullscreenReportWizardPageId.DefineReportLayoutPage;
        };
        if (!pageId)
            return pageId_1.FullscreenReportWizardPageId.SelectReportTypePage;
        if (pageId === pageId_1.FullscreenReportWizardPageId.SelectReportTypePage && this._getCurrentState().reportType === reportWizardState_1.ReportType.Label) {
            return pageId_1.FullscreenReportWizardPageId.SpecifyLabelSettingsPage;
        }
        else if (pageId === pageId_1.FullscreenReportWizardPageId.SelectReportTypePage && this._getCurrentState().dataSource && !this._reportWizardOptions.canCreateDataSource) {
            return getDefineLayoutPage();
        }
        else if (pageId === pageId_1.FullscreenReportWizardPageId.SelectReportTypePage) {
            return pageId_1.FullscreenReportWizardPageId.SelectDataSourcePage;
        }
        else if (pageId === pageId_1.FullscreenReportWizardPageId.SelectDataSourcePage && this._getCurrentState().dataSource) {
            return getDefineLayoutPage();
        }
        else if (pageId === pageId_1.FullscreenReportWizardPageId.SelectDataSourcePage && this._getCurrentState().dataSourceType === analytics_wizard_1.DataSourceType.Json) {
            return analytics_wizard_1.FullscreenDataSourceWizardPageId.SpecifyJsonDataSourceSettingsPage;
        }
        else if (pageId === pageId_1.FullscreenReportWizardPageId.SelectDataSourcePage && this._getCurrentState().dataSourceType === analytics_wizard_1.DataSourceType.Sql) {
            return analytics_wizard_1.FullscreenDataSourceWizardPageId.SpecifySqlDataSourceSettingsPage;
        }
        else if (pageId === pageId_1.FullscreenReportWizardPageId.SelectDataSourcePage && this._getCurrentState().dataSourceType === analytics_wizard_1.DataSourceType.Object) {
            return analytics_wizard_1.FullscreenDataSourceWizardPageId.SpecifyObjectDataSourceSettingsPage;
        }
        else if (pageId === pageId_1.FullscreenReportWizardPageId.SelectDataSourcePage && this._getCurrentState().dataSourceType === analytics_wizard_1.DataSourceType.NoData) {
            return pageId_1.FullscreenReportWizardPageId.SpecifyPageSettingsPage;
        }
        else if (pageId === analytics_wizard_1.FullscreenDataSourceWizardPageId.SpecifySqlDataSourceSettingsPage) {
            return getDefineLayoutPage();
        }
        else if (pageId === analytics_wizard_1.FullscreenDataSourceWizardPageId.SpecifyJsonDataSourceSettingsPage) {
            return getDefineLayoutPage();
        }
        else if (pageId === analytics_wizard_1.FullscreenDataSourceWizardPageId.SpecifyObjectDataSourceSettingsPage) {
            return getDefineLayoutPage();
        }
        else if (pageId === pageId_1.FullscreenReportWizardPageId.DefineReportLayoutPage || pageId === pageId_1.FullscreenReportWizardPageId.DefineCrossTabPage) {
            return pageId_1.FullscreenReportWizardPageId.SpecifyPageSettingsPage;
        }
    };
    return FullscreenReportWizardPageIterator;
}(analytics_wizard_1.PageIterator));
exports.FullscreenReportWizardPageIterator = FullscreenReportWizardPageIterator;
function _registerFullscreenReportWizardPages(factory, reportWizardOptions) {
    chooseReportTypePage_1._registerSelectReportTypePage(factory, {
        canCreateDatabound: function () {
            return reportWizardOptions.dataSources().length > 0 ||
                reportWizardOptions.connectionStrings.sql().length > 0 ||
                reportWizardOptions.connectionStrings.json().length > 0 ||
                reportWizardOptions.wizardSettings.enableObjectDataSource ||
                (reportWizardOptions.allowCreateNewJsonConnection && reportWizardOptions.wizardSettings.enableJsonDataSource);
        },
        showVertical: true
    });
    selectDataSourcePage_1._registerSelectDataSourcePage(factory, reportWizardOptions);
    specifySqlDataSourceSettingsPage_1._registerSpecifySqlDataSourceSettingsPage(factory, reportWizardOptions);
    specifyJsonDataSourceSettingsPage_1._registerSpecifyJsonDataSourceSettingsPage(factory, reportWizardOptions);
    specifyObjectDataSourceSettingsPage_1._registerSpecifyObjectDataSourceSettingsPage(factory, reportWizardOptions);
    defineReportLayoutPage_1._registerDefineReportLayoutPage(factory, reportWizardOptions);
    defineCrossTabPage_1._registerDefineCrossTabPage(factory, reportWizardOptions);
    specifyLabelSettingsPage_1._registerSpecifyLabelSettingsPage(factory, reportWizardOptions);
    specifyPageSettingsPage_1._registerSpecifyPageSettingsPage(factory, reportWizardOptions);
}
exports._registerFullscreenReportWizardPages = _registerFullscreenReportWizardPages;
function _createFullscreenReportWizard(reportWizardOptions) {
    var factory = new analytics_wizard_1.FullscreenWizardPageFactory();
    _registerFullscreenReportWizardPages(factory, reportWizardOptions);
    return new FullscreenReportWizard(factory, reportWizardOptions);
}
exports._createFullscreenReportWizard = _createFullscreenReportWizard;


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var selectDataMembersPage_1 = __webpack_require__(154);
var pageId_1 = __webpack_require__(14);
var addGroupingLevelSection_1 = __webpack_require__(351);
var chooseSummaryOptionsSection_1 = __webpack_require__(352);
var analytics_utils_1 = __webpack_require__(0);
var analytics_wizard_1 = __webpack_require__(7);
var analytics_wizard_internal_1 = __webpack_require__(59);
var $ = __webpack_require__(3);
var DefineReportLayoutPage = (function (_super) {
    __extends(DefineReportLayoutPage, _super);
    function DefineReportLayoutPage(_reportWizardOptions) {
        var _this = _super.call(this) || this;
        _this._reportWizardOptions = _reportWizardOptions;
        return _this;
    }
    DefineReportLayoutPage.prototype.registerSections = function () {
        selectDataMembersPage_1._registerSelectDataMembersPage(this._factory, this._reportWizardOptions, pageId_1.FullscreenReportWizardSectionId.SelectDataMembersPage_Members);
        addGroupingLevelSection_1._registerAddGroupFieldsPage(this._factory);
        chooseSummaryOptionsSection_1._registerAddSummaryFieldsPage(this._factory);
        var meta = this._factory.getMetadata(pageId_1.FullscreenReportWizardSectionId.SelectDataMembersPage_Members);
        meta['disabledText'] = analytics_utils_1.getLocalization('Loading...', 'AnalyticsCoreStringId.Loading');
        meta.description = analytics_utils_1.getLocalization('Select queries for the report and its detail reports.', 'ASPxReportsStringId.ReportDesigner_MasterDetailWizard_SelectQueries');
        var meta = this._factory.getMetadata(pageId_1.FullscreenReportWizardSectionId.AddGroupFieldsPage);
        meta.description = analytics_utils_1.getLocalization('Add group fields.', 'ASPxReportsStringId.ReportDesigner_Wizard_AddGroupFields');
        var meta = this._factory.getMetadata(pageId_1.FullscreenReportWizardSectionId.AddSummaryFieldsPage);
        meta.description = analytics_utils_1.getLocalization('Add summary fields.', 'ASPxReportsStringId.ReportDesigner_Wizard_AddSummaryFields');
        this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.SelectDataMembersPage_Members, analytics_wizard_1.WizardSectionPosition.Top);
        this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.AddGroupFieldsPage, this._reportWizardOptions.rtl ? analytics_wizard_1.WizardSectionPosition.BottomRight : analytics_wizard_1.WizardSectionPosition.BottomLeft);
        this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.AddSummaryFieldsPage, this._reportWizardOptions.rtl ? analytics_wizard_1.WizardSectionPosition.BottomLeft : analytics_wizard_1.WizardSectionPosition.BottomRight);
    };
    DefineReportLayoutPage.prototype._beforeStart = function () {
        this._sections[0].metadata.template = 'dxrd-page-masterdetail-select-dataMembers';
        var cachedItem = new analytics_wizard_internal_1.WizardPageSection(pageId_1.FullscreenReportWizardSectionId.SelectDataMembersPage_Fields, $.extend(true, {}, this._sections[0].metadata, {
            template: 'dxrd-page-masterdetail-select-fieldMembers',
            description: analytics_utils_1.getLocalization('Select data fields to display in the report.', 'ASPxReportsStringId.ReportDesigner_MasterDetailWizard_SelectDataFields'),
            disabledText: analytics_utils_1.getLocalization('Loading...', 'AnalyticsCoreStringId.Loading')
        }));
        cachedItem.page = this._sections[0].page;
        this._sections.splice(1, 0, cachedItem);
        this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.SelectDataMembersPage_Members, this._reportWizardOptions.rtl ? analytics_wizard_1.WizardSectionPosition.TopRight : analytics_wizard_1.WizardSectionPosition.TopLeft);
        this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.SelectDataMembersPage_Fields, this._reportWizardOptions.rtl ? analytics_wizard_1.WizardSectionPosition.TopLeft : analytics_wizard_1.WizardSectionPosition.TopRight);
    };
    DefineReportLayoutPage.prototype.getNextSectionId = function (sectionId) {
        if (!sectionId)
            return pageId_1.FullscreenReportWizardSectionId.SelectDataMembersPage_Members;
        else if (sectionId === pageId_1.FullscreenReportWizardSectionId.SelectDataMembersPage_Members && !$.isEmptyObject(this._stateManager.getCurrentState().masterDetailInfoCollection) && this._stateManager.getCurrentState().masterDetailInfoCollection.some(function (item) { return item.checked !== false; })) {
            return pageId_1.FullscreenReportWizardSectionId.AddGroupFieldsPage;
        }
        else if (sectionId === pageId_1.FullscreenReportWizardSectionId.AddGroupFieldsPage && !$.isEmptyObject(this._stateManager.getCurrentState().masterDetailSummaryOptionsColumns)) {
            return pageId_1.FullscreenReportWizardSectionId.AddSummaryFieldsPage;
        }
    };
    return DefineReportLayoutPage;
}(analytics_wizard_1.FullscreenWizardPage));
exports.DefineReportLayoutPage = DefineReportLayoutPage;
function _registerDefineReportLayoutPage(factory, reportWizardOptions) {
    factory.registerMetadata(pageId_1.FullscreenReportWizardPageId.DefineReportLayoutPage, {
        create: function () {
            return new DefineReportLayoutPage(reportWizardOptions);
        },
        getState: function (state) { return state; },
        setState: function (data, state) {
            state.masterDetailInfoCollection = data.masterDetailInfoCollection;
            state.masterDetailGroups = data.masterDetailGroups;
            state.masterDetailSummaryOptionsColumns = data.masterDetailSummaryOptionsColumns;
            state.masterDetailSummariesInfo = data.masterDetailSummariesInfo;
            state.ignoreNullValuesForSummary = data.ignoreNullValuesForSummary;
        },
        resetState: function (state, defaultState) {
            state.masterDetailInfoCollection = defaultState.masterDetailInfoCollection;
            state.masterDetailGroups = defaultState.masterDetailGroups;
            state.masterDetailSummaryOptionsColumns = defaultState.masterDetailSummaryOptionsColumns;
            state.masterDetailSummariesInfo = defaultState.masterDetailSummariesInfo;
            state.ignoreNullValuesForSummary = defaultState.ignoreNullValuesForSummary;
        },
        navigationPanelText: analytics_utils_1.getLocalization('Define Report Layout', 'ASPxReportsStringId.ReportDesigner_Wizard_DefineReportLayout'),
        template: 'dx-wizard-fullscreen-page'
    });
}
exports._registerDefineReportLayoutPage = _registerDefineReportLayoutPage;


/***/ }),
/* 234 */
/***/ (function(module, exports) {

module.exports = { default: "" };

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrBand_1 = __webpack_require__(15);
var xrReportelement_1 = __webpack_require__(27);
var xrReport_1 = __webpack_require__(16);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var ReportExplorerModel = (function (_super) {
    __extends(ReportExplorerModel, _super);
    function ReportExplorerModel(reportModel, editableObject, clickHandler, dragDropHandler, selection) {
        var _this = _super.call(this) || this;
        _this._disposables.push(_this.itemsProvider = new analytics_internal_1.ObjectExplorerProvider([{ model: reportModel, name: 'Report', displayName: analytics_utils_1.getLocalization('Report', 'ASPxReportsStringId.DocumentViewer_RibbonReportGroupText'), className: 'master_report', data: reportModel },
            { model: ko.pureComputed(function () { return reportModel() && reportModel().styles(); }), name: 'Styles', displayName: analytics_utils_1.getLocalization('Styles', 'DevExpress.XtraReports.UI.XRPivotGrid.Styles'), className: 'styles' },
            { model: ko.pureComputed(function () { return reportModel() && reportModel().formattingRuleSheet(); }), name: 'Formatting Rules', displayName: analytics_utils_1.getLocalization('Formatting Rules', 'DevExpress.XtraReports.UI.XRControl.FormattingRules'), className: 'formattingrules' },
            { model: ko.pureComputed(function () { return reportModel() && reportModel().crossBandControls(); }), name: 'Crossband Controls', displayName: analytics_utils_1.getLocalization('Cross-Band Controls', 'ASPxReportsStringId.ReportDesigner_CrossBandControls'), className: 'xrcrossbandbox' },
            { model: ko.pureComputed(function () { return reportModel() && reportModel().components(); }), name: 'Components', displayName: analytics_utils_1.getLocalization('Data Sources', 'ASPxReportsStringId.ReportDesigner_DataSources'), className: 'components' }
        ], ['bands', 'controls', 'rows', 'cells'], editableObject, function (model) {
            var path = ReportExplorerModel.getPathByMember(model);
            if (!path) {
                if (model === (reportModel() && reportModel().styles())) {
                    path = 'Styles';
                }
                else if (model === (reportModel() && reportModel().formattingRuleSheet())) {
                    path = 'Formatting Rules';
                }
                else if (model === (reportModel() && reportModel().components())) {
                    path = 'Components';
                }
                else if (model instanceof style_1.StyleModel) {
                    path = _this._getPathNonControl(model, 'Styles', 'styles', editableObject, reportModel);
                }
                else if (model instanceof formattingrules_1.FormattingRule) {
                    path = _this._getPathNonControl(model, 'Formatting Rules', 'formattingRuleSheet', editableObject, reportModel);
                }
                else if (model instanceof components_1.ComponentsModel) {
                    path = _this._getPathNonControl(model, 'Components', 'components', editableObject, reportModel);
                }
                else if (model === (reportModel() && reportModel().crossBandControls())) {
                    path = 'Crossband Controls';
                }
            }
            return path;
        }));
        var exprPropertyNames = ['bands', 'controls', 'rows', 'cells', 'Report', 'Styles', 'Crossband Controls', 'Components'];
        var bindingPropertyNames = [].concat(exprPropertyNames, 'Formatting Rules');
        _this._disposables.push(_this.treeListController = new analytics_internal_1.ObjectStructureTreeListController(exprPropertyNames));
        _this.treeListController.itemsFilter = function (item) {
            var realPropertyName = item.name.split('.')[0];
            var propertyNames = reportModel() && reportModel()._dataBindingMode() !== _dataBindingMode_1.DataBindingMode.Bindings ? exprPropertyNames : bindingPropertyNames;
            return propertyNames ? propertyNames.indexOf(realPropertyName) !== -1 || $.isNumeric(realPropertyName) : true;
        };
        _this.treeListController.getActions = function (item) {
            if (item.data && item.data.name !== 'Crossband Controls' && item.data.name !== 'Components') {
                if (item.data.name !== 'Styles' && item.data.name !== 'Formatting Rules') {
                    return _this._createActionsForOneElement(clickHandler, selection, editableObject, reportModel, item);
                }
                else {
                    return _this._createActionsForArray(item, reportModel);
                }
            }
        };
        _this.treeListController.dragDropHandler = dragDropHandler;
        return _this;
    }
    ReportExplorerModel.getPathByMember = function (model) {
        if (model.parentModel && model.parentModel()) {
            if (model instanceof xrBand_1.BandViewModel) {
                return ReportExplorerModel.getPathByMember(model.parentModel()) + '.bands.' + model.parentModel().bands().indexOf(model);
            }
            else if (model instanceof xrCrossband_1.XRCrossBandControlViewModel) {
                return 'Crossband Controls.Crossband Controls.' + model.parentModel().crossBandControls().indexOf(model);
            }
            else if (model instanceof xrTableCell_1.XRTableCellViewModel) {
                return ReportExplorerModel.getPathByMember(model.parentModel()) + '.cells.' + model.parentModel().cells().indexOf(model);
            }
            else if (model instanceof xrTableRow_1.XRTableRowViewModel) {
                return ReportExplorerModel.getPathByMember(model.parentModel()) + '.rows.' + model.parentModel().rows().indexOf(model);
            }
            else if (model instanceof xrReportelement_1.XRReportElementViewModel) {
                return ReportExplorerModel.getPathByMember(model.parentModel()) + '.controls.' + model.parentModel().controls().indexOf(model);
            }
        }
        else if (model instanceof xrReport_1.ReportViewModel) {
            return 'Report';
        }
        return null;
    };
    ReportExplorerModel.prototype._createActionsForOneElement = function (clickHandler, selection, editableObject, reportModel, item) {
        var actions = [{
                text: 'Properties',
                displayText: function () { return analytics_utils_1.getLocalization('Properties', 'AnalyticsCoreStringId.Cmd_Properties'); },
                imageClassName: 'dx-image-edit',
                imageTemplateName: 'dxrd-svg-operations-edit',
                clickAction: function () {
                    clickHandler();
                }
            }];
        var element = item.data && item.data.data;
        var isDeleteDeny = element && ((element.getMetaData && element.getMetaData().isDeleteDeny) || false);
        var isLocked = element && ((element.lockedInUserDesigner && element.lockedInUserDesigner()) || false);
        if (!isDeleteDeny && !isLocked) {
            actions.push({
                text: 'Delete',
                displayText: function () { return analytics_utils_1.getLocalization('Delete', 'AnalyticsCoreStringId.Cmd_Delete'); },
                imageClassName: 'dxrd-image-recycle-bin',
                imageTemplateName: 'dxrd-svg-operations-recycle_bin',
                clickAction: function () {
                    var selectedObject = ko.unwrap(editableObject);
                    if (selectedObject instanceof style_1.StyleModel) {
                        reportModel().styles.remove(selectedObject);
                    }
                    else if (selectedObject instanceof formattingrules_1.FormattingRule) {
                        reportModel().formattingRuleSheet.remove(selectedObject);
                    }
                    else if (selectedObject instanceof components_1.ComponentsModel) {
                        var dsHelper = reportModel().dsHelperProvider();
                        var removedDs = dsHelper.findDataSourceInfo(selectedObject.data);
                        removedDs && dsHelper.removeDataSource(removedDs);
                    }
                    else {
                        analytics_internal_1.deleteSelection(selection);
                    }
                }
            });
        }
        return actions;
    };
    ReportExplorerModel.prototype._createActionsForArray = function (item, reportModel) {
        if (item.data.name === 'Styles' || item.data.name === 'Formatting Rules') {
            return [{
                    text: 'Add New ' + (item.data.name === 'Styles' ? 'Style' : 'Formatting Rule'),
                    imageClassName: 'dx-image-add',
                    imageTemplateName: 'dxrd-svg-operations-add',
                    clickAction: function () {
                        if (item.data.name === 'Styles') {
                            var newStyleName = analytics_internal_1.getUniqueNameForNamedObjectsArray(reportModel().styles(), 'xrControlStyle');
                            reportModel().styles.push(new style_1.StyleModel({ '@Name': newStyleName }));
                        }
                        else {
                            reportModel().formattingRuleSheet.push(formattingrules_1.FormattingRule.createNew(reportModel()));
                        }
                    }
                }];
        }
        return [];
    };
    ReportExplorerModel.prototype._getPathNonControl = function (model, rootName, arrayName, editableObject, reportModel) {
        var array = reportModel() && reportModel()[arrayName]();
        var index = array && array.indexOf(model) || 0;
        if (index < 0) {
            editableObject(array[0] || reportModel());
            return array.length > 0 ? [rootName, rootName, 0].join('.') : 'Report';
        }
        return [rootName, rootName, index].join('.');
    };
    return ReportExplorerModel;
}(analytics_utils_1.Disposable));
exports.ReportExplorerModel = ReportExplorerModel;
var xrCrossband_1 = __webpack_require__(54);
var xrTableCell_1 = __webpack_require__(43);
var xrTableRow_1 = __webpack_require__(48);
var style_1 = __webpack_require__(37);
var formattingrules_1 = __webpack_require__(45);
var components_1 = __webpack_require__(128);
var _dataBindingMode_1 = __webpack_require__(33);


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var ko = __webpack_require__(1);
var array_store_1 = __webpack_require__(493);
var data_source_1 = __webpack_require__(387);
var DataSourceSelectBox = (function (_super) {
    __extends(DataSourceSelectBox, _super);
    function DataSourceSelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataSourceSelectBox.createDataSource = function (values) {
        var store = new array_store_1.default(values);
        var options = { store: store, pageSize: 20, paginate: true };
        return new data_source_1.default(options);
    };
    DataSourceSelectBox.prototype.getValues = function () {
        var _this = this;
        if (!this.dataSource)
            this._disposables.push(this.dataSource = ko.computed(function () { return DataSourceSelectBox.createDataSource(_this.values()); }));
        return this.dataSource;
    };
    return DataSourceSelectBox;
}(analytics_widgets_1.Editor));
exports.DataSourceSelectBox = DataSourceSelectBox;


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_elements_1 = __webpack_require__(5);
var $ = __webpack_require__(3);
var AlignmentHandler = (function () {
    function AlignmentHandler(selectionProvider, surfaceContext) {
        this._selectionProvider = selectionProvider;
        this._surfaceContext = surfaceContext;
    }
    AlignmentHandler.prototype._getFocusedItem = function () { return this._selectionProvider.focused(); };
    AlignmentHandler.prototype._getFocusedParent = function () { return this._selectionProvider.focused().parent; };
    AlignmentHandler.prototype._getPositionFromBand = function (surface) {
        var rect = $.extend({}, surface.rect());
        var parent = surface.parent;
        if (!(surface instanceof xrBand_1.BandSurface)) {
            while (!(parent instanceof xrBand_1.BandSurface)) {
                rect.left += parent.rect().left;
                rect.top += parent.rect().top;
                parent = parent.parent;
            }
            rect.bottom = rect.top + rect.height;
            rect.right = rect.left + rect.width;
        }
        else {
            parent = surface;
        }
        rect.band = parent;
        return rect;
    };
    AlignmentHandler.prototype._visitAllSelectedItemsInSameContainerWithFocused = function (iterator) {
        var focused = this._selectionProvider.focused();
        var rect = this._getPositionFromBand(focused);
        this._selectionProvider.selectedItems.filter(function (item) { return !item.locked; }).filter(function (item) {
            return item !== focused;
        }).forEach(function (item) {
            iterator(item, rect);
        });
    };
    AlignmentHandler.prototype._centerByBand = function (isHoriz, margins, rtl) {
        if (rtl === void 0) { rtl = false; }
        var items = this._selectionProvider.selectedItems.filter(function (x) { return !x.locked; });
        if (!items.length)
            return;
        var axisProperty = isHoriz ? 'left' : 'top', lengthProperty = isHoriz ? 'width' : 'height', focusedParent = items[0].parent, bandOffset = focusedParent instanceof xrBand_1.BandSurface ? margins.right() : 0, parentLengthProperty = focusedParent.rect()[lengthProperty] - bandOffset, minAxis = items[0].rect()[axisProperty], maxSide = items[0].rect()[axisProperty] + items[0].rect()[lengthProperty], newOffset;
        items.forEach(function (item) {
            var axis = item.rect()[axisProperty];
            var side = item.rect()[axisProperty] + item.rect()[lengthProperty];
            if (axis < minAxis) {
                minAxis = axis;
            }
            if (side > maxSide) {
                maxSide = side;
            }
        });
        newOffset = (parentLengthProperty - (maxSide - minAxis)) / 2 - minAxis + (rtl ? bandOffset : 0);
        items.forEach(function (item) {
            var newVal = {};
            newVal[axisProperty] = item.rect()[axisProperty] + newOffset;
            newVal[lengthProperty] = item.rect()[lengthProperty];
            item.rect(newVal);
        });
    };
    AlignmentHandler.prototype._roundingValue = function (value, snapGridSize) {
        return Math.round(value / snapGridSize) * snapGridSize;
    };
    AlignmentHandler.prototype.alignLeft = function () {
        var _this = this;
        this._visitAllSelectedItemsInSameContainerWithFocused(function (item, rect) {
            if (item instanceof xrTableRow_1.XRTableRowSurface) {
                item = item.parent;
            }
            var parentRect = _this._getPositionFromBand(item.parent);
            var left = rect.left - parentRect.left;
            item.rect({ left: left });
        });
    };
    AlignmentHandler.prototype.alignTop = function () {
        var _this = this;
        this._visitAllSelectedItemsInSameContainerWithFocused(function (item, rect) {
            if (item instanceof xrTableCell_1.XRTableCellSurface) {
                item = item.parent;
            }
            var parentRect = _this._getPositionFromBand(item.parent);
            if (parentRect['band'] === rect['band']) {
                var top = rect.top - parentRect.top;
                item.rect({ top: top });
            }
        });
    };
    AlignmentHandler.prototype.alignRight = function () {
        var _this = this;
        this._visitAllSelectedItemsInSameContainerWithFocused(function (item, rect) {
            if (item instanceof xrTableRow_1.XRTableRowSurface) {
                item = item.parent;
            }
            var parentRect = _this._getPositionFromBand(item.parent);
            var right = rect.left - parentRect.left + rect.width;
            var left = right - item.rect().width;
            item.rect({ right: right, left: left });
        });
    };
    AlignmentHandler.prototype.alignBottom = function () {
        var _this = this;
        this._visitAllSelectedItemsInSameContainerWithFocused(function (item, rect) {
            if (item instanceof xrTableCell_1.XRTableCellSurface) {
                item = item.parent;
            }
            var parentRect = _this._getPositionFromBand(item.parent);
            if (parentRect['band'] === rect['band']) {
                var bottom = rect.top - parentRect.top + rect.height;
                var top = bottom - item.rect().height;
                item.rect({ bottom: bottom, top: top });
            }
        });
    };
    AlignmentHandler.prototype.alignVerticalCenters = function () {
        var focused = this._getFocusedItem();
        var verticalCenter = focused.rect().left + focused.rect().width / 2;
        this._visitAllSelectedItemsInSameContainerWithFocused(function (item) {
            if (item instanceof xrTableCell_1.XRTableCellSurface) {
                item = item.parent.parent;
            }
            else if (item instanceof xrTableRow_1.XRTableRowSurface) {
                item = item.parent;
            }
            item.rect({ left: verticalCenter - item.rect().width / 2 });
        });
    };
    AlignmentHandler.prototype.alignHorizontalCenters = function () {
        var focused = this._getFocusedItem();
        var horizontalCenter = focused.rect().top + focused.rect().height / 2;
        this._visitAllSelectedItemsInSameContainerWithFocused(function (item) {
            if (item instanceof xrTableCell_1.XRTableCellSurface) {
                item = item.parent.parent;
            }
            else if (item instanceof xrTableRow_1.XRTableRowSurface) {
                item = item.parent;
            }
            if (focused.parent === item.parent) {
                item.rect({ top: horizontalCenter - item.rect().height / 2 });
            }
        });
    };
    AlignmentHandler.prototype.sizeToControlWidth = function () {
        var newWidth = this._getFocusedItem().rect().width;
        this._visitAllSelectedItemsInSameContainerWithFocused(function (item) {
            if (item instanceof xrTableRow_1.XRTableRowSurface) {
                item = item.parent;
            }
            item.rect({ width: newWidth });
        });
    };
    AlignmentHandler.prototype.sizeToControlHeight = function () {
        var newHeight = this._getFocusedItem().rect().height;
        this._visitAllSelectedItemsInSameContainerWithFocused(function (item) {
            if (item instanceof xrTableCell_1.XRTableCellSurface) {
                item = item.parent;
            }
            item.rect({ height: newHeight });
        });
    };
    AlignmentHandler.prototype.sizeToControl = function () {
        var newWidth = this._getFocusedItem().rect().width, newHeight = this._getFocusedItem().rect().height;
        this._visitAllSelectedItemsInSameContainerWithFocused(function (item) {
            if (item instanceof xrTableCell_1.XRTableCellSurface) {
                item.rect({ width: newWidth });
                item.parent.rect({ height: newHeight });
            }
            else if (item instanceof xrTableRow_1.XRTableRowSurface) {
                item.rect({ height: newHeight });
                item.parent.rect({ width: newWidth });
            }
            else {
                item.rect({ width: newWidth, height: newHeight });
            }
        });
    };
    AlignmentHandler.prototype.centerHorizontally = function () {
        this._centerByBand(true, this._surfaceContext().margins, this._surfaceContext().rtl());
    };
    AlignmentHandler.prototype.centerVertically = function () {
        this._centerByBand(false, new analytics_elements_1.Margins(0, 0, 0, 0));
    };
    AlignmentHandler.prototype.alignToGrid = function () {
        var _this = this;
        var snapGridSize = this._surfaceContext().snapGridSize();
        this._selectionProvider.selectedItems.filter(function (item) { return !item.locked; }).forEach(function (item) {
            if (item instanceof xrTableCell_1.XRTableCellSurface) {
                item.rect({
                    left: _this._roundingValue(item.rect().left, snapGridSize)
                });
                item.parent.rect({
                    top: _this._roundingValue(item.rect().top, snapGridSize)
                });
            }
            else if (item instanceof xrTableRow_1.XRTableRowSurface) {
                item.rect({
                    top: _this._roundingValue(item.rect().top, snapGridSize)
                });
                item.parent.rect({
                    left: _this._roundingValue(item.rect().left, snapGridSize)
                });
            }
            else {
                item.rect({
                    left: _this._roundingValue(item.rect().left, snapGridSize),
                    top: _this._roundingValue(item.rect().top, snapGridSize)
                });
            }
        });
    };
    AlignmentHandler.prototype.sizeToGrid = function () {
        var _this = this;
        var snapGridSize = this._surfaceContext().snapGridSize();
        this._selectionProvider.selectedItems.filter(function (item) { return !item.locked; }).forEach(function (item) {
            if (item instanceof xrTableCell_1.XRTableCellSurface) {
                item.rect({
                    left: _this._roundingValue(item.rect().left, snapGridSize),
                    width: _this._roundingValue(item.rect().width, snapGridSize)
                });
                item.parent.rect({
                    top: _this._roundingValue(item.rect().top, snapGridSize),
                    height: _this._roundingValue(item.rect().height, snapGridSize)
                });
            }
            else if (item instanceof xrTableRow_1.XRTableRowSurface) {
                item.rect({
                    top: _this._roundingValue(item.rect().top, snapGridSize),
                    height: _this._roundingValue(item.rect().height, snapGridSize)
                });
                item.parent.rect({
                    left: _this._roundingValue(item.rect().left, snapGridSize),
                    width: _this._roundingValue(item.rect().width, snapGridSize)
                });
            }
            else {
                item.rect({
                    left: _this._roundingValue(item.rect().left, snapGridSize),
                    top: _this._roundingValue(item.rect().top, snapGridSize),
                    width: _this._roundingValue(item.rect().width, snapGridSize),
                    height: _this._roundingValue(item.rect().height, snapGridSize)
                });
            }
        });
    };
    AlignmentHandler.prototype.sendToBack = function () {
        this._selectionProvider.selectedItems.filter(function (item) { return !item.locked; }).forEach(function (item) {
            if (!item.focused()) {
                item.getControlModel()['sendToBack']();
            }
        });
        this._getFocusedItem().getControlModel()['sendToBack']();
    };
    AlignmentHandler.prototype.bringToFront = function () {
        var reverseSelectedItems = this._selectionProvider.selectedItems.filter(function (item) { return !item.locked; });
        reverseSelectedItems.reverse();
        reverseSelectedItems.forEach(function (item) {
            item.getControlModel()['bringToFront']();
        });
    };
    AlignmentHandler.prototype.canChangeZOrder = function () {
        var focusedItem = this._getFocusedItem(), parent = focusedItem && focusedItem.parent;
        if (!focusedItem || !parent)
            return false;
        var childrenCollection = parent.getChildrenCollection();
        return (childrenCollection && childrenCollection.peek().length) > 1;
    };
    return AlignmentHandler;
}());
exports.AlignmentHandler = AlignmentHandler;
var xrBand_1 = __webpack_require__(15);
var xrTableRow_1 = __webpack_require__(48);
var xrTableCell_1 = __webpack_require__(43);


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrTableRow_1 = __webpack_require__(48);
var metadata_1 = __webpack_require__(28);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var TableRowActions = (function (_super) {
    __extends(TableRowActions, _super);
    function TableRowActions(selection, onComponentAdded, isDisabled) {
        if (isDisabled === void 0) { isDisabled = function () { return false; }; }
        var _this = _super.call(this) || this;
        _this.selection = selection;
        _super.prototype.initActions.call(_this, [
            {
                text: 'Insert Row Above',
                group: function () { return analytics_utils_1.getLocalization('Table Rows', 'TODO'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Row Above', 'ASPxReportsStringId.ReportDesigner_TableActions_InsertRowAbove'); },
                imageClassName: 'dxrd-image-actions-insert_row_above',
                imageTemplateName: 'dxrd-svg-actions-insert_row_above',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function () { _this.insertRowAbove(); },
            }, {
                text: 'Insert Row Below',
                group: function () { return analytics_utils_1.getLocalization('Table Rows', 'TODO'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Row Below', 'ASPxReportsStringId.ReportDesigner_TableActions_InsertRowBelow'); },
                imageClassName: 'dxrd-image-actions-insert_row_below',
                imageTemplateName: 'dxrd-svg-actions-insert_row_below',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function () { _this.insertRowBelow(); },
            }, {
                text: 'Delete Row',
                group: function () { return analytics_utils_1.getLocalization('Table Rows', 'TODO'); },
                displayText: function () { return analytics_utils_1.getLocalization('Delete Row', 'ASPxReportsStringId.ReportDesigner_TableActions_DeleteRow'); },
                imageClassName: 'dxrd-image-actions-delete_row',
                imageTemplateName: 'dxrd-svg-actions-delete_row',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function () { _this.deleteRow(); },
            }
        ]);
        _this.onComponentAdded = function (e) { onComponentAdded && onComponentAdded(e); };
        return _this;
    }
    Object.defineProperty(TableRowActions.prototype, "_row", {
        get: function () {
            return this.selection.focused().getControlModel();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TableRowActions.prototype, "_table", {
        get: function () {
            return this._row.parentModel();
        },
        enumerable: true,
        configurable: true
    });
    TableRowActions.prototype.isDisabled = function () {
        var item = this.selection.focused();
        if (item) {
            var report = item.getControlModel().root;
            return report && report.language() !== metadata_1.defaultCulture;
        }
        return true;
    };
    TableRowActions.prototype.insertRowAbove = function () {
        this._table.insertRow(this._row, true, this.onComponentAdded);
    };
    TableRowActions.prototype.insertRowBelow = function () {
        this._table.insertRow(this._row, false, this.onComponentAdded);
    };
    TableRowActions.prototype.deleteRow = function () {
        analytics_internal_1.deleteSelection(this.selection);
    };
    TableRowActions.prototype.condition = function (context) {
        return context instanceof xrTableRow_1.XRTableRowViewModel;
    };
    return TableRowActions;
}(analytics_internal_1.BaseActionsProvider));
exports.TableRowActions = TableRowActions;


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var BaseConverter = (function () {
    function BaseConverter() {
        var _this = this;
        this._model = null;
        this.popupOptions = {
            height: 250,
            visible: ko.observable(false),
            title: analytics_utils_1.getLocalization('Convert', 'ReportStringId.UD_Msg_ConvertBindingsCaption'),
            confirmMessage: '',
            infoMessage: '',
            linkText: '',
            linkUrl: '',
            container: function (element) { return analytics_internal_1.getParentContainer(element); },
            buttons: [
                {
                    toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                        text: analytics_utils_1.getLocalization('Yes', 'AnalyticsCoreStringId.ParametersPanel_True'), onClick: function () {
                            _this._applyChanges();
                        }
                    }
                },
                {
                    toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                        text: analytics_utils_1.getLocalization('No', 'ASPxReportsStringId.ParametersPanel_No'), onClick: function () {
                            _this._cancel();
                        }
                    }
                }
            ]
        };
    }
    BaseConverter.prototype.convert = function (model) {
        if (!model)
            return;
        this._model = model;
        this.popupOptions.visible(true);
    };
    BaseConverter.prototype._applyChanges = function () {
        this.popupOptions.visible(false);
    };
    BaseConverter.prototype._cancel = function () {
        this.popupOptions.visible(false);
    };
    return BaseConverter;
}());
exports.BaseConverter = BaseConverter;


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var settings_1 = __webpack_require__(12);
var analytics_internal_1 = __webpack_require__(2);
var FormatStringService = (function () {
    function FormatStringService() {
    }
    FormatStringService.saveCustomPattern = function (typeString, format) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'formatString', encodeURIComponent(JSON.stringify({ action: 'save', typeString: typeString, customFormatString: format })));
    };
    FormatStringService.removeCustomPattern = function (typeString, format) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'formatString', encodeURIComponent(JSON.stringify({ action: 'remove', typeString: typeString, customFormatString: format })));
    };
    FormatStringService.updatePreview = function (value, typeString, format) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'formatStringPreview', encodeURIComponent(JSON.stringify({ value: value, typeString: typeString, formatString: format })));
    };
    FormatStringService.actions = { updatePreview: FormatStringService.updatePreview, removeCustomPattern: FormatStringService.removeCustomPattern, saveCustomPattern: FormatStringService.saveCustomPattern };
    return FormatStringService;
}());
exports.FormatStringService = FormatStringService;


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_widgets_1 = __webpack_require__(4);
var reportExpressionEditorAdapter_1 = __webpack_require__(172);
var ReportExpressionEditor = (function (_super) {
    __extends(ReportExpressionEditor, _super);
    function ReportExpressionEditor(modelPropertyInfo, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, modelPropertyInfo, level, parentDisabled, textToSearch) || this;
        _this.popupVisible = ko.observable(false);
        return _this;
    }
    ReportExpressionEditor.prototype.patchOptions = function (reportExplorerProvider, editableObject) {
        if (!this._adapter) {
            this._adapter = new reportExpressionEditorAdapter_1.ReportExpressionEditorAdapter(this.values, this.value);
            this._disposables.push(this._adapter);
        }
        return this._adapter.patchOptions(reportExplorerProvider, editableObject);
    };
    return ReportExpressionEditor;
}(analytics_widgets_1.Editor));
exports.ReportExpressionEditor = ReportExpressionEditor;


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _loaddispatcher_1 = __webpack_require__(443);
var _toolbar_1 = __webpack_require__(444);
var _utils_1 = __webpack_require__(243);
var xrRichText_1 = __webpack_require__(97);
var _utils_2 = __webpack_require__(42);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_internal_1 = __webpack_require__(8);
var instance_1 = __webpack_require__(106);
var XRRichEditControlModel = (function (_super) {
    __extends(XRRichEditControlModel, _super);
    function XRRichEditControlModel(element, inlineControl, selected) {
        var _this = _super.call(this) || this;
        _this.disableCommands = [
            instance_1.getRichEditInstance().HomeTabCommandId.Find,
            instance_1.getRichEditInstance().HomeTabCommandId.Replace,
        ];
        _this._verticalScrollOffset = 0;
        _this._richHeight = null;
        _this._disposables.push(_this.visible = ko.pureComputed({
            read: function () { return inlineControl.visible() && selected(); },
            write: function (value) { inlineControl.visible(value); }
        }));
        _this._disposables.push(_this.className = ko.computed(function () {
            return ['dxrd-rich-surface', _this.visible() ? '' : 'dxrd-richedit-readonly'].join(' ');
        }));
        _this._element = element;
        _this._element.id = 'rich' + analytics_internal_1.guid().replace(/-/g, '');
        _this._richEdit = instance_1.getRichEditInstance().create(element, _this.createOptions());
        for (var _i = 0, _a = _this.disableCommands; _i < _a.length; _i++) {
            var commandId = _a[_i];
            _this._richEdit.setCommandEnabled(commandId, false);
        }
        _this._dispatcher = new _loaddispatcher_1.RichEditLoadDispatcher(_this);
        _this.createToolbar();
        return _this;
    }
    XRRichEditControlModel.prototype.setRichHeight = function (value) {
        this._richHeight = value;
    };
    XRRichEditControlModel.prototype._elementExists = function () {
        return !!document.getElementById(this._element.id);
    };
    XRRichEditControlModel.prototype.getToolbar = function () { return this._toolbar; };
    XRRichEditControlModel.prototype.getRealControl = function () {
        return this._richEdit;
    };
    XRRichEditControlModel.prototype.getRealControlNative = function () {
        return this._richEdit['_native'];
    };
    XRRichEditControlModel.prototype.updateCanvasScroll = function () {
        this.getRealControlNative().core.viewManager.canvasListener.onCanvasScroll();
    };
    XRRichEditControlModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._toolbar.dispose();
        this._dispatcher.dispose();
        this._richEdit.dispose();
    };
    XRRichEditControlModel.prototype.executeCommand = function (commandId, parameter, setFocus) {
        if (setFocus === void 0) { setFocus = false; }
        if (!this._richEdit.isDisposed) {
            this._richEdit.executeCommand(commandId, parameter);
            if (setFocus)
                this._richEdit.focus();
        }
    };
    XRRichEditControlModel.prototype.insertHtml = function (html) {
        if (!this._richEdit.isDisposed)
            this.getRealControlNative().core.commandManager.getCommand(376).execute(false, html);
    };
    XRRichEditControlModel.prototype.createOptions = function () {
        var _this = this;
        var options = instance_1.getRichEditInstance().createOptions();
        options.ribbon.visible = false;
        options.view.viewType = instance_1.getRichEditInstance().ViewType.Simple;
        options.autoCorrect.correctTwoInitialCapitals = true;
        options.confirmOnLosingChanges.enabled = false;
        options.width = '100%';
        options.height = '100%';
        options.contextMenu.enabled = false;
        options.view.simpleViewSettings.paddings = { left: 1.92, right: 1.92, top: 0.01, bottom: 0.01 };
        options.events.commandStateChanged = function (s, e) { return _this._toolbar && _this._toolbar.onCommandStateChanged(s, e); };
        options.fonts = this.getRichEditFonts();
        var _self = this;
        options['internalApi'] = {
            getVerticalScrollOffset: function () {
                return _this._verticalScrollOffset;
            },
            get getVisibleAreaHeight() {
                return _self._richHeight === null ? 0 : function () { return _self._richHeight; };
            }
        };
        return options;
    };
    XRRichEditControlModel.prototype.getFonts = function () {
        return Object.keys(ko.unwrap(analytics_widgets_internal_1.availableFonts)).sort(function (a, b) { return a < b ? -1 : 1; });
    };
    XRRichEditControlModel.prototype.getRichEditFonts = function () {
        var rdFonts = this.getFonts();
        var resultFonts = [];
        for (var _i = 0, rdFonts_1 = rdFonts; _i < rdFonts_1.length; _i++) {
            var fontName = rdFonts_1[_i];
            resultFonts.push({ name: fontName, fontFamily: fontName });
        }
        return {
            fonts: resultFonts,
            mappings: {
                defaultFontName: rdFonts[0],
            },
        };
    };
    XRRichEditControlModel.prototype.createToolbar = function () {
        this._toolbar = new _toolbar_1.ToolbarSurface({
            executeCommand: this.executeCommand.bind(this),
            commandManager: this.getRealControlNative().core.commandManager,
            richEditPublic: this._richEdit,
            visible: this.visible,
            fonts: this.getFonts(),
        });
    };
    XRRichEditControlModel.prototype.saveDocumentNative = function (documentFormat, onResultReady) {
        if (this._richEdit.hasUnsavedChanges) {
            if (onResultReady) {
                var handler = function (sender, arg2) {
                    onResultReady(arg2.base64);
                    sender.events.saving.removeHandler(handler, sender);
                };
                this._richEdit.events.saving.addHandler(handler, this._richEdit);
            }
            this._richEdit.saveDocument(documentFormat);
        }
        else {
            this._richEdit.exportToBase64(function (base64) {
                if (onResultReady) {
                    onResultReady(base64);
                }
            }, documentFormat);
        }
    };
    XRRichEditControlModel.prototype.newDocumentNative = function (onResultReady) {
        if (onResultReady) {
            var handler = function (sender, arg2) {
                onResultReady();
                sender.events.documentLoaded.removeHandler(handler, sender);
            };
            this._richEdit.events.documentLoaded.addHandler(handler, this._richEdit);
        }
        this.executeCommand(instance_1.getRichEditInstance().FileTabCommandId.CreateDocument);
    };
    XRRichEditControlModel.prototype.openDocumentNative = function (base64, documentFormat, onResultReady, onError) {
        var _this = this;
        var handler = function (sender, arg2) {
            onResultReady();
            sender.events.documentLoaded.removeHandler(handler, sender);
        };
        if (onResultReady) {
            this._richEdit.events.documentLoaded.addHandler(handler, this._richEdit);
        }
        this._richEdit.openDocument(base64, '', documentFormat, function (result) {
            if (!result && onError) {
                _this._richEdit.events.documentLoaded.removeHandler(handler, _this._richEdit);
                onError();
            }
        });
    };
    XRRichEditControlModel.prototype.saveDocument = function (documentFormat, onResultReady) {
        this._dispatcher.process({ documentConverted: onResultReady, queueAction: _utils_1.RichAction.SaveDocument, documentFormat: documentFormat, base64: undefined, ready: undefined, errorCallBack: undefined });
    };
    XRRichEditControlModel.prototype.newDocument = function (onResultReady) {
        this._dispatcher.process({ documentConverted: undefined, queueAction: _utils_1.RichAction.NewDocument, documentFormat: undefined, base64: undefined, ready: onResultReady, errorCallBack: undefined });
    };
    XRRichEditControlModel.prototype.openDocument = function (base64, documentFormat, onResultReady, onError) {
        this._dispatcher.process({ documentConverted: undefined, queueAction: _utils_1.RichAction.OpenDocument, documentFormat: documentFormat, base64: base64, ready: onResultReady, errorCallBack: onError });
    };
    XRRichEditControlModel.prototype.changeSize = function () {
        this._richEdit.adjust();
    };
    XRRichEditControlModel.prototype.focusChanged = function (inFocus) {
        if (!inFocus) {
            this._richEdit.selection.setSelection(0);
        }
        this.changeSize();
    };
    XRRichEditControlModel.prototype.getText = function (interval) {
        return this._richEdit.document.getText(interval);
    };
    XRRichEditControlModel.prototype.documentIsEmpty = function () {
        return this._richEdit.document.length == 1;
    };
    return XRRichEditControlModel;
}(analytics_utils_1.Disposable));
exports.XRRichEditControlModel = XRRichEditControlModel;
var RichLoader = (function (_super) {
    __extends(RichLoader, _super);
    function RichLoader(richEdit) {
        var _this = _super.call(this) || this;
        _this.richEdit = richEdit;
        return _this;
    }
    Object.defineProperty(RichLoader.prototype, "textConverted", {
        set: function (textConverted) {
            this._textConverted = textConverted;
        },
        enumerable: true,
        configurable: true
    });
    RichLoader.prototype.load = function (loadData) {
        var _this = this;
        if (!loadData.data || loadData.dataFormat === xrRichText_1.XRRichTextStreamType.HtmlText) {
            this.richEdit.newDocument(function () {
                _this.richEdit.insertHtml(loadData.data || '');
                _this.richEdit.saveDocument(2, function (result) {
                    _this._textConverted(result);
                });
            });
            return;
        }
        var formatKey;
        if (loadData.dataFormat === xrRichText_1.XRRichTextStreamType.PlainText) {
            formatKey = instance_1.getRichEditInstance().DocumentFormat.PlainText;
        }
        else if (loadData.dataFormat === xrRichText_1.XRRichTextStreamType.RtfText) {
            formatKey = 2;
        }
        else if (loadData.dataFormat === xrRichText_1.XRRichTextStreamType.XmlText) {
            formatKey = instance_1.getRichEditInstance().DocumentFormat.OpenXml;
        }
        this.richEdit.openDocument(loadData.data, formatKey, function () {
            _this.richEdit.saveDocument(2, function (result) {
                _this._textConverted(result);
            });
        }, function () {
            _this.richEdit.openDocument(loadData.oldText, 2, function () {
                _this.richEdit.saveDocument(2, function (result) {
                    _this._textConverted(result);
                    analytics_internal_1.NotifyAboutWarning('The document is corrupted and cannot be opened', true);
                });
            });
        });
    };
    return RichLoader;
}(analytics_utils_1.Disposable));
exports.RichLoader = RichLoader;
var RichEditPaddingModelWrapper = (function (_super) {
    __extends(RichEditPaddingModelWrapper, _super);
    function RichEditPaddingModelWrapper(padding, _richEdit) {
        var _this = _super.call(this) || this;
        _this._richEdit = _richEdit;
        _this._paddingModel = new analytics_elements_1.PaddingModel();
        _this._disposables.push(padding.subscribe(function (newVal) {
            _this._paddingModel.applyFromString(newVal);
            _this._setPaddings();
        }));
        _this._disposables.push(_this._paddingModel);
        return _this;
    }
    RichEditPaddingModelWrapper.prototype._setPaddings = function () {
        var _this = this;
        var rich = this._richEdit.getRealControl();
        var paddings = rich.simpleViewSettings.paddings;
        ['left', 'right', 'top', 'bottom'].forEach(function (side) { return paddings[side] = _utils_2.recalculateUnit(_this._paddingModel[side]() || 0.01, _this._paddingModel.dpi()); });
        rich.simpleViewSettings.paddings = paddings;
    };
    return RichEditPaddingModelWrapper;
}(analytics_utils_1.Disposable));
exports.RichEditPaddingModelWrapper = RichEditPaddingModelWrapper;
var RichEditFontModel = (function (_super) {
    __extends(RichEditFontModel, _super);
    function RichEditFontModel(value, richEdit, foreColor, controller) {
        var _this = _super.call(this, value) || this;
        _this.richEdit = richEdit;
        _this.controller = controller;
        for (var _i = 0, _a = [
            [_this.family, function (fontName) { return _this.applyCommand(instance_1.getRichEditInstance().HomeTabCommandId.ChangeFontName, fontName); }],
            [_this.size, function (size) { return _this.applyCommand(instance_1.getRichEditInstance().HomeTabCommandId.ChangeFontSize, size); }],
            [foreColor, function (foreColor) { return _this.applyCommand(instance_1.getRichEditInstance().HomeTabCommandId.ChangeFontForeColor, foreColor); }],
            [_this.modificators.bold, function (bold) { return _this.applyCommand(instance_1.getRichEditInstance().HomeTabCommandId.ToggleFontBold, bold); }],
            [_this.modificators.italic, function (italic) { return _this.applyCommand(instance_1.getRichEditInstance().HomeTabCommandId.ToggleFontItalic, italic); }],
            [_this.modificators.strikeout, function (strikeout) { return _this.applyCommand(instance_1.getRichEditInstance().HomeTabCommandId.ToggleFontStrikeout, strikeout); }],
            [_this.modificators.underline, function (underline) { return _this.applyCommand(instance_1.getRichEditInstance().HomeTabCommandId.ToggleFontUnderline, underline); }],
        ]; _i < _a.length; _i++) {
            var data = _a[_i];
            _this._disposables.push(data[0].subscribe(data[1]));
        }
        return _this;
    }
    RichEditFontModel.prototype.applyCommand = function (commandId, parameter) {
        var _this = this;
        this.richEdit.getRealControl().executeCommand(commandId, parameter);
        if (!this.richEdit.visible())
            this.richEdit.saveDocument(2, function (newRtf) { return _this.controller.setRtfString(newRtf); });
    };
    return RichEditFontModel;
}(analytics_widgets_internal_1.FontModel));
exports.RichEditFontModel = RichEditFontModel;


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var RichAction;
(function (RichAction) {
    RichAction[RichAction["OpenDocument"] = 0] = "OpenDocument";
    RichAction[RichAction["SaveDocument"] = 1] = "SaveDocument";
    RichAction[RichAction["NewDocument"] = 2] = "NewDocument";
})(RichAction = exports.RichAction || (exports.RichAction = {}));


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var _chartTreeListDragDropHelper_1 = __webpack_require__(245);
var ChartStructureTreeListController = (function (_super) {
    __extends(ChartStructureTreeListController, _super);
    function ChartStructureTreeListController(propertyNames, listPropertyNames, selectCallback, surface, undoEngine, dragdrophandler) {
        var _this = _super.call(this, propertyNames, listPropertyNames) || this;
        _this.surface = surface;
        _this.undoEngine = undoEngine;
        _this.dragdrophandler = dragdrophandler;
        var filter = _this.itemsFilter;
        _this.itemsFilter = function (item, path) {
            if (path === 'Chart.seriesTemplate.label')
                return false;
            return filter(item, path);
        };
        _this.hasItems = function (item) {
            return !!listPropertyNames && listPropertyNames.indexOf(item.specifics) !== -1;
        };
        _this.select = function (value) {
            _this.selectedItem && _this.selectedItem.isSelected(false);
            _this.selectedItem = value;
            value.isSelected(true);
            selectCallback && selectCallback(value);
        };
        _this.showIconsForChildItems = function (parent) {
            if (parent === void 0) { parent = null; }
            return parent === null || parent.level < 1;
        };
        _this.dragDropHandler = new ChartDragDropHandler(_this.selectedItem, surface, undoEngine, dragdrophandler);
        return _this;
    }
    return ChartStructureTreeListController;
}(analytics_internal_1.ObjectStructureTreeListController));
exports.ChartStructureTreeListController = ChartStructureTreeListController;
var ChartDragDropHandler = (function (_super) {
    __extends(ChartDragDropHandler, _super);
    function ChartDragDropHandler(surface, selection, undoEngine, dragHelperContent) {
        var _this = _super.call(this, surface, selection, undoEngine, null, dragHelperContent) || this;
        _this.undoEngine = undoEngine;
        _this.cursor = 'arrow';
        _this.alwaysAlt = true;
        _this.containment = '.dx-chart-left-panel';
        _this.parent = function () { return $('.dxcd-designer'); };
        _this['cursorAt'] = {
            top: 0,
            left: 0
        };
        _this.dragDropHelper = new _chartTreeListDragDropHelper_1.ChartTreeListDragDropHelper(dragHelperContent);
        _this.helper = _this.dragDropHelper.helper;
        return _this;
    }
    ChartDragDropHandler.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.dragDropHelper.dispose();
    };
    ChartDragDropHandler.prototype.startDrag = function (draggable) {
        this.dragDropHelper.start(draggable);
        _super.prototype.startDrag.call(this, draggable);
    };
    ChartDragDropHandler.prototype.drag = function (event, ui) {
        if (this.dragDropHelper) {
            var target = this.getTarget(event);
            if (target) {
                this.dragDropHelper.drag(ko.dataFor(target), target);
                this.dragDropHelper.addDroppableClass();
            }
        }
    };
    ChartDragDropHandler.prototype.doStopDrag = function (ui, draggable, event) {
        this.dragDropHelper.stop();
    };
    return ChartDragDropHandler;
}(analytics_internal_1.DragDropHandler));
exports.ChartDragDropHandler = ChartDragDropHandler;


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_internal_1 = __webpack_require__(8);
var ChartTreeListDragDropHelper = (function (_super) {
    __extends(ChartTreeListDragDropHelper, _super);
    function ChartTreeListDragDropHelper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChartTreeListDragDropHelper.prototype.getSiblings = function () {
        return this._draggableModel.parent;
    };
    ChartTreeListDragDropHelper.prototype.stop = function () {
        _super.prototype.stop.call(this);
        if (this.canDrop())
            this.reorderSiblings();
    };
    return ChartTreeListDragDropHelper;
}(analytics_widgets_internal_1.ReorderTreeListDragDropHelper));
exports.ChartTreeListDragDropHelper = ChartTreeListDragDropHelper;


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var ChartStructureObjectProvider = (function (_super) {
    __extends(ChartStructureObjectProvider, _super);
    function ChartStructureObjectProvider(target, displayName, localizationId) {
        return _super.call(this, target, displayName, localizationId) || this;
    }
    ChartStructureObjectProvider.prototype.getClassName = function (instance) {
        if (instance instanceof _series_1.SeriesViewModel) {
            return 'SeriesViewModel';
        }
        else if (instance instanceof _secondaryAxisViewModel_1.SecondaryAxisViewModel) {
            return 'SecondaryAxisViewModel';
        }
        else {
            return _super.prototype.getClassName.call(this, instance);
        }
    };
    ChartStructureObjectProvider.prototype.createArrayItem = function (currentTarget, result, propertyName) {
        _super.prototype.createArrayItem.call(this, currentTarget, result, propertyName);
        for (var i = 0; i < result.length; i++) {
            var item = result[i];
            if (item.specifics === 'SeriesViewModel') {
                var unwrapArrayValue = ko.unwrap(currentTarget[i]);
                result[i].dragData = { noDragable: false };
                result[i]['data'] = unwrapArrayValue;
            }
        }
    };
    return ChartStructureObjectProvider;
}(analytics_internal_1.ObjectStructureProvider));
exports.ChartStructureObjectProvider = ChartStructureObjectProvider;
var _series_1 = __webpack_require__(110);
var _secondaryAxisViewModel_1 = __webpack_require__(166);


/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _chart_1 = __webpack_require__(19);
var analytics_elements_1 = __webpack_require__(5);
var SeriesLabelViewModel = (function (_super) {
    __extends(SeriesLabelViewModel, _super);
    function SeriesLabelViewModel(model, serializer) {
        var _this = _super.call(this, model, serializer, _chart_1.seriesLabelSerializationsInfo) || this;
        if (_this.typeNameSerializable) {
            _this._disposables.push(_this.typeNameSerializable.subscribe(function (val) {
                _this.seriesLabelPosition(null);
            }));
        }
        return _this;
    }
    SeriesLabelViewModel.from = function (model, serializer) {
        return new SeriesLabelViewModel(model || {}, serializer);
    };
    SeriesLabelViewModel.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, _chart_1.seriesLabelSerializationsInfo, refs);
    };
    return SeriesLabelViewModel;
}(analytics_elements_1.SerializableModel));
exports.SeriesLabelViewModel = SeriesLabelViewModel;


/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _summaryOptionsMetaData_1 = __webpack_require__(78);
var analytics_utils_1 = __webpack_require__(0);
var SummaryOptionsModelBase = (function () {
    function SummaryOptionsModelBase(model, serializer) {
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(this, model || {});
    }
    SummaryOptionsModelBase.prototype.getInfo = function () {
        return _summaryOptionsMetaData_1.summaryOptionsSerializationInfoArray;
    };
    SummaryOptionsModelBase.prototype.resetAllProperties = function () {
        var _this = this;
        this.getInfo().forEach(function (info) {
            if ('defaultVal' in info) {
                _this[info.propertyName](info.defaultVal);
            }
            else if (info.propertyName === 'summaryFunction') {
                _this.summaryFunction.functionName(null);
                _this.summaryFunction.args([]);
            }
            else {
                _this[info.propertyName](null);
            }
        });
    };
    return SummaryOptionsModelBase;
}());
exports.SummaryOptionsModelBase = SummaryOptionsModelBase;
var QualitativeSummaryOptionsModel = (function (_super) {
    __extends(QualitativeSummaryOptionsModel, _super);
    function QualitativeSummaryOptionsModel(model, serializer) {
        return _super.call(this, model || {}, serializer) || this;
    }
    QualitativeSummaryOptionsModel.from = function (model, serializer) {
        return new QualitativeSummaryOptionsModel(model || {}, serializer);
    };
    QualitativeSummaryOptionsModel.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, _summaryOptionsMetaData_1.summaryOptionsSerializationInfoArray, refs);
    };
    return QualitativeSummaryOptionsModel;
}(SummaryOptionsModelBase));
exports.QualitativeSummaryOptionsModel = QualitativeSummaryOptionsModel;
var NumericSummaryOptionsModel = (function (_super) {
    __extends(NumericSummaryOptionsModel, _super);
    function NumericSummaryOptionsModel(model, serializer) {
        return _super.call(this, model || {}, serializer) || this;
    }
    NumericSummaryOptionsModel.from = function (model, serializer) {
        return new NumericSummaryOptionsModel(model || {}, serializer);
    };
    NumericSummaryOptionsModel.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, _summaryOptionsMetaData_1.numericSummaryOptionsSerializationInfoArray, refs);
    };
    NumericSummaryOptionsModel.prototype.getInfo = function () {
        return _summaryOptionsMetaData_1.numericSummaryOptionsSerializationInfoArray;
    };
    return NumericSummaryOptionsModel;
}(SummaryOptionsModelBase));
exports.NumericSummaryOptionsModel = NumericSummaryOptionsModel;
var DateTimeSummaryOptionsModel = (function (_super) {
    __extends(DateTimeSummaryOptionsModel, _super);
    function DateTimeSummaryOptionsModel(model, serializer) {
        return _super.call(this, model || {}, serializer) || this;
    }
    DateTimeSummaryOptionsModel.from = function (model, serializer) {
        return new DateTimeSummaryOptionsModel(model || {}, serializer);
    };
    DateTimeSummaryOptionsModel.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, _summaryOptionsMetaData_1.dateTimeSummaryOptionsSerializationInfoArray, refs);
    };
    DateTimeSummaryOptionsModel.prototype.getInfo = function () {
        return _summaryOptionsMetaData_1.dateTimeSummaryOptionsSerializationInfoArray;
    };
    return DateTimeSummaryOptionsModel;
}(SummaryOptionsModelBase));
exports.DateTimeSummaryOptionsModel = DateTimeSummaryOptionsModel;


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _axis_1 = __webpack_require__(30);
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var StripLimitViewModel = (function (_super) {
    __extends(StripLimitViewModel, _super);
    function StripLimitViewModel(model, serializer, info) {
        var _this = _super.call(this, model, serializer, info || _axis_1.stripLimitSerializationsInfo) || this;
        _this.axisValue = ko.observable(_this._axisValue());
        _this.getInfo = function () {
            if (!_this.enabled()) {
                var newInfo = analytics_internal_1.extend(true, [], _axis_1.stripLimitSerializationsInfo);
                var axisValueProperty = newInfo.filter(function (info) { return info.propertyName === 'axisValue'; })[0];
                axisValueProperty.visible = false;
                return newInfo;
            }
            return _axis_1.stripLimitSerializationsInfo;
        };
        return _this;
    }
    StripLimitViewModel.from = function (model, serializer) {
        return new StripLimitViewModel(model || {}, serializer);
    };
    StripLimitViewModel.toJson = function (value, serializer, refs) {
        value._axisValue(value.enabled() ? value.axisValue() : null);
        return serializer.serialize(value, undefined, refs);
    };
    return StripLimitViewModel;
}(analytics_elements_1.SerializableModel));
exports.StripLimitViewModel = StripLimitViewModel;


/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var pointscount = { propertyName: 'pointsCount', modelName: '@PointsCount', displayName: 'PointsCount', localizationId: 'DevExpress.XtraCharts.AverageTrueRange.PointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 14 };
var name = { propertyName: 'name', modelName: '@Name', displayName: 'Name', localizationId: 'DevExpress.XtraCharts.Indicator.Name', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
var legendtext = { propertyName: 'legendText', modelName: '@LegendText', displayName: 'LegendText', localizationId: 'DevExpress.XtraCharts.Indicator.LegendText', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
var color = { propertyName: 'color', modelName: '@Color', displayName: 'Color', localizationId: 'DevExpress.XtraCharts.Indicator.Color', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') };
var visible = { propertyName: 'visible', modelName: '@Visible', displayName: 'Visible', localizationId: 'DevExpress.XtraCharts.Indicator.Visible', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var checkedinlegend = { propertyName: 'checkedInLegend', modelName: '@CheckedInLegend', displayName: 'CheckedInLegend', localizationId: 'DevExpress.XtraCharts.Indicator.CheckedInLegend', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var checkableinlegend = { propertyName: 'checkableInLegend', modelName: '@CheckableInLegend', displayName: 'CheckableInLegend', localizationId: 'DevExpress.XtraCharts.Indicator.CheckableInLegend', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var showinlegend = { propertyName: 'showInLegend', modelName: '@ShowInLegend', displayName: 'ShowInLegend', localizationId: 'DevExpress.XtraCharts.Indicator.ShowInLegend', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false };
var crosshairenabled = {
    propertyName: 'crosshairEnabled', modelName: '@CrosshairEnabled', displayName: 'CrosshairEnabled', localizationId: 'DevExpress.XtraCharts.Indicator.CrosshairEnabled', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Default', valuesArray: [
        { displayValue: 'True', value: 'True' },
        { displayValue: 'False', value: 'False' },
        { displayValue: 'Default', value: 'Default' },
    ]
};
var crosshairlabelvisibility = {
    propertyName: 'crosshairLabelVisibility', modelName: '@CrosshairLabelVisibility', displayName: 'CrosshairLabelVisibility', localizationId: 'DevExpress.XtraCharts.Indicator.CrosshairLabelVisibility', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Default', valuesArray: [
        { displayValue: 'True', value: 'True' },
        { displayValue: 'False', value: 'False' },
        { displayValue: 'Default', value: 'Default' },
    ]
};
var crosshairlabelpattern = { propertyName: 'crosshairLabelPattern', modelName: '@CrosshairLabelPattern', displayName: 'CrosshairLabelPattern', localizationId: 'DevExpress.XtraCharts.Indicator.CrosshairLabelPattern', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
var crosshaircontentshowmode = {
    propertyName: 'crosshairContentShowMode', modelName: '@CrosshairContentShowMode', displayName: 'CrosshairContentShowMode', localizationId: 'DevExpress.XtraCharts.Indicator.CrosshairContentShowMode', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Default', valuesArray: [
        { displayValue: 'Default', value: 'Default' },
        { displayValue: 'Label', value: 'Label' },
        { displayValue: 'Legend', value: 'Legend' },
    ]
};
var crosshairemptyvaluelegendtext = { propertyName: 'crosshairEmptyValueLegendText', modelName: '@CrosshairEmptyValueLegendText', displayName: 'CrosshairEmptyValueLegendText', localizationId: 'DevExpress.XtraCharts.Indicator.CrosshairEmptyValueLegendText', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
var tag = { propertyName: 'tag', modelName: '@Tag', displayName: 'Tag', localizationId: 'DevExpress.XtraCharts.ChartElement.Tag', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), visible: false };
var averageTrueRange = [pointscount, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var pointscount1 = { propertyName: 'pointsCount', modelName: '@PointsCount', displayName: 'PointsCount', localizationId: 'DevExpress.XtraCharts.BollingerBands.PointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 20 };
var valuelevel = {
    propertyName: 'valueLevel', modelName: '@ValueLevel', displayName: 'ValueLevel', localizationId: 'DevExpress.XtraCharts.BollingerBands.ValueLevel', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Close', valuesArray: [
        { displayValue: 'Value', value: 'Value' },
        { displayValue: 'Value_1', value: 'Value_1' },
        { displayValue: 'Value_2', value: 'Value_2' },
        { displayValue: 'Low', value: 'Low' },
        { displayValue: 'High', value: 'High' },
        { displayValue: 'Open', value: 'Open' },
        { displayValue: 'Close', value: 'Close' },
        { displayValue: 'Weight', value: 'Weight' },
        { displayValue: 'BoxPlotMin', value: 'BoxPlotMin' },
        { displayValue: 'BoxPlotQuartile_1', value: 'BoxPlotQuartile_1' },
        { displayValue: 'BoxPlotMedian', value: 'BoxPlotMedian' },
        { displayValue: 'BoxPlotQuartile_3', value: 'BoxPlotQuartile_3' },
        { displayValue: 'BoxPlotMax', value: 'BoxPlotMax' },
        { displayValue: 'BoxPlotMean', value: 'BoxPlotMean' },
    ]
};
var bandscolor = { propertyName: 'bandsColor', modelName: '@BandsColor', displayName: 'BandsColor', localizationId: 'DevExpress.XtraCharts.BollingerBands.BandsColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') };
var standarddeviationmultiplier = { propertyName: 'standardDeviationMultiplier', modelName: '@StandardDeviationMultiplier', displayName: 'StandardDeviationMultiplier', localizationId: 'DevExpress.XtraCharts.BollingerBands.StandardDeviationMultiplier', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 2 };
var bollingerBands = [pointscount1, valuelevel, bandscolor, standarddeviationmultiplier, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var pointscount2 = { propertyName: 'pointsCount', modelName: '@PointsCount', displayName: 'PointsCount', localizationId: 'DevExpress.XtraCharts.ChaikinsVolatility.PointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 10 };
var chaikinsVolatility = [pointscount2, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var pointscount3 = { propertyName: 'pointsCount', modelName: '@PointsCount', displayName: 'PointsCount', localizationId: 'DevExpress.XtraCharts.CommodityChannelIndex.PointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 14 };
var commodityChannelIndex = [pointscount3, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var negativeerrordatamember = { propertyName: 'negativeErrorDataMember', modelName: '@NegativeErrorDataMember', displayName: 'NegativeErrorDataMember', localizationId: 'DevExpress.XtraCharts.DataSourceBasedErrorBars.NegativeErrorDataMember', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
var positiveerrordatamember = { propertyName: 'positiveErrorDataMember', modelName: '@PositiveErrorDataMember', displayName: 'PositiveErrorDataMember', localizationId: 'DevExpress.XtraCharts.DataSourceBasedErrorBars.PositiveErrorDataMember', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
var endstyle = {
    propertyName: 'endStyle', modelName: '@EndStyle', displayName: 'EndStyle', localizationId: 'DevExpress.XtraCharts.ErrorBars.EndStyle', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Cap', valuesArray: [
        { displayValue: 'Cap', value: 'Cap' },
        { displayValue: 'NoCap', value: 'NoCap' },
    ]
};
var direction = {
    propertyName: 'direction', modelName: '@Direction', displayName: 'Direction', localizationId: 'DevExpress.XtraCharts.ErrorBars.Direction', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Both', valuesArray: [
        { displayValue: 'Both', value: 'Both' },
        { displayValue: 'Minus', value: 'Minus' },
        { displayValue: 'Plus', value: 'Plus' },
    ]
};
var dataSourceBasedErrorBars = [negativeerrordatamember, positiveerrordatamember, endstyle, direction, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var pointscount4 = { propertyName: 'pointsCount', modelName: '@PointsCount', displayName: 'PointsCount', localizationId: 'DevExpress.XtraCharts.DetrendedPriceOscillator.PointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 20 };
var valuelevel1 = {
    propertyName: 'valueLevel', modelName: '@ValueLevel', displayName: 'ValueLevel', localizationId: 'DevExpress.XtraCharts.DetrendedPriceOscillator.ValueLevel', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Close', valuesArray: [
        { displayValue: 'Value', value: 'Value' },
        { displayValue: 'Value_1', value: 'Value_1' },
        { displayValue: 'Value_2', value: 'Value_2' },
        { displayValue: 'Low', value: 'Low' },
        { displayValue: 'High', value: 'High' },
        { displayValue: 'Open', value: 'Open' },
        { displayValue: 'Close', value: 'Close' },
        { displayValue: 'Weight', value: 'Weight' },
        { displayValue: 'BoxPlotMin', value: 'BoxPlotMin' },
        { displayValue: 'BoxPlotQuartile_1', value: 'BoxPlotQuartile_1' },
        { displayValue: 'BoxPlotMedian', value: 'BoxPlotMedian' },
        { displayValue: 'BoxPlotQuartile_3', value: 'BoxPlotQuartile_3' },
        { displayValue: 'BoxPlotMax', value: 'BoxPlotMax' },
        { displayValue: 'BoxPlotMean', value: 'BoxPlotMean' },
    ]
};
var detrendedPriceOscillator = [pointscount4, valuelevel1, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var kind = {
    propertyName: 'kind', modelName: '@Kind', displayName: 'Kind', localizationId: 'DevExpress.XtraCharts.MovingAverage.Kind', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'MovingAverage', valuesArray: [
        { displayValue: 'MovingAverage', value: 'MovingAverage' },
        { displayValue: 'Envelope', value: 'Envelope' },
        { displayValue: 'MovingAverageAndEnvelope', value: 'MovingAverageAndEnvelope' },
    ]
};
var envelopepercent = { propertyName: 'envelopePercent', modelName: '@EnvelopePercent', displayName: 'EnvelopePercent', localizationId: 'DevExpress.XtraCharts.MovingAverage.EnvelopePercent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 3 };
var envelopecolor = { propertyName: 'envelopeColor', modelName: '@EnvelopeColor', displayName: 'EnvelopeColor', localizationId: 'DevExpress.XtraCharts.MovingAverage.EnvelopeColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') };
var pointscount5 = { propertyName: 'pointsCount', modelName: '@PointsCount', displayName: 'PointsCount', localizationId: 'DevExpress.XtraCharts.SubsetBasedIndicator.PointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
var valuelevel2 = {
    propertyName: 'valueLevel', modelName: '@ValueLevel', displayName: 'ValueLevel', localizationId: 'DevExpress.XtraCharts.SingleLevelIndicator.ValueLevel', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Value', valuesArray: [
        { displayValue: 'Value', value: 'Value' },
        { displayValue: 'Value_1', value: 'Value_1' },
        { displayValue: 'Value_2', value: 'Value_2' },
        { displayValue: 'Low', value: 'Low' },
        { displayValue: 'High', value: 'High' },
        { displayValue: 'Open', value: 'Open' },
        { displayValue: 'Close', value: 'Close' },
        { displayValue: 'Weight', value: 'Weight' },
        { displayValue: 'BoxPlotMin', value: 'BoxPlotMin' },
        { displayValue: 'BoxPlotQuartile_1', value: 'BoxPlotQuartile_1' },
        { displayValue: 'BoxPlotMedian', value: 'BoxPlotMedian' },
        { displayValue: 'BoxPlotQuartile_3', value: 'BoxPlotQuartile_3' },
        { displayValue: 'BoxPlotMax', value: 'BoxPlotMax' },
        { displayValue: 'BoxPlotMean', value: 'BoxPlotMean' },
    ]
};
var exponentialMovingAverage = [kind, envelopepercent, envelopecolor, pointscount5, valuelevel2, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var baselevelcolor = { propertyName: 'baseLevelColor', modelName: '@BaseLevelColor', displayName: 'BaseLevelColor', localizationId: 'DevExpress.XtraCharts.FibonacciIndicator.BaseLevelColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') };
var showlevel0 = { propertyName: 'showLevel0', modelName: '@ShowLevel0', displayName: 'ShowLevel0', localizationId: 'DevExpress.XtraCharts.FibonacciIndicator.ShowLevel0', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
var showlevel100 = { propertyName: 'showLevel100', modelName: '@ShowLevel100', displayName: 'ShowLevel100', localizationId: 'DevExpress.XtraCharts.FibonacciIndicator.ShowLevel100', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
var showlevel23_6 = { propertyName: 'showLevel23_6', modelName: '@ShowLevel23_6', displayName: 'ShowLevel23_6', localizationId: 'DevExpress.XtraCharts.FibonacciIndicator.ShowLevel23_6', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
var showlevel76_4 = { propertyName: 'showLevel76_4', modelName: '@ShowLevel76_4', displayName: 'ShowLevel76_4', localizationId: 'DevExpress.XtraCharts.FibonacciIndicator.ShowLevel76_4', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
var showadditionallevels = { propertyName: 'showAdditionalLevels', modelName: '@ShowAdditionalLevels', displayName: 'ShowAdditionalLevels', localizationId: 'DevExpress.XtraCharts.FibonacciIndicator.ShowAdditionalLevels', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
var kind1 = {
    propertyName: 'kind', modelName: '@Kind', displayName: 'Kind', localizationId: 'DevExpress.XtraCharts.FibonacciIndicator.Kind', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'FibonacciArcs', valuesArray: [
        { displayValue: 'FibonacciArcs', value: 'FibonacciArcs' },
        { displayValue: 'FibonacciFans', value: 'FibonacciFans' },
        { displayValue: 'FibonacciRetracement', value: 'FibonacciRetracement' },
    ]
};
var fibonacciIndicator = [baselevelcolor, showlevel0, showlevel100, showlevel23_6, showlevel76_4, showadditionallevels, kind1, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var negativeerror = { propertyName: 'negativeError', modelName: '@NegativeError', displayName: 'NegativeError', localizationId: 'DevExpress.XtraCharts.FixedValueErrorBars.NegativeError', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1 };
var positiveerror = { propertyName: 'positiveError', modelName: '@PositiveError', displayName: 'PositiveError', localizationId: 'DevExpress.XtraCharts.FixedValueErrorBars.PositiveError', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1 };
var fixedValueErrorBars = [negativeerror, positiveerror, endstyle, direction, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var movingaveragepointscount = { propertyName: 'movingAveragePointsCount', modelName: '@MovingAveragePointsCount', displayName: 'MovingAveragePointsCount', localizationId: 'DevExpress.XtraCharts.MassIndex.MovingAveragePointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
var sumpointscount = { propertyName: 'sumPointsCount', modelName: '@SumPointsCount', displayName: 'SumPointsCount', localizationId: 'DevExpress.XtraCharts.MassIndex.SumPointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 25 };
var massIndex = [movingaveragepointscount, sumpointscount, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var medianPrice = [name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var longperiod = { propertyName: 'longPeriod', modelName: '@LongPeriod', displayName: 'LongPeriod', localizationId: 'DevExpress.XtraCharts.MovingAverageConvergenceDivergence.LongPeriod', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 26 };
var shortperiod = { propertyName: 'shortPeriod', modelName: '@ShortPeriod', displayName: 'ShortPeriod', localizationId: 'DevExpress.XtraCharts.MovingAverageConvergenceDivergence.ShortPeriod', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 12 };
var signalsmoothingperiod = { propertyName: 'signalSmoothingPeriod', modelName: '@SignalSmoothingPeriod', displayName: 'SignalSmoothingPeriod', localizationId: 'DevExpress.XtraCharts.MovingAverageConvergenceDivergence.SignalSmoothingPeriod', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 9 };
var signallinecolor = { propertyName: 'signalLineColor', modelName: '@SignalLineColor', displayName: 'SignalLineColor', localizationId: 'DevExpress.XtraCharts.MovingAverageConvergenceDivergence.SignalLineColor', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor') };
var valuelevel3 = {
    propertyName: 'valueLevel', modelName: '@ValueLevel', displayName: 'ValueLevel', localizationId: 'DevExpress.XtraCharts.MovingAverageConvergenceDivergence.ValueLevel', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Close', valuesArray: [
        { displayValue: 'Value', value: 'Value' },
        { displayValue: 'Value_1', value: 'Value_1' },
        { displayValue: 'Value_2', value: 'Value_2' },
        { displayValue: 'Low', value: 'Low' },
        { displayValue: 'High', value: 'High' },
        { displayValue: 'Open', value: 'Open' },
        { displayValue: 'Close', value: 'Close' },
        { displayValue: 'Weight', value: 'Weight' },
        { displayValue: 'BoxPlotMin', value: 'BoxPlotMin' },
        { displayValue: 'BoxPlotQuartile_1', value: 'BoxPlotQuartile_1' },
        { displayValue: 'BoxPlotMedian', value: 'BoxPlotMedian' },
        { displayValue: 'BoxPlotQuartile_3', value: 'BoxPlotQuartile_3' },
        { displayValue: 'BoxPlotMax', value: 'BoxPlotMax' },
        { displayValue: 'BoxPlotMean', value: 'BoxPlotMean' },
    ]
};
var movingAverageConvergenceDivergence = [longperiod, shortperiod, signalsmoothingperiod, signallinecolor, valuelevel3, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var percent = { propertyName: 'percent', modelName: '@Percent', displayName: 'Percent', localizationId: 'DevExpress.XtraCharts.PercentageErrorBars.Percent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 5 };
var percentageErrorBars = [percent, endstyle, direction, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var pointscount6 = { propertyName: 'pointsCount', modelName: '@PointsCount', displayName: 'PointsCount', localizationId: 'DevExpress.XtraCharts.RateOfChange.PointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 14 };
var valuelevel4 = {
    propertyName: 'valueLevel', modelName: '@ValueLevel', displayName: 'ValueLevel', localizationId: 'DevExpress.XtraCharts.RateOfChange.ValueLevel', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Close', valuesArray: [
        { displayValue: 'Value', value: 'Value' },
        { displayValue: 'Value_1', value: 'Value_1' },
        { displayValue: 'Value_2', value: 'Value_2' },
        { displayValue: 'Low', value: 'Low' },
        { displayValue: 'High', value: 'High' },
        { displayValue: 'Open', value: 'Open' },
        { displayValue: 'Close', value: 'Close' },
        { displayValue: 'Weight', value: 'Weight' },
        { displayValue: 'BoxPlotMin', value: 'BoxPlotMin' },
        { displayValue: 'BoxPlotQuartile_1', value: 'BoxPlotQuartile_1' },
        { displayValue: 'BoxPlotMedian', value: 'BoxPlotMedian' },
        { displayValue: 'BoxPlotQuartile_3', value: 'BoxPlotQuartile_3' },
        { displayValue: 'BoxPlotMax', value: 'BoxPlotMax' },
        { displayValue: 'BoxPlotMean', value: 'BoxPlotMean' },
    ]
};
var rateOfChange = [pointscount6, valuelevel4, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var valuelevel5 = {
    propertyName: 'valueLevel', modelName: '@ValueLevel', displayName: 'ValueLevel', localizationId: 'DevExpress.XtraCharts.SingleLevelIndicator.ValueLevel', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Value', valuesArray: [
        { displayValue: 'Value', value: 'Value' },
        { displayValue: 'Value_1', value: 'Value_1' },
        { displayValue: 'Value_2', value: 'Value_2' },
        { displayValue: 'Low', value: 'Low' },
        { displayValue: 'High', value: 'High' },
        { displayValue: 'Open', value: 'Open' },
        { displayValue: 'Close', value: 'Close' },
        { displayValue: 'Weight', value: 'Weight' },
        { displayValue: 'BoxPlotMin', value: 'BoxPlotMin' },
        { displayValue: 'BoxPlotQuartile_1', value: 'BoxPlotQuartile_1' },
        { displayValue: 'BoxPlotMedian', value: 'BoxPlotMedian' },
        { displayValue: 'BoxPlotQuartile_3', value: 'BoxPlotQuartile_3' },
        { displayValue: 'BoxPlotMax', value: 'BoxPlotMax' },
        { displayValue: 'BoxPlotMean', value: 'BoxPlotMean' },
    ]
};
var regressionLine = [valuelevel5, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var pointscount7 = { propertyName: 'pointsCount', modelName: '@PointsCount', displayName: 'PointsCount', localizationId: 'DevExpress.XtraCharts.RelativeStrengthIndex.PointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 14 };
var valuelevel6 = {
    propertyName: 'valueLevel', modelName: '@ValueLevel', displayName: 'ValueLevel', localizationId: 'DevExpress.XtraCharts.RelativeStrengthIndex.ValueLevel', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Close', valuesArray: [
        { displayValue: 'Value', value: 'Value' },
        { displayValue: 'Value_1', value: 'Value_1' },
        { displayValue: 'Value_2', value: 'Value_2' },
        { displayValue: 'Low', value: 'Low' },
        { displayValue: 'High', value: 'High' },
        { displayValue: 'Open', value: 'Open' },
        { displayValue: 'Close', value: 'Close' },
        { displayValue: 'Weight', value: 'Weight' },
        { displayValue: 'BoxPlotMin', value: 'BoxPlotMin' },
        { displayValue: 'BoxPlotQuartile_1', value: 'BoxPlotQuartile_1' },
        { displayValue: 'BoxPlotMedian', value: 'BoxPlotMedian' },
        { displayValue: 'BoxPlotQuartile_3', value: 'BoxPlotQuartile_3' },
        { displayValue: 'BoxPlotMax', value: 'BoxPlotMax' },
        { displayValue: 'BoxPlotMean', value: 'BoxPlotMean' },
    ]
};
var relativeStrengthIndex = [pointscount7, valuelevel6, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var pointscount8 = { propertyName: 'pointsCount', modelName: '@PointsCount', displayName: 'PointsCount', localizationId: 'DevExpress.XtraCharts.SubsetBasedIndicator.PointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
var valuelevel7 = {
    propertyName: 'valueLevel', modelName: '@ValueLevel', displayName: 'ValueLevel', localizationId: 'DevExpress.XtraCharts.SingleLevelIndicator.ValueLevel', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Value', valuesArray: [
        { displayValue: 'Value', value: 'Value' },
        { displayValue: 'Value_1', value: 'Value_1' },
        { displayValue: 'Value_2', value: 'Value_2' },
        { displayValue: 'Low', value: 'Low' },
        { displayValue: 'High', value: 'High' },
        { displayValue: 'Open', value: 'Open' },
        { displayValue: 'Close', value: 'Close' },
        { displayValue: 'Weight', value: 'Weight' },
        { displayValue: 'BoxPlotMin', value: 'BoxPlotMin' },
        { displayValue: 'BoxPlotQuartile_1', value: 'BoxPlotQuartile_1' },
        { displayValue: 'BoxPlotMedian', value: 'BoxPlotMedian' },
        { displayValue: 'BoxPlotQuartile_3', value: 'BoxPlotQuartile_3' },
        { displayValue: 'BoxPlotMax', value: 'BoxPlotMax' },
        { displayValue: 'BoxPlotMean', value: 'BoxPlotMean' },
    ]
};
var simpleMovingAverage = [kind, envelopepercent, envelopecolor, pointscount8, valuelevel7, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var pointscount9 = { propertyName: 'pointsCount', modelName: '@PointsCount', displayName: 'PointsCount', localizationId: 'DevExpress.XtraCharts.StandardDeviation.PointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 14 };
var valuelevel8 = {
    propertyName: 'valueLevel', modelName: '@ValueLevel', displayName: 'ValueLevel', localizationId: 'DevExpress.XtraCharts.StandardDeviation.ValueLevel', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Close', valuesArray: [
        { displayValue: 'Value', value: 'Value' },
        { displayValue: 'Value_1', value: 'Value_1' },
        { displayValue: 'Value_2', value: 'Value_2' },
        { displayValue: 'Low', value: 'Low' },
        { displayValue: 'High', value: 'High' },
        { displayValue: 'Open', value: 'Open' },
        { displayValue: 'Close', value: 'Close' },
        { displayValue: 'Weight', value: 'Weight' },
        { displayValue: 'BoxPlotMin', value: 'BoxPlotMin' },
        { displayValue: 'BoxPlotQuartile_1', value: 'BoxPlotQuartile_1' },
        { displayValue: 'BoxPlotMedian', value: 'BoxPlotMedian' },
        { displayValue: 'BoxPlotQuartile_3', value: 'BoxPlotQuartile_3' },
        { displayValue: 'BoxPlotMax', value: 'BoxPlotMax' },
        { displayValue: 'BoxPlotMean', value: 'BoxPlotMean' },
    ]
};
var standardDeviation = [pointscount9, valuelevel8, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var multiplier = { propertyName: 'multiplier', modelName: '@Multiplier', displayName: 'Multiplier', localizationId: 'DevExpress.XtraCharts.StandardDeviationErrorBars.Multiplier', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1 };
var standardDeviationErrorBars = [multiplier, endstyle, direction, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var standardErrorBars = [endstyle, direction, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var extrapolatetoinfinity = { propertyName: 'extrapolateToInfinity', modelName: '@ExtrapolateToInfinity', displayName: 'ExtrapolateToInfinity', localizationId: 'DevExpress.XtraCharts.TrendLine.ExtrapolateToInfinity', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true };
var trendLine = [extrapolatetoinfinity, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var pointscount10 = { propertyName: 'pointsCount', modelName: '@PointsCount', displayName: 'PointsCount', localizationId: 'DevExpress.XtraCharts.SubsetBasedIndicator.PointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
var valuelevel9 = {
    propertyName: 'valueLevel', modelName: '@ValueLevel', displayName: 'ValueLevel', localizationId: 'DevExpress.XtraCharts.SingleLevelIndicator.ValueLevel', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Value', valuesArray: [
        { displayValue: 'Value', value: 'Value' },
        { displayValue: 'Value_1', value: 'Value_1' },
        { displayValue: 'Value_2', value: 'Value_2' },
        { displayValue: 'Low', value: 'Low' },
        { displayValue: 'High', value: 'High' },
        { displayValue: 'Open', value: 'Open' },
        { displayValue: 'Close', value: 'Close' },
        { displayValue: 'Weight', value: 'Weight' },
        { displayValue: 'BoxPlotMin', value: 'BoxPlotMin' },
        { displayValue: 'BoxPlotQuartile_1', value: 'BoxPlotQuartile_1' },
        { displayValue: 'BoxPlotMedian', value: 'BoxPlotMedian' },
        { displayValue: 'BoxPlotQuartile_3', value: 'BoxPlotQuartile_3' },
        { displayValue: 'BoxPlotMax', value: 'BoxPlotMax' },
        { displayValue: 'BoxPlotMean', value: 'BoxPlotMean' },
    ]
};
var triangularMovingAverage = [kind, envelopepercent, envelopecolor, pointscount10, valuelevel9, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var pointscount11 = { propertyName: 'pointsCount', modelName: '@PointsCount', displayName: 'PointsCount', localizationId: 'DevExpress.XtraCharts.SubsetBasedIndicator.PointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
var valuelevel10 = {
    propertyName: 'valueLevel', modelName: '@ValueLevel', displayName: 'ValueLevel', localizationId: 'DevExpress.XtraCharts.SingleLevelIndicator.ValueLevel', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Value', valuesArray: [
        { displayValue: 'Value', value: 'Value' },
        { displayValue: 'Value_1', value: 'Value_1' },
        { displayValue: 'Value_2', value: 'Value_2' },
        { displayValue: 'Low', value: 'Low' },
        { displayValue: 'High', value: 'High' },
        { displayValue: 'Open', value: 'Open' },
        { displayValue: 'Close', value: 'Close' },
        { displayValue: 'Weight', value: 'Weight' },
        { displayValue: 'BoxPlotMin', value: 'BoxPlotMin' },
        { displayValue: 'BoxPlotQuartile_1', value: 'BoxPlotQuartile_1' },
        { displayValue: 'BoxPlotMedian', value: 'BoxPlotMedian' },
        { displayValue: 'BoxPlotQuartile_3', value: 'BoxPlotQuartile_3' },
        { displayValue: 'BoxPlotMax', value: 'BoxPlotMax' },
        { displayValue: 'BoxPlotMean', value: 'BoxPlotMean' },
    ]
};
var tripleExponentialMovingAverageTema = [kind, envelopepercent, envelopecolor, pointscount11, valuelevel10, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var pointscount12 = { propertyName: 'pointsCount', modelName: '@PointsCount', displayName: 'PointsCount', localizationId: 'DevExpress.XtraCharts.TripleExponentialMovingAverageTrix.PointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 15 };
var valuelevel11 = {
    propertyName: 'valueLevel', modelName: '@ValueLevel', displayName: 'ValueLevel', localizationId: 'DevExpress.XtraCharts.TripleExponentialMovingAverageTrix.ValueLevel', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Close', valuesArray: [
        { displayValue: 'Value', value: 'Value' },
        { displayValue: 'Value_1', value: 'Value_1' },
        { displayValue: 'Value_2', value: 'Value_2' },
        { displayValue: 'Low', value: 'Low' },
        { displayValue: 'High', value: 'High' },
        { displayValue: 'Open', value: 'Open' },
        { displayValue: 'Close', value: 'Close' },
        { displayValue: 'Weight', value: 'Weight' },
        { displayValue: 'BoxPlotMin', value: 'BoxPlotMin' },
        { displayValue: 'BoxPlotQuartile_1', value: 'BoxPlotQuartile_1' },
        { displayValue: 'BoxPlotMedian', value: 'BoxPlotMedian' },
        { displayValue: 'BoxPlotQuartile_3', value: 'BoxPlotQuartile_3' },
        { displayValue: 'BoxPlotMax', value: 'BoxPlotMax' },
        { displayValue: 'BoxPlotMean', value: 'BoxPlotMean' },
    ]
};
var tripleExponentialMovingAverageTrix = [pointscount12, valuelevel11, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var typicalPrice = [name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var weightedClose = [name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var pointscount13 = { propertyName: 'pointsCount', modelName: '@PointsCount', displayName: 'PointsCount', localizationId: 'DevExpress.XtraCharts.SubsetBasedIndicator.PointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
var valuelevel12 = {
    propertyName: 'valueLevel', modelName: '@ValueLevel', displayName: 'ValueLevel', localizationId: 'DevExpress.XtraCharts.SingleLevelIndicator.ValueLevel', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Value', valuesArray: [
        { displayValue: 'Value', value: 'Value' },
        { displayValue: 'Value_1', value: 'Value_1' },
        { displayValue: 'Value_2', value: 'Value_2' },
        { displayValue: 'Low', value: 'Low' },
        { displayValue: 'High', value: 'High' },
        { displayValue: 'Open', value: 'Open' },
        { displayValue: 'Close', value: 'Close' },
        { displayValue: 'Weight', value: 'Weight' },
        { displayValue: 'BoxPlotMin', value: 'BoxPlotMin' },
        { displayValue: 'BoxPlotQuartile_1', value: 'BoxPlotQuartile_1' },
        { displayValue: 'BoxPlotMedian', value: 'BoxPlotMedian' },
        { displayValue: 'BoxPlotQuartile_3', value: 'BoxPlotQuartile_3' },
        { displayValue: 'BoxPlotMax', value: 'BoxPlotMax' },
        { displayValue: 'BoxPlotMean', value: 'BoxPlotMean' },
    ]
};
var weightedMovingAverage = [kind, envelopepercent, envelopecolor, pointscount13, valuelevel12, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
var pointscount14 = { propertyName: 'pointsCount', modelName: '@PointsCount', displayName: 'PointsCount', localizationId: 'DevExpress.XtraCharts.WilliamsR.PointsCount', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 14 };
var williamsR = [pointscount14, name, legendtext, color, visible, checkedinlegend, checkableinlegend, showinlegend, crosshairenabled, crosshairlabelvisibility, crosshairlabelpattern, crosshaircontentshowmode, crosshairemptyvaluelegendtext, tag];
exports.indicatorMapper = {
    'AverageTrueRange': averageTrueRange,
    'BollingerBands': bollingerBands,
    'ChaikinsVolatility': chaikinsVolatility,
    'CommodityChannelIndex': commodityChannelIndex,
    'DataSourceBasedErrorBars': dataSourceBasedErrorBars,
    'DetrendedPriceOscillator': detrendedPriceOscillator,
    'ExponentialMovingAverage': exponentialMovingAverage,
    'FibonacciIndicator': fibonacciIndicator,
    'FixedValueErrorBars': fixedValueErrorBars,
    'MassIndex': massIndex,
    'MedianPrice': medianPrice,
    'MovingAverageConvergenceDivergence': movingAverageConvergenceDivergence,
    'PercentageErrorBars': percentageErrorBars,
    'RateOfChange': rateOfChange,
    'RegressionLine': regressionLine,
    'RelativeStrengthIndex': relativeStrengthIndex,
    'SimpleMovingAverage': simpleMovingAverage,
    'StandardDeviation': standardDeviation,
    'StandardDeviationErrorBars': standardDeviationErrorBars,
    'StandardErrorBars': standardErrorBars,
    'TrendLine': trendLine,
    'TriangularMovingAverage': triangularMovingAverage,
    'TripleExponentialMovingAverageTema': tripleExponentialMovingAverageTema,
    'TripleExponentialMovingAverageTrix': tripleExponentialMovingAverageTrix,
    'TypicalPrice': typicalPrice,
    'WeightedClose': weightedClose,
    'WeightedMovingAverage': weightedMovingAverage,
    'WilliamsR': williamsR,
};


/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _elementCollection_1 = __webpack_require__(44);
var _axis_1 = __webpack_require__(30);
var ConstantLineViewModel = (function (_super) {
    __extends(ConstantLineViewModel, _super);
    function ConstantLineViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, parent, serializer, _axis_1.constantLineSerializationsInfo) || this;
        _this.axisValue = _this._axisValue;
        return _this;
    }
    ConstantLineViewModel.from = function (model, serializer) {
        return new ConstantLineViewModel(model || {}, null, serializer);
    };
    ConstantLineViewModel.prefix = 'Constant Line ';
    return ConstantLineViewModel;
}(_elementCollection_1.ChartElementCollectionItemBase));
exports.ConstantLineViewModel = ConstantLineViewModel;


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _elementCollection_1 = __webpack_require__(44);
var _axis_1 = __webpack_require__(30);
var ScaleBreakViewModel = (function (_super) {
    __extends(ScaleBreakViewModel, _super);
    function ScaleBreakViewModel(model, parent, serializer) {
        return _super.call(this, model, parent, serializer, _axis_1.scaleBreakSerializationsInfo) || this;
    }
    ScaleBreakViewModel.from = function (model, serializer) {
        return new ScaleBreakViewModel(model || {}, null, serializer);
    };
    ScaleBreakViewModel.prefix = 'Scale Break ';
    return ScaleBreakViewModel;
}(_elementCollection_1.ChartElementCollectionItemBase));
exports.ScaleBreakViewModel = ScaleBreakViewModel;


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _elementCollection_1 = __webpack_require__(44);
var _axis_1 = __webpack_require__(30);
var analytics_internal_1 = __webpack_require__(2);
var StripViewModel = (function (_super) {
    __extends(StripViewModel, _super);
    function StripViewModel(model, parent, serializer) {
        return _super.call(this, analytics_internal_1.extend(true, {}, StripViewModel.initialModel, model), parent, serializer, _axis_1.stripSerializationsInfo) || this;
    }
    StripViewModel.from = function (model, serializer) {
        return new StripViewModel(model || {}, null, serializer);
    };
    StripViewModel.initialModel = {
        'MinLimit': {
            '@AxisValueSerializable': '0'
        },
        'MaxLimit': {
            '@AxisValueSerializable': '1'
        }
    };
    StripViewModel.prefix = 'Strip ';
    return StripViewModel;
}(_elementCollection_1.ChartElementCollectionItemBase));
exports.StripViewModel = StripViewModel;


/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _chart_1 = __webpack_require__(19);
var _series_1 = __webpack_require__(110);
var _utils_1 = __webpack_require__(62);
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_internal_1 = __webpack_require__(8);
var ko = __webpack_require__(1);
var _utils_2 = __webpack_require__(50);
var DataContainerViewModel = (function (_super) {
    __extends(DataContainerViewModel, _super);
    function DataContainerViewModel(model, serializer) {
        var _this = _super.call(this, model, serializer, _chart_1.dataContainerSerializationsInfo) || this;
        _this.series = _utils_2.deserializeModelArray(model && model.SeriesSerializable, function (item, parent) { return new _series_1.SeriesViewModel(item, parent, serializer); }, _series_1.SeriesViewModel.prefix);
        var array = _chart_1.viewBindableSerializationInfo.valuesArray;
        var actions = [];
        for (var i = 0; i < array.length; i++) {
            var value = array[i];
            var getImageClassName = function (isTemplate) {
                if (isTemplate === void 0) { isTemplate = false; }
                return (isTemplate ? 'dxrd-svg-fieldlist-' : 'dx-image-fieldlist-') + _utils_2.getSeriesClassName(value.value);
            };
            actions.push({
                text: analytics_internal_1.getLocalization(value.displayValue, value.localizationId),
                imageClassName: getImageClassName(),
                imageTemplateName: analytics_widgets_internal_1.SvgTemplatesEngine.getExistingTemplate(getImageClassName(true)),
                disabled: ko.observable(false),
                visible: true,
                clickAction: (function (typeName) { return function (item) {
                    _this.series()['innerActions'][0].closePopover();
                    _this.series.push(new _series_1.SeriesViewModel({
                        '@Name': analytics_internal_1.getUniqueName(_this.series().map(function (x) { return x['name'](); }), _series_1.SeriesViewModel.prefix),
                        'View': {
                            '@TypeNameSerializable': typeName,
                        }
                    }, _this.series));
                }; })(value.value)
            });
        }
        _this.series()['innerActions'] = _utils_1.createInnerActionsWithPopover(analytics_internal_1.getLocalization('Add', 'ChartStringId.MenuItemAdd'), 'addseries-action', actions);
        return _this;
    }
    DataContainerViewModel.from = function (model, serializer) {
        return new DataContainerViewModel(model || {}, serializer);
    };
    DataContainerViewModel.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, _chart_1.dataContainerSerializationsInfo, refs);
    };
    return DataContainerViewModel;
}(analytics_elements_1.SerializableModel));
exports.DataContainerViewModel = DataContainerViewModel;


/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _chart_1 = __webpack_require__(19);
var analytics_elements_1 = __webpack_require__(5);
var LegendViewModel = (function (_super) {
    __extends(LegendViewModel, _super);
    function LegendViewModel(model, serializer) {
        return _super.call(this, model, serializer, _chart_1.legendSerializationsInfo) || this;
    }
    LegendViewModel.from = function (model, serializer) {
        return new LegendViewModel(model || {}, serializer);
    };
    LegendViewModel.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, _chart_1.legendSerializationsInfo, refs);
    };
    return LegendViewModel;
}(analytics_elements_1.SerializableModel));
exports.LegendViewModel = LegendViewModel;


/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _elementCollection_1 = __webpack_require__(44);
var _common_1 = __webpack_require__(35);
var AdditionalPaneViewModel = (function (_super) {
    __extends(AdditionalPaneViewModel, _super);
    function AdditionalPaneViewModel(model, parent, serializer) {
        return _super.call(this, model, parent, serializer, _common_1.additionalPaneSerializationsInfo) || this;
    }
    AdditionalPaneViewModel.from = function (model, serializer) {
        return new AdditionalPaneViewModel(model || {}, null, serializer);
    };
    AdditionalPaneViewModel.prefix = 'Pane ';
    return AdditionalPaneViewModel;
}(_elementCollection_1.ChartElementCollectionItemBase));
exports.AdditionalPaneViewModel = AdditionalPaneViewModel;


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _elementCollection_1 = __webpack_require__(44);
var _chart_1 = __webpack_require__(19);
var AdditionalLegendViewModel = (function (_super) {
    __extends(AdditionalLegendViewModel, _super);
    function AdditionalLegendViewModel(model, parent, serializer) {
        return _super.call(this, model, parent, serializer, _chart_1.additionalLegendSerializationsInfo) || this;
    }
    AdditionalLegendViewModel.from = function (model, serializer) {
        return new AdditionalLegendViewModel(model || {}, null, serializer);
    };
    AdditionalLegendViewModel.prefix = 'Legend';
    return AdditionalLegendViewModel;
}(_elementCollection_1.ChartElementCollectionItemBase));
exports.AdditionalLegendViewModel = AdditionalLegendViewModel;


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _valueWeight_1 = __webpack_require__(167);
var _value1Value2_1 = __webpack_require__(168);
var _stockValue_1 = __webpack_require__(169);
exports.viewTypesDataMembers = {
    'BubbleSeriesView': _valueWeight_1.ValueWeightDataMembers,
    'OverlappedRangeBarSeriesView': _value1Value2_1.Value1Value2DataMembers,
    'SideBySideRangeBarSeriesView': _value1Value2_1.Value1Value2DataMembers,
    'RangeAreaSeriesView': _value1Value2_1.Value1Value2DataMembers,
    'RangeArea3DSeriesView': _value1Value2_1.Value1Value2DataMembers,
    'OverlappedGanttSeriesView': _value1Value2_1.Value1Value2DataMembers,
    'SideBySideGanttSeriesView': _value1Value2_1.Value1Value2DataMembers,
    'StockSeriesView': _stockValue_1.StockValueDataMembers,
    'CandleStickSeriesView': _stockValue_1.StockValueDataMembers
};
exports.mapTypes = {
    'SideBySideBarSeriesView': 'SideBySideBarSeriesLabel',
    'StackedBarSeriesView': 'StackedBarSeriesLabel',
    'FullStackedBarSeriesView': 'FullStackedBarSeriesLabel',
    'SideBySideStackedBarSeriesView': 'StackedBarSeriesLabel',
    'SideBySideFullStackedBarSeriesView': 'FullStackedBarSeriesLabel',
    'WaterfallSeriesView': 'WaterfallSeriesLabel',
    'SideBySideBar3DSeriesView': 'Bar3DSeriesLabel',
    'StackedBar3DSeriesView': 'StackedBar3DSeriesLabel',
    'FullStackedBar3DSeriesView': 'FullStackedBar3DSeriesLabel',
    'SideBySideStackedBar3DSeriesView': 'StackedBar3DSeriesLabel',
    'SideBySideFullStackedBar3DSeriesView': 'FullStackedBar3DSeriesLabel',
    'ManhattanBarSeriesView': 'Bar3DSeriesLabel',
    'PointSeriesView': 'PointSeriesLabel',
    'BubbleSeriesView': 'BubbleSeriesLabel',
    'LineSeriesView': 'PointSeriesLabel',
    'StackedLineSeriesView': 'StackedLineSeriesLabel',
    'FullStackedLineSeriesView': 'StackedLineSeriesLabel',
    'StepLineSeriesView': 'PointSeriesLabel',
    'SplineSeriesView': 'PointSeriesLabel',
    'ScatterLineSeriesView': 'PointSeriesLabel',
    'SwiftPlotSeriesView': null,
    'Line3DSeriesView': 'Line3DSeriesLabel',
    'StackedLine3DSeriesView': 'StackedLine3DSeriesLabel',
    'FullStackedLine3DSeriesView': 'StackedLine3DSeriesLabel',
    'StepLine3DSeriesView': 'Line3DSeriesLabel',
    'Spline3DSeriesView': 'Line3DSeriesLabel',
    'PieSeriesView': 'PieSeriesLabel',
    'DoughnutSeriesView': 'DoughnutSeriesLabel',
    'NestedDoughnutSeriesView': 'NestedDoughnutSeriesLabel',
    'Pie3DSeriesView': 'Pie3DSeriesLabel',
    'Doughnut3DSeriesView': 'Doughnut3DSeriesLabel',
    'FunnelSeriesView': 'FunnelSeriesLabel',
    'Funnel3DSeriesView': 'Funnel3DSeriesLabel',
    'AreaSeriesView': 'PointSeriesLabel',
    'StackedAreaSeriesView': 'PointSeriesLabel',
    'FullStackedAreaSeriesView': 'FullStackedAreaSeriesLabel',
    'StepAreaSeriesView': 'PointSeriesLabel',
    'SplineAreaSeriesView': 'PointSeriesLabel',
    'StackedSplineAreaSeriesView': 'PointSeriesLabel',
    'FullStackedSplineAreaSeriesView': 'FullStackedSplineAreaSeriesLabel',
    'Area3DSeriesView': 'Area3DSeriesLabel',
    'StackedArea3DSeriesView': 'StackedArea3DSeriesLabel',
    'FullStackedArea3DSeriesView': 'FullStackedArea3DSeriesLabel',
    'StepArea3DSeriesView': 'Area3DSeriesLabel',
    'SplineArea3DSeriesView': 'Area3DSeriesLabel',
    'StackedSplineArea3DSeriesView': 'StackedArea3DSeriesLabel',
    'FullStackedSplineArea3DSeriesView': 'FullStackedArea3DSeriesLabel',
    'OverlappedRangeBarSeriesView': 'RangeBarSeriesLabel',
    'SideBySideRangeBarSeriesView': 'RangeBarSeriesLabel',
    'RangeAreaSeriesView': 'RangeAreaSeriesLabel',
    'RangeArea3DSeriesView': 'RangeArea3DSeriesLabel',
    'RadarPointSeriesView': 'RadarPointSeriesLabel',
    'RadarLineSeriesView': 'RadarPointSeriesLabel',
    'RadarAreaSeriesView': 'RadarPointSeriesLabel',
    'PolarPointSeriesView': 'RadarPointSeriesLabel',
    'PolarLineSeriesView': 'RadarPointSeriesLabel',
    'PolarAreaSeriesView': 'RadarPointSeriesLabel',
    'StockSeriesView': 'StockSeriesLabel',
    'CandleStickSeriesView': 'StockSeriesLabel',
    'OverlappedGanttSeriesView': 'RangeBarSeriesLabel',
    'SideBySideGanttSeriesView': 'RangeBarSeriesLabel'
};
exports.onlyNumericArgumentSupportedSeriesViewTypes = [
    'PolarPointSeriesView',
    'PolarLineSeriesView',
    'PolarAreaSeriesView'
];


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _requests_1 = __webpack_require__(107);
var _chart_1 = __webpack_require__(118);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var _handlerUri_1 = __webpack_require__(108);
var ChartControlSurface = (function (_super) {
    __extends(ChartControlSurface, _super);
    function ChartControlSurface(control, zoom, size) {
        if (zoom === void 0) { zoom = ko.observable(1); }
        if (size === void 0) { size = analytics_elements_1.Size.fromString('500, 500'); }
        var _this = _super.call(this) || this;
        _this.imageSrc = ko.observable('');
        _this.templateName = 'dx-chart-surface';
        _this.width = ko.computed(function () { return size.width() * zoom(); });
        _this.height = ko.computed(function () { return size.height() * zoom(); });
        _this.zoom = zoom;
        _this._disposables.push(_this.width);
        _this._disposables.push(_this.height);
        _this._disposables.push(ko.computed(function () {
            var series = control.chart.dataContainer.series();
            series.forEach(function (val) {
                val.viewType();
            });
            var _self = _this;
            if (_handlerUri_1.HandlerUri()) {
                _requests_1.ChartRequests.getChartImage(_handlerUri_1.HandlerUri(), _chart_1.ChartViewModel.toJson(ko.unwrap(control.chart), new analytics_utils_1.ModelSerializer(), null), _this.width(), _this.height()).done(function (result) {
                    var allSeries = control.chart.dataContainer.series();
                    allSeries.forEach(function (val) {
                        val.isIncompatible(false);
                    });
                    _self.imageSrc('data:image/svg+xml;base64,' + result.Image);
                    result.Indexes.forEach(function (val) {
                        var series = allSeries[val];
                        series.isIncompatible(true);
                    });
                })
                    .fail(function (result) {
                    analytics_internal_1.NotifyAboutWarning('Impossible to get chart image.');
                });
            }
        }).extend({ deferred: true }));
        return _this;
    }
    return ChartControlSurface;
}(analytics_utils_1.Disposable));
exports.ChartControlSurface = ChartControlSurface;


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var ko = __webpack_require__(1);
var ChartDataSourceEditor = (function (_super) {
    __extends(ChartDataSourceEditor, _super);
    function ChartDataSourceEditor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.options = null;
        return _this;
    }
    ChartDataSourceEditor.prototype.generateOptions = function (dataSources, popupContainer) {
        var _this = this;
        if (!this.options) {
            var disabled = ko.computed(function () {
                return _this.disabled() || !dataSources() || dataSources().length === 0;
            });
            var value = ko.computed({
                read: function () {
                    var unwrappedDataSources = dataSources();
                    var dataSource = unwrappedDataSources.filter(function (x) { return !!x && (x.value === _this.value()); })[0];
                    return ko.unwrap(dataSource && dataSource.displayName);
                },
                write: function (newVal) {
                    var unwrappedDataSources = dataSources();
                    var dataSource = unwrappedDataSources.filter(function (x) { return !!x && (ko.unwrap(x.displayName) === newVal); })[0];
                    _this.value(dataSource && dataSource.value);
                }
            });
            this._disposables.push(value);
            this._disposables.push(disabled);
            this.options = {
                displayExpr: 'displayName',
                dataSource: dataSources,
                disabled: disabled,
                value: value,
                valueExpr: 'displayName',
                displayCustomValue: true,
                dropDownOptions: { container: popupContainer }
            };
        }
        return this.options;
    };
    return ChartDataSourceEditor;
}(analytics_widgets_1.Editor));
exports.ChartDataSourceEditor = ChartDataSourceEditor;


/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var ko = __webpack_require__(1);
var CollectionLookupEditorModel = (function (_super) {
    __extends(CollectionLookupEditorModel, _super);
    function CollectionLookupEditorModel(info, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, info, level, parentDisabled, textToSearch) || this;
        _this.array = ko.computed(function () { return _this.value() || []; });
        _this.selectedItem = ko.observable();
        _this._disposables.push(_this.array);
        return _this;
    }
    Object.defineProperty(CollectionLookupEditorModel.prototype, "editors", {
        get: function () {
            var selectedItem = this.selectedItem();
            return selectedItem && selectedItem['getInfo'] && selectedItem['getInfo']();
        },
        enumerable: true,
        configurable: true
    });
    return CollectionLookupEditorModel;
}(analytics_widgets_1.Editor));
exports.CollectionLookupEditorModel = CollectionLookupEditorModel;


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var analytics_widgets_internal_1 = __webpack_require__(8);
var ko = __webpack_require__(1);
var _utils_1 = __webpack_require__(50);
var ViewEditor = (function (_super) {
    __extends(ViewEditor, _super);
    function ViewEditor(info, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, info, level, parentDisabled, textToSearch) || this;
        _this.viewItems = [];
        _this.contentValue = ko.computed(function () {
            return _this.value() && _this.value().model() || {};
        });
        _this._disposables.push(_this.contentValue);
        return _this;
    }
    ViewEditor.prototype.generateHeaderValue = function (undoEngine) {
        var _this = this;
        if (!this.headerValue) {
            this._disposables.push(this.headerValue = ko.computed({
                read: function () { return _this.value() && _this.value().type(); },
                write: function (newVal) {
                    undoEngine().start();
                    _this.value().type(newVal);
                    undoEngine().end();
                }
            }));
        }
        return this.headerValue;
    };
    ViewEditor.prototype.generateViewItems = function () {
        var _this = this;
        if (!this.viewItems.length) {
            this.viewItems = this.values().map(function (x) {
                return __assign({}, x, { className: _this.generateViewClassName(x.value), templateName: _this.generateViewClassName(x.value, true) });
            });
        }
        return this.viewItems;
    };
    ViewEditor.prototype.generateViewClassName = function (value, isTemplate) {
        if (isTemplate === void 0) { isTemplate = false; }
        var _name = (isTemplate ? 'dxrd-svg-fieldlist-' : 'dx-image-fieldlist-') + _utils_1.getSeriesClassName(value);
        if (isTemplate)
            return analytics_widgets_internal_1.SvgTemplatesEngine.getExistingTemplate(_name);
        return _name;
    };
    return ViewEditor;
}(analytics_widgets_1.Editor));
exports.ViewEditor = ViewEditor;


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var ChartDataMemberEditor = (function (_super) {
    __extends(ChartDataMemberEditor, _super);
    function ChartDataMemberEditor(info, level, parentDisabled) {
        var _this = _super.call(this, info, level, parentDisabled) || this;
        _this.treeListController.itemsFilter = function (item) {
            if (item.isList)
                return true;
            if (_this.name === 'argumentDataMember') {
                return _this._getArgumentDataMemberFilter(item);
            }
            else {
                return _this._getValueDataMemberFilter(item);
            }
        };
        return _this;
    }
    ChartDataMemberEditor.prototype._isNumber = function (specifics) {
        return specifics.indexOf('integer') !== -1 || specifics.indexOf('float') !== -1;
    };
    ChartDataMemberEditor.prototype._isDate = function (specifics) { return specifics.indexOf('date') !== -1; };
    ChartDataMemberEditor.prototype._getArgumentDataMemberFilter = function (item) {
        var scaleType = this._model() && this._model()['argumentScaleType']();
        var itemSpecifics = item.specifics.toLowerCase();
        if (scaleType === 'Numerical') {
            return this._isNumber(itemSpecifics);
        }
        else if (scaleType === 'DateTime') {
            return this._isDate(itemSpecifics);
        }
        else {
            return true;
        }
    };
    ChartDataMemberEditor.prototype._getValueDataMemberFilter = function (item) {
        var itemSpecifics = item.specifics.toLowerCase();
        if (this.name === 'weight') {
            return this._isNumber(itemSpecifics);
        }
        else {
            var scaleType = this._model() && this._model()['valueScaleType']();
            if (scaleType === 'Numerical') {
                return this._isNumber(itemSpecifics);
            }
            else {
                return this._isDate(itemSpecifics);
            }
        }
    };
    return ChartDataMemberEditor;
}(analytics_widgets_1.FieldListEditor));
exports.ChartDataMemberEditor = ChartDataMemberEditor;


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var PointsEditor = (function (_super) {
    __extends(PointsEditor, _super);
    function PointsEditor(info, level, parentDisabled, textToSearch) {
        return _super.call(this, info, level, parentDisabled, textToSearch) || this;
    }
    PointsEditor.prototype.addPoint = function (model) {
        return _point_1.SeriesPointModel.createNew(model);
    };
    return PointsEditor;
}(analytics_widgets_1.Editor));
exports.PointsEditor = PointsEditor;
var _point_1 = __webpack_require__(115);


/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var ChartDependencyEditor = (function (_super) {
    __extends(ChartDependencyEditor, _super);
    function ChartDependencyEditor(info, level, parentDisabled, textToSearch) {
        return _super.call(this, info, level, parentDisabled, textToSearch) || this;
    }
    ChartDependencyEditor.prototype.getDependencyOptions = function (templateOptions, propertyName, depPropertyName) {
        var _this = this;
        if (!this.bindableOptions) {
            var debObj = {};
            this.depProperty = ko.computed(function () { return _this._model() && _this._model()[depPropertyName](); });
            this._disposables.push(this.depProperty);
            debObj[propertyName] = this.depProperty;
            this.bindableOptions = $.extend({}, this.getOptions(templateOptions), debObj);
        }
        return this.bindableOptions;
    };
    return ChartDependencyEditor;
}(analytics_widgets_1.Editor));
exports.ChartDependencyEditor = ChartDependencyEditor;


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var ko = __webpack_require__(1);
var UndoColorPickerEditor = (function (_super) {
    __extends(UndoColorPickerEditor, _super);
    function UndoColorPickerEditor(info, level, parentDisabled) {
        return _super.call(this, info, level, parentDisabled) || this;
    }
    UndoColorPickerEditor.prototype.generateValue = function (undoEngine) {
        var _this = this;
        if (!this.generatedValue) {
            this._disposables.push(this.generatedValue = ko.computed({
                read: function () { return _this.displayValue(); },
                write: function (newVal) {
                    undoEngine().start();
                    _this.displayValue(newVal);
                    undoEngine().end();
                }
            }));
        }
        return this.generatedValue;
    };
    return UndoColorPickerEditor;
}(analytics_widgets_1.ColorPickerEditor));
exports.UndoColorPickerEditor = UndoColorPickerEditor;


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var ko = __webpack_require__(1);
var _chart_1 = __webpack_require__(19);
var PositionSeriesLabelEditor = (function (_super) {
    __extends(PositionSeriesLabelEditor, _super);
    function PositionSeriesLabelEditor(info, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, info, level, parentDisabled, textToSearch) || this;
        _this._disposables.push(_this.values = ko.pureComputed(function () {
            var model = _this._model();
            if (model && model['typeNameSerializable']) {
                return _this._positionChooser(model['typeNameSerializable']());
            }
        }));
        return _this;
    }
    PositionSeriesLabelEditor.prototype._positionChooser = function (type) {
        if (type) {
            if (['PieSeriesLabel', 'Pie3DSeriesLabel', 'DoughnutSeriesLabel', 'NestedDoughnutSeriesLabel', 'Doughnut3DSeriesLabel'].indexOf(type) !== -1)
                return _chart_1.piePositionValues;
            if ((['FunnelSeriesLabel', 'Funnel3DSeriesLabel'].indexOf(type) !== -1))
                return _chart_1.funnelPositionValues;
            if (type === 'WaterfallSeriesLabel')
                return _chart_1.waterfallPositionValues;
        }
        return _chart_1.barPositionValues;
    };
    return PositionSeriesLabelEditor;
}(analytics_widgets_1.Editor));
exports.PositionSeriesLabelEditor = PositionSeriesLabelEditor;


/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var ko = __webpack_require__(1);
var LinesEditor = (function (_super) {
    __extends(LinesEditor, _super);
    function LinesEditor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.collapsed = ko.observable(false);
        return _this;
    }
    LinesEditor.prototype._shouldSkipHighlighting = function (propertyName) {
        return false;
    };
    return LinesEditor;
}(analytics_widgets_1.Editor));
exports.LinesEditor = LinesEditor;


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var objectStorageItem_1 = __webpack_require__(38);
var analytics_utils_1 = __webpack_require__(0);
var ObjectsStorage = (function (_super) {
    __extends(ObjectsStorage, _super);
    function ObjectsStorage(objects, dsHelperProvider) {
        var _this = _super.call(this) || this;
        _this.objects = objects;
        _this.dsHelperProvider = dsHelperProvider;
        return _this;
    }
    ObjectsStorage.prototype.findType = function (content) {
        var objectStorages = this.objects().filter(function (item) { return item instanceof objectStorageItem_1.ObjectStorageItem; });
        var result = objectStorages.filter(function (item) {
            return !!item.type && item.type() === 'System.Type' && item.content() === content;
        });
        return result.length === 0 ? null : result[0];
    };
    ObjectsStorage.prototype.getType = function (type) {
        var typeObject = this.findType(type);
        if (!typeObject) {
            typeObject = new objectStorageItem_1.ObjectStorageItem({
                '@Content': type,
                '@Type': 'System.Type'
            }, this.dsHelperProvider);
            this.objects.push(typeObject);
        }
        return typeObject;
    };
    ObjectsStorage.prototype.addValue = function () {
        var newValueRef = new objectStorageItem_1.ObjectStorageItem({ '@Content': '' }, this.dsHelperProvider);
        this.objects.push(newValueRef);
        return newValueRef;
    };
    ObjectsStorage.prototype.createStaticLookUpSetting = function () {
        var lookUpObject = new lookupSettings_1.StaticListLookUpSettings({}, this.dsHelperProvider);
        this.objects.push(lookUpObject);
        return lookUpObject;
    };
    ObjectsStorage.prototype.createDynamicLookUpSetting = function () {
        var lookUpObject = new lookupSettings_1.DynamicListLookUpSettings({}, this.dsHelperProvider);
        this.objects.push(lookUpObject);
        return lookUpObject;
    };
    ObjectsStorage.prototype.createRangeSetting = function () {
        var rangeSettingsObject = new rangeSettings_1.RangeParametersSettings({}, this.dsHelperProvider);
        this.objects.push(rangeSettingsObject);
        var startParameter = new rangeSettings_1.RangeStartParameter({}, this.dsHelperProvider);
        rangeSettingsObject.startParameter(startParameter);
        this.objects.push(startParameter);
        var endParameter = new rangeSettings_1.RangeEndParameter({}, this.dsHelperProvider);
        rangeSettingsObject.endParameter(endParameter);
        this.objects.push(endParameter);
        return rangeSettingsObject;
    };
    return ObjectsStorage;
}(analytics_utils_1.Disposable));
exports.ObjectsStorage = ObjectsStorage;
var rangeSettings_1 = __webpack_require__(83);
var lookupSettings_1 = __webpack_require__(85);


/***/ }),
/* 270 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Criteria;

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var parameter_1 = __webpack_require__(81);
var parameterExpressionBinding_1 = __webpack_require__(121);
var analytics_widgets_1 = __webpack_require__(4);
exports.rangeEditor = {
    custom: 'dxrd-parameters-range-grid', editorType: analytics_widgets_1.PropertyGridEditorFlat
};
exports.rangeBoundaryParameterInfos = [
    parameter_1.parameterNameSerializationInfo, parameter_1.parameterValueSerializationInfo,
    parameterExpressionBinding_1.parameterExpressionBindings, parameter_1.parameterExpressionSerializationInfo,
];
var startParameter = {
    propertyName: 'startParameter', modelName: '@StartParameter', displayName: 'Start Parameter', localizationId: 'DevExpress.XtraReports.Parameters.RangeSettings.StartParameter',
    editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), link: true
};
var endParameter = {
    propertyName: 'endParameter', modelName: '@EndParameter', displayName: 'End Parameter', localizationId: 'DevExpress.XtraReports.Parameters.RangeSettings.EndParameter',
    editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), link: true
};
exports.rangeSettingsInfos = [startParameter, endParameter];


/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
exports.lookUpValueSerializationInfo = [
    { propertyName: 'description', modelName: '@Description', displayName: 'Description', localizationId: 'DevExpress.XtraReports.Parameters.Parameter.Description', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('text') },
    { propertyName: '_value', modelName: '@Value', link: true },
];


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var analytics_widgets_1 = __webpack_require__(4);
var editorTemplates_1 = __webpack_require__(9);
exports.dynamicListLookUpSettingsInfoBase = [
    metadata_1.dataAdapter, metadata_1.dataSource, metadata_1.dataMember,
    { propertyName: 'valueMember', modelName: '@ValueMember', displayName: 'Value Member', localizationId: 'DevExpress.XtraReports.Parameters.DynamicListLookUpSettings.ValueMember', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('field') },
    { propertyName: 'displayMember', modelName: '@DisplayMember', displayName: 'Display Member', localizationId: 'DevExpress.XtraReports.Parameters.DynamicListLookUpSettings.DisplayMember', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('field') },
    { propertyName: 'sortMember', modelName: '@SortMember', displayName: 'Sort Member', localizationId: 'DevExpress.XtraReports.Parameters.DynamicListLookUpSettings.SortMember', defaultVal: '', editor: analytics_widgets_1.editorTemplates.getEditor('field') },
    metadata_1.sortOrder
];
var staticListLookUpSettingsInfo = {
    propertyName: 'lookUpValues',
    displayName: 'Values',
    localizationId: 'DevExpress.XtraReports.Parameters.StaticListLookUpSettings.LookUpValues',
    modelName: 'LookUpValues',
    array: true
};
exports.editedStaticListLookUpSettingsInfo = __assign({}, staticListLookUpSettingsInfo, { editor: { custom: 'dxrd-lookUpValues-editing' } });
exports.readonlyStaticListLookUpSettingsInfo = __assign({}, staticListLookUpSettingsInfo, { editor: editorTemplates_1.designerEditorTemplates.getEditor('lookUpValues') });


/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _locker_1 = __webpack_require__(32);
var ko = __webpack_require__(1);
var ValueSourceSettingsHelper = (function () {
    function ValueSourceSettingsHelper(parameter) {
        this.parameter = parameter;
    }
    ValueSourceSettingsHelper.prototype._updateValueSourceSettingsType = function (valueSourceSettings) {
        if (valueSourceSettings === void 0) { valueSourceSettings = this.parameter.valueSourceSettings(); }
        if (valueSourceSettings) {
            if (valueSourceSettings.objectType().indexOf('StaticListLookUpSettings') !== -1) {
                this.parameter.valueSourceSettingsType('StaticListLookUpSettings');
            }
            else if (valueSourceSettings.objectType().indexOf('DynamicListLookUpSettings') !== -1) {
                this.parameter.valueSourceSettingsType('DynamicListLookUpSettings');
            }
            else {
                this.parameter.valueSourceSettingsType('RangeParametersSettings');
            }
        }
    };
    ValueSourceSettingsHelper.prototype._updateValueSourceSettings = function (valueSourceSettingsType) {
        var _this = this;
        var updateSettings = function (settings) {
            settings._isEditing(_this.parameter._isEditing());
            return settings;
        };
        if (valueSourceSettingsType === 'StaticListLookUpSettings') {
            this.parameter.valueSourceSettings(updateSettings(this.parameter.objectsStorage.createStaticLookUpSetting()));
        }
        else if (valueSourceSettingsType === 'DynamicListLookUpSettings') {
            this.parameter.valueSourceSettings(this.parameter.objectsStorage.createDynamicLookUpSetting());
        }
        else if (valueSourceSettingsType === 'RangeParametersSettings') {
            this.parameter.isMultiValue(false);
            this.parameter.allowNull(false);
            this.parameter.selectAllValues(false);
            var rangeSetting = this.parameter.objectsStorage.createRangeSetting();
            rangeSetting.initializeParameters(this.parameter);
            this.parameter.valueSourceSettings(updateSettings(rangeSetting));
        }
        else {
            this.parameter.objectsStorage.objects.remove(this.parameter.valueSourceSettings());
            this.parameter.valueSourceSettings(null);
        }
    };
    ValueSourceSettingsHelper.prototype.initializeParameterSettingsType = function () {
        var _this = this;
        var locker = new _locker_1.Locker();
        var valueSourceSettings = this.parameter.valueSourceSettings(), lookUpValues = valueSourceSettings && (valueSourceSettings instanceof lookupSettings_1.StaticListLookUpSettings) && valueSourceSettings.lookUpValues();
        if (lookUpValues) {
            lookUpValues.forEach(function (lookUpValue) {
                lookUpValue.valueInfo = _this.parameter.multiValueInfo;
                if (lookUpValue.isEmpty)
                    _this.initializeLookUpValue(lookUpValue);
            });
        }
        this._updateValueSourceSettingsType();
        this.parameter._disposables.push(this.parameter.valueSourceSettings.subscribe(function (settings) {
            locker.lock(function () { return _this._updateValueSourceSettingsType(settings); });
        }));
        this.parameter._disposables.push(this.parameter.valueSourceSettingsType.subscribe(function (newVal) {
            locker.lock(function () { return _this._updateValueSourceSettings(newVal); });
        }));
        if (valueSourceSettings instanceof rangeSettings_1.RangeParametersSettings) {
            valueSourceSettings.assingParameterInfo(this.parameter);
        }
    };
    ValueSourceSettingsHelper.prototype.initializeLookupValueSubscribe = function (report) {
        var _this = this;
        var self = this;
        this.parameter._disposables.push(ko.computed(function () {
            var valueSourceSettings = _this.parameter.valueSourceSettings();
            if (valueSourceSettings instanceof lookupSettings_1.LookUpSettings) {
                valueSourceSettings.updateFilter(_this.parameter, report);
                if (valueSourceSettings instanceof lookupSettings_1.StaticListLookUpSettings) {
                    _this.parameter._disposables.push(valueSourceSettings.lookUpValues.subscribe(function (changes) {
                        for (var index = 0; index < changes.length; index++) {
                            if (changes[index].status === 'added') {
                                self.initializeLookUpValue(changes[index].value);
                                changes[index].value.valueInfo = self.parameter.multiValueInfo;
                            }
                            else if (changes[index].status === 'deleted') {
                                self.parameter.objectsStorage.objects.remove(changes[index].value._value());
                            }
                        }
                    }, null, 'arrayChange'));
                }
            }
        }));
    };
    ValueSourceSettingsHelper.prototype.initializeLookUpValue = function (lookUpValue) {
        var newValue = this.parameter.objectsStorage.addValue();
        newValue.type(this.parameter.type());
        newValue.content(this.parameter.defaultValue);
        lookUpValue._value(newValue);
    };
    ValueSourceSettingsHelper.prototype.updateLookUpValues = function (newType, value) {
        if (value === void 0) { value = null; }
        var valueSourceSettings = this.parameter.valueSourceSettings(), lookUpValues = valueSourceSettings && (valueSourceSettings instanceof lookupSettings_1.StaticListLookUpSettings) && valueSourceSettings.lookUpValues();
        if (!valueSourceSettings || !lookUpValues)
            return;
        lookUpValues.forEach(function (lookUpValue) {
            var lookUpVal = lookUpValue._value();
            lookUpVal.content(value);
            !!newType && lookUpVal.type(newType);
        });
    };
    ValueSourceSettingsHelper.prototype.updateSettingValues = function (newType, value) {
        if (value === void 0) { value = null; }
        var valueSourceSettings = this.parameter.valueSourceSettings();
        if (valueSourceSettings && valueSourceSettings instanceof lookupSettings_1.StaticListLookUpSettings) {
            this.updateLookUpValues(newType, value);
            valueSourceSettings._isEditing(this.parameter._isEditing());
        }
        else if (valueSourceSettings instanceof rangeSettings_1.RangeParametersSettings) {
            valueSourceSettings.startParameter().value(value);
            valueSourceSettings.endParameter().value(value);
            valueSourceSettings._isEditing(this.parameter._isEditing());
        }
    };
    return ValueSourceSettingsHelper;
}());
exports.ValueSourceSettingsHelper = ValueSourceSettingsHelper;
var lookupSettings_1 = __webpack_require__(85);
var rangeSettings_1 = __webpack_require__(83);


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_widgets_1 = __webpack_require__(4);
var PropertyExpressionMapper = (function () {
    function PropertyExpressionMapper() {
        this._mapper = {};
    }
    PropertyExpressionMapper.prototype.getExpressionPropertyName = function (propertyName) {
        return propertyName.substr(0, 1).toLocaleUpperCase() + propertyName.substr(1) + 'ExpressionObj';
    };
    PropertyExpressionMapper.prototype.registerExpressionProperty = function (property) {
        var newPropertyName = this.getExpressionPropertyName(property.propertyName);
        var expressionInfo = {
            propertyName: newPropertyName,
            editor: analytics_widgets_1.editorTemplates.getEditor('expressionEditor'),
            displayName: property.displayName,
            localizationId: property.localizationId
        };
        this._mapper[newPropertyName] = {
            showExpression: ko.observable(false)
        };
        return expressionInfo;
    };
    PropertyExpressionMapper.prototype.isPropertyVisible = function (propertyName, editingMode) {
        if (!editingMode)
            return !this._mapper[propertyName];
        var expressionProperty = this.getExpressionProperty(propertyName);
        return expressionProperty ? (!!this._mapper[propertyName] === expressionProperty.showExpression()) : true;
    };
    PropertyExpressionMapper.prototype.getExpressionProperty = function (propertyName) {
        return this._mapper[propertyName] || this._mapper[this.getExpressionPropertyName(propertyName)];
    };
    PropertyExpressionMapper.propertiesWithExpressions = ['visible', 'enabled'];
    return PropertyExpressionMapper;
}());
exports.PropertyExpressionMapper = PropertyExpressionMapper;


/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrDetailReportBand_1 = __webpack_require__(66);
var xrVerticalBand_1 = __webpack_require__(25);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var bandSurfaceCollapsedHeight_1 = __webpack_require__(51);
var VerticalBandsContainerSurface = (function (_super) {
    __extends(VerticalBandsContainerSurface, _super);
    function VerticalBandsContainerSurface(_parent) {
        var _this = _super.call(this) || this;
        _this._parent = _parent;
        _this.markerWidth = ko.observable(bandSurfaceCollapsedHeight_1.bandSurfaceCollapsedHeight);
        _this.name = 'Vertical Bands';
        _this.bandOffset = 29;
        _this.templateName = 'dxrd-vertical-bands-container';
        _this.selectionTemplate = 'dxrd-vertical-bands-container-selection';
        _this.vrulerTemplate = 'dxrd-vertical-bands-container-vruler';
        _this.leftMarginTemplate = 'dxrd-vertical-bands-leftMargin';
        _this.leftMarginSelectionTemplate = 'dxrd-vertical-bands-leftMargin-selection';
        _this.verticalBands = ko.observableArray();
        _this.scrollOffset = ko.observable(0);
        _this._disposables.push(_this.bandPosition = ko.computed(function () {
            return _this.getBandPosition();
        }), _this.topOffset = ko.computed(function () {
            var offset = 0;
            if (_this.bandPosition() > 0) {
                var prevBand = _this._parent.bandsHolder.bands()[_this.bandPosition() - 1];
                if (prevBand) {
                    return prevBand.absolutePosition.y() + prevBand.height();
                }
            }
            if (_this._parent instanceof xrDetailReportBand_1.DetailReportBandSurface) {
                return _this._parent['absolutePosition'].y();
            }
            else
                return 0;
        }), _this.collapsed = ko.computed({
            read: function () { return _this.verticalBands().some(function (x) { return x.collapsed(); }); },
            write: function (newVal) { return _this.verticalBands().forEach(function (x) { return x.collapsed(newVal); }); }
        }), _this.selected = ko.computed(function () {
            return _this.verticalBands().some(function (x) { return x.selected(); });
        }), _this.canResize = ko.computed(function () {
            return _this.selected() && !_this.isLocked() && !_this.collapsed() && !analytics_internal_1.DragDropHandler.started();
        }), _this.width = ko.computed(function () { return _parent._context.pageWidth() - _parent._context.margins.left() - (!_this.collapsed() ? _parent._context.margins.right() : 0); }), _this.leftMargin = ko.pureComputed(function () { return 0 - (_parent._context.margins && _parent._context.margins.left() || 0) + 10; }), _this.height = ko.computed({
            read: function () {
                return _this.verticalBands()[0] && _this.verticalBands()[0].height() || 0;
            },
            write: function (newVal) { return _this.verticalBands().forEach((function (x) { return x._height(newVal - xrVerticalBand_1.VerticalBandSurface.markerHeight); })); }
        }), _this._height = ko.computed(function () { return _this.verticalBands()[0] && _this.verticalBands()[0]._height() || 0; }), _this.focused = ko.computed(function () {
            return _this.verticalBands().some(function (x) { return x.focused(); });
        }), _this.leftOffset = ko.computed(function () { return _parent.rtlLayout() ? _parent._context.margins.right() : 0; }), _this.grayAreaWidth = ko.computed(function () {
            return Math.max(0, _this.width() - _this.getBandsWidth(_this.verticalBands()));
        }), _this.grayAreaLeft = ko.computed(function () {
            var bands = _this.verticalBands();
            if (!bands.length)
                return 0;
            var band = bands[bands.length - 1];
            return band.absolutePosition.x() + band._width();
        }), _this.minHeight = ko.pureComputed(function () {
            return Math.max.apply(Math, _this.verticalBands().map(function (x) { return (x.heightFromControls && x.heightFromControls()) || 1; })) + xrVerticalBand_1.VerticalBandSurface.markerHeight;
        }), _this.locked = ko.computed(function () { return _this.isLocked(); }));
        var oldDelta = 0;
        _this['_resize'] = function (delta, oldDelta) {
            var firstBand = _this.verticalBands()[0];
            firstBand._height(firstBand._height() + delta - oldDelta);
            return delta;
        };
        _this['resize'] = function (params) {
            oldDelta = _this['_resize'](params.delta.dh, oldDelta);
        };
        _this['stopResize'] = function () {
            oldDelta = 0;
        };
        return _this;
    }
    VerticalBandsContainerSurface.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.verticalBands);
        this.resetObservableArray(this.verticalBands);
    };
    VerticalBandsContainerSurface.prototype.getBandPosition = function () {
        if (this.visible)
            return this._parent.getControlModel().bands().indexOf(this.verticalBands()[0]._control);
        return -1;
    };
    VerticalBandsContainerSurface.prototype.isLocked = function () {
        return this.verticalBands().some(function (x) { return x.locked; });
    };
    VerticalBandsContainerSurface.prototype.createScrollViewOptions = function (target, selection) {
        return {
            direction: 'horizontal',
            showScrollbar: 'always',
            useNative: false,
            scrollByContent: false,
            scrollByThumb: true,
            onStart: function () {
                selection['disabled'](true);
            },
            onScroll: function (e) {
                target.scrollOffset(e.scrollOffset.left);
            },
            onEnd: function () {
                selection['disabled'](false);
            }
        };
    };
    VerticalBandsContainerSurface.prototype.markerClick = function (selection) {
        if (selection.expectClick) {
            selection.expectClick = false;
            return;
        }
        if (!this.focused() && !selection.disabled()) {
            selection.initialize(this.verticalBands()[0]);
        }
        else {
            this.collapsed(!this.collapsed());
        }
    };
    VerticalBandsContainerSurface.prototype.getBandsWidth = function (bands) {
        return bands.reduce(function (acc, band, index) { return acc += band._width(); }, 0);
    };
    VerticalBandsContainerSurface.prototype._getTopOffset = function () {
        var top = 0;
        if (this._parent instanceof xrDetailReportBand_1.DetailReportBandSurface) {
            top = this._parent['backgroundRect']().top;
        }
        if (this.bandPosition() > 0) {
            for (var i = 0; i < this.bandPosition(); i++) {
                top += this._parent.bandsHolder.bands()[i]._totalHeight();
            }
        }
        return top;
    };
    Object.defineProperty(VerticalBandsContainerSurface.prototype, "visible", {
        get: function () {
            return this.verticalBands().length > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VerticalBandsContainerSurface.prototype, "zoom", {
        get: function () { return this._parent.zoom; },
        enumerable: true,
        configurable: true
    });
    return VerticalBandsContainerSurface;
}(analytics_utils_1.Disposable));
exports.VerticalBandsContainerSurface = VerticalBandsContainerSurface;


/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrVerticalBand_1 = __webpack_require__(25);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var PrintAcrossBandsPlaceHolder = (function (_super) {
    __extends(PrintAcrossBandsPlaceHolder, _super);
    function PrintAcrossBandsPlaceHolder(band) {
        var _this = _super.call(this) || this;
        _this.band = band;
        _this._disposables.push(_this.isVisible = ko.computed(function () {
            return band.printAcrossBands() && !_this.bandModel.parentModel().bands().filter(function (x) { return x instanceof xrVerticalBand_1.VerticalBandViewModel; }).length;
        }), _this.absolutePositionY = ko.computed(function () {
            var subbandsWithoutPrintAcrossBands = band.bandsHolder.bands().filter(function (subband) { return !subband.printAcrossBands(); });
            if (subbandsWithoutPrintAcrossBands.length > 0) {
                return subbandsWithoutPrintAcrossBands[0].absolutePosition.y();
            }
            var nextUntransparentSiblingBand = _this.findNextUntransparentSiblingBand(band);
            if (!nextUntransparentSiblingBand) {
                nextUntransparentSiblingBand = _this.findNextUntransparentSiblingBand(band.parent);
            }
            return nextUntransparentSiblingBand && nextUntransparentSiblingBand.absolutePosition.y();
        }), _this.height = ko.computed(function () {
            var firstBandWithoutAcross = _this.findFirstNonAcrossBand();
            return firstBandWithoutAcross ? (firstBandWithoutAcross.absolutePosition.y() - _this.absolutePositionY()) : 0;
        }));
        return _this;
    }
    PrintAcrossBandsPlaceHolder.prototype.findNextUntransparentSiblingBand = function (band) {
        var currentBandIndex = band.parent.bandsHolder.bands().indexOf(band);
        return band.parent.bandsHolder.bands().filter(function (band, index) { return (!band.printAcrossBands || band.printAcrossBands && !band.printAcrossBands()) && index > currentBandIndex; })[0];
    };
    PrintAcrossBandsPlaceHolder.prototype.findFirstNonAcrossBand = function () {
        var isSubband = this.bandModel.controlType === 'SubBand';
        var bandHolder = isSubband ? this.band.parent.parent['bandsHolder'] : this.band.parent.bandsHolder;
        var bandsWithoutAcross = [];
        if (this.bandModel.controlType === 'GroupHeaderBand' || (isSubband && this.bandModel.parentModel().controlType === 'GroupHeaderBand')) {
            var groupHeaderLevel = isSubband ? this.bandModel.parentModel()['level']() : this.bandModel.level();
            bandsWithoutAcross = bandHolder.bands().filter(function (_band) { return (_band.getControlModel().controlType === 'GroupFooterBand' && _band.getControlModel().level() > groupHeaderLevel)
                || _band.getControlModel().controlType === 'PageFooterBand'
                || _band.getControlModel().controlType === 'ReportFooterBand'
                || _band.getControlModel().controlType === 'BottomMarginBand'; });
        }
        else if (this.bandModel.controlType === 'PageHeaderBand' || (isSubband && this.bandModel.parentModel().controlType === 'PageHeaderBand')) {
            bandsWithoutAcross = bandHolder.bands().filter(function (_band) { return (_band.getControlModel().controlType === 'BottomMarginBand'); });
        }
        if (bandsWithoutAcross.length > 0) {
            return bandsWithoutAcross[0];
        }
    };
    Object.defineProperty(PrintAcrossBandsPlaceHolder.prototype, "bandModel", {
        get: function () {
            return this.band.getControlModel();
        },
        enumerable: true,
        configurable: true
    });
    return PrintAcrossBandsPlaceHolder;
}(analytics_utils_1.Disposable));
exports.PrintAcrossBandsPlaceHolder = PrintAcrossBandsPlaceHolder;


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var editingFieldExtensions_1 = __webpack_require__(451);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_widgets_1 = __webpack_require__(4);
var EditOptionsEditorNameEditorModel = (function (_super) {
    __extends(EditOptionsEditorNameEditorModel, _super);
    function EditOptionsEditorNameEditorModel(modelPropertyInfo, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, modelPropertyInfo, level, parentDisabled, textToSearch) || this;
        _this.displayValue = ko.observable('');
        var extesions = editingFieldExtensions_1.EditingFieldExtensions.instance();
        var editorOptions = modelPropertyInfo.editorOptions;
        var categoriesToFilter = [];
        if (editorOptions) {
            categoriesToFilter = editorOptions.categories || extesions.categories(editorOptions.excludeCategories);
        }
        _this.itemsProvider = {
            getItems: function (path) {
                var editorSet = extesions.editors();
                var filteredEditorSet = !categoriesToFilter
                    ? editorSet
                    : editorSet.filter(function (e) { return categoriesToFilter.indexOf(e.category) !== -1; });
                var editorMembers = filteredEditorSet.map(function (item) {
                    var mask = item.options && item.options['mask'];
                    return {
                        name: item.name,
                        displayName: item.displayName,
                        specifics: '_none_',
                        templateName: 'dxrd-editingField-editor-treelist-item',
                        title: item.displayName + (mask ? ' [' + mask + ']' : '')
                    };
                });
                return $.Deferred().resolve(editorMembers).promise();
            }
        };
        var editor = extesions.editor(_this.value());
        if (editor) {
            _this.value(editor.name);
            _this.displayValue(editor.displayName);
        }
        _this.value.subscribe(function (newValue) {
            var editor = extesions.editor(newValue);
            if (editor) {
                _this.value(editor.name);
                _this.displayValue(editor.displayName);
                return;
            }
            _this.displayValue('');
            _this.value('');
        });
        return _this;
    }
    return EditOptionsEditorNameEditorModel;
}(analytics_widgets_1.Editor));
exports.EditOptionsEditorNameEditorModel = EditOptionsEditorNameEditorModel;


/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var sortingOptions_1 = __webpack_require__(88);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var SortingOptions = (function (_super) {
    __extends(SortingOptions, _super);
    function SortingOptions(model, report, serializer) {
        var _this = _super.call(this) || this;
        _this._info = $.extend(true, [], sortingOptions_1.sortingOptionsSerializationsInfo);
        _this._fieldNameInfo = _this._info.filter(function (info) { return info.propertyName == 'fieldName'; })[0];
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(_this, model || {});
        Object.defineProperty(_this._fieldNameInfo, 'valuesArray', {
            get: function () {
                var items = [];
                var currentBand = _this.targetBand && _this.targetBand();
                if (currentBand) {
                    items = _this._getFieldNames(currentBand).map(function (fieldName) { return { value: fieldName, displayValue: fieldName }; });
                }
                return items;
            }
        });
        var _fieldName = _this.fieldName;
        _this._disposables.push(_this.fieldName = ko.computed({
            read: function () {
                var value = _fieldName();
                return _this._getFieldNames(_this.targetBand()).indexOf(value) === -1 ? '' : value;
            },
            write: function (newValue) {
                _fieldName(newValue);
            }
        }));
        return _this;
    }
    SortingOptions.prototype._getFieldNames = function (targetBand) {
        var fieldArray = targetBand && (targetBand['sortFields'] || targetBand['groupFields']);
        return fieldArray ? fieldArray().map(function (item) { return item.fieldName(); }).filter(function (name) { return !!name; }) : [];
    };
    SortingOptions.prototype.getInfo = function () {
        return this._info;
    };
    SortingOptions.prototype.isPropertyDisabled = function (name) {
        return name == 'fieldName' && !this.targetBand();
    };
    SortingOptions.prototype.resetValue = function () {
        this.targetBand(null);
        this.fieldName('');
    };
    SortingOptions.prototype.getPath = function (propertyName) {
        return this.targetBand() && this.targetBand().getPath('groupFields') || '';
    };
    return SortingOptions;
}(analytics_utils_1.Disposable));
exports.SortingOptions = SortingOptions;


/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_elements_1 = __webpack_require__(5);
var $ = __webpack_require__(3);
var WatermarkModel = (function (_super) {
    __extends(WatermarkModel, _super);
    function WatermarkModel(model, serializer) {
        var _this = _super.call(this, model || {}, serializer, watermark_1.watermarkSerializationsInfo) || this;
        _this.rtl = $.noop;
        if (!_this.imageSource() && model && model['@Image']) {
            _this.imageSource(new imageSource_1.ImageSource('img', model['@Image']));
            delete _this['_model']['@Image'];
        }
        return _this;
    }
    WatermarkModel.prototype.shouldDrawWatermarkImage = function () {
        return this.imageSource() && this.imageSource().sourceType !== 'svg';
    };
    return WatermarkModel;
}(analytics_elements_1.SerializableModel));
exports.WatermarkModel = WatermarkModel;
var imageSource_1 = __webpack_require__(40);
var watermark_1 = __webpack_require__(188);


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _serializer_1 = __webpack_require__(120);
var localizationMetadata_1 = __webpack_require__(452);
var metadata_1 = __webpack_require__(28);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var _initUtils_1 = __webpack_require__(189);
var LocalizationItem = (function () {
    function LocalizationItem(model, serializer) {
        this.culture = ko.observable();
        this.component = ko.observable();
        this.propertyName = ko.observable();
        this.propertyValue = ko.observable();
        serializer = serializer || new _serializer_1.ReportModelSerializer();
        model && serializer.deserialize(this, model);
    }
    LocalizationItem.prototype.getInfo = function () {
        return [localizationMetadata_1.componentInfo, localizationMetadata_1.cultureInfo, localizationMetadata_1.propertyNameInfo, localizationMetadata_1.propertyValueInfo];
    };
    return LocalizationItem;
}());
exports.LocalizationItem = LocalizationItem;
function getComponentInfo(localizationPropertyInfo) {
    return localizationPropertyInfo.component.getLocalizationProperty(localizationPropertyInfo.propertyName);
}
function searchInLocalizationArray(localizationArray, controlPropertyName, component) {
    return localizationArray.filter(function (localizationItem) {
        return localizationItem.component == component && localizationItem.propertyName === controlPropertyName;
    })[0];
}
exports.searchInLocalizationArray = searchInLocalizationArray;
var ReportLocalizationEngine = (function (_super) {
    __extends(ReportLocalizationEngine, _super);
    function ReportLocalizationEngine(report) {
        var _this = _super.call(this) || this;
        _this.report = report;
        _this.items = new LocalizationDictionary();
        _this.add = function (cultureCode, component, propertyName, value) {
            var node = _this.items.get(cultureCode);
            if (!node) {
                _this.items.add(cultureCode).setValue(component, propertyName, value);
            }
            else
                node.setValue(component, propertyName, value);
        };
        _this.save = function (cultureCode) {
            if (cultureCode === void 0) { cultureCode = _this.report.language(); }
            _this.report.enumerateComponents().forEach(function (control) {
                if (control.getLocalizationProperties) {
                    control.getLocalizationProperties().forEach(function (item) {
                        return _this.add(cultureCode, control, item.propertyName, item.value);
                    });
                }
            });
        };
        _this.apply = function (cultureCode) {
            var localizationItem = _this.items.get(cultureCode);
            if (!localizationItem) {
                _this.items.add(cultureCode);
                _this.apply(cultureCode);
            }
            else {
                var needUpdate = !_this.report['_update']();
                needUpdate && _this.report['_update'](true);
                localizationItem.getInheritedProperties().forEach(function (localizationPropertyInfo) {
                    localizationPropertyInfo.component.applyLocalization(localizationPropertyInfo.propertyName, localizationPropertyInfo.value);
                });
                needUpdate && _this.report['_update'](false);
            }
        };
        _this.serialize = function () {
            var outArray = [];
            var _avalibleComponents = _this.report.enumerateComponents();
            var _avalibleComponentsDictionary = {};
            var _getUniqueName = function (component) {
                return analytics_internal_1.replaceInvalidSymbols(component.controlType + ko.unwrap(component.name));
            };
            _avalibleComponents.forEach(function (component) {
                _avalibleComponentsDictionary[_getUniqueName(component)] = component;
            });
            var canSerialize = function (component) {
                var item = _avalibleComponentsDictionary[_getUniqueName(component)];
                return item && component === item;
            };
            _this.items.keys().forEach(function (key) {
                outArray.push.apply(outArray, _this.items.get(key).serialize(canSerialize));
            });
            return outArray;
        };
        report._localizationItems().forEach(function (item) {
            item.component() && _this.add(item.culture(), item.component(), item.propertyName(), item.propertyValue);
        });
        return _this;
    }
    ReportLocalizationEngine.prototype.recalculateUnits = function (coef) {
        var _this = this;
        this.items.keys().forEach(function (key) {
            key !== _this.report.language() && _this.items.get(key).properties.forEach(function (x) { return x.recalculate && x.recalculate(coef); });
        });
    };
    ReportLocalizationEngine.prototype.hasCulture = function (cultureCode) {
        var item = this.items.get(cultureCode);
        return item && item.isLocalized();
    };
    ReportLocalizationEngine.prototype.isLocalized = function () {
        var _this = this;
        return this.items.keys().some(function (key) {
            return key !== metadata_1.defaultCulture && _this.items.get(key).properties.length > 0;
        });
    };
    return ReportLocalizationEngine;
}(analytics_utils_1.Disposable));
exports.ReportLocalizationEngine = ReportLocalizationEngine;
var LocalizationDictionary = (function () {
    function LocalizationDictionary() {
        var _this = this;
        this.cultures = {};
        this.count = function () {
            return Object.keys(_this.cultures).length;
        };
        this.clear = function (code) {
            if (!code) {
                var defaultCultureInfo = _this.cultures[metadata_1.defaultCulture];
                _this.cultures = {};
                _this.cultures[metadata_1.defaultCulture] = defaultCultureInfo;
            }
            else {
                _this.cultures[code].properties = [];
                delete _this.cultures[code];
            }
        };
    }
    LocalizationDictionary.prototype.add = function (code) {
        this.cultures[code] = new LocalizationInfo(code);
        this.cultures[code].createNodes(code, this);
        return this.cultures[code];
    };
    LocalizationDictionary.prototype.get = function (code) {
        return this.cultures[code];
    };
    LocalizationDictionary.prototype.keys = function () {
        return Object.keys(this.cultures);
    };
    return LocalizationDictionary;
}());
exports.LocalizationDictionary = LocalizationDictionary;
var LocalizationInfo = (function () {
    function LocalizationInfo(code) {
        var _this = this;
        this.code = code;
        this.properties = [];
        this.isLocalized = ko.observable(false);
        this.setValue = function (component, propertyName, value) {
            var propertyValue = ko.unwrap(value);
            var setInfo = {
                component: component,
                propertyName: propertyName,
                value: propertyValue && propertyValue.toString() || propertyValue
            };
            var selfProperty = searchInLocalizationArray(_this.properties, setInfo.propertyName, setInfo.component);
            var closestProperty = _this.parent ? _this.parent.findClosestProperty(setInfo) : undefined;
            if (selfProperty) {
                if (closestProperty && closestProperty.value == setInfo.value)
                    _this.properties.splice(_this.properties.indexOf(selfProperty), 1);
                else
                    selfProperty.value = setInfo.value;
            }
            else if (!closestProperty || closestProperty.value !== setInfo.value) {
                _this._updateLocalizationInfoItem(setInfo);
                _this.properties.push(setInfo);
            }
            _this.isLocalized(_this.properties.length > 0);
        };
    }
    LocalizationInfo.prototype.getInheritedProperties = function () {
        var collectedProperties = this.properties.map(function (a) { return a; });
        return this.parent ? this.parent.mergePropertiesWithChild(collectedProperties) : collectedProperties;
    };
    LocalizationInfo.prototype.createNodes = function (code, list) {
        var parent = this.getParentCulture(code);
        if (!parent)
            return;
        if (!list.get(parent))
            list.add(parent);
        this.parent = list.get(parent);
    };
    LocalizationInfo.prototype.mergePropertiesWithChild = function (childArray) {
        this.properties.forEach(function (property) {
            var mergeElement = childArray.filter(function (info) { return info.component === property.component && info.propertyName === property.propertyName; });
            if (!mergeElement.length)
                childArray.push(property);
        });
        return this.parent ? this.parent.mergePropertiesWithChild(childArray) : childArray;
    };
    LocalizationInfo.prototype._recalculateUnit = function (item, serializationInfo, process) {
        var model = ko.unwrap(serializationInfo.from ? serializationInfo.from(item.value) : item.value);
        model = process(model);
        item.value = serializationInfo.toJsonObject ? serializationInfo.toJsonObject(model) : model.toString();
    };
    LocalizationInfo.prototype._updateLocalizationInfoItem = function (setInfo) {
        var _this = this;
        var localizedControl = getComponentInfo(setInfo);
        var serializationInfo = localizedControl && localizedControl.info;
        var unitProperties = _initUtils_1.getUnitProperties(setInfo.component);
        if (serializationInfo && unitProperties && unitProperties.properties.some(function (x) { return x === serializationInfo.propertyName; })) {
            setInfo.recalculate = function (coef) {
                _this._recalculateUnit(setInfo, serializationInfo, function (value) {
                    var valueUnits = _initUtils_1.getUnitProperties(value);
                    if (valueUnits) {
                        valueUnits.reCalculateObject(coef);
                        return value;
                    }
                    return unitProperties.calcProperty(value, coef);
                });
            };
        }
    };
    LocalizationInfo.prototype._createLocalizationItem = function (itemInfo) {
        var item = new LocalizationItem();
        item.culture(this.code);
        item.component(itemInfo.component);
        item.propertyName(itemInfo.propertyName);
        item.propertyValue(itemInfo.value.toString());
        return item;
    };
    LocalizationInfo.prototype.serialize = function (canSerialize) {
        var _this = this;
        return this.properties.reduce(function (result, property) {
            if (canSerialize(property.component)) {
                if (_this.code === metadata_1.defaultCulture) {
                    var localizedProperty = getComponentInfo(property);
                    var defaultVal = ko.unwrap(localizedProperty.info.from ? localizedProperty.info.from(localizedProperty.info.defaultVal) : localizedProperty.info.defaultVal);
                    defaultVal = localizedProperty.info.toJsonObject ? localizedProperty.info.toJsonObject(defaultVal) : (defaultVal != null && defaultVal.toString() || defaultVal);
                    if (property.value != undefined && property.value.toString() !== defaultVal) {
                        result.push(_this._createLocalizationItem(property));
                    }
                }
                else {
                    result.push(_this._createLocalizationItem(property));
                }
            }
            return result;
        }, []);
    };
    LocalizationInfo.prototype.findClosestProperty = function (mergeProperty) {
        for (var i = 0; i < this.properties.length; i++)
            if (this.properties[i].component === mergeProperty.component && this.properties[i].propertyName === mergeProperty.propertyName)
                return this.properties[i];
        return this.parent ? this.parent.findClosestProperty(mergeProperty) : undefined;
    };
    LocalizationInfo.prototype.getParentCulture = function (cultureCode) {
        if (cultureCode == null || cultureCode == metadata_1.defaultCulture)
            return undefined;
        var parts = cultureCode.split('-');
        return parts.length == 1 ? metadata_1.defaultCulture : parts.splice(0, parts.length - 1).join('-');
    };
    return LocalizationInfo;
}());
exports.LocalizationInfo = LocalizationInfo;


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_elements_1 = __webpack_require__(5);
var analytics_utils_1 = __webpack_require__(0);
var layoutItems_1 = __webpack_require__(283);
var ParameterPanelLayoutItem = (function (_super) {
    __extends(ParameterPanelLayoutItem, _super);
    function ParameterPanelLayoutItem(model, serializer) {
        var _this = _super.call(this, model, serializer) || this;
        if (_this.layoutItemType() === 'Group') {
            _this.items = analytics_utils_1.deserializeArray(model.Items, function (item) { return new ParameterPanelLayoutItem(item, serializer); });
        }
        return _this;
    }
    ParameterPanelLayoutItem.prototype.preInitProperties = function (model) {
        this.getInfo = function () { return layoutItems_1.parameterPanelLayoutMapper[model['@LayoutItemType']]; };
    };
    return ParameterPanelLayoutItem;
}(analytics_elements_1.SerializableModel));
exports.ParameterPanelLayoutItem = ParameterPanelLayoutItem;


/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var orientationValues = [
    { displayValue: 'Horizontal', value: 'Horizontal' },
    { displayValue: 'Vertical', value: 'Vertical' }
];
var parameter = { propertyName: 'parameter', modelName: '@Parameter', link: true };
var layoutitemtype = { propertyName: 'layoutItemType', modelName: '@LayoutItemType', displayName: 'LayoutItemType', localizationId: '', editor: analytics_widgets_1.editorTemplates.getEditor('text') };
var titlevisible = { propertyName: 'titleVisible', modelName: '@TitleVisible', displayName: 'TitleVisible', localizationId: '', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool };
var title = { propertyName: 'title', modelName: '@Title', displayName: 'Title', localizationId: '', editor: analytics_widgets_1.editorTemplates.getEditor('text'), defaultVal: '' };
var bordervisible = { propertyName: 'borderVisible', modelName: '@BorderVisible', displayName: 'BorderVisible', localizationId: '', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool };
var expanded = { propertyName: 'expanded', modelName: '@Expanded', displayName: 'Expanded', localizationId: '', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool };
var showexpandbutton = { propertyName: 'showExpandButton', modelName: '@ShowExpandButton', displayName: 'ShowExpandButton', localizationId: '', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false, from: analytics_utils_1.parseBool };
var orientation = { propertyName: 'orientation', modelName: '@Orientation', displayName: 'Orientation', localizationId: '', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Vertical', valuesArray: orientationValues };
var labelSizeScope = { propertyName: 'labelSizeScope', modelName: '@LabelSizeScope', displayName: 'LabelSizeScope', localizationId: '', editor: analytics_widgets_1.editorTemplates.getEditor('text'), defaultVal: '' };
var subItems = { propertyName: 'items', modelName: 'Items', array: true };
exports.groupLayoutItemInfo = [layoutitemtype, titlevisible, title, bordervisible, expanded, showexpandbutton, orientation, labelSizeScope, subItems];
var labelorientation = { propertyName: 'labelOrientation', modelName: '@LabelOrientation', displayName: 'LabelOrientation', localizationId: '', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), defaultVal: 'Horizontal', valuesArray: orientationValues };
exports.parameterLayoutItemInfo = [layoutitemtype, labelorientation, parameter];
exports.separatorLayoutItemInfo = [layoutitemtype];
exports.parameterPanelLayoutMapper = {
    'Parameter': exports.parameterLayoutItemInfo,
    'Separator': exports.separatorLayoutItemInfo,
    'Group': exports.groupLayoutItemInfo,
};


/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var checkEditingField_1 = __webpack_require__(119);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var glyphOptions_1 = __webpack_require__(285);
var glyphsInfo_1 = __webpack_require__(190);
var GlyphOptions = (function (_super) {
    __extends(GlyphOptions, _super);
    function GlyphOptions(model, serializer) {
        var _this = _super.call(this) || this;
        _this.getInfo = ko.observable(glyphOptions_1.glyphOptionsSerializationInfo);
        serializer = serializer || new analytics_utils_1.ModelSerializer();
        serializer.deserialize(_this, model || {});
        var _currentCheckState = checkEditingField_1.GlyphStyle[_this.style()];
        _this._disposables.push(_this.style.subscribe(function (newStyle) {
            if (newStyle) {
                var oldDefSize = glyphsInfo_1.getDefaultCheckSize(_currentCheckState);
                var newDefSize = glyphsInfo_1.getDefaultCheckSize(checkEditingField_1.GlyphStyle[newStyle]);
                _currentCheckState = checkEditingField_1.GlyphStyle[newStyle];
                if (oldDefSize.height() === _this.size.height()) {
                    _this.size.height(newDefSize.height());
                }
                if (oldDefSize.width() === _this.size.width()) {
                    _this.size.width(newDefSize.width());
                }
            }
        }));
        return _this;
    }
    GlyphOptions.unitProperties = ['size'];
    return GlyphOptions;
}(analytics_utils_1.Disposable));
exports.GlyphOptions = GlyphOptions;


/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = __webpack_require__(92);
var checkEditingField_1 = __webpack_require__(119);
var glyphsInfo_1 = __webpack_require__(190);
var analytics_widgets_1 = __webpack_require__(4);
var analytics_elements_1 = __webpack_require__(5);
var analytics_widgets_internal_1 = __webpack_require__(8);
var $ = __webpack_require__(3);
exports.glyphAlignment = {
    propertyName: 'alignment',
    modelName: '@Alignment', displayName: 'Alignment', localizationId: 'DevExpress.XtraReports.UI.XRCheckBox.GlyphAlignment',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    defaultVal: 'Near', valuesArray: [
        { value: 'Near', displayValue: 'Near', localizationId: 'DevExpress.Utils.HorzAlignment.Near' },
        { value: 'Center', displayValue: 'Center', localizationId: 'DevExpress.Utils.HorzAlignment.Center' },
        { value: 'Far', displayValue: 'Far', localizationId: 'DevExpress.Utils.HorzAlignment.Far' }
    ]
};
var _checkStates = _utils_1.getEnumValues(checkEditingField_1.CheckState);
var customGlyphChecked = glyphsInfo_1._getCustomGlyphsInfo(_checkStates[checkEditingField_1.CheckState.Checked]);
var customGlyphUnChecked = glyphsInfo_1._getCustomGlyphsInfo(_checkStates[checkEditingField_1.CheckState.Unchecked]);
var customGlyphIndeterminate = glyphsInfo_1._getCustomGlyphsInfo(_checkStates[checkEditingField_1.CheckState.Indeterminate]);
var customGlyphsSerializationInfo = [customGlyphChecked, customGlyphUnChecked, customGlyphIndeterminate];
var customGlyphs = { propertyName: 'customGlyphs', modelName: 'CustomGlyphs', info: customGlyphsSerializationInfo, displayName: 'Custom Glyphs', localizationId: 'DevExpress.XtraReports.UI.CheckBoxGlyphOptions.CustomGlyphs', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var style = {
    propertyName: 'style',
    modelName: '@Style', displayName: 'Glyph Style', localizationId: 'DevExpress.XtraReports.UI.CheckBoxGlyphOptions.Style',
    editor: $.extend({}, analytics_widgets_1.editorTemplates.getEditor('combobox'), { header: 'dxrd-checkbox-style-combobox' }),
    defaultVal: 'StandardBox1', valuesArray: _utils_1.getEnumValues(checkEditingField_1.GlyphStyle).map(function (item) { return ({
        value: item,
        displayValue: item,
        localizationId: 'DevExpress.XtraPrinting.GlyphStyle.' + item,
        templateBinding: function (templateName) { return ({ name: templateName, if: analytics_widgets_internal_1.SvgTemplatesEngine.getExistingTemplate(templateName) }); }
    }); })
};
var size = { propertyName: 'size', modelName: '@Size', from: analytics_elements_1.Size.fromString, defaultVal: glyphsInfo_1.getDefaultCheckSize().toString(), displayName: 'Size', localizationId: 'DevExpress.XtraReports.UI.CheckBoxGlyphOptions.Size', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.glyphOptionsSerializationInfo = [customGlyphs, exports.glyphAlignment, size, style];


/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _expressionWrapper_1 = __webpack_require__(191);
var settings_1 = __webpack_require__(12);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var _metaUtils_1 = __webpack_require__(23);
var ControlsFactory = (function (_super) {
    __extends(ControlsFactory, _super);
    function ControlsFactory(fieldListProvider) {
        if (fieldListProvider === void 0) { fieldListProvider = ko.observable(null); }
        var _this = _super.call(this) || this;
        _this.fieldListProvider = fieldListProvider;
        _this._beforePrintPrintOnPage = ['BeforePrint', 'PrintOnPage'];
        _this._beforePrint = ['BeforePrint'];
        _this._expressionWrapper = new _expressionWrapper_1.ExpressionWrapper(settings_1.DataBindingMode(), _this.fieldListProvider);
        return _this;
    }
    ControlsFactory.prototype.dispose = function () {
        var _this = this;
        this._expressionWrapper.dispose();
        this._expressionWrapper = null;
        Object.keys(this.controlsMap).forEach(function (x) {
            delete _this.controlsMap[x];
        });
        this.fieldListProvider = null;
    };
    ControlsFactory.prototype._registerCommonExpressions = function (controlType) {
        this.setExpressionBinding(controlType, 'Text', this._beforePrintPrintOnPage);
        this.setExpressionBinding(controlType, 'AccessibleDescription', this._beforePrintPrintOnPage);
        this.setExpressionBinding(controlType, 'Visible', this._beforePrintPrintOnPage);
        this.setExpressionBinding(controlType, 'NavigateUrl', this._beforePrint);
        this.setExpressionBinding(controlType, 'Bookmark', this._beforePrint);
        this.setExpressionBinding(controlType, 'Tag', this._beforePrint);
        this.setExpressionBinding(controlType, 'LeftF', this._beforePrint, 'Layout');
        this.setExpressionBinding(controlType, 'TopF', this._beforePrint, 'Layout');
        this.setExpressionBinding(controlType, 'WidthF', this._beforePrint, 'Layout');
        this.setExpressionBinding(controlType, 'HeightF', this._beforePrint, 'Layout');
        this.setExpressionBinding(controlType, 'StyleName', this._beforePrint);
        this.setExpressionBinding(controlType, 'ForeColor', this._beforePrintPrintOnPage, 'Appearance');
        this.setExpressionBinding(controlType, 'BackColor', this._beforePrintPrintOnPage, 'Appearance');
        this.setExpressionBinding(controlType, 'BorderColor', this._beforePrintPrintOnPage, 'Appearance');
        this.setExpressionBinding(controlType, 'Borders', this._beforePrintPrintOnPage, 'Appearance');
        this.setExpressionBinding(controlType, 'BorderWidth', this._beforePrintPrintOnPage, 'Appearance');
        this.setExpressionBinding(controlType, 'BorderDashStyle', this._beforePrintPrintOnPage, 'Appearance');
        this.setExpressionBinding(controlType, 'TextAlignment', this._beforePrintPrintOnPage, 'Appearance');
        this.setExpressionBinding(controlType, 'Font', this._beforePrintPrintOnPage, 'Appearance', ['Name', 'Size', 'Italic', 'Strikeout', 'Bold', 'Underline']);
        this.setExpressionBinding(controlType, 'Padding', this._beforePrintPrintOnPage, 'Appearance', ['All', 'Left', 'Right', 'Top', 'Bottom']);
    };
    ControlsFactory.prototype._registerExtensions = function (controlType, metadata) {
        var parentType = metadata && metadata.parentType || controlType;
        this._registerCommonExpressions(controlType);
        switch (parentType) {
            case 'XRCheckBox':
                this.setExpressionBinding(controlType, 'CheckBoxState', this._beforePrintPrintOnPage);
                break;
            case 'XRPictureBox':
                this.setExpressionBinding(controlType, 'ImageSource', this._beforePrintPrintOnPage);
                this.setExpressionBinding(controlType, 'ImageUrl', this._beforePrintPrintOnPage);
                this.hideExpressionBindings(controlType, 'Font', 'ForeColor', 'Text', 'TextAlignment');
                break;
            case 'XRBarCode':
                this.setExpressionBinding(controlType, 'BinaryData', this._beforePrint);
                break;
            case 'XRGauge':
                this.hideExpressionBindings(controlType, 'Text', 'TextAlignment', 'Font', 'ForeColor');
                this.setExpressionBinding(controlType, 'TargetValue', this._beforePrint);
                this.setExpressionBinding(controlType, 'ActualValue', this._beforePrint);
                this.setExpressionBinding(controlType, 'Minimum', this._beforePrint);
                this.setExpressionBinding(controlType, 'Maximum', this._beforePrint);
                break;
            case 'XRCharacterComb':
                this.hideExpressionBindings(controlType, 'Padding');
                break;
            case 'TopMarginBand':
            case 'BottomMarginBand':
            case 'DetailReportBand':
            case 'DetailBand':
            case 'SubBand':
            case 'GroupHeaderBand':
            case 'GroupFooterBand':
            case 'PageHeaderBand':
            case 'ReportHeaderBand':
            case 'ReportFooterBand':
                this.hideExpressionBindings(controlType, 'AccessibleDescription', 'Bookmark', 'NavigateUrl', 'Text', 'WidthF', 'LeftF', 'TopF');
                this.setExpressionBinding(controlType, 'Visible', this._beforePrint);
                break;
            case 'XRSubreport':
                this.setExpressionBinding(controlType, 'Visible', this._beforePrint);
                this.hideExpressionBindings(controlType, 'AccessibleDescription', 'Bookmark', 'NavigateUrl', 'Padding', 'StyleName');
                this.hideExpressionBindings(controlType, 'BackColor', 'BorderColor', 'BorderWidth', 'BorderDashStyle', 'Borders', 'Font', 'ForeColor', 'TextAlignment', 'Tag', 'Text', 'NavigateUrl');
                break;
            case 'XRCrossBandBox':
                this.hideExpressionBindings(controlType, 'AccessibleDescription', 'Bookmark', 'NavigateUrl', 'Text', 'BackColor', 'Font', 'Padding', 'TextAlignment');
                this.hideExpressionBindings(controlType, 'ForeColor', 'Visible');
                break;
            case 'XRCrossBandLine':
                this.hideExpressionBindings(controlType, 'AccessibleDescription', 'Bookmark', 'NavigateUrl', 'Text', 'BackColor', 'Font', 'Padding', 'TextAlignment');
                this.hideExpressionBindings(controlType, 'BorderColor', 'BorderDashStyle', 'Borders', 'BorderWidth', 'Visible');
                break;
            case 'XRCrossTab':
                this.hideExpressionBindings(controlType, 'AccessibleDescription', 'Bookmark', 'BackColor', 'BorderColor', 'Borders', 'BorderDashStyle', 'BorderWidth', 'Font', 'ForeColor', 'Padding', 'TextAlignment', 'Text', 'NavigateUrl', 'Visible', 'StyleName');
                this.setExpressionBinding(controlType, 'Visible', this._beforePrint);
                break;
            case 'XRCrossTabCell':
                this.hideExpressionBindings(controlType, 'Visible', 'HeightF', 'WidthF', 'LeftF', 'TopF', 'StyleName');
                break;
            case 'XRChart':
                this.hideExpressionBindings(controlType, 'Text', 'Font', 'ForeColor', 'TextAlignment');
                break;
            case 'XRLine':
                this.hideExpressionBindings(controlType, 'Font', 'Text', 'TextAlignment', 'NavigateUrl', 'Bookmark');
                break;
            case 'XRPivotGrid':
                this.setExpressionBinding(controlType, 'Visible', this._beforePrint);
                this.hideExpressionBindings(controlType, 'BackColor', 'BorderColor', 'Borders', 'BorderDashStyle', 'BorderWidth', 'Font', 'ForeColor', 'Padding', 'TextAlignment', 'Text', 'NavigateUrl', 'StyleName');
                break;
            case 'XRPageBreak':
                this.setExpressionBinding(controlType, 'Visible', this._beforePrint);
                this.hideExpressionBindings(controlType, 'AccessibleDescription', 'BackColor', 'BorderColor', 'Borders', 'BorderDashStyle', 'BorderWidth', 'Font', 'ForeColor', 'Padding', 'TextAlignment', 'Tag', 'Text', 'NavigateUrl', 'LeftF', 'WidthF', 'HeightF', 'Bookmark', 'StyleName');
                break;
            case 'XRPageInfo':
                this.hideExpressionBindings(controlType, 'AccessibleDescription', 'Text');
                break;
            case 'XRPanel':
                this.hideExpressionBindings(controlType, 'AccessibleDescription', 'Font', 'ForeColor', 'Text', 'TextAlignment');
                break;
            case 'XRRichText':
                this.hideExpressionBindings(controlType, 'AccessibleDescription', 'Text');
                this.setExpressionBinding(controlType, 'Rtf', this._beforePrint);
                this.setExpressionBinding(controlType, 'Html', this._beforePrint);
                break;
            case 'XRShape':
                this.hideExpressionBindings(controlType, 'Font', 'TextAlignment', 'Text');
                this.setExpressionBinding(controlType, 'FillColor', this._beforePrint, 'Appearance');
                break;
            case 'XRSparkline':
                this.hideExpressionBindings(controlType, 'Text', 'Font', 'TextAlignment', 'ForeColor');
                break;
            case 'XRTableOfContents':
                this.hideExpressionBindings(controlType, 'NavigateUrl', 'Text', 'TextAlignment', 'Bookmark', 'Font', 'LeftF', 'WidthF');
                break;
            case 'XRTableRow':
                this.hideExpressionBindings(controlType, 'AccessibleDescription', 'LeftF', 'TopF', 'WidthF', 'Text', 'NavigateUrl', 'Bookmark');
                break;
            case 'XRTableCell':
                this.hideExpressionBindings(controlType, 'LeftF', 'TopF', 'HeightF');
                break;
            case 'XRTable':
                this.hideExpressionBindings(controlType, 'AccessibleDescription', 'Text', 'NavigateUrl');
                break;
            case 'XRZipCode':
                this.hideExpressionBindings(controlType, 'Font', 'TextAlignment');
                break;
            case 'XRPdfContent':
                this.setExpressionBinding(controlType, 'Visible', this._beforePrint);
                this.setExpressionBinding(controlType, 'Source', this._beforePrint, 'Data');
                this.setExpressionBinding(controlType, 'SourceUrl', this._beforePrint, 'Data');
                this.setExpressionBinding(controlType, 'PageRange', this._beforePrint, 'Data');
                this.hideExpressionBindings(controlType, 'BackColor', 'BorderColor', 'Borders', 'BorderDashStyle', 'BorderWidth', 'Font', 'ForeColor', 'Padding', 'TextAlignment', 'Tag', 'Text', 'NavigateUrl', 'LeftF', 'WidthF', 'HeightF');
                break;
            case 'DevExpress.XtraReports.UI.XtraReport':
                this.hideExpressionBindings(controlType, 'AccessibleDescription', 'StyleName', 'Text', 'NavigateUrl');
                this.setExpressionBinding(controlType, 'Bookmark', this._beforePrint);
                this.hideExpressionBindings(controlType, 'LeftF', 'TopF', 'WidthF', 'HeightF');
                break;
            case 'XRPdfSignature':
                this.hideExpressionBindings(controlType, 'AccessibleDescription');
                break;
        }
    };
    ControlsFactory.prototype.registerControl = function (typeName, metadata) {
        _super.prototype.registerControl.call(this, typeName, metadata);
        this._registerExtensions(typeName, metadata);
    };
    ControlsFactory.prototype._createExpressionObject = function (typeName, expressions, path, summaryRunning) {
        return this._expressionWrapper.createExpressionsObject(typeName, expressions, path, summaryRunning);
    };
    ControlsFactory.prototype.setExpressionBinding = function (controlType, propertyName, events, group, objectProperties) {
        this._expressionWrapper.setPropertyDescription(controlType, propertyName, events, objectProperties, group);
    };
    ControlsFactory.prototype.setPropertyDescription = function (controlType, propertyName, events, group, objectProperties) {
        return this.setExpressionBinding(controlType, propertyName, events, group, objectProperties);
    };
    ControlsFactory.prototype.setDisplayNameForExpression = function (propertyName, localizationId, displayName) {
        this._expressionWrapper.setLocalizationId(propertyName, localizationId, displayName);
    };
    ControlsFactory.prototype.hideExpressionBindings = function (type) {
        var propertyNames = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            propertyNames[_i - 1] = arguments[_i];
        }
        var _a;
        (_a = this._expressionWrapper).hidePropertyDescriptions.apply(_a, [type].concat(propertyNames));
    };
    ControlsFactory.prototype.hidePropertyDescriptions = function (type) {
        var propertyNames = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            propertyNames[_i - 1] = arguments[_i];
        }
        return this.hideExpressionBindings.apply(this, [type].concat(propertyNames));
    };
    ControlsFactory.prototype.inheritControl = function (parentType, extendedOptions) {
        var parentInfo = this.getControlInfo(parentType);
        var copyParentSerializationsInfo = $.extend(true, [], parentInfo.info);
        var newInfo = [].concat(copyParentSerializationsInfo, extendedOptions.info || []);
        var newPopularProperties = [].concat(parentInfo.popularProperties, extendedOptions.popularProperties || []);
        return $.extend({}, parentInfo, extendedOptions, {
            parentType: parentType,
            info: newInfo,
            popularProperties: newPopularProperties
        });
    };
    ControlsFactory.prototype.createPopularBindingInfo = function (options, isExpression) {
        if (isExpression === void 0) { isExpression = true; }
        return _metaUtils_1.createPopularBindingInfo(options, isExpression);
    };
    return ControlsFactory;
}(analytics_utils_1.ControlsFactory));
exports.ControlsFactory = ControlsFactory;


/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var xrReportelement_1 = __webpack_require__(27);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var XRBarCodeViewModel = (function (_super) {
    __extends(XRBarCodeViewModel, _super);
    function XRBarCodeViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, parent, serializer) || this;
        _this.symbology(_this.createBarcode(_this.symbology() || {}, serializer));
        _this.barcodeFake = {
            type: ko.pureComputed({
                read: function () {
                    return _this.symbology()['name']();
                },
                write: function (val) {
                    _this.symbology(_this.createBarcode({ '@Name': val }, serializer));
                }
            }),
            content: _this.symbology
        };
        _this._disposables.push(_this.barcodeFake.type);
        return _this;
    }
    XRBarCodeViewModel.prototype.createBarcode = function (model, serializer) {
        if (serializer === void 0) { serializer = null; }
        var name = model && model['@Name'] || 'Code1';
        var barcodeInfo = xrBarcode_1.barCodesMap[name];
        var newBarcode = { 'name': ko.observable(name), 'getInfo': function () { return barcodeInfo; } };
        (serializer || new analytics_utils_1.ModelSerializer()).deserialize(newBarcode, model);
        return newBarcode;
    };
    XRBarCodeViewModel.unitProperties = [].concat(['module'], xrReportelement_1.XRReportElementViewModel.unitProperties);
    return XRBarCodeViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRBarCodeViewModel = XRBarCodeViewModel;
var XRBarcodeSurface = (function (_super) {
    __extends(XRBarcodeSurface, _super);
    function XRBarcodeSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this.contenttemplate = 'dxrd-barcode-content';
        return _this;
    }
    return XRBarcodeSurface;
}(xrControl_1.XRControlSurface));
exports.XRBarcodeSurface = XRBarcodeSurface;
var xrBarcode_1 = __webpack_require__(129);


/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.barCodesTypes = [
    { value: 'Codabar', displayValue: 'Codabar' },
    { value: 'Code11', displayValue: 'Code11' },
    { value: 'Code128', displayValue: 'Code128' },
    { value: 'Code39', displayValue: 'Code39' },
    { value: 'Code39Extended', displayValue: 'Code39Extended' },
    { value: 'Code93', displayValue: 'Code93' },
    { value: 'Code93Extended', displayValue: 'Code93Extended' },
    { value: 'CodeMSI', displayValue: 'CodeMSI' },
    { value: 'DataBar', displayValue: 'DataBar' },
    { value: 'DataMatrix', displayValue: 'DataMatrix' },
    { value: 'DataMatrixGS1', displayValue: 'DataMatrixGS1' },
    { value: 'EAN128', displayValue: 'EAN128' },
    { value: 'EAN13', displayValue: 'EAN13' },
    { value: 'EAN8', displayValue: 'EAN8' },
    { value: 'Industrial2of5', displayValue: 'Industrial2of5' },
    { value: 'IntelligentMail', displayValue: 'IntelligentMail' },
    { value: 'IntelligentMailPackage', displayValue: 'IntelligentMailPackage' },
    { value: 'Interleaved2of5', displayValue: 'Interleaved2of5' },
    { value: 'ITF14', displayValue: 'ITF14' },
    { value: 'Matrix2of5', displayValue: 'Matrix2of5' },
    { value: 'PDF417', displayValue: 'PDF417' },
    { value: 'PostNet', displayValue: 'PostNet' },
    { value: 'QRCode', displayValue: 'QRCode' },
    { value: 'UPCA', displayValue: 'UPCA' },
    { value: 'UPCE0', displayValue: 'UPCE0' },
    { value: 'UPCE1', displayValue: 'UPCE1' },
    { value: 'UPCSupplemental2', displayValue: 'UPCSupplemental2' },
    { value: 'UPCSupplemental5', displayValue: 'UPCSupplemental5' },
    { value: 'Pharmacode', displayValue: 'Pharmacode' },
    { value: 'DeutschePostIdentcode', displayValue: 'DeutschePostIdentcode' },
    { value: 'DeutschePostLeitcode', displayValue: 'DeutschePostLeitcode' }
];


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var xrReportelement_1 = __webpack_require__(27);
var _textElementSizeHelper_1 = __webpack_require__(93);
var _charactercombHelper_1 = __webpack_require__(290);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_internal_1 = __webpack_require__(8);
var XRCharacterComb = (function (_super) {
    __extends(XRCharacterComb, _super);
    function XRCharacterComb(control, parent, serializer) {
        var _this = _super.call(this, control, parent, serializer) || this;
        var _originalCellWidth = _this.cellWidth;
        var _originalCellHeight = _this.cellHeight;
        _this._disposables.push(_this.cellWidth = _this._createCellSideFromOriginalSide(_originalCellWidth, false));
        _this._disposables.push(_this.cellHeight = _this._createCellSideFromOriginalSide(_originalCellHeight, true));
        var fontModel = new analytics_widgets_internal_1.FontModel(_this.font);
        var borderWidth = ko.computed(function () {
            if (_this['borders']() && _this['borders']() !== 'None') {
                return _this['borderWidth']();
            }
            else {
                return 0;
            }
        });
        _this._disposables.push(borderWidth);
        var textSizeHelper = new _textElementSizeHelper_1.TextElementSizeHelper();
        _this.autoCellSide = ko.observable(_this.cellHeight());
        _this._disposables.push(ko.computed(function () {
            if (_this.sizeMode() !== 'Custom') {
                var characterHeight = textSizeHelper.getTextContainerSize('a', {
                    'font-size': fontModel.size() + fontModel.unit(),
                    'font-family': fontModel.family(),
                    'height': 'auto',
                    'width': 'auto'
                }, 0).height;
                var side = characterHeight * 1.5 + 2 * borderWidth();
                if (_this.parentModel()) {
                    side = analytics_internal_1.pixelToUnits(side, _this.parentModel().root['measureUnit'](), 1);
                }
                _this.autoCellSide(side);
            }
        }));
        return _this;
    }
    XRCharacterComb.prototype.isPropertyDisabled = function (name) {
        if (name === 'cellWidth') {
            return this.sizeMode() === 'AutoSize' || this.sizeMode() === 'AutoWidth';
        }
        if (name === 'cellHeight') {
            return this.sizeMode() === 'AutoSize' || this.sizeMode() === 'AutoHeight';
        }
        return _super.prototype.isPropertyDisabled.call(this, name);
    };
    XRCharacterComb.prototype._createCellSideFromOriginalSide = function (originalCellSide, isHeight) {
        var _this = this;
        return ko.pureComputed({
            read: function () {
                switch (_this.sizeMode()) {
                    case 'AutoSize':
                        return null;
                    case 'AutoWidth':
                        return isHeight ? originalCellSide() : null;
                    case 'AutoHeight':
                        return !isHeight ? originalCellSide() : null;
                    case 'Custom':
                        return originalCellSide();
                }
            },
            write: function (val) { originalCellSide(val); }
        });
    };
    XRCharacterComb.prototype.roundSize = function () {
        this.size.width(Math.ceil(this.size.width()));
        this.size.height(Math.ceil(this.size.height()));
    };
    XRCharacterComb.unitProperties = [].concat(['cellWidth', 'cellHeight', 'verticalSpacing', 'horizontalSpacing'], xrReportelement_1.XRReportElementViewModel.unitProperties);
    return XRCharacterComb;
}(xrControl_1.XRControlViewModel));
exports.XRCharacterComb = XRCharacterComb;
var XRCharacterCombSurface = (function (_super) {
    __extends(XRCharacterCombSurface, _super);
    function XRCharacterCombSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this.cells = ko.observableArray([]);
        _this._disposables.push(_this.borderWidth = ko.computed(function () {
            return control['borderWidth']() === undefined ? 1 : control['borderWidth']();
        }));
        _this.rtl = function () { return control.rtl(); };
        _this.borders = control['borders'];
        _this.template = 'dxrd-charactercomb';
        _this.contenttemplate = 'dxrd-charactercomb-content';
        _this._disposables.push(control.textAlignment.subscribe(function (newVal) {
            _this._updateCellsText(newVal);
        }));
        _this._disposables.push(_this.verticalSpacing = ko.computed(function () {
            return analytics_internal_1.unitsToPixel(control.verticalSpacing(), context.measureUnit(), 1);
        }));
        _this._disposables.push(_this.horizontalSpacing = ko.computed(function () {
            return analytics_internal_1.unitsToPixel(control.horizontalSpacing(), context.measureUnit(), 1);
        }));
        _this.cellSize = {
            width: ko.computed(function () {
                return analytics_internal_1.unitsToPixel(control.cellWidth() || control.autoCellSide(), context.measureUnit(), 1);
            }),
            height: ko.computed(function () {
                return analytics_internal_1.unitsToPixel(control.cellHeight() || control.autoCellSide(), context.measureUnit(), 1);
            }),
            isPropertyDisabled: function (name) { return false; }
        };
        _this._disposables.push(_this.cellSize.width);
        _this._disposables.push(_this.cellSize.height);
        _this._disposables.push(_this.fullCellHeight = ko.computed(function () {
            var _verticalSpacing = _this.verticalSpacing();
            var fullCellHeight = _this.cellSize.height();
            if (!!_this.verticalSpacing()) {
                fullCellHeight += _this.verticalSpacing();
            }
            return fullCellHeight - _this._getBorderWidthBySpacing(_verticalSpacing);
        }));
        _this._disposables.push(_this.fullCellWidth = ko.computed(function () {
            var _horizontalSpacing = _this.horizontalSpacing.peek();
            var fullCellWidth = _this.cellSize.width();
            if (!!_this.horizontalSpacing()) {
                fullCellWidth += _this.horizontalSpacing();
            }
            return fullCellWidth - _this._getBorderWidthBySpacing(_horizontalSpacing);
        }));
        _this._disposables.push(_this.vertical = ko.computed(function () {
            var _borderWidth = _this._getBorderWidthBySpacing(_this.verticalSpacing()) * context.zoom();
            var fullCellHeight = _this.fullCellHeight() * context.zoom();
            var vertical = Math.floor(analytics_internal_1.roundingXDecimals((_this.rect().height - _borderWidth) / fullCellHeight));
            if (analytics_internal_1.roundingXDecimals(_this.rect().height - (vertical * fullCellHeight + _borderWidth)) >= analytics_internal_1.roundingXDecimals(_this.cellSize.height() * context.zoom() - _borderWidth)) {
                vertical += 1;
            }
            return vertical;
        }));
        _this._disposables.push(_this.horizontal = ko.computed(function () {
            var _borderWidth = _this._getBorderWidthBySpacing(_this.horizontalSpacing()) * context.zoom();
            var fullCellWidth = _this.fullCellWidth() * context.zoom();
            var horizontal = Math.floor(analytics_internal_1.roundingXDecimals((_this.rect().width - _borderWidth) / fullCellWidth));
            if (analytics_internal_1.roundingXDecimals(_this.rect().width - (horizontal * fullCellWidth + _borderWidth)) >= analytics_internal_1.roundingXDecimals(_this.cellSize.width() * context.zoom() - _borderWidth)) {
                horizontal += 1;
            }
            return horizontal;
        }));
        _this._disposables.push(_this.topEmptySpace = ko.computed(function () {
            var _verticalSpacing = _this.verticalSpacing();
            var _borderWidth = _this._getBorderWidthBySpacing(_verticalSpacing);
            var _emptySpace = _this.rect().height / context.zoom() - (_this.fullCellHeight() * _this.vertical() - _verticalSpacing + _borderWidth);
            return _charactercombHelper_1.CharacterCombHelper.distributionEmptySpace(_emptySpace, true, _this.getControlModel().textAlignment());
        }));
        _this._disposables.push(_this.leftEmptySpace = ko.computed(function () {
            var _horizontalSpacing = _this.horizontalSpacing();
            var _borderWidth = _this._getBorderWidthBySpacing(_horizontalSpacing);
            var _emptySpace = _this.rect().width / context.zoom() - (_this.fullCellWidth() * _this.horizontal() - _horizontalSpacing + _borderWidth);
            return _charactercombHelper_1.CharacterCombHelper.distributionEmptySpace(_emptySpace, false, _this.getControlModel().textAlignment());
        }));
        _this._disposables.push(_this.css = ko.pureComputed(function () {
            return $.extend({}, _this.cssCalculator.fontCss(), _this.cssCalculator.foreColorCss(), _this.cssCalculator.backGroundCss());
        }));
        _this._disposables.push(_this.borderCss = ko.pureComputed(function () {
            return _this.cssCalculator.borderCss();
        }));
        _this._disposables.push(ko.computed(function () {
            _this.updateArray(_this.vertical() * _this.horizontal());
            _this._updateCellsText(control.textAlignment.peek());
        }));
        _this._disposables.push(control.text.subscribe(function (newVal) {
            _this._updateCellsText(control.textAlignment.peek());
        }));
        return _this;
    }
    XRCharacterCombSurface.prototype._createCell = function (text, position) {
        var _this = this;
        return {
            text: ko.observable(text),
            left: ko.computed(function () {
                var _horizontalSpacing = _this.horizontalSpacing();
                var borderWidth = _this._getBorderWidthBySpacing(_horizontalSpacing);
                var line = Math.floor((position) / _this.horizontal());
                var column = position - (_this.horizontal() * line);
                if (_this.rtl()) {
                    column = (_this.horizontal() * (line + 1)) - (position + 1);
                }
                return column * (_this.cellSize.width() + _horizontalSpacing - borderWidth) + _this.leftEmptySpace();
            }),
            top: ko.computed(function () {
                var _verticalSpacing = _this.verticalSpacing();
                var borderWidth = _this._getBorderWidthBySpacing(_verticalSpacing);
                var line = Math.floor((position) / _this.horizontal());
                return line * (_this.cellSize.height() + _verticalSpacing - borderWidth) + _this.topEmptySpace();
            }),
            size: this.cellSize,
            isEmpty: false
        };
    };
    XRCharacterCombSurface.prototype._updateCellsText = function (textAlignment) {
        var _this = this;
        var alignments = _charactercombHelper_1.CharacterCombHelper.getAlignments(textAlignment);
        var texts = _charactercombHelper_1.CharacterCombHelper.getLines(this.displayText(), this.horizontal.peek(), this._control.multiline(), this._control['wordWrap'] && this._control['wordWrap']());
        _charactercombHelper_1.CharacterCombHelper.setText(texts, this.cells.peek(), function (texts, position) {
            return _charactercombHelper_1.CharacterCombHelper.getTextOffset(texts, position, alignments.vertical, alignments.horizontal, _this.vertical.peek(), _this.horizontal.peek());
        });
    };
    XRCharacterCombSurface.prototype._getBorderWidthBySpacing = function (spacing) {
        return (!spacing && this.borders() && this.borders() !== 'None') ? this.borderWidth() : 0;
    };
    XRCharacterCombSurface.prototype._applyBounds = function (newRect, newHorizontal, newVertical, multiline, wordwrap) {
        if (newVertical <= this.vertical()) {
            var notEmptyCells = this.cells().filter(function (cell) { return !cell.isEmpty; });
            var cellLefts = notEmptyCells.map(function (cell) { return cell.left(); });
            newRect.top += notEmptyCells[0].top();
            if (newHorizontal <= this.horizontal())
                newRect.left += Math.min.apply(Math, cellLefts);
        }
        else if (newHorizontal <= this.horizontal()) {
            var newCells = [];
            this.updateArray(newVertical * newHorizontal, newCells);
            var alignments = _charactercombHelper_1.CharacterCombHelper.getAlignments(this.getControlModel()['textAlignment']());
            var texts = _charactercombHelper_1.CharacterCombHelper.getLines(this.displayText(), newHorizontal, multiline, wordwrap);
            _charactercombHelper_1.CharacterCombHelper.setText(texts, newCells, function (texts, position) {
                return _charactercombHelper_1.CharacterCombHelper.getTextOffset(texts, position, alignments.vertical, alignments.horizontal, newVertical, newHorizontal);
            });
            var newCellsLefts = newCells.filter(function (cell) { return !cell.isEmpty; }).map(function (cell) { return cell.left(); });
            newRect.left += Math.min.apply(Math, newCellsLefts);
        }
        newRect.height = (this.cellSize.height() + this.verticalSpacing()) * newVertical - this.verticalSpacing() - analytics_internal_1.unitsToPixel(this._getBorderWidthBySpacing(this.verticalSpacing()) * (newVertical - 1), this._context.measureUnit(), 1);
        newRect.width = (this.cellSize.width() + this.horizontalSpacing()) * newHorizontal - this.horizontalSpacing() - analytics_internal_1.unitsToPixel(this._getBorderWidthBySpacing(this.horizontalSpacing()) * (newHorizontal - 1), this._context.measureUnit(), 1);
    };
    XRCharacterCombSurface.prototype.updateArray = function (cellsCount, array) {
        var cells = array || this.cells.peek();
        if (cells.length > cellsCount) {
            cells.splice(cellsCount, cells.length - cellsCount);
        }
        else if (cells.length < cellsCount) {
            for (var i = cells.length; i < cellsCount; i++) {
                cells.push(this._createCell('', i));
            }
        }
        if (!array)
            this.cells.valueHasMutated();
    };
    XRCharacterCombSurface.prototype.fitBoundsToText = function () {
        var _multiline = this._control['multiline'] && this._control['multiline']();
        var _wordwrap = this._control['wordWrap'] && this._control['wordWrap']();
        var zoom = this._context.zoom();
        var oldRect = this.rect();
        var newRect = {};
        Object.keys(oldRect).forEach(function (propertyName) {
            newRect[propertyName] = oldRect[propertyName] / zoom;
        });
        var newHorizVert = _charactercombHelper_1.CharacterCombHelper.getHorizontalVerticalByText(_multiline, _wordwrap, this.displayText(), this.horizontal() || 1, this.vertical() || 1);
        this._applyBounds(newRect, newHorizVert.horizontal, newHorizVert.vertical, _multiline, _wordwrap);
        if (newRect.top !== oldRect.top || newRect.height !== oldRect.height || newRect.left !== oldRect.left || newRect.width !== oldRect.width) {
            this.rect({ top: Math.round(newRect.top * zoom), height: newRect.height * zoom, left: Math.round(newRect.left * zoom), width: newRect.width * zoom });
            this.getControlModel().roundSize();
        }
    };
    XRCharacterCombSurface.prototype.getText = function () {
        return this.displayText();
    };
    return XRCharacterCombSurface;
}(xrControl_1.XRControlSurface));
exports.XRCharacterCombSurface = XRCharacterCombSurface;


/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CharacterCombHelper = (function () {
    function CharacterCombHelper() {
    }
    CharacterCombHelper.getAlignments = function (textAlignment) {
        var vertical = '';
        var horizontal = '';
        for (var i = 0; i < textAlignment.length; i++) {
            if (textAlignment[i] === textAlignment[i].toLocaleUpperCase()) {
                if (vertical === '') {
                    vertical += textAlignment[i];
                }
                else if (vertical !== '') {
                    horizontal += textAlignment[i];
                }
            }
            else {
                if (horizontal !== '') {
                    horizontal += textAlignment[i];
                }
                else {
                    vertical += textAlignment[i];
                }
            }
        }
        return {
            vertical: vertical,
            horizontal: horizontal
        };
    };
    CharacterCombHelper.getLines = function (text, horizontal, multiline, wordwrap) {
        var texts = multiline ? text.split('\n') : [text];
        var result = [];
        if (horizontal === 0) {
            return result;
        }
        for (var i = 0; i < texts.length; i++) {
            var lines = 1;
            if (texts[i].length > horizontal && wordwrap) {
                var lines = Math.round(texts[i].length / horizontal);
                if (lines < texts[i].length / horizontal) {
                    lines++;
                }
            }
            for (var j = 0; j < lines; j++) {
                result.push(texts[i].slice(j * (horizontal), (j + 1) * horizontal));
            }
        }
        return result;
    };
    CharacterCombHelper.getTextOffset = function (texts, position, verticalAlign, horizontalAlign, vertical, horizontal) {
        var offset = 0;
        if (verticalAlign === 'Top') {
            offset += horizontal * position;
        }
        else if (verticalAlign === 'Middle') {
            offset += ((Math.floor((vertical - texts.length) / 2)) * horizontal);
            offset += horizontal * position;
        }
        else if (verticalAlign === 'Bottom') {
            offset += ((vertical - texts.length) * horizontal);
            offset += horizontal * position;
        }
        if (horizontalAlign === 'Center') {
            if (texts[position].length < horizontal) {
                offset += Math.floor((horizontal - Math.max(texts[position].length, 1)) / 2);
            }
        }
        else if (horizontalAlign === 'Right') {
            if (texts[position].length < horizontal) {
                offset += (horizontal - Math.max(texts[position].length, 1));
            }
        }
        return offset;
    };
    CharacterCombHelper.setText = function (texts, cells, getTextOffset) {
        for (var i = 0; i < cells.length; i++) {
            cells[i].text('');
            cells[i].isEmpty = true;
        }
        for (var i = 0; i < texts.length; i++) {
            var offset = getTextOffset(texts, i);
            if (texts[i] === '' && offset < cells.length && offset >= 0) {
                cells[offset].isEmpty = false;
            }
            for (var j = offset; j < offset + texts[i].length; j++) {
                if ((j - offset) < texts[i].length && j < cells.length && j >= 0) {
                    cells[j].text(texts[i][j - offset]);
                    cells[j].isEmpty = false;
                }
            }
        }
    };
    CharacterCombHelper.distributionEmptySpace = function (emptySpace, vertical, textAlignment) {
        if (vertical && textAlignment.indexOf('Top') !== -1 || !vertical && textAlignment.indexOf('Left') !== -1)
            return 0;
        if (vertical && textAlignment.indexOf('Middle') !== -1 || !vertical && textAlignment.indexOf('Center') !== -1)
            return emptySpace / 2;
        return emptySpace;
    };
    CharacterCombHelper.getHorizontalVerticalByText = function (multiline, wordwrap, text, horizontal, vertical) {
        var stringLengths = text.split('\n').map(function (str) { return str.length; });
        var _maxLength = Math.max.apply(Math, stringLengths);
        var _horizontal = Math.min(text.length, horizontal);
        var _vertical = vertical;
        if (!multiline && !wordwrap) {
            _vertical = 1;
            _horizontal = text.length;
        }
        else if (!multiline && wordwrap) {
            _vertical = Math.ceil(text.length / _horizontal);
        }
        else if (multiline && wordwrap) {
            _horizontal = Math.min(_horizontal, _maxLength);
            _vertical = 0;
            stringLengths.forEach(function (length) { return _vertical += (length ? Math.ceil(length / _horizontal) : 1); });
        }
        else if (multiline && !wordwrap) {
            _vertical = stringLengths.length;
            _horizontal = _maxLength;
        }
        return { horizontal: _horizontal, vertical: _vertical };
    };
    return CharacterCombHelper;
}());
exports.CharacterCombHelper = CharacterCombHelper;


/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var reportFieldListEditor_1 = __webpack_require__(292);
var $ = __webpack_require__(3);
var dataBindingInfo_1 = __webpack_require__(126);
exports.controlParameterInfos = dataBindingInfo_1.dataBindingBaseSerializationInfo.concat([
    $.extend({}, metadata_1.name, { propertyName: 'parameterName' }),
    { propertyName: 'fakeBinding', displayName: 'Binding', localizationId: 'DevExpress.XtraReports.Design.DataBinding.Binding', link: true, editor: { header: 'dxrd-dataBinding', editorType: reportFieldListEditor_1.ReportFieldListEditor } }
]);


/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_internal_1 = __webpack_require__(8);
var ko = __webpack_require__(1);
var analytics_widgets_1 = __webpack_require__(4);
var ReportFieldListEditor = (function (_super) {
    __extends(ReportFieldListEditor, _super);
    function ReportFieldListEditor(modelPropertyInfo, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, modelPropertyInfo, level, parentDisabled, textToSearch) || this;
        _this.treeListController = new ReportTreeListController();
        _this._disposables.push(_this.treeListController.selectedItemData.subscribe(function (newValue) {
            if (_this._model()['setDataMemberInfo'])
                _this._model()['setDataMemberInfo'](newValue);
        }));
        return _this;
    }
    return ReportFieldListEditor;
}(analytics_widgets_1.FieldListEditor));
exports.ReportFieldListEditor = ReportFieldListEditor;
var ReportTreeListController = (function (_super) {
    __extends(ReportTreeListController, _super);
    function ReportTreeListController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selectedItemData = ko.observable();
        return _this;
    }
    ReportTreeListController.prototype.select = function (value) {
        _super.prototype.select.call(this, value);
        this.selectedItemData(this.selectedItem && this.selectedItem._data && this.selectedItem._data());
    };
    return ReportTreeListController;
}(analytics_widgets_internal_1.TreeListController));


/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _textElementSizeHelper_1 = __webpack_require__(93);
var FitTextToBoundsAction = (function () {
    function FitTextToBoundsAction(_control, textElementHelper) {
        if (textElementHelper === void 0) { textElementHelper = new _textElementSizeHelper_1.TextElementSizeHelper(); }
        this._control = _control;
        this.textElementHelper = textElementHelper;
    }
    FitTextToBoundsAction.prototype._getTextSide = function ($div, fontProperties, controlSize, getSide) {
        var currentSide = getSide($div);
        var sizeFounded = false;
        var inc = controlSize / currentSide;
        var currentFontSize = Math.ceil(fontProperties.size * inc);
        while (!sizeFounded) {
            $div.css({ 'font-size': currentFontSize + fontProperties.unit });
            if (getSide($div) > controlSize) {
                currentFontSize -= 1;
            }
            else {
                sizeFounded = true;
            }
        }
        return currentFontSize;
    };
    FitTextToBoundsAction.prototype._calculateFont = function ($div, fontProperties, maxHeight) {
        var sizeFounded = false;
        var font = fontProperties.size;
        var height = $div[0].getBoundingClientRect().height;
        if (height === maxHeight)
            return font;
        var inc = height > maxHeight ? -1 : 1;
        while (!sizeFounded) {
            font += inc;
            $div.css({ 'font-size': font + fontProperties.unit });
            var height = $div[0].getBoundingClientRect().height;
            if (height < maxHeight && inc === -1) {
                sizeFounded = true;
            }
            else if (inc === 1 && height > maxHeight) {
                font -= inc;
                sizeFounded = true;
            }
        }
        return font;
    };
    FitTextToBoundsAction.prototype._getAvailableFont = function () {
        var fontModel = this._control.getFontModel();
        var containerSize = this._control.getContentSize();
        var zoom = this._control._context.zoom();
        var font = fontModel.size();
        if (!this._control.getWordWrap()) {
            var $div = this.textElementHelper.$createTextElement(this._control.getText(), this._control.getCssContent());
            var fontByHeight = this._getTextSide($div, { size: font, unit: fontModel.unit() }, containerSize.height, function ($div) { return $div[0].getBoundingClientRect().height; });
            var fontByWidth = this._getTextSide($div, { size: fontByHeight, unit: fontModel.unit() }, containerSize.width, function ($div) { return $div[0].getBoundingClientRect().width; });
            $div.remove();
            font = Math.min(fontByHeight, fontByWidth);
        }
        else {
            var $div = this.textElementHelper.$createTextElement(this._control.getText(), this._control.getCssContent({ width: containerSize.width / zoom }));
            font = this._calculateFont($div, { size: font, unit: fontModel.unit() }, containerSize.height - 2 * zoom);
            $div.remove();
        }
        return font;
    };
    FitTextToBoundsAction.prototype.fit = function () {
        this._control.setFontSize(this._getAvailableFont());
    };
    return FitTextToBoundsAction;
}());
exports.FitTextToBoundsAction = FitTextToBoundsAction;


/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _textElementSizeHelper_1 = __webpack_require__(93);
var analytics_internal_1 = __webpack_require__(2);
var FitBoundsToTextAction = (function () {
    function FitBoundsToTextAction(_control, textElementHelper) {
        if (textElementHelper === void 0) { textElementHelper = new _textElementSizeHelper_1.TextElementSizeHelper(); }
        this._control = _control;
        this.textElementHelper = textElementHelper;
    }
    FitBoundsToTextAction.prototype._getNewRectForVetical = function (textHeight, alignment) {
        var contentSize = this._control.getContentSize();
        var controlRect = this._control.rect();
        var difference = contentSize.height - textHeight;
        if (alignment === 'Middle') {
            return { top: controlRect.top + difference / 2, height: controlRect.height - difference };
        }
        else if (alignment === 'Bottom') {
            return { top: controlRect.top + difference, height: controlRect.height - difference };
        }
        else {
            return { height: controlRect.height - difference };
        }
    };
    FitBoundsToTextAction.prototype._findWidth = function (text, currentWidth) {
        var _this = this;
        var content = this._control.getCssContent();
        if (!this._control.getWordWrap()) {
            return this.textElementHelper.getTextContainerSize(text, content).width;
        }
        var horOffset = 0;
        ['Left', 'Right'].forEach(function (propertyName) {
            horOffset += (parseFloat(content['padding' + propertyName]) * _this._control._context.zoom());
            delete content['padding' + propertyName];
        });
        var words = text.split(' ');
        var wordsWidths = words.map(function (line) { return _this.textElementHelper.getTextContainerSize(line, content).width; });
        if (wordsWidths.some(function (width) { return width + horOffset > currentWidth; })) {
            return currentWidth;
        }
        var spaceWidth = this.textElementHelper.getTextContainerSize('&nbsp', content).width;
        return wordsWidths.reduce(function (accumulator, currentVal, index) {
            if (index === 0)
                return accumulator;
            var newVal = spaceWidth + currentVal;
            accumulator.lineWidth += newVal;
            if (accumulator.lineWidth + horOffset > currentWidth) {
                accumulator.lineWidth = currentVal;
            }
            if (accumulator.max < accumulator.lineWidth) {
                accumulator.max = accumulator.lineWidth;
            }
            return accumulator;
        }, { lineWidth: wordsWidths[0], max: wordsWidths[0] }).max + horOffset;
    };
    FitBoundsToTextAction.prototype._getNewRectForHorizontal = function (textWidth, alignment) {
        var contentSize = this._control.getContentSize();
        var controlRect = this._control.rect();
        var difference = contentSize.width - textWidth;
        if (alignment === 'Center') {
            return { left: controlRect.left + difference / 2, width: controlRect.width - difference };
        }
        else if (alignment === 'Right') {
            return { left: controlRect.left + difference, width: controlRect.width - difference };
        }
        else {
            return { width: controlRect.width - difference };
        }
    };
    FitBoundsToTextAction.prototype._getTextContainerSize = function (content) {
        return this.textElementHelper.getTextContainerSize(this._control.getText(), this._control.getCssContent(content));
    };
    FitBoundsToTextAction.prototype._getTextHeight = function () {
        var content = { width: this._control.getContentSize().width / this._control._context.zoom() };
        return this._getTextContainerSize(content).height;
    };
    FitBoundsToTextAction.prototype.fitWidth = function () {
        var width = this._findWidth(this._control.getText(), this._control.getContentSize().width);
        var horizontalAlignment = this._control.getAlignments().horizontal;
        this._control.rect(this._getNewRectForHorizontal(width, horizontalAlignment));
    };
    FitBoundsToTextAction.prototype.fitHeight = function () {
        var height = this._getTextHeight();
        var verticalAlignment = this._control.getAlignments().vertical;
        this._control.rect(this._getNewRectForVetical(height, verticalAlignment));
    };
    FitBoundsToTextAction.prototype.fitBounds = function () {
        var size = {
            width: this._findWidth(this._control.getText(), this._control.getContentSize().width),
            height: this._getTextHeight()
        };
        var alignment = this._control.getAlignments();
        this._control.rect(analytics_internal_1.extend({}, this._getNewRectForHorizontal(size.width, alignment.horizontal), this._getNewRectForVetical(size.height, alignment.vertical)));
    };
    return FitBoundsToTextAction;
}());
exports.FitBoundsToTextAction = FitBoundsToTextAction;


/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var XRLineSurface = (function (_super) {
    __extends(XRLineSurface, _super);
    function XRLineSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this['lineWidth'] = control['lineWidth'];
        _this['lineStyle'] = control['lineStyle'];
        _this['lineDirection'] = control['lineDirection'];
        _this.selectiontemplate = 'dxrd-control-selection';
        _this.contenttemplate = 'dxrd-line-content';
        _this._disposables.push(_this.linePosition = ko.pureComputed(function () {
            var result = {}, rect = _this.rect();
            if (_this['lineDirection']() === 'Horizontal') {
                result['x1'] = 0;
                result['x2'] = rect.width;
                result['y1'] = rect.height / 2;
                result['y2'] = rect.height / 2;
            }
            if (_this['lineDirection']() === 'Vertical') {
                result['x1'] = rect.width / 2;
                result['x2'] = rect.width / 2;
                result['y1'] = 0;
                result['y2'] = rect.height;
            }
            if (_this['lineDirection']() === 'BackSlant') {
                result['x1'] = 0;
                result['x2'] = rect.width;
                result['y1'] = 0;
                result['y2'] = rect.height;
            }
            if (_this['lineDirection']() === 'Slant') {
                result['x1'] = 0;
                result['x2'] = rect.width;
                result['y1'] = rect.height;
                result['y2'] = 0;
            }
            return result;
        }));
        _this._disposables.push(_this.contentCss = ko.pureComputed(function () {
            return $.extend({}, _this.cssCalculator.stroke(), _this.cssCalculator.strokeDashArray(), _this.cssCalculator.strokeWidth());
        }));
        return _this;
    }
    return XRLineSurface;
}(xrControl_1.XRControlSurface));
exports.XRLineSurface = XRLineSurface;


/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
function subreportControlCollector(target, subreportControls) {
    if (subreportControls === void 0) { subreportControls = []; }
    var visitor = function (target) {
        if (target instanceof xrSubreport_1.XRSubreportViewModel) {
            subreportControls.push(target);
            subreportControlCollector(target['reportSource'], subreportControls);
        }
    };
    visitor(target);
    analytics_internal_1.collectionsVisitor(target, function (collection) {
        collection().forEach(visitor);
    }, ['controls', 'bands']);
    return subreportControls;
}
exports.subreportControlCollector = subreportControlCollector;
var xrSubreport_1 = __webpack_require__(56);


/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var imageSource_1 = __webpack_require__(40);
var xrPicturebox_1 = __webpack_require__(89);
var ko = __webpack_require__(1);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var base64ImageParser_1 = __webpack_require__(298);
var XRPictureBoxViewModel = (function (_super) {
    __extends(XRPictureBoxViewModel, _super);
    function XRPictureBoxViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, parent, serializer) || this;
        _this.imageRatio = { x: 1, y: 1 };
        _this.originalImageWidth = ko.observable();
        _this.originalImageHeight = ko.observable();
        var imageHeight = ko.observable(_this.size.height()), imageWidth = ko.observable(_this.size.width());
        _this._sizing = ko.observable(_this.sizing());
        _this.size['_width'] = _this.size.width;
        _this.size['_height'] = _this.size.height;
        _this.size.isPropertyDisabled = function (propertyName) {
            return _this._sizing() === 'AutoSize';
        };
        if (!_this.imageSource() && model['@Image']) {
            _this.imageSource(new imageSource_1.ImageSource('img', model['@Image']));
            delete _this['_model']['@Image'];
        }
        var oldSizingValue = _this._sizing();
        _this._disposables.push(_this.sizing = ko.computed({
            read: function () {
                return _this._sizing();
            },
            write: function (value) {
                var undo = analytics_utils_1.UndoEngine.tryGetUndoEngine(_this);
                undo && undo.start();
                if (oldSizingValue === 'AutoSize') {
                    _this.size['_width'](imageWidth());
                    _this.size['_height'](imageHeight());
                }
                oldSizingValue = value;
                _this._sizing(value);
                if (value === 'CenterImage')
                    _this.imageAlignment('MiddleCenter');
                undo && undo.end();
            }
        }));
        _this._disposables.push(_this.size.width = ko.pureComputed({
            read: function () {
                return _this.isAutoSize ? imageWidth() : _this.size['_width']();
            },
            write: function (value) {
                if (!_this.isAutoSize) {
                    _this.size['_width'](value);
                }
            }
        }));
        _this._disposables.push(_this.size.height = ko.pureComputed({
            read: function () {
                return _this.isAutoSize ? imageHeight() : _this.size['_height']();
            },
            write: function (value) {
                if (!_this.isAutoSize) {
                    _this.size['_height'](value);
                }
            }
        }));
        _this._disposables.push(ko.computed(function () {
            var img = new Image();
            img.onload = function () {
                var report = _this.root;
                _this._disposables.push(ko.computed(function () {
                    _this.originalImageWidth(analytics_internal_1.pixelToUnits(img.width * _this.imageRatio.x, report.measureUnit(), 1));
                    _this.originalImageHeight(analytics_internal_1.pixelToUnits(img.height * _this.imageRatio.y, report.measureUnit(), 1));
                }));
            };
            var imageSource = _this.imageSource();
            if (imageSource) {
                img.src = imageSource.getDataUrl();
                _this.imageRatio = base64ImageParser_1.Base64ImageParser.getImageRatio(imageSource.data, imageSource.sourceType);
            }
            else
                _this.imageRatio = { x: 1, y: 1 };
        }));
        var toPixel = function (value) {
            return analytics_internal_1.unitsToPixel(value, _this.root['measureUnit']());
        };
        _this._disposables.push(ko.computed(function () {
            if (_this.isAutoSize && _this.imageSource.peek()) {
                var borders = new analytics_internal_1.BordersModel({ value: _this['borders'] }), borderWidth = _this['borderWidth']() || 0, top, bottom, left, right, paddings = (_this['paddingObj']);
                top = borders.top() ? borderWidth : 0;
                bottom = borders.bottom() ? borderWidth : 0;
                left = borders.left() ? borderWidth : 0;
                right = borders.right() ? borderWidth : 0;
                imageWidth(_this.originalImageWidth() + right + left + toPixel(paddings.left()) + toPixel(paddings.right()));
                imageHeight(_this.originalImageHeight() + top + bottom + toPixel(paddings.top()) + toPixel(paddings.bottom()));
            }
        }));
        _this._disposables.push(_this.isSmallerImage = ko.pureComputed(function () {
            return _this.originalImageWidth() <= _this.size.width() && _this.originalImageHeight() <= _this.size.height();
        }));
        _this._disposables.push(_this.imageUrl.subscribe(function (newVal) {
            if (newVal) {
                _this.imageSource(null);
                _this.imageRatio = { x: 1, y: 1 };
            }
        }));
        _this._disposables.push(_this.imageSource.subscribe(function (newVal) {
            if (newVal) {
                _this.imageUrl(xrPicturebox_1.imageUrl.defaultVal);
            }
        }));
        return _this;
    }
    XRPictureBoxViewModel.prototype.isAlignmentDisabled = function () {
        return ['Tile', 'StretchImage', 'AutoSize', 'Cover'].indexOf(this._sizing()) !== -1;
    };
    XRPictureBoxViewModel.prototype.isPropertyDisabled = function (propertyName) {
        if (propertyName === 'imageAlignment')
            return this.isAlignmentDisabled();
        return _super.prototype.isPropertyDisabled.call(this, propertyName);
    };
    Object.defineProperty(XRPictureBoxViewModel.prototype, "isAutoSize", {
        get: function () {
            return this._sizing() === 'AutoSize';
        },
        enumerable: true,
        configurable: true
    });
    return XRPictureBoxViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRPictureBoxViewModel = XRPictureBoxViewModel;
var backgroundSizeCss = ['-o-background-size', 'mozBackgroundSize', 'backgroundSize'];
var backgroundOriginCss = ['background-origin', '-webkit-background-origin', ' -o-background-origin', 'mozBackgroundOrigin', 'backgroundOrigin'];
var XRPictureBoxSurface = (function (_super) {
    __extends(XRPictureBoxSurface, _super);
    function XRPictureBoxSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this.selectiontemplate = 'dxrd-picturebox-selection';
        var control = _this.getControlModel();
        _this.contentHeightWithoutZoom.dispose();
        _this.contentWidthWithoutZoom.dispose();
        _this.contentSizes.dispose();
        _this._disposables.push(_this.contentSizes = ko.pureComputed(function () { return _this.cssCalculator.contentSizeCss(_this.rect().width, _this.rect().height, _this._context.zoom(), _this._control['borders'](), _this._control.paddingObj); }));
        _this._disposables.push(_this.contentHeightWithoutZoom = ko.pureComputed(function () { return _this.contentSizes().height / _this._context.zoom(); }));
        _this._disposables.push(_this.contentWidthWithoutZoom = ko.pureComputed(function () { return _this.contentSizes().width / _this._context.zoom(); }));
        _this._disposables.push(_this.css = ko.pureComputed(function () { return {}; }));
        _this._disposables.push(_this.contentCss = ko.pureComputed(function () {
            var imageSource = control.imageSource();
            var urlContent = imageSource
                ? imageSource.getDataUrl()
                : control.imageUrl();
            return analytics_internal_1.extend({}, _this._createBackimage(control['backColor'](), urlContent, control.sizing(), control.isSmallerImage()), _this._createBackgroundOrigin(), control.isAlignmentDisabled() ? {} : _this._createBackgroundPosition(control.imageAlignment()), _this.cssCalculator.createVerticalAlignment('Top'));
        }));
        return _this;
    }
    XRPictureBoxSurface.prototype._createBackgroundPosition = function (alignment) {
        var x = '0%';
        var y = '0%';
        if (alignment.indexOf('Middle') !== -1)
            y = '50%';
        if (alignment.indexOf('Bottom') !== -1)
            y = '100%';
        if (alignment.indexOf('Center') !== -1)
            x = '50%';
        if (alignment.indexOf('Right') !== -1)
            x = '100%';
        return {
            backgroundPosition: [x, y].join(' ')
        };
    };
    XRPictureBoxSurface.prototype._createBackimage = function (background, urlContent, sizing, isSmallerImage) {
        var backgroundResult = {};
        if (urlContent) {
            backgroundResult = { background: background + ' url(' + urlContent + ') no-repeat' };
            if (this._control.imageSource()) {
                var imageFormat = this._control.imageSource().sourceType;
                if (imageFormat == 'png' || imageFormat == 'jpg' || imageFormat == 'jpeg') {
                    var size = this._control.originalImageWidth() + 'px ' + this._control.originalImageHeight() + 'px';
                    backgroundSizeCss.forEach(function (propName) { backgroundResult[propName] = size; });
                }
            }
            if (sizing) {
                if (sizing === 'Squeeze') {
                    sizing = isSmallerImage ? 'CenterImage' : 'ZoomImage';
                }
                switch (sizing) {
                    case 'StretchImage':
                        for (var i = 0; i < backgroundSizeCss.length; i++) {
                            backgroundResult[backgroundSizeCss[i]] = '100% 100%';
                        }
                        break;
                    case 'ZoomImage':
                    case 'Cover':
                        for (var i = 0; i < backgroundSizeCss.length; i++) {
                            backgroundResult[backgroundSizeCss[i]] = sizing === 'ZoomImage' ? 'contain' : 'cover';
                        }
                        backgroundResult['backgroundPosition'] = 'center center';
                        break;
                    case 'AutoSize':
                        for (var i = 0; i < backgroundSizeCss.length; i++) {
                            backgroundResult[backgroundSizeCss[i]] = '100% 100%';
                        }
                        break;
                    case 'Tile':
                        backgroundResult['backgroundRepeat'] = 'repeat';
                }
            }
            return backgroundResult;
        }
        backgroundResult = { background: background };
        return backgroundResult;
    };
    XRPictureBoxSurface.prototype._createBackgroundOrigin = function () {
        var result = {};
        for (var i = 0; i < backgroundOriginCss.length; i++) {
            result[backgroundOriginCss[i]] = 'content-box';
        }
        result['width'] = this.contentWidthWithoutZoom() + 'px';
        result['height'] = this.contentHeightWithoutZoom() + 'px';
        return result;
    };
    XRPictureBoxSurface.prototype.getResizeOptions = function (resizeHandler) {
        var _this = this;
        if (!this.resizeOptions && resizeHandler) {
            var resizeDisabled = ko.computed(function () {
                return resizeHandler.disabled && resizeHandler.disabled() || _this._control.sizing() === 'AutoSize';
            });
            this.resizeOptions = {
                disabled: resizeDisabled,
                snapHelper: resizeHandler.snapHelper,
                starting: resizeHandler.starting,
                stopped: resizeHandler.stopped
            };
            this._disposables.push(resizeDisabled);
        }
        return this.resizeOptions;
    };
    XRPictureBoxSurface.prototype.getAdornTemplate = function () {
        var superAdornTemplate = _super.prototype.getAdornTemplate.call(this), placeholder = this.hasBindings || !this.getControlModel().imageSource() ? 'dxrd-image-surface-picturebox_placeholder' : '';
        return superAdornTemplate + (superAdornTemplate && placeholder ? ' ' : '') + placeholder;
    };
    return XRPictureBoxSurface;
}(xrControl_1.XRControlSurface));
exports.XRPictureBoxSurface = XRPictureBoxSurface;


/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Base64ImageParser = (function () {
    function Base64ImageParser() {
    }
    Base64ImageParser.getImageRatio = function (data, format) {
        var imageRatio = { x: 1, y: 1 };
        var byteArray = this._getDataChunks(data, format);
        if (format === 'png') {
            if (!this._pngHasDpiChunks(data) || byteArray.length < 8)
                return imageRatio;
            var dpiX = this._countDpiFromBytes(byteArray.slice(0, 4));
            var dpiY = this._countDpiFromBytes(byteArray.slice(4, 8));
        }
        if (format === 'jpg' || format === 'jpeg') {
            if (byteArray.length < 4)
                return imageRatio;
            var dpiX = this._countDpiFromBytes(byteArray.slice(0, 2));
            var dpiY = this._countDpiFromBytes(byteArray.slice(2, 4));
        }
        if (dpiX && dpiY) {
            var ppi = this.getMonitorPPI();
            imageRatio.x = ppi / dpiX;
            imageRatio.y = ppi / dpiY;
        }
        return imageRatio;
    };
    Base64ImageParser._getDataChunks = function (encoded, format) {
        var byteArray = [];
        if (!encoded)
            return [];
        var decodeString = atob(encoded);
        var startOfChunks = format === 'png' ? decodeString.indexOf('pHYs') + 4 : 14;
        if (startOfChunks == 3 || startOfChunks >= decodeString.length)
            return [];
        for (var i = startOfChunks; i < decodeString.length; i++) {
            byteArray.push(decodeString.charCodeAt(i));
        }
        return byteArray;
    };
    Base64ImageParser._countDpiFromBytes = function (byteArray) {
        var defaultValuePerMeter = 39.370;
        if (byteArray && byteArray.length == 4)
            return ((byteArray[0] << 24) + (byteArray[1] << 16) + (byteArray[2] << 8) + byteArray[3]) / defaultValuePerMeter;
        if (byteArray && byteArray.length == 2)
            return (byteArray[0] << 8) + byteArray[1];
    };
    Base64ImageParser._pngHasDpiChunks = function (data) {
        return data.indexOf('AAlwSFlz') != -1 || data.indexOf('AAAJcEhZ') != -1 || data.indexOf('AAAACXBI') != -1;
    };
    Base64ImageParser.getMonitorPPI = function () {
        var el = document.createElement('div');
        el.style.width = '1in';
        document.body.appendChild(el);
        var ppi = el.offsetWidth;
        document.body.removeChild(el);
        return ppi;
    };
    return Base64ImageParser;
}());
exports.Base64ImageParser = Base64ImageParser;


/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var xrShape_1 = __webpack_require__(139);
var _reportRenderingService_1 = __webpack_require__(95);
var ko = __webpack_require__(1);
var analytics_utils_1 = __webpack_require__(0);
var $ = __webpack_require__(3);
var XRShapeViewModel = (function (_super) {
    __extends(XRShapeViewModel, _super);
    function XRShapeViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, parent, serializer) || this;
        _this.Shape(XRShapeViewModel.createShape(_this.Shape() || {}, serializer));
        _this.shapeFake = {
            type: ko.pureComputed({
                read: function () {
                    return _this.Shape()['shapeType']();
                },
                write: function (val) {
                    var selectedShape = XRShapeViewModel.shapes.filter(function (shape) { return shape['displayName'] === val; })[0];
                    var shape = XRShapeViewModel.createShape($.extend({ '@ShapeName': selectedShape['type'] }, selectedShape['val']), serializer);
                    if (selectedShape['angle'] !== void 0) {
                        _this['angle'](selectedShape['angle']);
                    }
                    if (XRShapeViewModel.timeout === 0) {
                        _this.Shape(shape);
                    }
                    else {
                        setTimeout(function () {
                            _this.Shape(shape);
                        }, XRShapeViewModel.timeout);
                    }
                }
            }),
            content: _this.Shape
        };
        _this._disposables.push(_this.shapeFake.type);
        return _this;
    }
    XRShapeViewModel.createShape = function (model, serializer) {
        if (serializer === void 0) { serializer = null; }
        var type = model && model['@ShapeName'] || 'Ellipse';
        var shapeInfo = xrShape_1.shapesMap[type];
        var newShape = { 'shapeType': ko.observable(type), 'getInfo': function () { return shapeInfo; } };
        (serializer || new analytics_utils_1.ModelSerializer()).deserialize(newShape, model);
        return newShape;
    };
    XRShapeViewModel.timeout = 1;
    XRShapeViewModel.shapes = [
        {
            displayName: 'Rectangle',
            type: 'Rectangle'
        },
        {
            displayName: 'Ellipse'
        },
        {
            displayName: 'Top Arrow',
            angle: 0,
            type: 'Arrow'
        },
        {
            displayName: 'Right Arrow',
            angle: 270,
            type: 'Arrow'
        },
        {
            displayName: 'Bottom Arrow',
            angle: 180,
            type: 'Arrow'
        },
        {
            displayName: 'Left Arrow',
            angle: 90,
            type: 'Arrow'
        },
        {
            displayName: 'Triangle',
            type: 'Polygon'
        },
        {
            displayName: 'Square',
            val: {
                '@NumberOfSides': 4
            },
            type: 'Polygon'
        },
        {
            displayName: 'Pentagon',
            val: {
                '@NumberOfSides': 5
            },
            type: 'Polygon'
        },
        {
            displayName: 'Hexagon',
            val: {
                '@NumberOfSides': 6
            },
            type: 'Polygon'
        },
        {
            displayName: 'Octagon',
            val: {
                '@NumberOfSides': 8
            },
            type: 'Polygon'
        },
        {
            displayName: '3-Point Star',
            type: 'Star'
        },
        {
            displayName: '4-Point Star',
            val: {
                '@StarPointCount': 4
            },
            type: 'Star'
        },
        {
            displayName: '5-Point Star',
            val: {
                '@StarPointCount': 5
            },
            type: 'Star'
        },
        {
            displayName: '6-Point Star',
            val: {
                '@StarPointCount': 6
            },
            type: 'Star'
        },
        {
            displayName: '8-Point Star',
            val: {
                '@StarPointCount': 8
            },
            type: 'Star'
        },
        {
            displayName: 'Vertical Line',
            angle: 0,
            type: 'Line'
        },
        {
            displayName: 'Horizontal Line',
            angle: 270,
            type: 'Line'
        },
        {
            displayName: 'Slant Line',
            angle: 135,
            type: 'Line'
        },
        {
            displayName: 'Backslant Line',
            angle: 225,
            type: 'Line'
        },
        {
            displayName: 'Cross',
            type: 'Cross'
        },
        {
            displayName: 'Bracket',
            type: 'Bracket'
        },
        {
            displayName: 'Brace',
            type: 'Brace'
        }
    ];
    return XRShapeViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRShapeViewModel = XRShapeViewModel;
var XRShapeControlSurface = (function (_super) {
    __extends(XRShapeControlSurface, _super);
    function XRShapeControlSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        var func = null;
        _this._disposables.push(_this.imageSrc = ko.pureComputed(function () {
            return _reportRenderingService_1.ReportRenderingService.getShapeImage(_this);
        }));
        _this.template = 'dxrd-shape';
        _this.contenttemplate = 'dxrd-shape-content';
        return _this;
    }
    return XRShapeControlSurface;
}(xrControl_1.XRControlSurface));
exports.XRShapeControlSurface = XRShapeControlSurface;


/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var _xrTodoControl_1 = __webpack_require__(138);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var XRSparklineViewModel = (function (_super) {
    __extends(XRSparklineViewModel, _super);
    function XRSparklineViewModel(model, parent, serializer) {
        var _this = _super.call(this, model, parent, serializer) || this;
        _this.view(_this.createView(_this.view() || {}, serializer));
        _this.sparklineFake = {
            type: ko.pureComputed({
                read: function () {
                    return _this.view().type();
                },
                write: function (val) {
                    _this.view(_this.createView({ '@Type': val }, serializer));
                }
            }),
            content: _this.view
        };
        _this._disposables.push(_this.sparklineFake.type);
        return _this;
    }
    XRSparklineViewModel.prototype.createView = function (model, serializer) {
        if (serializer === void 0) { serializer = null; }
        var type = model && model['@Type'] || 'Line';
        var viewTypeSerialization = xrSparkline_1.sparklineViewMap[type];
        var newView = { 'type': ko.observable(type), 'getInfo': function () { return viewTypeSerialization; } };
        (serializer || new analytics_utils_1.ModelSerializer()).deserialize(newView, model);
        return newView;
    };
    XRSparklineViewModel.prototype.getPath = function (propertyName) {
        if (propertyName === 'dataMember') {
            return this.dsHelperProvider() && this.dsHelperProvider().getDataSourcePath(this.dataSource());
        }
        else if (propertyName === 'valueMember') {
            return analytics_internal_1.getFullPath(this.getPath('dataMember'), this.dataMember());
        }
        return _super.prototype.getPath.call(this, propertyName);
    };
    return XRSparklineViewModel;
}(xrControl_1.XRControlViewModel));
exports.XRSparklineViewModel = XRSparklineViewModel;
var XRSparkLineSurface = (function (_super) {
    __extends(XRSparkLineSurface, _super);
    function XRSparkLineSurface(control, context) {
        return _super.call(this, control, context) || this;
    }
    return XRSparkLineSurface;
}(_xrTodoControl_1.TodoControlSurface));
exports.XRSparkLineSurface = XRSparkLineSurface;
var xrSparkline_1 = __webpack_require__(140);


/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.spartlineTypes = [
    { value: 'Line', displayValue: 'Line', localizationId: 'DevExpress.Sparkline.SparklineViewType.Line' },
    { value: 'Bar', displayValue: 'Bar', localizationId: 'DevExpress.Sparkline.SparklineViewType.Bar' },
    { value: 'WinLoss', displayValue: 'WinLoss', localizationId: 'DevExpress.Sparkline.SparklineViewType.WinLoss' },
    { value: 'Area', displayValue: 'Area', localizationId: 'DevExpress.Sparkline.SparklineViewType.Area' }
];


/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var TableCalculationProvider = (function () {
    function TableCalculationProvider(_table) {
        this._table = _table;
        this._tableOffset = {
            width: null,
            left: null
        };
        this._calculationStarted = false;
        this._calculationTimeout = null;
        this._calculationNodes = [];
    }
    TableCalculationProvider.prototype._resetState = function () {
        this._calculationNodes = [];
        this._tableOffset.width = null;
        this._tableOffset.left = null;
        this._calculationStarted = false;
    };
    TableCalculationProvider.prototype._startCalculation = function (calculationNodes) {
        if (calculationNodes === void 0) { calculationNodes = this._calculationNodes; }
        this._calculationStarted = true;
        var rows = this._table.rows().map(function (row, rowIndex) {
            return row.cells().map(function (cell, cellIndex) {
                var modifiedCell = calculationNodes.filter(function (x) { return x.column === cellIndex && x.row === rowIndex; })[0];
                var weight = cell.weight();
                return modifiedCell ? modifiedCell.calc : function () { return cell.weight(weight); };
            });
        });
        this._tableOffset.left && this._table.location.x(this._table.location.x() + this._tableOffset.left);
        this._tableOffset.width && this._table.size.width(this._table.size.width() + this._tableOffset.width);
        rows.forEach(function (r) { return r.forEach(function (c) { return c(); }); });
        this._calculationStarted = false;
    };
    TableCalculationProvider.prototype.addTableOffset = function (width, left) {
        this._tableOffset.width = width;
        this._tableOffset.left = left;
    };
    TableCalculationProvider.prototype.addCalculationNode = function (node) {
        var _this = this;
        if (this._calculationStarted)
            return;
        this._calculationNodes.push(node);
        this._calculationTimeout && clearTimeout(this._calculationTimeout);
        this._calculationTimeout = setTimeout(function () {
            var undo = analytics_utils_1.UndoEngine.tryGetUndoEngine(_this._table);
            undo && undo.start();
            _this._startCalculation();
            _this._resetState();
            undo && undo.end();
        }, 1);
    };
    TableCalculationProvider.prototype.hasCalculationNode = function (rowIndex, cellIndex) {
        return this._calculationNodes.some(function (x) { return x.column === cellIndex && x.row === rowIndex; });
    };
    return TableCalculationProvider;
}());
exports.TableCalculationProvider = TableCalculationProvider;


/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var XRZipCodeSurface = (function (_super) {
    __extends(XRZipCodeSurface, _super);
    function XRZipCodeSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this.displayText = function () {
            var text = control.text();
            text = text && text.replace(/[^\d]/g, '_') || '0'.replace(/[^\d]/g, '_');
            return text;
        };
        _this.fontSize = ko.pureComputed(function () {
            return analytics_internal_1.unitsToPixel(control['size']['height'](), context.measureUnit());
        });
        _this.letterSpacing = ko.pureComputed(function () {
            return Math.ceil(_this.fontSize() / 10);
        });
        _this.css = ko.pureComputed(function () {
            return $.extend({}, _this.cssCalculator.zipCodeFontCss(_this.fontSize()), _this.cssCalculator.backGroundCss(), _this.cssCalculator.zipCodeAlignment(), _this.cssCalculator.foreColorCss());
        });
        _this.contentCss = ko.pureComputed(function () {
            return $.extend({}, _this.cssCalculator.zipCodeAlignment(), _this.cssCalculator.paddingsCss(), { 'letterSpacing': _this.letterSpacing() + 'px' }, { 'lineHeight': 'inherit' });
        });
        return _this;
    }
    return XRZipCodeSurface;
}(xrControl_1.XRControlSurface));
exports.XRZipCodeSurface = XRZipCodeSurface;


/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var xrControl_1 = __webpack_require__(10);
var XRPdfSignatureModel = (function (_super) {
    __extends(XRPdfSignatureModel, _super);
    function XRPdfSignatureModel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._displayDocumentSignatureSubscribed = false;
        return _this;
    }
    XRPdfSignatureModel.prototype.subscribeSignature = function (allControls) {
        var _this = this;
        if (!this._displayDocumentSignatureSubscribed) {
            this._displayDocumentSignatureSubscribed = true;
            this._disposables.push(this.signatureOptions.displayDocumentSignature.subscribe(function (newVal) {
                if (newVal) {
                    var control = analytics_internal_1.findFirstItemMatchesCondition(allControls(), function (item) { return _this !== item && item.signatureOptions.displayDocumentSignature(); });
                    control && control.signatureOptions.displayDocumentSignature(false);
                }
            }));
        }
    };
    return XRPdfSignatureModel;
}(xrControl_1.XRControlViewModel));
exports.XRPdfSignatureModel = XRPdfSignatureModel;
var XRPdfSignatureSurface = (function (_super) {
    __extends(XRPdfSignatureSurface, _super);
    function XRPdfSignatureSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this.contenttemplate = 'dxrd-pdfsignature-content';
        _this['multiline'] = true;
        _this.displayText = function () {
            if (control.signatureOptions.displayDocumentSignature())
                return _this.getSignatureInformationString(control);
            else
                return analytics_utils_1.getLocalization('Digital Signature', 'PreviewStringId.SignatureUnsignedCaption');
        };
        _this._disposables.push(_this.showSkeleton = ko.computed(function () {
            return !control.signatureOptions.displayDocumentSignature();
        }), _this.visibleImage = ko.computed(function () {
            return control.signatureOptions.imageDisplayMode() == 'Show';
        }), _this.hideImage = ko.computed(function () {
            return control.signatureOptions.imageDisplayMode() == 'Hide';
        }), _this.visibleText = ko.computed(function () {
            return control.signatureOptions.showCertificateName() ||
                control.signatureOptions.showDistinguishedName() ||
                control.signatureOptions.showLocation() ||
                control.signatureOptions.showSignatureDate() ||
                control.signatureOptions.showSignatureReason();
        }));
        return _this;
    }
    XRPdfSignatureSurface.prototype.getSignatureInformationString = function (control) {
        var viewInfo = {
            certificateName: this.certificateName,
            distinguishedName: analytics_utils_1.getLocalization('your distinguished name here', 'PreviewStringId.SignatureFillerText_DistinguishedName'),
            reason: analytics_utils_1.getLocalization('your signing reason here', 'PreviewStringId.SignatureFillerText_Reason'),
            location: analytics_utils_1.getLocalization('your signing location here', 'PreviewStringId.SignatureFillerText_Location'),
            dateString: new Date(new Date().setHours(0, 0, 0, 0)).toLocaleString()
        };
        var parts = [];
        var showCaptions = control.signatureOptions.showCaptions();
        if (control.signatureOptions.showCertificateName())
            parts.push((showCaptions ? analytics_utils_1.getLocalization('Digitally signed by', 'PreviewStringId.SignatureCaptions_CertificateName') + ' ' : '') + viewInfo.certificateName);
        if (control.signatureOptions.showDistinguishedName())
            parts.push((showCaptions ? analytics_utils_1.getLocalization('DN:', 'PreviewStringId.SignatureCaptions_DistinguishedName') + ' ' : '') + viewInfo.distinguishedName);
        if (control.signatureOptions.showSignatureReason())
            parts.push((showCaptions ? analytics_utils_1.getLocalization('Reason:', 'PreviewStringId.SignatureCaptions_Reason') + ' ' : '') + viewInfo.reason);
        if (control.signatureOptions.showLocation())
            parts.push((showCaptions ? analytics_utils_1.getLocalization('Location:', 'PreviewStringId.SignatureCaptions_Location') + ' ' : '') + viewInfo.location);
        if (control.signatureOptions.showSignatureDate())
            parts.push((showCaptions ? analytics_utils_1.getLocalization('Date:', 'PreviewStringId.SignatureCaptions_Date') + ' ' : '') + viewInfo.dateString);
        return parts.join('\r\n');
    };
    Object.defineProperty(XRPdfSignatureSurface.prototype, "certificateName", {
        get: function () {
            return analytics_utils_1.getLocalization('your common name here', 'PreviewStringId.SignatureFillerText_CertificateName');
        },
        enumerable: true,
        configurable: true
    });
    return XRPdfSignatureSurface;
}(xrControl_1.XRControlSurface));
exports.XRPdfSignatureSurface = XRPdfSignatureSurface;


/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_elements_1 = __webpack_require__(5);
var analytics_utils_1 = __webpack_require__(0);
var xrCrossTabCell_1 = __webpack_require__(99);
var enums_1 = __webpack_require__(58);
var CrossTabCellInfo = (function (_super) {
    __extends(CrossTabCellInfo, _super);
    function CrossTabCellInfo(model, serializer) {
        if (serializer === void 0) { serializer = new analytics_utils_1.ModelSerializer(); }
        var _this = _super.call(this, model, serializer, xrCrossTabCell_1.cellserializtionInfoBase) || this;
        _this.kind = ko.observable(enums_1.CellKind.None);
        return _this;
    }
    return CrossTabCellInfo;
}(analytics_elements_1.SerializableModel));
exports.CrossTabCellInfo = CrossTabCellInfo;
var CellCreator = (function (_super) {
    __extends(CellCreator, _super);
    function CellCreator(crossTab) {
        var _this = _super.call(this) || this;
        _this.crossTab = crossTab;
        return _this;
    }
    Object.defineProperty(CellCreator.prototype, "rowFieldCount", {
        get: function () { return this.crossTab.rowFields().length; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CellCreator.prototype, "columnFieldCount", {
        get: function () { return this.crossTab.columnFields().length; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CellCreator.prototype, "dataFieldCount", {
        get: function () { return this.crossTab.dataFields().length; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CellCreator.prototype, "rowDataCount", {
        get: function () { return 1; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CellCreator.prototype, "columnDataCount", {
        get: function () { return 1; },
        enumerable: true,
        configurable: true
    });
    CellCreator.prototype.nextRowIndex = function (cell) {
        return cell._rowIndex() + cell._rowSpan();
    };
    CellCreator.prototype.lastRowIndex = function (cell) {
        return this.nextRowIndex(cell) - 1;
    };
    CellCreator.prototype.nextColumnIndex = function (cell) {
        return cell._columnIndex() + cell._columnSpan();
    };
    CellCreator.prototype.lastColumnIndex = function (cell) {
        return this.nextColumnIndex(cell) - 1;
    };
    CellCreator.prototype.setCellKind = function (cell, kind) {
        cell.kind(kind);
    };
    CellCreator.prototype.setLevel = function (cell, dataLevel, columnLevel, rowLevel) {
        if (dataLevel >= 0)
            this.setDataLevel(cell, dataLevel);
        if (columnLevel >= 0)
            this.setColumnLevel(cell, columnLevel);
        if (rowLevel >= 0)
            this.setRowLevel(cell, rowLevel);
    };
    CellCreator.prototype.setDataLevel = function (cell, level) {
        cell.dataLevel = level;
    };
    CellCreator.prototype.setColumnLevel = function (cell, level) {
        cell.columnLevel = level;
    };
    CellCreator.prototype.setRowLevel = function (cell, level) {
        cell.rowLevel = level;
    };
    CellCreator.prototype.indexToLevel = function (index, count) {
        return count - 1 - index;
    };
    CellCreator.prototype.setLayout = function (cell, columnIndex, rowIndex, columnSpan, rowSpan) {
        cell._columnIndex(columnIndex);
        cell._rowIndex(rowIndex);
        cell._columnSpan(columnSpan);
        cell._rowSpan(rowSpan);
    };
    CellCreator.createInstance = function (crossTab) {
        return crossTab.dataFields().length <= 1 ? new CellCreator(crossTab)
            : crossTab.layoutOptions.dataFieldLayout() === enums_1.DataFieldLayout[enums_1.DataFieldLayout.InRow] ? new HorizontalCreator(crossTab)
                : new VerticalCreator(crossTab);
    };
    CellCreator.prototype.create = function () {
        var cells = [];
        var corners = this.createCorners(Math.max(1, this.columnFieldCount), Math.max(1, this.rowFieldCount));
        cells.push.apply(cells, corners);
        this.lastCorner = corners[corners.length - 1];
        var dataHeaders = this.createDataHeaders();
        cells.push.apply(cells, dataHeaders);
        var dataCells = this.createData();
        cells.push.apply(cells, dataCells);
        var columnHeaders = this.createColumnHeaders(this.nextColumnIndex(this.lastCorner), this.columnFieldCount * this.columnDataCount, this.columnDataCount);
        cells.push.apply(cells, columnHeaders);
        var rowHeaders = this.createRowHeaders(this.nextRowIndex(this.lastCorner), this.rowFieldCount * this.rowDataCount, this.rowDataCount);
        cells.push.apply(cells, rowHeaders);
        var rowTotalHeaders = this.createRowTotalHeaders(rowHeaders[rowHeaders.length - 1]._columnIndex(), 1, this.nextRowIndex(rowHeaders[rowHeaders.length - 1]), this.rowDataCount);
        cells.push.apply(cells, rowTotalHeaders);
        cells.push.apply(cells, this.createRowTotals(dataCells[0]._columnIndex(), this.nextRowIndex(dataCells[0]), this.rowDataCount));
        var columnTotalHeaders = this.createColumnTotalHeaders(this.nextColumnIndex(columnHeaders[columnHeaders.length - 1]), columnHeaders[columnHeaders.length - 1]._rowIndex(), 1, this.columnDataCount);
        cells.push.apply(cells, columnTotalHeaders);
        cells.push.apply(cells, this.createColumnTotals(this.nextColumnIndex(dataCells[0]), dataCells[0]._rowIndex(), this.columnDataCount));
        cells.push.apply(cells, this.createGrandTotals(dataCells, this.nextRowIndex(dataCells[dataCells.length - 1]), this.nextColumnIndex(dataCells[dataCells.length - 1]), dataCells.length, 1));
        if (this.crossTab.layoutOptions.hierarchicalRowLayout() && this.rowFieldCount > 1) {
            cells.push.apply(cells, this.createEmptyHeaders(this.columnFieldCount + 1));
            cells.push.apply(cells, this.createEmptyCells(1));
        }
        return cells;
    };
    CellCreator.prototype.creator = function (cellKind) {
        var cell = new CrossTabCellInfo({});
        this.setCellKind(cell, cellKind);
        return cell;
    };
    CellCreator.prototype.createCorners = function (columnCount, rowCount) {
        var mode = this.crossTab.layoutOptions.cornerHeaderDisplayMode();
        var corners = [];
        if (enums_1.CornerHeaderDisplayMode[mode] === enums_1.CornerHeaderDisplayMode.RowFieldNames) {
            for (var i = 0; i < rowCount; i++) {
                var cell_1 = this.creator(enums_1.CellKind.Corner);
                this.setLayout(cell_1, i, 0, 1, columnCount);
                this.setRowLevel(cell_1, i);
                cell_1.field = ko.observable(this.crossTab.rowFields()[i]);
                corners.push(cell_1);
            }
        }
        else if (enums_1.CornerHeaderDisplayMode[mode] === enums_1.CornerHeaderDisplayMode.ColumnFieldNames) {
            for (var i = 0; i < columnCount; i++) {
                var cell_2 = this.creator(enums_1.CellKind.Corner);
                this.setLayout(cell_2, 0, i, rowCount, 1);
                this.setColumnLevel(cell_2, i);
                cell_2.field = ko.observable(this.crossTab.columnFields()[i]);
                corners.push(cell_2);
            }
        }
        else {
            if (this.crossTab.layoutOptions)
                var cell = this.creator(enums_1.CellKind.Corner);
            this.setLayout(cell, 0, 0, rowCount, columnCount);
            corners.push(cell);
        }
        return corners;
    };
    CellCreator.prototype.createDataHeaders = function () {
        return [];
    };
    CellCreator.prototype.createDataHeader = function (columnIndex, rowIndex, dataLevel, columnLevel, rowLevel) {
        if (columnLevel === void 0) { columnLevel = -1; }
        if (rowLevel === void 0) { rowLevel = -1; }
        var cell = this.creator(enums_1.CellKind.DataHeader);
        this.setLevel(cell, dataLevel, columnLevel, rowLevel);
        this.setLayout(cell, columnIndex, rowIndex, 1, 1);
        cell.field = ko.observable(this.crossTab.dataFields()[dataLevel]);
        return cell;
    };
    CellCreator.prototype.createData = function () {
        var startRowIndex = this.nextRowIndex(this.lastCorner);
        if (this.crossTab.layoutOptions.hierarchicalRowLayout())
            startRowIndex += this.rowFieldCount - 1;
        return [this.createDataCell(this.nextColumnIndex(this.lastCorner), startRowIndex, 0)];
    };
    CellCreator.prototype.createDataCell = function (colIndex, rowIndex, level) {
        var cell = this.creator(enums_1.CellKind.Data);
        cell.field = ko.observable(this.crossTab.dataFields()[level]);
        this.setDataLevel(cell, level);
        this.setLayout(cell, colIndex, rowIndex, 1, 1);
        return cell;
    };
    CellCreator.prototype.createColumnTotals = function (startColumnIndex, startRowIndex, dataCount) {
        if (this.columnFieldCount == 0)
            return [];
        var cells = [];
        var columnIndex = startColumnIndex;
        for (var i = 0; i < this.columnFieldCount; i++) {
            var level = this.indexToLevel(i, this.columnFieldCount) - 1;
            for (var j = 0; j < Math.max(1, this.dataFieldCount); j++) {
                cells.push(this.createColumnTotal(columnIndex, startRowIndex, j, level));
            }
            columnIndex += dataCount;
        }
        return cells;
    };
    CellCreator.prototype.createColumnTotal = function (columnIndex, rowIndex, dataLevel, columnLevel) {
        var cell = this.creator(enums_1.CellKind.ColumnTotal);
        this.setLevel(cell, dataLevel, columnLevel, -1);
        this.setLayout(cell, columnIndex, rowIndex, 1, 1);
        return cell;
    };
    CellCreator.prototype.createRowTotals = function (startColumnIndex, startRowIndex, dataCount) {
        if (this.rowFieldCount === 0)
            return [];
        var cells = [];
        var rowIndex = startRowIndex;
        for (var i = 0; i < this.rowFieldCount; i++) {
            var level = this.indexToLevel(i, this.rowFieldCount) - 1;
            for (var j = 0; j < Math.max(1, this.dataFieldCount); j++) {
                cells.push(this.createRowTotal(startColumnIndex, rowIndex, j, level));
            }
            rowIndex += dataCount;
        }
        return cells;
    };
    CellCreator.prototype.createRowTotal = function (columnIndex, rowIndex, dataLevel, rowLevel) {
        var cell = this.creator(enums_1.CellKind.RowTotal);
        this.setLevel(cell, dataLevel, -1, rowLevel);
        this.setLayout(cell, columnIndex, rowIndex, 1, 1);
        return cell;
    };
    CellCreator.prototype.createGrandTotals = function (dataItems, startRowIndex, startColumnIndex, columnInc, rowInc) {
        var columnIndex = startColumnIndex;
        var totals = [];
        for (var i = 0; i < this.columnFieldCount; i++) {
            var columnLevel = this.indexToLevel(i, this.columnFieldCount) - 1;
            var rowIndex = startRowIndex;
            for (var j = 0; j < this.rowFieldCount; j++) {
                var rowLevel = this.indexToLevel(j, this.rowFieldCount) - 1;
                for (var k = 0; k < dataItems.length; k++) {
                    var cell = this.createGrandTotal(k, columnLevel, rowLevel);
                    this.setGrandTotalLayout(cell, k, columnIndex, rowIndex);
                    totals.push(cell);
                }
                rowIndex += rowInc;
            }
            columnIndex += columnInc;
        }
        return totals;
    };
    CellCreator.prototype.createGrandTotal = function (dataLevel, columnLevel, rowLevel) {
        var cell = this.creator(enums_1.CellKind.GrandTotal);
        this.setLevel(cell, dataLevel, columnLevel, rowLevel);
        return cell;
    };
    CellCreator.prototype.setGrandTotalLayout = function (cells, inc, columnIndex, rowIndex) {
        this.setLayout(cells, columnIndex + inc, rowIndex, 1, 1);
    };
    CellCreator.prototype.createColumnHeaders = function (startColumnIndex, columnSpan, dataCount) {
        var cells = [];
        if (this.columnFieldCount === 0) {
            var columnHeader = this.creator(enums_1.CellKind.ColumnHeader);
            this.setColumnLevel(columnHeader, 0);
            this.setLayout(columnHeader, startColumnIndex, 0, dataCount, 1);
            cells.push(columnHeader);
        }
        if (this.crossTab.layoutOptions.columnTotalHeaderPosition() === enums_1.TotalHeaderPosition[enums_1.TotalHeaderPosition.Outer])
            columnSpan = Math.max(dataCount, columnSpan - dataCount);
        var rowIndex = 0;
        var isReversed = this.crossTab.layoutOptions.columnTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData];
        isReversed && (startColumnIndex += dataCount * (this.columnFieldCount + 1));
        for (var i = 0; i < this.columnFieldCount; i++) {
            var columnHeader = this.creator(enums_1.CellKind.ColumnHeader);
            columnHeader.field = ko.observable(this.crossTab.columnFields()[i]);
            this.setColumnLevel(columnHeader, i);
            this.setLayout(columnHeader, isReversed ? startColumnIndex - columnSpan : startColumnIndex, rowIndex, columnSpan, 1);
            cells.push(columnHeader);
            columnSpan = Math.max(dataCount, columnSpan - dataCount);
            rowIndex = this.nextRowIndex(columnHeader);
        }
        return cells;
    };
    CellCreator.prototype.createColumnTotalHeaders = function (startColumnIndex, startRowIndex, rowSpan, dataCount) {
        var cells = [];
        if (this.columnFieldCount === 0)
            return [];
        if (this.crossTab.layoutOptions.columnTotalHeaderPosition() === enums_1.TotalHeaderPosition[enums_1.TotalHeaderPosition.Outer] && startRowIndex > 0) {
            startRowIndex--;
            rowSpan++;
        }
        var rowIndex = startRowIndex;
        var columnIndex = startColumnIndex;
        var columnInc = dataCount;
        if (this.crossTab.layoutOptions.columnTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]) {
            columnIndex -= dataCount * 2;
            columnInc = -columnInc;
        }
        for (var i = 0; i < this.columnFieldCount; i++) {
            var level = this.indexToLevel(i, this.columnFieldCount);
            var columnTotalHeader = level === 0 ? this.createColumnGrandTotalHeader() : this.createColumnTotalHeader(level - 1);
            columnTotalHeader.field = ko.observable(this.crossTab.columnFields()[level - 1]);
            this.setLayout(columnTotalHeader, columnIndex, rowIndex, dataCount, rowSpan);
            cells.push(columnTotalHeader);
            if (rowIndex > 0) {
                rowIndex--;
                rowSpan++;
            }
            columnIndex += columnInc;
        }
        return cells;
    };
    CellCreator.prototype.createRowHeaders = function (startRowIndex, rowSpan, dataCount) {
        if (this.rowFieldCount === 0) {
            var rowHeader = this.creator(enums_1.CellKind.RowHeader);
            this.setRowLevel(rowHeader, 0);
            this.setLayout(rowHeader, 0, startRowIndex, 1, dataCount);
            return [rowHeader];
        }
        var cells = [];
        var columnShift = 0;
        if (this.crossTab.layoutOptions.hierarchicalRowLayout() && this.rowFieldCount > 1) {
            columnShift = 1;
            rowSpan = 1;
        }
        else if (this.crossTab.layoutOptions.rowTotalHeaderPosition() === enums_1.TotalHeaderPosition[enums_1.TotalHeaderPosition.Outer]) {
            rowSpan = Math.max(dataCount, rowSpan - dataCount);
        }
        var columnIndex = 0;
        var rowIndex = startRowIndex;
        var isReversed = this.crossTab.layoutOptions.rowTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData];
        isReversed && (rowIndex += dataCount * (this.rowFieldCount + 1));
        var columnSpan = Math.max(1, this.rowFieldCount * columnShift);
        for (var i = 0; i < this.rowFieldCount; i++) {
            var rowHeader = this.creator(enums_1.CellKind.RowHeader);
            rowHeader.field = ko.observable(this.crossTab.rowFields()[i]);
            this.setRowLevel(rowHeader, i);
            if (this.crossTab.layoutOptions.hierarchicalRowLayout() && this.rowFieldCount - 1 > i
                && this.crossTab.layoutOptions.dataFieldLayout() === enums_1.DataFieldLayout[enums_1.DataFieldLayout.InColumn]) {
                columnSpan += 1;
            }
            this.setLayout(rowHeader, columnIndex, isReversed ? rowIndex - rowSpan : rowIndex, columnSpan, rowSpan);
            cells.push(rowHeader);
            if (!this.crossTab.layoutOptions.hierarchicalRowLayout() || this.rowFieldCount - 2 == i) {
                rowSpan = Math.max(dataCount, rowSpan - dataCount);
            }
            columnSpan = Math.max(1, (this.rowFieldCount - i - 1) * columnShift);
            columnIndex = rowHeader._columnIndex() + 1;
            !isReversed && (rowIndex = rowHeader._rowIndex() + columnShift);
        }
        return cells;
    };
    CellCreator.prototype.createRowTotalHeaders = function (startColumnIndex, columnSpan, startRowIndex, dataCount) {
        if (this.rowFieldCount === 0)
            return [];
        if (this.crossTab.layoutOptions.rowTotalHeaderPosition() === enums_1.TotalHeaderPosition[enums_1.TotalHeaderPosition.Outer] && startColumnIndex > 0) {
            startColumnIndex--;
            columnSpan++;
        }
        var rowIndex = startRowIndex;
        var rowInc = dataCount;
        if (this.crossTab.layoutOptions.rowTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]) {
            rowIndex -= dataCount * 2;
            rowInc = -rowInc;
        }
        var columnIndex = startColumnIndex;
        var cells = [];
        for (var i = 0; i < this.rowFieldCount; i++) {
            var level = this.indexToLevel(i, this.rowFieldCount);
            var rowTotalHeader = level === 0 ? this.createRowGrandTotalHeader() : this.createRowTotalHeader(level - 1);
            rowTotalHeader.field = ko.observable(this.crossTab.rowFields()[level - 1]);
            this.setLayout(rowTotalHeader, columnIndex, rowIndex, columnSpan, dataCount);
            cells.push(rowTotalHeader);
            if (columnIndex > 0) {
                columnIndex--;
                columnSpan++;
            }
            rowIndex += rowInc;
        }
        return cells;
    };
    CellCreator.prototype.createEmptyHeaders = function (columnSpan) {
        var rowIndex = this.nextRowIndex(this.lastCorner);
        var columnIndex = this.nextColumnIndex(this.lastCorner);
        var cells = [];
        for (var i = 0; i < this.rowFieldCount - 1; i++) {
            var emptyHeader = this.createEmptyHeader(i);
            this.setLayout(emptyHeader, columnIndex, rowIndex, columnSpan, 1);
            cells.push(emptyHeader);
            rowIndex++;
        }
        return cells;
    };
    CellCreator.prototype.createEmptyCells = function (dataCount) {
        var rowIndex = this.nextRowIndex(this.lastCorner) + 1;
        var columnIndex = 0;
        var rowSpan = this.rowFieldCount * (dataCount + 1) - 2;
        if (this.crossTab.layoutOptions.rowTotalHeaderPosition() === enums_1.TotalHeaderPosition[enums_1.TotalHeaderPosition.Outer]) {
            rowSpan -= dataCount;
        }
        var cells = [];
        for (var i = 0; i < this.rowFieldCount - 1; i++) {
            var emptyCell = this.createEmptyCell(i);
            this.setLayout(emptyCell, columnIndex, rowIndex, 1, rowSpan);
            cells.push(emptyCell);
            rowIndex++;
            columnIndex++;
            rowSpan -= dataCount + 1;
        }
        return cells;
    };
    CellCreator.prototype.createEmptyHeader = function (level) {
        var emptyHeader = this.creator(enums_1.CellKind.EmptyHeader);
        this.setRowLevel(emptyHeader, level);
        return emptyHeader;
    };
    CellCreator.prototype.createEmptyCell = function (level) {
        var emptyCell = this.creator(enums_1.CellKind.Empty);
        this.setRowLevel(emptyCell, level);
        return emptyCell;
    };
    CellCreator.prototype.createColumnTotalHeader = function (level) {
        var columnHeaderTotal = this.creator(enums_1.CellKind.ColumnTotalHeader);
        this.setColumnLevel(columnHeaderTotal, level);
        return columnHeaderTotal;
    };
    CellCreator.prototype.createColumnGrandTotalHeader = function () {
        var cell = this.creator(enums_1.CellKind.ColumnTotalHeader);
        return cell;
    };
    CellCreator.prototype.createRowTotalHeader = function (level) {
        var rowHeaderTotal = this.creator(enums_1.CellKind.RowTotalHeader);
        this.setRowLevel(rowHeaderTotal, level);
        return rowHeaderTotal;
    };
    CellCreator.prototype.createRowGrandTotalHeader = function () {
        var cell = this.creator(enums_1.CellKind.RowTotalHeader);
        return cell;
    };
    return CellCreator;
}(analytics_utils_1.Disposable));
exports.CellCreator = CellCreator;
var HorizontalCreator = (function (_super) {
    __extends(HorizontalCreator, _super);
    function HorizontalCreator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(HorizontalCreator.prototype, "columnDataCount", {
        get: function () { return this.dataFieldCount; },
        enumerable: true,
        configurable: true
    });
    HorizontalCreator.prototype.createCorners = function (columnCount, rowCount) {
        var corners = _super.prototype.createCorners.call(this, columnCount, rowCount);
        if (this.crossTab.layoutOptions.cornerHeaderDisplayMode() == enums_1.CornerHeaderDisplayMode[enums_1.CornerHeaderDisplayMode.ColumnFieldNames]) {
            var lastCorner = corners[corners.length - 1];
            lastCorner._rowSpan(lastCorner._rowSpan() + 1);
        }
        else
            corners.forEach(function (corner) {
                corner._rowSpan(corner._rowSpan() + 1);
            });
        return corners;
    };
    HorizontalCreator.prototype.createDataHeaders = function () {
        var rowIndex = this.lastRowIndex(this.lastCorner);
        var isReversed = this.crossTab.layoutOptions.columnTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData];
        var columnIndex = !isReversed ? this.nextColumnIndex(this.lastCorner) : this.nextColumnIndex(this.lastCorner) + this.columnFieldCount * this.dataFieldCount;
        var cells = [];
        for (var i = 0; i < this.dataFieldCount; i++) {
            cells.push(this.createDataHeader(columnIndex, rowIndex, i));
            columnIndex++;
        }
        var columnInc = Math.max(1, this.dataFieldCount);
        isReversed && (columnIndex -= 2 * columnInc);
        for (var i = 0; i < this.columnFieldCount; i++) {
            var columnLevel = this.indexToLevel(i, this.columnFieldCount);
            for (var j = 0; j < columnInc; j++) {
                var dataHeader = this.createDataHeader(columnIndex + j, rowIndex, j, columnLevel);
                this.setLevel(dataHeader, -1, columnLevel, -1);
                cells.push(dataHeader);
            }
            isReversed ? (columnIndex -= columnInc) : (columnIndex += columnInc);
        }
        return cells;
    };
    HorizontalCreator.prototype.createData = function () {
        var startRowIndex = this.nextRowIndex(this.lastCorner);
        if (this.crossTab.layoutOptions.hierarchicalRowLayout())
            startRowIndex += this.rowFieldCount - 1;
        var rowIndex = this.crossTab.layoutOptions.rowTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.AfterData] ?
            startRowIndex : startRowIndex + this.rowFieldCount;
        var columnIndex = this.crossTab.layoutOptions.columnTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.AfterData] ?
            this.nextColumnIndex(this.lastCorner) : this.nextColumnIndex(this.lastCorner) + this.columnFieldCount * this.dataFieldCount;
        var cells = [];
        for (var i = 0; i < this.dataFieldCount; i++) {
            cells.push(this.createDataCell(columnIndex + i, rowIndex, i));
        }
        return cells;
    };
    HorizontalCreator.prototype.createRowTotals = function (startColumnIndex, startRowIndex, dataCount) {
        if (this.crossTab.layoutOptions.rowTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]) {
            return _super.prototype.createRowTotals.call(this, startColumnIndex, startRowIndex - 2, -dataCount);
        }
        return _super.prototype.createRowTotals.call(this, startColumnIndex, startRowIndex, dataCount);
    };
    HorizontalCreator.prototype.createColumnTotals = function (startColumnIndex, startRowIndex, dataCount) {
        if (this.crossTab.layoutOptions.columnTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]) {
            return _super.prototype.createColumnTotals.call(this, startColumnIndex - 3, startRowIndex, -dataCount);
        }
        return _super.prototype.createColumnTotals.call(this, startColumnIndex + dataCount - 1, startRowIndex, dataCount);
    };
    HorizontalCreator.prototype.createGrandTotals = function (dataItems, startRowIndex, startColumnIndex, columnIndex, rowIndex) {
        if (this.crossTab.layoutOptions.columnTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]) {
            startColumnIndex -= dataItems.length + 2;
            columnIndex = -dataItems.length;
        }
        if (this.crossTab.layoutOptions.rowTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]) {
            startRowIndex -= 2;
            rowIndex = -1;
        }
        return _super.prototype.createGrandTotals.call(this, dataItems, startRowIndex, startColumnIndex, columnIndex, rowIndex);
    };
    HorizontalCreator.prototype.createColumnTotal = function (columnIndex, rowIndex, dataLevel, columnLevel) {
        return _super.prototype.createColumnTotal.call(this, columnIndex + dataLevel, rowIndex, dataLevel, columnLevel);
    };
    HorizontalCreator.prototype.createRowTotal = function (columnIndex, rowIndex, dataLevel, rowLevel) {
        return _super.prototype.createRowTotal.call(this, columnIndex + dataLevel, rowIndex, dataLevel, rowLevel);
    };
    HorizontalCreator.prototype.createEmptyHeaders = function (columnSpan) {
        return _super.prototype.createEmptyHeaders.call(this, columnSpan * this.dataFieldCount);
    };
    return HorizontalCreator;
}(CellCreator));
exports.HorizontalCreator = HorizontalCreator;
var VerticalCreator = (function (_super) {
    __extends(VerticalCreator, _super);
    function VerticalCreator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(VerticalCreator.prototype, "rowDataCount", {
        get: function () { return this.dataFieldCount; },
        enumerable: true,
        configurable: true
    });
    VerticalCreator.prototype.createCorners = function (columnCount, rowCount) {
        var corners = _super.prototype.createCorners.call(this, columnCount, rowCount);
        if (this.crossTab.layoutOptions.cornerHeaderDisplayMode() == enums_1.CornerHeaderDisplayMode[enums_1.CornerHeaderDisplayMode.RowFieldNames]) {
            var lastCorner = corners[corners.length - 1];
            lastCorner._columnSpan(lastCorner._columnSpan() + 1);
        }
        else
            corners.forEach(function (corner) {
                corner._columnSpan(corner._columnSpan() + 1);
            });
        return corners;
    };
    VerticalCreator.prototype.createDataHeaders = function () {
        var startRowIndex = this.nextRowIndex(this.lastCorner);
        if (this.crossTab.layoutOptions.hierarchicalRowLayout())
            startRowIndex += this.rowFieldCount - 1;
        var isReversed = this.crossTab.layoutOptions.rowTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData];
        var rowIndex = !isReversed ? startRowIndex : startRowIndex + (this.rowFieldCount) * this.dataFieldCount;
        var columnIndex = this.lastColumnIndex(this.lastCorner);
        var cells = [];
        for (var i = 0; i < this.dataFieldCount; i++) {
            cells.push(this.createDataHeader(columnIndex, rowIndex, i));
            rowIndex++;
        }
        var rowInc = Math.max(1, this.dataFieldCount);
        isReversed && (rowIndex -= 2 * rowInc);
        for (var i = 0; i < this.rowFieldCount; i++) {
            var rowLevel = this.indexToLevel(i, this.rowFieldCount);
            for (var j = 0; j < rowInc; j++) {
                var dataHeader = this.createDataHeader(columnIndex, rowIndex + j, j, undefined, rowLevel);
                this.setLevel(dataHeader, -1, -1, rowLevel);
                cells.push(dataHeader);
            }
            isReversed ? (rowIndex -= rowInc) : (rowIndex += rowInc);
        }
        return cells;
    };
    VerticalCreator.prototype.createData = function () {
        var startRowIndex = this.nextRowIndex(this.lastCorner);
        if (this.crossTab.layoutOptions.hierarchicalRowLayout())
            startRowIndex += this.rowFieldCount - 1;
        var rowIndex = this.crossTab.layoutOptions.rowTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.AfterData] ?
            startRowIndex : startRowIndex + (this.rowFieldCount) * this.dataFieldCount;
        var columnIndex = this.crossTab.layoutOptions.columnTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.AfterData] ?
            this.nextColumnIndex(this.lastCorner) : this.nextColumnIndex(this.lastCorner) + this.columnFieldCount;
        var cells = [];
        for (var i = 0; i < this.dataFieldCount; i++) {
            cells.push(this.createDataCell(columnIndex, rowIndex + i, i));
        }
        return cells;
    };
    VerticalCreator.prototype.createRowTotals = function (startColumnIndex, startRowIndex, dataCount) {
        if (this.crossTab.layoutOptions.rowTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]) {
            return _super.prototype.createRowTotals.call(this, startColumnIndex, startRowIndex - 3, -dataCount);
        }
        return _super.prototype.createRowTotals.call(this, startColumnIndex, startRowIndex + dataCount - 1, dataCount);
    };
    VerticalCreator.prototype.createColumnTotals = function (startColumnIndex, startRowIndex, dataCount) {
        if (this.crossTab.layoutOptions.columnTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]) {
            return _super.prototype.createColumnTotals.call(this, startColumnIndex - 2, startRowIndex, -dataCount);
        }
        return _super.prototype.createColumnTotals.call(this, startColumnIndex, startRowIndex, dataCount);
    };
    VerticalCreator.prototype.createColumnTotal = function (columnIndex, rowIndex, dataLevel, columnLevel) {
        return _super.prototype.createColumnTotal.call(this, columnIndex, rowIndex + dataLevel, dataLevel, columnLevel);
    };
    VerticalCreator.prototype.createRowTotal = function (columnIndex, rowIndex, dataLevel, rowLevel) {
        return _super.prototype.createRowTotal.call(this, columnIndex, rowIndex + dataLevel, dataLevel, rowLevel);
    };
    VerticalCreator.prototype.createGrandTotals = function (dataItems, startRowIndex, startColumnIndex, columnIndex, rowIndex) {
        columnIndex = 1;
        rowIndex = dataItems.length;
        if (this.crossTab.layoutOptions.columnTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]) {
            startColumnIndex -= 2;
            columnIndex = -1;
        }
        if (this.crossTab.layoutOptions.rowTotalsPosition() === enums_1.TotalsPosition[enums_1.TotalsPosition.BeforeData]) {
            startRowIndex -= this.dataFieldCount + 2;
            rowIndex = -dataItems.length;
        }
        return _super.prototype.createGrandTotals.call(this, dataItems, startRowIndex, startColumnIndex, columnIndex, rowIndex);
    };
    VerticalCreator.prototype.setGrandTotalLayout = function (items, inc, columnIndex, rowIndex) {
        this.setLayout(items, columnIndex, rowIndex + inc, 1, 1);
    };
    VerticalCreator.prototype.createEmptyCells = function (dataCount) {
        return _super.prototype.createEmptyCells.call(this, dataCount * this.dataFieldCount);
    };
    return VerticalCreator;
}(CellCreator));
exports.VerticalCreator = VerticalCreator;


/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var defenitions_1 = __webpack_require__(142);
var enums_1 = __webpack_require__(58);
function findcells(cells, columnIndex, rowIndex) {
    return cells.filter(function (item) {
        if (columnIndex == null) {
            return item._rowIndex() === rowIndex;
        }
        if (rowIndex == null) {
            return item._columnIndex() === columnIndex;
        }
        return item._rowIndex() === rowIndex && item._columnIndex() === columnIndex;
    });
}
exports.findcells = findcells;
var CrossTabDefinitionsModel = (function (_super) {
    __extends(CrossTabDefinitionsModel, _super);
    function CrossTabDefinitionsModel(model, parent, serializer) {
        return _super.call(this, model, serializer) || this;
    }
    return CrossTabDefinitionsModel;
}(analytics_elements_1.SerializableModel));
exports.CrossTabDefinitionsModel = CrossTabDefinitionsModel;
var CrossTabRowDefinitionsModel = (function (_super) {
    __extends(CrossTabRowDefinitionsModel, _super);
    function CrossTabRowDefinitionsModel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CrossTabRowDefinitionsModel.prototype.getInfo = function () { return defenitions_1.crossTabRowDefinitionInfo; };
    return CrossTabRowDefinitionsModel;
}(CrossTabDefinitionsModel));
exports.CrossTabRowDefinitionsModel = CrossTabRowDefinitionsModel;
var CrossTabColumnDefinitionsModel = (function (_super) {
    __extends(CrossTabColumnDefinitionsModel, _super);
    function CrossTabColumnDefinitionsModel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CrossTabColumnDefinitionsModel.prototype.getInfo = function () { return defenitions_1.crossTabColumnDefinitionInfo; };
    return CrossTabColumnDefinitionsModel;
}(CrossTabDefinitionsModel));
exports.CrossTabColumnDefinitionsModel = CrossTabColumnDefinitionsModel;
var CellMatrixHelper = (function () {
    function CellMatrixHelper(cells) {
        var _this = this;
        this.columnCount = 0;
        this.rowCount = 0;
        cells.forEach(function (cell) {
            if (cell._rowIndex() === 0)
                _this.columnCount += cell._columnSpan();
            if (cell._columnIndex() === 0)
                _this.rowCount += cell._rowSpan();
        });
        this.matrix = [];
        for (var i = 0; i < this.columnCount; i++) {
            this.matrix[i] = [];
            for (var j = 0; j < this.rowCount; j++) {
                var cell = findcells(cells, i, j)[0] || this.findRowCell(i, j - 1) || this.findColumnCell(i - 1, j);
                this.matrix[i][j] = cell;
            }
        }
    }
    CellMatrixHelper.prototype.findRowCell = function (i, j, span) {
        if (span === void 0) { span = 2; }
        if (j < 0)
            return null;
        var newCell = this.matrix[i][j];
        if (newCell && newCell._rowSpan() >= span)
            return newCell;
        return this.findRowCell(i, j - 1, span + 1);
    };
    CellMatrixHelper.prototype.findColumnCell = function (i, j, span) {
        if (span === void 0) { span = 1; }
        if (i < 0)
            return null;
        var newCell = this.matrix[i][j];
        if (newCell && newCell._rowSpan() >= span)
            return newCell;
        return this.findColumnCell(i - 1, j, span + 1);
    };
    return CellMatrixHelper;
}());
exports.CellMatrixHelper = CellMatrixHelper;
var DefenitionUpdater = (function (_super) {
    __extends(DefenitionUpdater, _super);
    function DefenitionUpdater(crossTab) {
        var _this = _super.call(this) || this;
        _this._columnDefinitions = [];
        _this._rowDefinitions = [];
        _this._serializer = new analytics_utils_1.ModelSerializer();
        var matrixHelper = new CellMatrixHelper(crossTab.cells());
        for (var i = 0; i < matrixHelper.columnCount; i++) {
            for (var j = 0; j < matrixHelper.rowCount; j++) {
                var cell = matrixHelper.matrix[i][j];
                if (cell.kind() == enums_1.CellKind.DataHeader || cell.kind() == enums_1.CellKind.Corner)
                    continue;
                if (cell._columnSpan() === 1 && !_this.findDefinition(_this._columnDefinitions, cell)) {
                    _this._columnDefinitions.push({ cell: cell, defenition: crossTab._columnDefinitions()[i] });
                }
                if (cell._rowSpan() === 1 && !_this.findDefinition(_this._rowDefinitions, cell)) {
                    _this._rowDefinitions.push({ cell: cell, defenition: crossTab._rowDefinitions()[j] });
                }
            }
        }
        return _this;
    }
    DefenitionUpdater.prototype.findDefinition = function (array, cell) {
        return analytics_internal_1.findFirstItemMatchesCondition(array, function (item) { return item.cell === cell; });
    };
    DefenitionUpdater.prototype.update = function (cells, width, height) {
        var matrixHelper = new CellMatrixHelper(cells);
        var columnDefs = [];
        var rowDefs = [];
        for (var i = 0; i < matrixHelper.columnCount; i++) {
            for (var j = 0; j < matrixHelper.rowCount; j++) {
                var cell = matrixHelper.matrix[i][j];
                if (columnDefs[i] == null && cell._columnSpan() === 1) {
                    var element = this.findDefinition(this._columnDefinitions, cell);
                    if (element && element.defenition)
                        columnDefs[i] = new CrossTabColumnDefinitionsModel(this._serializer.serialize(element.defenition));
                }
                if (rowDefs[j] == null && cell._rowSpan() === 1) {
                    var element = this.findDefinition(this._rowDefinitions, cell);
                    if (element && element.defenition)
                        rowDefs[j] = new CrossTabRowDefinitionsModel(this._serializer.serialize(element.defenition));
                }
            }
        }
        for (var i = 0; i < matrixHelper.columnCount; i++) {
            if (columnDefs[i] == null)
                columnDefs[i] = new CrossTabColumnDefinitionsModel({ '@Width': i > 0 ? columnDefs[i - 1].width() : width });
        }
        for (var i = 0; i < matrixHelper.rowCount; i++) {
            if (rowDefs[i] == null)
                rowDefs[i] = new CrossTabRowDefinitionsModel({ '@Height': i > 0 ? rowDefs[i - 1].height() : height });
        }
        return { columnDefs: columnDefs, rowDefs: rowDefs };
    };
    return DefenitionUpdater;
}(analytics_utils_1.Disposable));
exports.DefenitionUpdater = DefenitionUpdater;


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var bandsMetadata_1 = __webpack_require__(26);
var scriptMetadata_1 = __webpack_require__(13);
var xrBandMetaData_1 = __webpack_require__(53);
var metadataGroups_1 = __webpack_require__(11);
exports.detailReportBandSerializationInfo = [
    bandsMetadata_1.level, bandsMetadata_1.height, bandsMetadata_1.pageBreak, scriptMetadata_1.detailReportBandScripts,
    bandsMetadata_1.drillDownDetailReportExpanded,
    bandsMetadata_1.drillDownControl,
].concat(xrBandMetaData_1.commonBandSerializationInfo, metadataGroups_1.datasourcePrintOptionsGroup).filter(function (x) { return x.propertyName !== 'bands'; }).concat([{
        propertyName: 'bands',
        modelName: 'Bands',
        array: true
    }]);
exports.popularPropertiesDetailReport = ['dataSource', 'dataMember', 'dataAdapter', 'filterString'];


/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var xrVerticalBandMetaData_1 = __webpack_require__(203);
var groupfieldMetaData_1 = __webpack_require__(52);
exports.verticalDetailBandSerializationInfo = [xrVerticalBandMetaData_1.bandLayout, groupfieldMetaData_1.sortFields].concat(xrVerticalBandMetaData_1.commonVerticalBandProperties);
exports.popularPropertiesVerticalDetailBand = ['sortFields', 'bandLayout'];


/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var anchoring_1 = __webpack_require__(20);
var scriptMetadata_1 = __webpack_require__(13);
var dataBinding_1 = __webpack_require__(17);
var metadataGroups_1 = __webpack_require__(11);
exports.panelSerializationsInfo = [
    metadata_1.canGrow, metadata_1.canShrink, metadata_1.keepTogether, anchoring_1.anchorVertical, anchoring_1.anchorHorizontal, scriptMetadata_1.controlScripts,
    dataBinding_1.dataBindings(['Bookmark', 'NavigateUrl', 'Tag']),
    { propertyName: 'controls', modelName: 'Controls', array: true },
    metadata_1.rtl
].concat(metadataGroups_1.sizeLocation, metadataGroups_1.commonControlProperties, metadataGroups_1.navigationGroup).filter(function (x) { return x != metadata_1.accessibleDescription; });


/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var printOptions_1 = __webpack_require__(207);
var layoutOptions_1 = __webpack_require__(143);
var metadataGroups_1 = __webpack_require__(11);
var fields_1 = __webpack_require__(57);
var defenitions_1 = __webpack_require__(142);
var style_1 = __webpack_require__(21);
var xrChart_1 = __webpack_require__(144);
var cells = { propertyName: 'cells', modelName: 'Cells', array: true };
var originalPivotGridLayout = { propertyName: 'originalPivotGridLayout', modelName: '@OriginalPivotGridLayout', defaultVal: '' };
exports.crossTabSerializationInfo = [fields_1.rowFields, fields_1.columnFields, fields_1.dataFields, defenitions_1.rowDefinitions,
    defenitions_1.columnDefinitions, metadata_1.dataSource, metadata_1.dataMember, layoutOptions_1.crossTabLayoutOptions, printOptions_1.crossTabPrintOptions,
    originalPivotGridLayout, xrChart_1.controlParametersInfo, metadata_1.filterString, metadata_1.filterStringEditable].concat(metadataGroups_1.baseControlProperties, metadataGroups_1.sizeLocation, metadataGroups_1.bookmarkGroup, cells, style_1.crossTabStyles);


/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var formattingrules_1 = __webpack_require__(36);
var scriptMetadata_1 = __webpack_require__(13);
var metadataGroups_1 = __webpack_require__(11);
exports.pageBreakSerializationsInfo = [metadata_1.location, formattingrules_1.formattingRuleLinks, scriptMetadata_1.truncatedControlScripts].concat(metadataGroups_1.baseControlProperties);


/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var xrTableCell_1 = __webpack_require__(145);
var metadata_1 = __webpack_require__(6);
var scriptMetadata_1 = __webpack_require__(13);
var metadataGroups_1 = __webpack_require__(11);
exports.tableRowSerializationsInfo = [
    xrTableCell_1.weight, metadata_1.textAlignment, metadata_1.keepTogether, scriptMetadata_1.controlScripts,
    { propertyName: 'height', displayName: 'Height', localizationId: 'DevExpress.XtraReports.UI.XRControl.Height' },
    metadata_1.cells,
].concat(metadataGroups_1.commonControlProperties, metadataGroups_1.fontGroup).filter(function (x) { return x != metadata_1.accessibleDescription; });


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editOptions_1 = __webpack_require__(47);
var metadata_1 = __webpack_require__(6);
var anchoring_1 = __webpack_require__(20);
var scriptMetadata_1 = __webpack_require__(13);
var dataBinding_1 = __webpack_require__(17);
var _metaUtils_1 = __webpack_require__(23);
var metadataGroups_1 = __webpack_require__(11);
exports.labelSerializationsInfo = [
    editOptions_1.textEditOptions,
    metadata_1.allowMarkupText, metadata_1.autoWidth, anchoring_1.anchorVertical, anchoring_1.anchorHorizontal, scriptMetadata_1.labelScripts, metadata_1.textTrimming,
    dataBinding_1.dataBindings(['Text', 'NavigateUrl', 'Tag', 'Bookmark'])
].concat(_metaUtils_1.createSinglePopularBindingInfos('Text'), metadataGroups_1.sizeLocation, metadataGroups_1.labelGroup);
exports.popularPropertiesLabel = ['text', 'textArea', 'popularDataBinding', 'textFormatString', 'Summary', 'angle', 'bookmark', 'bookmarkParent', 'autoWidth', 'canGrow', 'canShrink', 'multiline', 'wordWrap'];


/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var settings_1 = __webpack_require__(12);
var groups_1 = __webpack_require__(216);
var reportStorageWeb_1 = __webpack_require__(34);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var parameterSettings_1 = __webpack_require__(82);
var JSReportDesigner = (function () {
    function JSReportDesigner(_designerModel) {
        this._designerModel = _designerModel;
    }
    Object.defineProperty(JSReportDesigner.prototype, "designerModel", {
        get: function () {
            return this._designerModel();
        },
        set: function (newVal) {
            this._designerModel(newVal);
        },
        enumerable: true,
        configurable: true
    });
    JSReportDesigner.prototype.UpdateLocalization = function (localization) {
        analytics_utils_1.updateLocalization(localization);
    };
    JSReportDesigner.prototype.GetDesignerModel = function () {
        return this.designerModel;
    };
    JSReportDesigner.prototype.GetPreviewModel = function () {
        return this.designerModel.reportPreviewModel;
    };
    JSReportDesigner.prototype.GetPropertyInfo = function (controlType, path) {
        return settings_1.controlsFactory().getPropertyInfo(controlType, path);
    };
    JSReportDesigner.prototype.GetButtonStorage = function () {
        return this.designerModel.actionStorage;
    };
    JSReportDesigner.prototype.RunWizard = function (wizardType) {
        this.designerModel._wizardRunner.run(wizardType);
    };
    JSReportDesigner.prototype.GetJsonReportModel = function () {
        return this.designerModel.model().serialize();
    };
    JSReportDesigner.prototype.IsModified = function () {
        return this.designerModel && this.designerModel.isDirty();
    };
    JSReportDesigner.prototype.ResetIsModified = function () {
        if (this.designerModel) {
            this.designerModel.isDirty(false);
            this.designerModel.undoEngine && this.designerModel.undoEngine().clearHistory();
        }
    };
    JSReportDesigner.prototype.AddToPropertyGrid = function (groupName, property) {
        var group = groups_1.groups[groupName];
        if (group) {
            group.info.push(property);
        }
        else {
            groups_1.groups[groupName] = { info: [property] };
        }
    };
    JSReportDesigner.prototype.AddParameterType = function (parameterInfo, editorInfo) {
        parameterSettings_1.parameterTypeValues.push(parameterInfo);
        analytics_internal_1.editorTypeMapper[parameterInfo.value] = editorInfo;
    };
    JSReportDesigner.prototype.RemoveParameterType = function (parameterType) {
        var position = parameterSettings_1.parameterTypeValues.indexOf(this.GetParameterInfo(parameterType));
        if (position !== -1) {
            parameterSettings_1.parameterTypeValues.splice(position, 1);
        }
    };
    JSReportDesigner.prototype.GetParameterInfo = function (parameterType) {
        return parameterSettings_1.parameterTypeValues.filter(function (val) { return val.value === parameterType; })[0];
    };
    JSReportDesigner.prototype.GetParameterEditor = function (valueType) {
        return analytics_internal_1.editorTypeMapper[valueType];
    };
    JSReportDesigner.prototype.ReportStorageGetData = function (url) {
        return reportStorageWeb_1.ReportStorageWeb.getData(url);
    };
    JSReportDesigner.prototype.ReportStorageSetData = function (reportLayout, url) {
        return reportStorageWeb_1.ReportStorageWeb.setData(reportLayout, url);
    };
    JSReportDesigner.prototype.ReportStorageSetNewData = function (reportLayout, url) {
        return reportStorageWeb_1.ReportStorageWeb.setNewData(reportLayout, url);
    };
    JSReportDesigner.prototype.SaveReport = function () {
        var navigateByReports = this.designerModel.navigateByReports;
        return this.ReportStorageSetData(navigateByReports.currentTab().context().report.serialize(), navigateByReports.currentTab().context().url());
    };
    JSReportDesigner.prototype.GetTabs = function () {
        return this.designerModel.getTabs();
    };
    JSReportDesigner.prototype.GetCurrentTab = function () {
        return this.designerModel.navigateByReports.currentTab();
    };
    JSReportDesigner.prototype.CloseTab = function (tab, force) {
        if (force === void 0) { force = false; }
        this.designerModel.closeTab(tab, force);
    };
    JSReportDesigner.prototype.CloseCurrentTab = function () {
        this.designerModel.navigateByReports.removeTab(this.designerModel.navigateByReports.currentTab());
    };
    JSReportDesigner.prototype.AdjustControlCore = function () {
        this.designerModel && this.designerModel.updateSurfaceSize();
    };
    JSReportDesigner.prototype.SaveNewReport = function (reportName) {
        var navigateByReports = this.designerModel.navigateByReports;
        return this.ReportStorageSetNewData(navigateByReports.currentTab().context().report.serialize(), reportName);
    };
    JSReportDesigner.prototype.ReportStorageGetUrls = function () {
        return reportStorageWeb_1.ReportStorageWeb.getUrls();
    };
    JSReportDesigner.prototype.OpenReport = function (url) {
        this.designerModel.openReport(url);
    };
    JSReportDesigner.prototype.ShowPreview = function () {
        this.designerModel.showPreview();
    };
    return JSReportDesigner;
}());
exports.JSReportDesigner = JSReportDesigner;


/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inititalizer_1 = __webpack_require__(217);
var _inititalizer_1 = __webpack_require__(316);
var settings_1 = __webpack_require__(12);
var groups_1 = __webpack_require__(216);
var style_1 = __webpack_require__(21);
var _utils_1 = __webpack_require__(42);
var _settings_1 = __webpack_require__(31);
var metadata_1 = __webpack_require__(28);
var xrSubreport_1 = __webpack_require__(56);
var _fieldListDataSourcesHelper_1 = __webpack_require__(101);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_internal_1 = __webpack_require__(8);
var ko = __webpack_require__(1);
var _initializer_1 = __webpack_require__(171);
var queryBuilder_utils_1 = __webpack_require__(457);
var analytics_utils_1 = __webpack_require__(0);
function _createReportDesigner(element, data, callbacks, knownEnums, designerHandlerUri, previewHandlerUri, rtl, applyBindings) {
    if (applyBindings === void 0) { applyBindings = true; }
    var selection = new analytics_internal_1.SurfaceSelection();
    var initializer = new _inititalizer_1.ReportDesignerInitializer({
        allowMDI: data.allowMDI,
        reportStorageWebIsRegister: data.reportStorageWebIsRegister,
        callbacks: callbacks,
        rtl: rtl,
        selection: selection,
        availableDataSources: data.availableDataSources,
        knownEnums: knownEnums,
        reportUrl: data.reportUrl,
        state: data.state,
        reportPreviewSettings: data.reportPreviewSettings
    });
    data.wizardSettings = inititalizer_1.ReportWizardSettings.prototype.createDefault(data.wizardSettings);
    return initializer
        .applyUri({ reportDesignerUri: designerHandlerUri, previewUri: previewHandlerUri })
        .initBindingMode(data.dataBindingMode, data.convertBindingsToExpressions)
        .initDefaultCrossTabControl(data.defaultCrossTabControl)
        .subscribeIncomeReport(data.report, data.reportUrl, data.dataSourceRefs)
        .addFlagsAndInitProperties(element)
        .addReportUrls(data.subreports)
        .addPreview({
        callbacks: callbacks.preview,
        element: element,
        handlerUri: previewHandlerUri,
        parametersInfo: { knownEnums: knownEnums },
        rtl: rtl,
        exportSettings: data.reportPreviewSettings && data.reportPreviewSettings.exportSettings
    })
        .initializeCalculatedFieldsSource()
        .initializeFieldListItemsExtenders()
        .initializeParameters()
        .initializeFieldListProvider()
        .initializeReportItemsProvider()
        .initializeDataBindingsProvider()
        .initializeDisplayNameProvider()
        .initializeExpressionDisplayNameProvider()
        .initializeDataSourceHelper()
        .registerControls(data.dataBindingMode, initializer.buildingModel.reportItemsProvider)
        .runCustomizeToolboxEvent()
        .addSelection()
        .addToolboxItems(function () { return analytics_internal_1.getToolboxItems(settings_1.controlsFactory().controlsMap, 'misc'); })
        .addGroupedToolboxItems()
        .addControlProperties(Object.keys(groups_1.groups).reduce(function (editors, groupName) {
        if (groupName !== 'Styles')
            editors = editors.concat(groups_1.groups[groupName].info);
        else
            editors.push(style_1.stylesObj);
        return editors;
    }, []), groups_1.groups)
        .addContextActions()
        .addPopularProperties(settings_1.controlsFactory())
        .addControlsHelper()
        .setControlsHelperFilter(_utils_1.isNotParameter)
        .addProcessErrorCallback()
        .initCultureInfo(data.cultureInfoList)
        .updateFont(data.cultureInfoList && data.cultureInfoList.fontSet)
        .initFormatStringPatterns(data.formatStringData)
        .onContextChanged(data.subreports)
        .addMenu()
        .addInlineTextEdit()
        .addNavigateToControl(element)
        .addLocalizationEditor(element)
        .tryAddInlineRichTextEdit()
        .addReportDialogs(function (settings) {
        var reportUrls = initializer.buildingModel.reportUrls;
        settings.createOpenReportDialog(reportUrls, initializer.buildingModel.navigateByReports);
        settings.createSaveReportDialog(reportUrls);
        settings.createSaveReportDialogLight();
    })
        .addWizardRunner()
        .addWizards({
        sql: ko.observableArray(data.wizardConnections && data.wizardConnections.sql),
        json: ko.observableArray(data.wizardConnections && data.wizardConnections.json)
    }, data.wizardSettings, function (settings) {
        var model = initializer.buildingModel;
        settings.createMultipleQueriesWizardCallbacks(initializer.buildingModel.dataBindingsProvider, model.model);
        settings.createSqlDataSourceWizard(data.disableCustomSql, initializer.buildingModel.dataBindingsProvider, model.model);
        settings.createSqlDataSourceEditor({
            dataSourceHelper: model.dataSourceHelper,
            fieldListProvider: model.fieldListProvider,
            model: model.model,
            dataSourceWizard: settings.dataSourceWizard,
            undoEngine: model.undoEngine
        });
        settings.createMultiQueryDataSourceWizard(data.disableCustomSql, undefined, data.allowCreateNewJsonConnection);
        settings.createReportWizard({
            data: data,
            dataSourceHelper: model.dataSourceHelper,
            fieldListProvider: model.fieldListProvider,
            isDirty: model.isDirty,
            isLoading: model.isLoading,
            model: model.model,
            navigation: model.navigateByReports,
            state: function () { return initializer.reportContext() && initializer.reportContext().state() || initializer.buildingModel.state; },
            undoEngine: model.undoEngine
        });
    })
        .initializeFieldListActionProviders()
        .addTabPanel()
        .addErrorPanelViewModel(element)
        .addDefaultAddons()
        .tryAddSqlDataSourceEditorAddon()
        .tryAddScriptEditorAddon(data.isScriptsDisabled)
        .addActionList()
        .addStylesProjection()
        .addFormattingRulesProjection()
        .addReportExplorerProvider()
        .addControlsProjection()
        .addBandsProjection()
        .addParts()
        .addStaticContext()
        .tryApplyBindings(applyBindings, element)
        .initializeUIEffects(applyBindings, element)
        .addSmartTagModel()
        .addShowPreviewMethod()
        .addOpenReportMethod()
        .getModel();
}
function createReportDesigner(element, data, callbacks, localizationSettings, knownEnums, designerHandlerUri, previewHandlerUri, rtl, applyBindings) {
    if (applyBindings === void 0) { applyBindings = true; }
    var localizationPromises = [];
    if (localizationSettings && localizationSettings.localization) {
        analytics_utils_1.addCultureInfo({ messages: localizationSettings.localization });
    }
    callbacks && callbacks.designer && callbacks.designer.customizeLocalization && callbacks.designer.customizeLocalization(localizationPromises);
    return analytics_internal_1.resolveFromPromises(localizationPromises, function () {
        return _createReportDesigner(element, data, callbacks, knownEnums, designerHandlerUri, previewHandlerUri, rtl, applyBindings);
    }).done(function (designerModel) {
        if (callbacks && callbacks.designer && callbacks.designer.customizeWizard) {
            callbacks.designer.customizeWizard('ReportWizard', designerModel.wizard);
            callbacks.designer.customizeWizard('SingleQueryDataSourceWizard', designerModel.dataSourceWizard);
            if (designerModel.multiQueryDataSourceWizard) {
                callbacks.designer.customizeWizard('DataSourceWizard', designerModel.multiQueryDataSourceWizard);
            }
        }
    });
}
exports.createReportDesigner = createReportDesigner;
function createReportDesignerFromModel(model, element, callbacks, applyBindings) {
    if (!model)
        return;
    _settings_1.limitation(!!model.limitation);
    _initializer_1._setChartLimitation(_settings_1.limitation());
    if (model.availableCultures) {
        metadata_1.availableCultures(model.availableCultures.reduce(function (result, val) {
            var _a;
            return __assign({}, result, (_a = {}, _a[val.Name] = val.DisplayName, _a));
        }, {}));
    }
    if (model.dataSources && model.dataSourcesData) {
        for (var i = 0; i < model.dataSources.length; i++) {
            var dataSource = model.dataSources[i];
            dataSource.data = model.dataSourcesData[i];
        }
    }
    if (!model.reportModel) {
        model.reportModel = xrSubreport_1.SubreportViewModel.defaultReport;
    }
    else {
        model.reportModel = JSON.parse(model.reportModel);
    }
    var getRootKeyName = function (obj) {
        if (!obj['@ControlType']) {
            for (var prop in obj) {
                if (obj.hasOwnProperty(prop)) {
                    return prop;
                }
            }
        }
        return 'XtraReportsLayoutSerializer';
    };
    analytics_internal_1.initGlobalize(model);
    model.reportModelRootName = getRootKeyName(model.reportModel);
    var formatStringData = { customPatterns: {}, standardPatterns: {} };
    if (model.formatStringData) {
        model.formatStringData.customPatterns.forEach(function (item) {
            formatStringData.customPatterns[item.Key] = item.Value;
        });
        model.formatStringData.standardPatterns.forEach(function (item) {
            formatStringData.standardPatterns[item.Key] = item.Value;
        });
    }
    if (!!model.fieldListMaxNestingLevelUpdate) {
        _fieldListDataSourcesHelper_1.maxNestingLevelUpdate(model.fieldListMaxNestingLevelUpdate);
        analytics_widgets_internal_1.maxSearchLevel(model.fieldListMaxNestingLevelUpdate);
    }
    var data = {
        report: ko.observable({}),
        reportUrl: ko.observable(model.reportUrl),
        availableDataSources: model.dataSources,
        allowMDI: model.allowMDI,
        dataSourceRefs: model.dataSourceRefs,
        dataBindingMode: model.dataBindingMode || 'Expressions',
        defaultCrossTabControl: model.defaultCrossTabControl || 'XRCrossTab',
        convertBindingsToExpressions: model.convertBindingsToExpressions || _utils_1.PromptBoolean.Prompt,
        subreports: model.subreports,
        cultureInfoList: model.cultureInfoList,
        formatStringData: formatStringData,
        state: {
            reportExtensions: model.reportExtensions
        },
        isReportServer: model.internalSettings && model.internalSettings.isReportServer,
        wizardSettings: model.wizardSettings,
        wizardConnections: model.wizardConnections,
        disableCustomSql: model.disableCustomSql,
        isScriptsDisabled: !model.scriptsEnabled,
        allowCreateNewJsonConnection: model.allowCreateNewJsonConnection,
        reportStorageWebIsRegister: model.reportStorageWebIsRegister,
        reportPreviewSettings: model.reportPreviewSettings
    };
    if (model.queryBuilderHandlerUri)
        queryBuilder_utils_1.HandlerUri(model.queryBuilderHandlerUri);
    return createReportDesigner(element, data, callbacks || {}, model, model.knownEnums, model.handlerUri, model.viewerHandlerUri, model.rtl, applyBindings)
        .done(function (designerModel) {
        setTimeout(function () {
            data.report(model.reportModel);
            designerModel.isLoading && designerModel.isLoading(false);
        }, 1);
    });
}
exports.createReportDesignerFromModel = createReportDesignerFromModel;


/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var navigateByReports_1 = __webpack_require__(317);
var _jsonDataSourceEditor_1 = __webpack_require__(219);
var _parametersViewModel_1 = __webpack_require__(218);
var _customMergingEngine_1 = __webpack_require__(331);
var xrReport_1 = __webpack_require__(16);
var _utils_1 = __webpack_require__(42);
var _scriptsEditor_1 = __webpack_require__(332);
var settings_1 = __webpack_require__(12);
var calculatedField_1 = __webpack_require__(181);
var _dataSourceHelper_1 = __webpack_require__(146);
var _fieldListDataSourcesHelper_1 = __webpack_require__(101);
var _reportDataSourceService_1 = __webpack_require__(72);
var _settings_1 = __webpack_require__(336);
var _utils_2 = __webpack_require__(32);
var _initializer_1 = __webpack_require__(92);
var types_1 = __webpack_require__(40);
var _reportSnapLinesCollector_1 = __webpack_require__(374);
var _selectionDragDropHandler_1 = __webpack_require__(375);
var _reportToolboxDragDropHandler_1 = __webpack_require__(376);
var _fieldListDragDropHandler_1 = __webpack_require__(377);
var _reportMenuSettings_1 = __webpack_require__(379);
var _reportDesignerControlsHelper_1 = __webpack_require__(380);
var _dataUtils_1 = __webpack_require__(60);
var _dataBindingMode_1 = __webpack_require__(33);
var _reportExplorer_1 = __webpack_require__(235);
var _reportExplorerDragDropHandler_1 = __webpack_require__(381);
var _fieldListController_1 = __webpack_require__(100);
var reportStorageWeb_1 = __webpack_require__(34);
var actionId_1 = __webpack_require__(383);
var _localizationStringId_1 = __webpack_require__(384);
var fullscreenReportWizard_1 = __webpack_require__(232);
var _reportWizardService_1 = __webpack_require__(153);
var _localizationEditor_1 = __webpack_require__(385);
var metadata_1 = __webpack_require__(28);
var chooseAvailableDataSourcePage_1 = __webpack_require__(24);
var _settings_2 = __webpack_require__(31);
var xrSubreport_1 = __webpack_require__(56);
var _reportPreviewService_1 = __webpack_require__(389);
var reportElementActions_1 = __webpack_require__(390);
var elementsGroupActions_1 = __webpack_require__(393);
var reportActions_1 = __webpack_require__(395);
var tableRowActions_1 = __webpack_require__(238);
var tableCellActions_1 = __webpack_require__(396);
var textElementAction_1 = __webpack_require__(397);
var tableCellGroupActions_1 = __webpack_require__(398);
var pivotGridActions_1 = __webpack_require__(399);
var _copyPasteStrategy_1 = __webpack_require__(401);
var _chartUtils_1 = __webpack_require__(402);
var xrChart_1 = __webpack_require__(130);
var xrPivotgrid_1 = __webpack_require__(68);
var reportDesignerElements_1 = __webpack_require__(403);
var _reportConverter_1 = __webpack_require__(404);
var richEdit_1 = __webpack_require__(69);
var _handlerUri_1 = __webpack_require__(108);
var _registerControls_1 = __webpack_require__(405);
var xrBand_1 = __webpack_require__(15);
var _wizardRunner_1 = __webpack_require__(410);
var _localiziblePropertiesAccessibilityProvider_1 = __webpack_require__(411);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var analytics_wizard_1 = __webpack_require__(7);
var analytics_widgets_internal_1 = __webpack_require__(8);
var analytics_widgets_1 = __webpack_require__(4);
var analytics_tools_1 = __webpack_require__(458);
var scroll_view_1 = __webpack_require__(459);
var config_1 = __webpack_require__(495);
var reportWizardStateCreating_1 = __webpack_require__(105);
var pivotgridfield_1 = __webpack_require__(131);
var sortBySummary_1 = __webpack_require__(132);
var lookUpValue_1 = __webpack_require__(178);
var formattingrules_1 = __webpack_require__(36);
var styleseditor_1 = __webpack_require__(412);
var xrTableOfContentsLevel_1 = __webpack_require__(198);
var customizeLabelPage_1 = __webpack_require__(152);
var _utils_3 = __webpack_require__(92);
var objectItemCreation_1 = __webpack_require__(41);
var dataFederation_1 = __webpack_require__(55);
var _designerEditorAddOn_1 = __webpack_require__(413);
var _errorPanelViewModel_1 = __webpack_require__(414);
var _controlScrollingTool_1 = __webpack_require__(416);
var _sizeUtils_1 = __webpack_require__(92);
var crossTabActions_1 = __webpack_require__(417);
var _crossTabConverter_1 = __webpack_require__(158);
var pdfContentActions_1 = __webpack_require__(418);
var expressionSmartTag_1 = __webpack_require__(419);
var smartTagContainer_1 = __webpack_require__(420);
var ReportDesignerInitializer = (function (_super) {
    __extends(ReportDesignerInitializer, _super);
    function ReportDesignerInitializer(options) {
        var _this = _super.call(this) || this;
        _this.options = options;
        _this._onAfterRenderCallbacks = [];
        _this._converters = [];
        _this._customMergeEngine = new _customMergingEngine_1.CustomMergingEngine();
        _this._updateCallback = null;
        _this._selection = options.selection || new analytics_internal_1.SurfaceSelection;
        var serializer = new analytics_utils_1.ModelSerializer();
        _this.configurateRtl(options.rtl)
            .configureReportStorageRegistration(options.reportStorageWebIsRegister, options.allowMDI)
            .addCallbacks(options.callbacks)
            .addElement('state', function () { return options.state; })
            .addElement('availableDataSources', function () {
            return (options.availableDataSources || []).map(function (object) {
                return $.extend({}, object, { data: objectItemCreation_1.createNewObjectItem(object.data, undefined, serializer) });
            });
        });
        var navigation = new navigateByReports_1.NavigateByReports({
            allowMDI: _this._allowMDI,
            callbacks: _this._designerCallbacks,
            knownEnums: options.knownEnums,
            reportUrl: options.reportUrl,
            initOptions: {
                availableDataSources: options.availableDataSources,
                state: options.state
            },
            selection: _this._selection
        });
        var undoEngine = ko.computed(function () { return navigation.currentTab() && navigation.currentTab().undoEngine; });
        _this._addDisposable(undoEngine);
        _this._reportcontext = ko.computed({
            read: function () {
                return navigation.currentTab() && navigation.currentTab().context();
            },
            write: function (newVal) {
                navigation.currentTab() && navigation.currentTab().context(newVal);
            }
        });
        var model = ko.computed({
            read: function () {
                return _this._reportcontext() && _this._reportcontext().report;
            },
            write: function (newVal) {
                if (!_this.isDisposing)
                    navigation.changeContext(newVal);
            }
        });
        var surface = ko.computed(function () { return _this._reportcontext() && _this._reportcontext().surface; });
        var canAddItems = ko.computed(function () { return model() && model().language() === metadata_1.defaultCulture; });
        _this._addDisposable(_this._reportcontext);
        _this._addDisposable(model);
        _this._addDisposable(surface);
        _this._addDisposable(canAddItems);
        _this._addDisposable(canAddItems.subscribe(function (newVal) {
            _this.buildingModel.toolboxItems && _this.buildingModel.toolboxItems.forEach(function (x) { return x.disabled(!newVal); });
        }));
        _this.initializeContext({ model: model, surface: surface, undoEngine: undoEngine });
        _this.mapOnContext();
        _this.addElement('canAddItems', function () { return canAddItems; });
        _this.addElement('navigateByReports', function () { return navigation; });
        _this.addElement('getTabs', function () { return function () { return navigation.tabs(); }; });
        _this.addElement('closeTab', function () { return function (tab, force) {
            if (force === void 0) { force = false; }
            return navigation.removeTab(tab, force);
        }; });
        _this._addDisposable(_this._reportcontext.subscribe(function (newVal) {
            if (_this.buildingModel.propertyGrid) {
                _this.buildingModel.propertyGrid.cleanEditors();
                _this.buildingModel.propertyGrid.editorsRendered(!_this.buildingModel.propertyGrid.isSortingByGroups());
            }
            _this.buildingModel.popularProperties && _this.buildingModel.popularProperties.cleanEditors();
        }));
        _this._selection.focused(surface());
        _this._addDisposable(surface.subscribe(function (newValue) {
            if (!newValue)
                _this._selection.reset();
            else
                _this._selection.focused(newValue);
        }));
        var isDefaultLanguage = ko.computed(function () {
            return _this.buildingModel.model && _this.buildingModel.model() ? _this.buildingModel.model().language() == metadata_1.defaultCulture : false;
        });
        _this._addDisposable(isDefaultLanguage);
        _this._accessibilityProvider = new _localiziblePropertiesAccessibilityProvider_1.LocaliziblePropertiesAccessibilityProvider(isDefaultLanguage);
        return _this;
    }
    Object.defineProperty(ReportDesignerInitializer.prototype, "reportContext", {
        get: function () {
            return this._reportcontext;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ReportDesignerInitializer.prototype, "buildingModel", {
        get: function () {
            return _super.prototype.getModel.call(this);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ReportDesignerInitializer.prototype, "_designerCallbacks", {
        get: function () {
            return this._callbacks && this._callbacks.designer;
        },
        enumerable: true,
        configurable: true
    });
    ReportDesignerInitializer.prototype.subscribeIncomeReport = function (report, reportUrl, dataSourceRefs) {
        var _this = this;
        this._addDisposable(report.subscribe(function (newValue) {
            var newModel = new xrReport_1.ReportViewModel(newValue);
            _utils_1.updateDataSourceRefs(newModel, dataSourceRefs);
            if (_this.buildingModel.navigateByReports.tabs().length === 0) {
                _this.buildingModel.navigateByReports.addTab(newModel, reportUrl, function () { return newModel.dispose(); });
            }
            else {
                _this.buildingModel.model(newModel);
            }
        }));
        return this;
    };
    ReportDesignerInitializer.prototype._addDisposable = function (object) {
        this._disposables.push(object);
    };
    ReportDesignerInitializer.prototype._tryAddScriptEditor = function (isScriptsDisabled) {
        var _this = this;
        isScriptsDisabled = isScriptsDisabled || !analytics_widgets_internal_1.aceAvailable;
        if (!isScriptsDisabled) {
            var scriptsEditor = new _scriptsEditor_1.ScriptsEditor(this.buildingModel.model, this.buildingModel.controlsHelper.allControls);
            this._addDisposable(scriptsEditor.editorVisible.subscribe(function (newValue) {
                if (newValue) {
                    var focusedControl = _this.buildingModel.selection.focused();
                    if (focusedControl && focusedControl.getControlModel) {
                        var controlModel = focusedControl.getControlModel();
                        scriptsEditor.selectedControl(!!controlModel.scripts ? controlModel : controlModel.parentModel());
                    }
                    var resizeFunction = function () { return setTimeout(function () {
                        scriptsEditor.editorContainer().resize();
                    }, 1); };
                    if (!scriptsEditor.editorContainer())
                        var innerSubscription = scriptsEditor.editorContainer.subscribe(function (newVal) {
                            innerSubscription.dispose();
                            resizeFunction();
                        });
                    else
                        resizeFunction();
                }
                _this.buildingModel.designMode(!newValue);
            }));
            this.addElement('scriptsEditor', function () { return scriptsEditor; });
            this.addElement('events', function () { return ko.pureComputed(function () { return _this.buildingModel.scriptsEditor.allFunctionNames; }); });
            this.addElement('gotoEvent', function () { return function (functionName, eventName, model) {
                scriptsEditor.editorVisible(true);
                scriptsEditor.ensureEvent(eventName.substring(2), functionName, model);
            }; });
            return true;
        }
        else {
            var controlTypes = Object.keys(settings_1.controlsFactory().controlsMap);
            for (var index = 0; index < controlTypes.length; index++) {
                ['scripts', 'scriptReferencesString', 'scriptLanguage'].forEach(function (propertyDisplayName) {
                    var propertyInfo = settings_1.controlsFactory().getPropertyInfo(controlTypes[index], propertyDisplayName);
                    propertyInfo && (propertyInfo.visible = false);
                });
            }
            calculatedField_1.calculatedFieldScripts.visible = false;
        }
        return false;
    };
    ReportDesignerInitializer.prototype._getControls = function (controls, filter, isNoneItemAdded) {
        if (isNoneItemAdded === void 0) { isNoneItemAdded = true; }
        return ko.pureComputed(function () {
            var result = controls();
            if (filter) {
                result = result.filter(filter);
            }
            var allControls = result.map(function (item) {
                return { displayName: ko.unwrap(item.name), value: item };
            });
            if (isNoneItemAdded)
                allControls.splice(0, 0, { displayName: analytics_internal_1.localizeNoneString('(none)'), value: null });
            return allControls;
        }).extend({ throttle: 1 });
    };
    ReportDesignerInitializer.prototype._createEmptyReportItemsProvider = function () {
        var reportModel = new xrReport_1.ReportViewModel({});
        var parameters = new _parametersViewModel_1.ParametersViewModel(reportModel);
        var dataSourceHelper = new _dataSourceHelper_1.DataSourceHelper(reportModel.objectStorage, reportModel.dataSourceRefs, undefined);
        reportModel.dataSourceHelper(dataSourceHelper);
        var fieldListDataSourceHelper = new _fieldListDataSourcesHelper_1.FieldListDataSourcesHelper();
        fieldListDataSourceHelper.updateDataSources(dataSourceHelper, reportModel, parameters.parameters);
        var wrappedCallback = fieldListDataSourceHelper.wrapFieldsCallback(_reportDataSourceService_1.ReportDataSourceService.fieldListCallback, function () { return undefined; });
        return new analytics_internal_1.FieldListProvider(wrappedCallback, fieldListDataSourceHelper.fieldListDataSources, [parameters]);
    };
    ReportDesignerInitializer.prototype.addReportDialogs = function (func) {
        var _this = this;
        var settings = new _settings_1.ReportDialogSettings(this._designerCallbacks);
        func(settings);
        settings.saveReportDialog && this.addElement('saveReportDialog', function () { return settings.saveReportDialog; });
        if (settings.saveReportDialogLight) {
            this.addElement('saveReportDialogLight', function () { return settings.saveReportDialogLight; });
            this.buildingModel.navigateByReports.save = function (tab) {
                _this.buildingModel.saveReportDialogLight.show(tab);
            };
        }
        settings.openReportDialog && this.addElement('openReportDialog', function () { return settings.openReportDialog; });
        return this;
    };
    ReportDesignerInitializer.prototype.addErrorPanelViewModel = function (element) {
        var _this = this;
        this.addElement('errorPanelViewModel', function () {
            var rightPosition = ko.computed(function () {
                if (_this.buildingModel.designMode()) {
                    return _this.buildingModel.tabPanel.headerWidth();
                }
                else {
                    return _this.buildingModel.reportPreviewModel && _this.buildingModel.reportPreviewModel.tabPanel.headerWidth();
                }
            });
            var leftPosition = ko.computed(function () {
                return _this.buildingModel.designMode() ? 96 : 0;
            });
            var errorPanel = new _errorPanelViewModel_1.ErrorPanelViewModel({
                controlScrollingTool: _this.buildingModel.controlScrollingTool,
                controlsHelper: _this.buildingModel.controlsHelper,
                editableObject: _this.buildingModel.editableObject,
                selection: _this.buildingModel.selection,
                undoEngine: function () { return _this.buildingModel.undoEngine(); },
                onClick: function () {
                    if (!_this.buildingModel.designMode()) {
                        _this.buildingModel.reportPreviewModel.reportPreview.previewVisible(false);
                        _this.buildingModel.reportPreviewModel.reportPreview.deactivate();
                    }
                },
                position: {
                    left: leftPosition,
                    right: rightPosition
                }
            });
            errorPanel._disposables.push(rightPosition, leftPosition);
            _this._addDisposable(_this._reportcontext.subscribe(function (newVal) {
                errorPanel.clear();
                if (newVal != null) {
                    errorPanel.subscribeProvider(newVal.reportErrorProvider);
                    errorPanel.subscribeProvider(newVal.runtimeErrorProvider);
                }
            }));
            var $root = $(element);
            var $window = $(window);
            var $progress = $root.find('.dxrd-error-panel');
            var updateProgressBarPosition = _sizeUtils_1.getDockedElementCallback($progress, $root, $window, '.dxrd-error-panel', { bottom: true });
            _this._addDisposable(errorPanel.collapsed.subscribe(function () {
                updateProgressBarPosition(element);
            }));
            var wrapped = function () { return updateProgressBarPosition(element); };
            _this._onAfterRenderCallbacks.push(function () { return updateProgressBarPosition(element); });
            window.addEventListener('scroll', wrapped);
            _this._addDisposable({
                dispose: function () {
                    window.removeEventListener('scroll', wrapped);
                }
            });
            return errorPanel;
        });
        return this;
    };
    ReportDesignerInitializer.prototype.addNavigateToControl = function (element) {
        this.addElement('controlScrollingTool', function () {
            return new _controlScrollingTool_1.ControlScrollingTool(element);
        });
        return this;
    };
    ReportDesignerInitializer.prototype.addFlagsAndInitProperties = function (element) {
        var _this = this;
        this.addElement('validationMode', function () { return ko.computed({
            read: function () {
                return _this.buildingModel.surface() && _this.buildingModel.surface().validationMode();
            }, write: function (newVal) {
                _this.buildingModel.surface().validationMode(newVal);
            }
        }); });
        this.addElement('isDirty', function () { return ko.computed({
            read: function () {
                return _this.buildingModel.navigateByReports.currentTab() && _this.buildingModel.navigateByReports.currentTab().isDirty();
            },
            write: function (newVal) {
                _this.buildingModel.navigateByReports.currentTab() && _this.buildingModel.navigateByReports.currentTab().isDirty(newVal);
            }
        }); });
        this.addElement('designMode', function () { return ko.observable(true); });
        this.addIsLoading(function () {
            var isLoading = ko.observable(true);
            _this.buildingModel.navigateByReports.init(isLoading);
            return isLoading;
        });
        this.addElement('rootStyle', function () { return 'dxrd-designer dxd-back-primary-invariant'; });
        this.addElement('selectedPath', function () { return ko.observable(null); });
        this.addElement('actionsGroupTitle', function () { return function () { return analytics_internal_1.getControlTypeName(_this.getModel().editableObject()) + ' ' + analytics_utils_1.getLocalization('Tasks', 'AnalyticsCoreStringId.Tasks'); }; });
        this.addElement('updateFont', function () { return function (values) {
            analytics_widgets_internal_1.availableFonts(__assign({}, analytics_widgets_internal_1.availableFonts(), values));
        }; });
        this.addElement('afterRender', function () { return function () {
            _this._onAfterRenderCallbacks.forEach(function (x) { return x(); });
            _this._onAfterRenderCallbacks.splice(0);
            delete _this.buildingModel.afterRender;
        }; });
        this.addElement('sortFont', function () { return function () {
            var sortedObj = {};
            var fonts = analytics_widgets_internal_1.availableFonts.peek();
            Object.keys(fonts).sort(function (a, b) { return a.localeCompare(b); }).forEach(function (key) { return sortedObj[key] = fonts[key]; });
            analytics_widgets_internal_1.availableFonts(sortedObj);
        }; });
        this.addElement('zoomStep', function () { return ko.observable(0.05); });
        this.addElement('surfaceSize', function () { return ko.observable(0); });
        if (!element)
            return this;
        this.addElement('fullScreen', function () { return _utils_2.createFullscreenComputed(element, _this); });
        this.addElement('drawCrossbandContent', function () { return ko.observable(true); });
        return this;
    };
    ReportDesignerInitializer.prototype.addPreview = function (options) {
        var _this = this;
        var errorsAction = function (response) {
            if (!!response.errors)
                _this.reportContext() && _this.reportContext().runtimeErrorProvider.errors(response.errors);
        };
        _initializer_1.createPreview({
            model: {
                parametersInfo: options.parametersInfo,
                handlerUri: options.handlerUri,
                previewVisible: false,
                rtl: options.rtl,
                accessibilityCompliant: false,
                exportSettings: options.exportSettings
            },
            element: options.element,
            callbacks: __assign({}, options.callbacks, { _onGetBuildStatus: errorsAction, _onGetDocumentDetails: errorsAction })
        })
            .done(function (reportPreviewModel) {
            _this.addElement('reportPreviewModel', function () {
                _this._addDisposable(reportPreviewModel.reportPreview.previewVisible.subscribe(function (newValue) {
                    _this.buildingModel.designMode(!newValue);
                    if (!newValue && _this._updateCallback)
                        _this._updateCallback();
                }));
                return reportPreviewModel;
            });
            _this._addDisposable(reportPreviewModel);
        });
        return this;
    };
    ReportDesignerInitializer.prototype.addReportUrls = function (subreports) {
        this.addElement('reportUrls', function () {
            return ko.observableArray(types_1.convertMapToKeyValuePair(subreports));
        });
        return this;
    };
    ReportDesignerInitializer.prototype._wrapActionProvider = function (actionsProvider) {
        return {
            getActions: function (context) {
                return actionsProvider() && actionsProvider().getActions(context) || [];
            }
        };
    };
    ReportDesignerInitializer.prototype.initializeFieldListActionProviders = function (func) {
        var _this = this;
        if (func === void 0) { func = function () {
            var providers = [];
            if (_this._calculatedFieldsSource)
                providers.push(_this._wrapActionProvider(_this._calculatedFieldsSource));
            if (_this._parameters)
                providers.push(_this._wrapActionProvider(_this._parameters));
            if (_this._dataSourceActionProvider)
                providers.push(_this._dataSourceActionProvider);
            if (_this._jsonDataSourceEditor)
                providers.push(_this._jsonDataSourceEditor);
            if (_this._sqlDataSourceEditor)
                providers.push(_this._sqlDataSourceEditor);
            if (_this._objectDataSourceEditor)
                providers.push(_this._objectDataSourceEditor);
            return providers;
        }; }
        this.addElement('fieldListActionProviders', func);
        return this;
    };
    ReportDesignerInitializer.prototype.initializeCalculatedFieldsSource = function () {
        var _this = this;
        var calculatedFieldsSource = ko.computed(function () { return _this._reportcontext() && _this._reportcontext().calcFieldsSource; });
        this.addElement('calculatedFieldsSource', function () { return calculatedFieldsSource; });
        this._calculatedFieldsSource = calculatedFieldsSource;
        return this;
    };
    ReportDesignerInitializer.prototype.initializeFieldListItemsExtenders = function () {
        var _this = this;
        var fieldListItemsExtenders = ko.computed(function () { return _this._reportcontext() && _this._reportcontext().fieldListItemsExtenders; });
        this.addElement('fieldListItemsExtenders', function () { return fieldListItemsExtenders; });
        return this;
    };
    ReportDesignerInitializer.prototype.initializeParameters = function () {
        var _this = this;
        var parameters = ko.computed(function () { return _this._reportcontext() && _this._reportcontext().parameters; });
        this.addElement('parameters', function () { return parameters; });
        this._parameters = parameters;
        return this;
    };
    ReportDesignerInitializer.prototype.initializeFieldListProvider = function () {
        var _this = this;
        var fieldListProvider = ko.computed(function () { return _this._reportcontext() && _this._reportcontext().fieldListProvider; });
        this.addElement('fieldListProvider', function () { return fieldListProvider; });
        return this;
    };
    ReportDesignerInitializer.prototype.initializeReportItemsProvider = function () {
        var _this = this;
        var reportItemsProvider = ko.computed(function () { return _this._reportcontext() && _this._reportcontext().reportItemsProvider; });
        this.addElement('reportItemsProvider', function () { return reportItemsProvider; });
        return this;
    };
    ReportDesignerInitializer.prototype.initializeDataBindingsProvider = function () {
        var _this = this;
        var dataBindingsProvider = ko.computed(function () { return _this._reportcontext() && _this._reportcontext().dataBindingsProvider; });
        this.addElement('dataBindingsProvider', function () { return dataBindingsProvider; });
        return this;
    };
    ReportDesignerInitializer.prototype.initializeDisplayNameProvider = function () {
        var _this = this;
        var displayNameProvider = ko.computed(function () { return _this._reportcontext() && _this._reportcontext().displayNameProvider; });
        this.addElement('displayNameProvider', function () { return displayNameProvider; });
        this.addElement('getDisplayNameByPath', function () { return function (path, value) { return displayNameProvider().getDisplayNameByPath(path, value); }; });
        return this;
    };
    ReportDesignerInitializer.prototype.initializeExpressionDisplayNameProvider = function () {
        var _this = this;
        var expressionDisplayNameProvider = ko.computed(function () { return _this._reportcontext() && _this._reportcontext().expressionDisplayNameProvider; });
        this.addElement('expressionDisplayNameProvider', function () { return expressionDisplayNameProvider; });
        return this;
    };
    ReportDesignerInitializer.prototype.initializeDataSourceHelper = function () {
        var _this = this;
        var dataSourceHelper = ko.computed(function () { return _this._reportcontext() && _this._reportcontext().dataSourceHelper; });
        this.addElement('dataSourceHelper', function () { return dataSourceHelper; });
        var fieldListDataSourceHelper = ko.computed(function () { return _this._reportcontext() && _this._reportcontext().fieldListDataSourceHelper; });
        this.addElement('fieldListDataSources', function () { return ko.computed(function () { return fieldListDataSourceHelper() && fieldListDataSourceHelper().fieldListDataSources(); }); });
        this._addDisposable(fieldListDataSourceHelper);
        return this;
    };
    ReportDesignerInitializer.prototype.addSelection = function (func) {
        var _this = this;
        if (func === void 0) { func = function (settings) {
            settings.selection = _this._selection;
            var rtl = ko.computed(function () { return _this.buildingModel.surface() && _this.buildingModel.surface().rtl(); });
            var snapLinesCollector = new _reportSnapLinesCollector_1.ReportSnapLinesCollector(rtl);
            _this._addDisposable(rtl);
            settings.snapHelper = new analytics_internal_1.SnapLinesHelper(_this.buildingModel.surface, analytics_internal_1.SnapLinesHelper.snapTolerance, snapLinesCollector);
            settings.editableObject = analytics_internal_1.CombinedObject.getEditableObject(settings.selection, _this.buildingModel.undoEngine, function (propertyName, controls, undoEngune) { return _this._customMergeEngine.customMerge(propertyName, controls, undoEngune); }).extend({ throttle: 1 });
            settings.addDragDrop(function (dragDropSettings) {
                dragDropSettings.dragHelperContent = new analytics_internal_1.DragHelperContent(settings.selection);
                dragDropSettings.dragDropStarted = analytics_internal_1.DragDropHandler.started;
                dragDropSettings.addDragDropHandler('dragHandler', new _selectionDragDropHandler_1.SelectionDragDropHandler(_this.buildingModel.canAddItems, _this.buildingModel.surface, settings.selection, _this.buildingModel.undoEngine, settings.snapHelper, dragDropSettings.dragHelperContent));
                dragDropSettings.addDragDropHandler('toolboxDragHandler', new _reportToolboxDragDropHandler_1.ReportToolboxDragDropHandler(_this.buildingModel.surface, _this._selection, _this.buildingModel.undoEngine, settings.snapHelper, dragDropSettings.dragHelperContent, settings_1.controlsFactory(), _this._designerCallbacks.componentAdded));
                dragDropSettings.addDragDropHandler('fieldDragHandler', new _fieldListDragDropHandler_1.FieldListDragDropHandler(_this.buildingModel.canAddItems, _this.buildingModel.surface, _this._selection, _this.buildingModel.undoEngine, settings.snapHelper, dragDropSettings.dragHelperContent, _this.buildingModel.fieldListDataSources, _this._designerCallbacks.componentAdded));
            });
            settings.addResize(function (resizeSettings) {
                resizeSettings.handler = {
                    starting: function () {
                        _this.buildingModel.inlineTextEdit.visible() &&
                            _this.buildingModel.inlineTextEdit['_showInline'](false);
                        _this.buildingModel['richInlineControl'] &&
                            _this.buildingModel['richInlineControl'].visible() &&
                            _this.buildingModel['richInlineControl']['_showInline'](false);
                        _this._selection.expectClick = true;
                        _this.buildingModel.undoEngine().start();
                    },
                    stopped: function () {
                        _this.buildingModel.undoEngine().end();
                        setTimeout(function () { _this._selection.expectClick = false; }, 100);
                    },
                    disabled: analytics_internal_1.DragDropHandler.started,
                    snapHelper: settings.snapHelper
                };
            });
        }; }
        _super.prototype.addSelection.call(this, func);
        return this;
    };
    ReportDesignerInitializer.prototype.addToolboxItems = function (items) {
        _super.prototype.addToolboxItems.call(this, items);
        return this;
    };
    ReportDesignerInitializer.prototype.addGroupedToolboxItems = function () {
        _super.prototype.addGroupedToolboxItems.call(this);
        return this;
    };
    ReportDesignerInitializer.prototype.addControlProperties = function (editors, groups, accessibilityProvider) {
        _super.prototype.addControlProperties.call(this, editors, groups, undefined, this._accessibilityProvider);
        return this;
    };
    ReportDesignerInitializer.prototype.createControlProperties = function (editors, groups, accessibilityProvider) {
        var properties = _super.prototype.createControlProperties.call(this, editors, groups, accessibilityProvider);
        properties.createEditorAddOn = function (editor) {
            var editorAddOn = new _designerEditorAddOn_1.ValueEditorAddOn(editor, properties.popupService);
            var editorExression = new _designerEditorAddOn_1.ExpressionEditorAddOn(editor, properties.popupService, 'dxrd-svg-properties-propertyexpression');
            editor._disposables.push(editorAddOn, editorExression);
            return {
                templateName: 'dx-editor-addons',
                data: [editorAddOn, editorExression]
            };
        };
        return properties;
    };
    ReportDesignerInitializer.prototype.addMenu = function (func) {
        if (func === void 0) { func = function (settings) { return void 0; }; }
        var settings = new _reportMenuSettings_1.ReportMenuSettings();
        func(settings);
        this._disposables.push(settings);
        analytics_internal_1.extend(this.getModel(), settings.generate());
        return this;
    };
    ReportDesignerInitializer.prototype.addControlsHelper = function (func) {
        var _this = this;
        if (func === void 0) { func = function (settings) {
            var helper = ko.computed(function () { return _this._reportcontext() && _this._reportcontext().controlsHelper; });
            _this._addDisposable(helper);
            var controlHelper = new _reportDesignerControlsHelper_1.ReportDesignerControlsHelper(helper);
            settings
                .addControlsHelper(controlHelper)
                .addControlsStore();
        }; }
        _super.prototype.addControlsHelper.call(this, func);
        return this;
    };
    ReportDesignerInitializer.prototype.addSmartTagModel = function () {
        var smartTagFactory = settings_1.smartTagFactory();
        !smartTagFactory['default'] && analytics_internal_1.extend(smartTagFactory, {
            'default': function (reportElement) {
                var result = [];
                if (settings_1.DataBindingMode() !== _dataBindingMode_1.DataBindingMode.Bindings)
                    result.push(new expressionSmartTag_1.ExpressionSmartTag(reportElement));
                return result;
            }
        });
        var smartTagHelper = new smartTagContainer_1.SmartTagModel(this._selection, this.buildingModel.surface, this.buildingModel['verticalScrollOffset']);
        this.addElement('smartTagModel', function () { return smartTagHelper; });
        return this;
    };
    ReportDesignerInitializer.prototype.setControlsHelperFilter = function (filter) {
        this.buildingModel.controlsStore.setFilter(filter);
        return this;
    };
    ReportDesignerInitializer.prototype._createPropertiesTab = function () {
        var _this = this;
        return new analytics_utils_1.TabInfo({
            text: 'Properties',
            template: 'dxrd-propertiestab',
            model: this.buildingModel.propertyGrid,
            localizationId: 'AnalyticsCoreStringId.Cmd_Properties',
            visible: ko.pureComputed(function () { return !!_this.buildingModel.model(); }),
            disabled: ko.pureComputed(function () { return _this.buildingModel.propertyGrid.focusedItem() instanceof Array; })
        });
    };
    ReportDesignerInitializer.prototype._createExpressionsTab = function (context) {
        var _this = this;
        var expressionGridModel = ko.computed(function () {
            var editableObject = _this.buildingModel.editableObject();
            return editableObject && editableObject.expressionObj;
        });
        var expressionGrid = null;
        this._addDisposable(context.subscribe(function (newVal) {
            expressionGrid.cleanEditors();
        }));
        expressionGrid = new analytics_widgets_1.ObjectProperties(expressionGridModel);
        this._addDisposable(expressionGrid);
        this._addDisposable(expressionGridModel);
        var expressionTab = new analytics_utils_1.TabInfo({
            text: 'Expressions',
            template: 'dxrd-expressions-tab',
            model: expressionGrid,
            localizationId: 'DevExpress.XtraReports.UI.XRControl.Expressions',
            imageClassName: 'expressions',
            imageTemplateName: 'dxrd-svg-tabs-expressions',
            visible: ko.pureComputed(function () { return _this.buildingModel.model() && _this.buildingModel.model()._dataBindingMode() !== _dataBindingMode_1.DataBindingMode.Bindings; }),
            disabled: ko.pureComputed(function () {
                return !expressionGridModel();
            })
        });
        this._addDisposable(expressionTab.active.subscribe(function (newVal) {
            if (newVal && expressionTab.visible()) {
                _this.buildingModel.controlsStore.setFilter(_utils_1.isControl);
            }
            else {
                _this.buildingModel.controlsStore.setFilter(_utils_1.isNotParameter);
            }
        }));
        return expressionTab;
    };
    ReportDesignerInitializer.prototype._createReportExplorerTab = function () {
        var _this = this;
        var reportExplorer = new _reportExplorer_1.ReportExplorerModel(this.buildingModel.model, this.buildingModel.editableObject, function () {
            _this.buildingModel.tabPanel.selectTab({ model: _this.buildingModel.tabPanel.tabs[0] });
        }, new _reportExplorerDragDropHandler_1.ReportExplorerDragDropHandler(this.buildingModel.canAddItems, this.buildingModel.surface, this.buildingModel.selection, this.buildingModel.undoEngine, this.buildingModel.dragHelperContent), this.buildingModel.selection);
        this._addDisposable(reportExplorer);
        return new analytics_utils_1.TabInfo({
            text: 'Report Explorer',
            template: 'dxrd-reportexplorerwrapper',
            model: reportExplorer,
            localizationId: 'ReportStringId.UD_Title_ReportExplorer',
            imageClassName: 'reportexplorer',
            imageTemplateName: 'dxrd-svg-tabs-reportexplorer',
            visible: ko.pureComputed(function () { return !!_this.buildingModel.model(); })
        });
    };
    ReportDesignerInitializer.prototype._createFieldListTab = function (designerCallbacks) {
        var _this = this;
        var treeListOptions = {
            itemsProvider: this.buildingModel.fieldListProvider,
            selectedPath: this.buildingModel.selectedPath,
            treeListController: new _fieldListController_1.FieldListController(this.buildingModel.fieldListActionProviders, analytics_internal_1.createActionWrappingFunction('WrapForFieldList', function (model, handler) {
                _this.buildingModel.undoEngine().start();
                var result = handler(model);
                _this.buildingModel.undoEngine().end();
                if (result && result.name) {
                    _this.buildingModel.selectedPath(model.path + '.' + ko.unwrap(result.name));
                }
            }), this.buildingModel.fieldDragHandler, designerCallbacks.customizeFieldListActions)
        }, popoverVisible = ko.observable(false), fieldListModel = {
            treeListOptions: treeListOptions,
            popoverVisible: popoverVisible,
            addDataSourceBtnVisible: ko.pureComputed(function () {
                var dsHelper = ko.unwrap(_this.buildingModel.dataSourceHelper);
                return dsHelper && dsHelper.availableDataSources && dsHelper.availableDataSources.length > 0;
            }),
            showPopover: function () {
                popoverVisible(true);
            },
            dataSourceListItems: function () {
                var dsHelper = ko.unwrap(_this.buildingModel.dataSourceHelper);
                return dsHelper && dsHelper.availableDataSources;
            },
            itemClickAction: function (e) {
                popoverVisible(false);
                var data = e.itemData;
                data.id = analytics_internal_1.guid().replace(/-/g, '');
                _dataUtils_1.addDataSourceToReport(ko.unwrap(_this.buildingModel.dataSourceHelper), _this.buildingModel.model(), _this.buildingModel.undoEngine(), _this.buildingModel.fieldListProvider(), data, true);
            }
        };
        return new analytics_utils_1.TabInfo({
            text: 'Fields',
            template: 'dxrd-fieldlistwrapper',
            model: fieldListModel,
            localizationId: 'ReportStringId.UD_Title_FieldList',
            imageClassName: 'fieldlist',
            imageTemplateName: 'dxrd-svg-tabs-fieldlist',
            visible: ko.pureComputed(function () { return !!_this.buildingModel.model(); })
        });
    };
    ReportDesignerInitializer.prototype.addTabPanel = function (panel, addTabInfo) {
        var _this = this;
        if (addTabInfo === void 0) { addTabInfo = function () {
            return [
                _this._createPropertiesTab(),
                _this._createExpressionsTab(_this._reportcontext),
                _this._createFieldListTab(_this._designerCallbacks),
                _this._createReportExplorerTab()
            ];
        }; }
        _super.prototype.addTabPanel.call(this, panel, addTabInfo);
        var contextSubscription = this._reportcontext.subscribe(function (newVal) {
            if (!!newVal) {
                contextSubscription.dispose();
                _this.buildingModel.tabPanel.collapsed(false);
            }
        });
        this._addDisposable(contextSubscription);
        return this;
    };
    ReportDesignerInitializer.prototype._createActionsStorage = function (actions) {
        var object = {};
        for (var i = actions.length - 1; i > -1; i--) {
            object[actions[i].id] = actions[i].clickAction;
        }
        return object;
    };
    ReportDesignerInitializer.prototype.addOpenReportMethod = function () {
        var _this = this;
        this.addElement('openReport', function () { return function (url) {
            _this.buildingModel.navigateByReports.addTab(null, ko.observable(url));
        }; });
        return this;
    };
    ReportDesignerInitializer.prototype.addShowPreviewMethod = function () {
        var _this = this;
        this.addElement('showPreview', function () { return function () {
            var reportPreview = _this.buildingModel.reportPreviewModel.reportPreview;
            reportPreview.previewVisible(true);
            if (!_this.buildingModel.model()) {
                var subscription = _this.buildingModel.model.subscribe(function (newVal) {
                    subscription.dispose();
                    reportPreview.initialize(_reportPreviewService_1.ReportPreviewService.initializePreview(_this.buildingModel.model()));
                });
            }
            else {
                reportPreview.initialize(_reportPreviewService_1.ReportPreviewService.initializePreview(_this.buildingModel.model()));
            }
        }; });
        return this;
    };
    ReportDesignerInitializer.prototype.initializeUIEffects = function (applyBindings, element) {
        var _this = this;
        this._addDisposable(this.buildingModel.editableObject.subscribe(function () {
            var $scrollView = $('.dxrd-designer .dxrd-properties-wrapper').find('.dx-scrollview');
            if ($scrollView.length) {
                var scrollViewInstance = scroll_view_1.default['getInstance']($scrollView.get(0));
                scrollViewInstance && scrollViewInstance['scrollTo'] && scrollViewInstance['scrollTo'](0);
            }
        }));
        var updateSurfaceContentSize__ = analytics_internal_1.updateSurfaceContentSize(this.buildingModel.surfaceSize, element, this.rtl);
        var updateSurfaceContentSizeLocalizationMode__ = _utils_1.updateSurfaceContentSizeLocalizationMode(this.buildingModel.surfaceSize, element, this.rtl);
        var updateSurfaceContentSize_ = function () {
            if (!_this.buildingModel)
                return;
            if (_this.buildingModel.localizationMode()) {
                updateSurfaceContentSizeLocalizationMode__();
            }
            else {
                updateSurfaceContentSize__();
            }
            var $root = $(element).find('.dxrd-designer').eq(0);
            var $contentPanel = $root.find('.dxrd-surface-wrapper .dxrd-content-panel-wrapper').eq(0);
            areaHeight($contentPanel.height());
            areaWidth($contentPanel.width());
        };
        var updateContentSizeTimeout = null;
        var updateSurfaceContentSize_async = function () {
            updateContentSizeTimeout && clearTimeout(updateContentSizeTimeout);
            updateContentSizeTimeout = setTimeout(function () {
                updateSurfaceContentSize_();
            }, 1);
        };
        var reportHeight = ko.computed(function () {
            if (_this.buildingModel.surface()) {
                updateSurfaceContentSize_async();
                return _this.buildingModel.surface().effectiveHeight();
            }
        });
        var reportWidth = ko.computed(function () {
            if (_this.buildingModel.surface()) {
                updateSurfaceContentSize_async();
                return _this.buildingModel.surface().pageWidth();
            }
        });
        var areaHeight = ko.observable(reportHeight());
        var areaWidth = ko.observable(reportWidth());
        var verticalScrollOffset = ko.observable(0);
        var horizontalScrollOffset = ko.observable(0);
        this._addDisposable(ko.computed(function () {
            var horizontalOffset = 0;
            var verticalOffset = 0;
            [0, 0].forEach(function () {
                verticalOffset = (areaHeight() - horizontalOffset) < reportHeight() ? 20 : 0;
                horizontalOffset = (areaWidth() - verticalOffset) < reportWidth() ? 20 : 0;
            });
            horizontalScrollOffset(horizontalOffset);
            verticalScrollOffset(verticalOffset);
        }));
        this._updateCallback = function () {
            if (!_this.buildingModel.reportPreviewModel.reportPreview.previewVisible())
                updateSurfaceContentSize_();
        };
        window.addEventListener('resize', this._updateCallback);
        this.buildingModel.onViewPortScroll = function (viewPort) {
            var $viewPort = $(viewPort), $surface = $viewPort.closest('.dxrd-surface');
            $surface.find('.dxrd-bands-panel-wrapper').scrollTop($viewPort.scrollTop());
            $surface.find('.dxrd-hruler-wrapper').scrollLeft($viewPort.scrollLeft());
        };
        this.addElement('verticalScrollOffset', function () { return verticalScrollOffset; });
        this.addElement('horizontalScrollOffset', function () { return horizontalScrollOffset; });
        this._addDisposable(reportHeight);
        this._addDisposable(reportWidth);
        this._addDisposable(this.buildingModel.tabPanel.width.subscribe(function () {
            updateSurfaceContentSize_async();
        }));
        this._addDisposable(this.buildingModel.localizationEditor.width.subscribe(function () {
            updateSurfaceContentSize_async();
        }));
        this._addDisposable(this.buildingModel.localizationMode.subscribe(function (newVal) {
            updateSurfaceContentSize_async();
        }));
        this.buildingModel.updateSurfaceSize = function () {
            updateSurfaceContentSize_();
        };
        this._addDisposable(this.buildingModel.navigateByReports.height.subscribe(function () {
            updateSurfaceContentSize_async();
        }));
        if (applyBindings) {
            this.buildingModel.updateSurfaceSize();
        }
        return this;
    };
    ReportDesignerInitializer.prototype._createNewViaWizardAction = function (reportWizard, designerModel, state) {
        var _this = this;
        var menuAction = {
            id: actionId_1.ActionId.NewReportViaWizard,
            container: 'menu',
            text: 'New via Wizard',
            displayText: function () { return analytics_utils_1.getLocalization('New via Wizard', _localizationStringId_1.StringId.NewViaWizard); },
            imageClassName: 'dxrd-image-new-via-wizard',
            imageTemplateName: 'dxrd-svg-menu-new_via_wizard',
            disabled: ko.observable(false),
            selected: ko.observable(false),
            visible: true,
            hotKey: { ctrlKey: true, keyCode: 'W'.charCodeAt(0) },
            clickAction: function () { return designerModel._wizardRunner.run('NewViaReportWizard'); }
        };
        designerModel._wizardRunner.registerCommand('NewViaReportWizard', function () {
            if (reportWizard instanceof fullscreenReportWizard_1.FullscreenReportWizard) {
                menuAction.selected(true);
                designerModel.appMenuVisible(true);
                designerModel.isMenuCollapsed(true);
                reportWizard._onClose && reportWizard._onClose(function () {
                    menuAction.selected(false);
                    designerModel.isMenuCollapsed(false);
                });
            }
            reportWizard.itemsProvider(_this._createEmptyReportItemsProvider());
            reportWizard.initialize();
            reportWizard.start(function (reportWizardState) {
                designerModel.isLoading(true);
                var deferred = $.Deferred();
                var createReport = function (wizardState) {
                    _reportWizardService_1.ReportWizardService.generateReportFromWizardState(wizardState, reportWizard._requestModelType, state(), function (wizardModel) {
                        reportWizard.events.call('beforeFinish', { state: wizardState, wizardModel: wizardModel });
                    })
                        .done(function (result) {
                        var newReport = new xrReport_1.ReportViewModel(JSON.parse(result.reportModel));
                        newReport.dataSourceRefs = result.dataSourceRefs;
                        designerModel.navigateByReports.addTab(newReport, ko.observable(''));
                        designerModel.isDirty(true);
                        designerModel.isLoading(false);
                        deferred.resolve(newReport);
                    })
                        .fail(function () { deferred.reject(); });
                };
                if (reportWizardState.jsonDataSourceWizard.jsonSource && reportWizardState.newDataSource) {
                    _reportWizardService_1.ReportWizardService.createNewJsonDataSource(reportWizardState.jsonDataSourceWizard, _jsonDataSourceEditor_1.JsonDataSourceEditor.createJsonDataSourceInfo)
                        .done(function (dataSource) {
                        reportWizardState.dataSource = dataSource;
                        delete reportWizardState.newDataSource;
                        if (designerModel.connections.json().every(function (x) { return x.name !== reportWizardState.jsonDataSourceWizard.newConnectionName; })) {
                            designerModel.connections.json.push({
                                description: reportWizardState.jsonDataSourceWizard.newConnectionName,
                                name: reportWizardState.jsonDataSourceWizard.newConnectionName
                            });
                        }
                        createReport(reportWizardState);
                    }).fail(function () { return deferred.reject(); });
                }
                else {
                    createReport(reportWizardState);
                }
                return deferred.promise();
            });
        }, function () {
            designerModel.appMenuVisible(false);
            reportWizard.isVisible(false);
        });
        return menuAction;
    };
    ReportDesignerInitializer.prototype._createLocalizationModeAction = function (localizationEditor, report, designerModel) {
        var menuAction = {
            id: actionId_1.ActionId.Localization,
            container: 'menu',
            text: 'Localization...',
            displayText: function () { return analytics_utils_1.getLocalization('Localization...', 'ASPxReportsStringId.ReportDesigner_MenuItem_Localization'); },
            imageClassName: 'dxrd-image-menu-localization',
            imageTemplateName: 'dxrd-svg-menu-localization',
            disabled: ko.pureComputed(function () { return !report(); }),
            visible: true,
            selected: ko.observable(false),
            clickAction: function () {
                designerModel._wizardRunner.run('LocalizationCommand');
            }
        };
        var start = function () {
            designerModel.appMenuVisible(true);
            designerModel.isMenuCollapsed(true);
            menuAction.selected(true);
            designerModel.localizationMode(true);
            localizationEditor.start();
            $('.dx-designer .dxrd-surface-wrapper').addClass('dxrd-surface-localization-mode');
            localizationEditor.translateHelper.move('dxrd-toolbar-wrapper');
            localizationEditor.translateHelper.move('dxrd-tab-panel-wrapper', '+', 'translateX');
            localizationEditor.translateHelper.move('dxrd-navigation-panel-wrapper', '+');
            localizationEditor.translateHelper.move('dxrd-error-panel', '+');
        };
        var end = function () {
            menuAction.selected(false);
            designerModel.isMenuCollapsed(false);
            designerModel.appMenuVisible(false);
            designerModel.localizationMode(false);
            localizationEditor.finish();
            $('.dx-designer .dxrd-surface-wrapper').removeClass('dxrd-surface-localization-mode');
            localizationEditor.translateHelper.reset('dxrd-toolbar-wrapper');
            localizationEditor.translateHelper.reset('dxrd-tab-panel-wrapper');
            localizationEditor.translateHelper.reset('dxrd-navigation-panel-wrapper');
            localizationEditor.translateHelper.reset('dxrd-error-panel');
        };
        designerModel._wizardRunner.registerCommand('LocalizationCommand', start, end);
        return menuAction;
    };
    ReportDesignerInitializer.prototype._createDesignInReportWizardAction = function (reportWizard, designerModel, state) {
        var _this = this;
        var menuAction = {
            id: actionId_1.ActionId.ReportWizard,
            container: 'menu',
            text: 'Design in Report Wizard...',
            displayText: function () { return analytics_utils_1.getLocalization('Design in Report Wizard...', 'ReportStringId.Verb_ReportWizard'); },
            imageClassName: 'dxrd-image-run-wizard',
            imageTemplateName: 'dxrd-svg-menu-run_wizard',
            disabled: ko.pureComputed(function () { return !designerModel.model() || designerModel.model().language() !== metadata_1.defaultCulture; }),
            visible: true,
            selected: ko.observable(false),
            clickAction: function () {
                designerModel._wizardRunner.run('DesignInReportWizard');
            }
        };
        var start = function () {
            if (reportWizard instanceof fullscreenReportWizard_1.FullscreenReportWizard) {
                designerModel.appMenuVisible(true);
                designerModel.isMenuCollapsed(true);
                menuAction.selected(true);
                reportWizard._onClose && reportWizard._onClose(function () {
                    menuAction.selected(false);
                    designerModel.isMenuCollapsed(false);
                });
            }
            reportWizard.itemsProvider(designerModel.dataBindingsProvider());
            reportWizard.initialize(reportWizardStateCreating_1.createReportWizardState(designerModel.model()));
            reportWizard.start(function (reportWizardState) {
                var deferred = $.Deferred();
                if (reportWizardState.newDataSource) {
                    var ds = chooseAvailableDataSourcePage_1._restoreDataSourceFromState(reportWizardState.newDataSource);
                    ds.name = designerModel.model().dataSourceHelper().getUniqueDataSourceName(ds.name);
                    reportWizardState.newDataSource = chooseAvailableDataSourcePage_1._convertToStateDataSource(ds);
                }
                var createReport = function (wizardState) {
                    designerModel.isLoading(true);
                    var _patchedInfo = _this._patchReportBeforeRedesign(designerModel.model(), wizardState);
                    _reportWizardService_1.ReportWizardService.generateReportFromWizardState(wizardState, reportWizard._requestModelType, state(), function (wizardModel) {
                        reportWizard.events.call('beforeFinish', { state: wizardState, wizardModel: wizardModel });
                    }, _patchedInfo.json)
                        .done(function (result) {
                        designerModel.navigateByReports.currentTab().undoEngine.start();
                        designerModel.isDirty(true);
                        var newReport = _utils_1.createReportViewModel(result, designerModel.model());
                        designerModel.model(newReport);
                        designerModel.navigateByReports.currentTab().undoEngine.end();
                        designerModel.isLoading(false);
                        deferred.resolve(newReport);
                    })
                        .fail(function () {
                        _this._restoreAfterFail(designerModel.model(), _patchedInfo.removedDataSourceInfos);
                        designerModel.isLoading(false);
                        deferred.reject();
                    });
                };
                if (reportWizardState.jsonDataSourceWizard.jsonSource && reportWizardState.newDataSource) {
                    _reportWizardService_1.ReportWizardService.createNewJsonDataSource(reportWizardState.jsonDataSourceWizard, _jsonDataSourceEditor_1.JsonDataSourceEditor.createJsonDataSourceInfo)
                        .done(function (dataSource) {
                        reportWizardState.dataSource = dataSource;
                        delete reportWizardState.newDataSource;
                        createReport(reportWizardState);
                    }).fail(function () { return deferred.reject(); });
                }
                else {
                    createReport(reportWizardState);
                }
                return deferred.promise();
            });
        };
        var end = function () {
            designerModel.appMenuVisible(false);
            reportWizard.isVisible(false);
        };
        designerModel._wizardRunner.registerCommand('DesignInReportWizard', start, end);
        designerModel._wizardRunner.registerCommand('ReportWizard', start, end);
        return menuAction;
    };
    ReportDesignerInitializer.prototype._createMultiQueryDataSourceWizardAction = function (multiQueryDataSourceWizard, designerModel) {
        var menuAction = {
            id: actionId_1.ActionId.AddMultiQuerySqlDataSource,
            container: 'menu',
            text: 'Add Data Source...',
            displayText: function () { return analytics_utils_1.getLocalization('Add Data Source...', 'ASPxReportsStringId.ReportDesigner_Wizard_AddDataSource'); },
            imageClassName: 'dxrd-image-add-datasource',
            imageTemplateName: 'dxrd-svg-menu-add_datasource',
            disabled: ko.pureComputed(function () { return !designerModel.model(); }),
            visible: multiQueryDataSourceWizard.canRunWizard(),
            selected: ko.observable(false),
            clickAction: function () { return designerModel._wizardRunner.run('DataSourceWizard'); }
        };
        designerModel._wizardRunner.registerCommand('DataSourceWizard', function () {
            if (multiQueryDataSourceWizard instanceof analytics_wizard_1.FullscreenDataSourceWizard) {
                designerModel.appMenuVisible(true);
                designerModel.isMenuCollapsed(true);
                menuAction.selected(true);
                multiQueryDataSourceWizard._onClose && multiQueryDataSourceWizard._onClose(function () {
                    menuAction.selected(false);
                    designerModel.isMenuCollapsed(false);
                });
            }
            multiQueryDataSourceWizard.initialize(analytics_wizard_1._createDefaultDataSourceWizardState());
            multiQueryDataSourceWizard.start();
        }, function () {
            designerModel.appMenuVisible(false);
            multiQueryDataSourceWizard.isVisible(false);
        });
        return menuAction;
    };
    ReportDesignerInitializer.prototype._customizeDesignerActions = function (designerModel, nextCustomizer, exitDesigner, state, callbacks) {
        var _this = this;
        var report = designerModel.model, reportPreview = designerModel.reportPreviewModel.reportPreview, reportWizard = designerModel.wizard, dataSourceWizard = designerModel.dataSourceWizard, localizationEditor = designerModel.localizationEditor, multiQueryDataSourceWizard = designerModel.multiQueryDataSourceWizard, scriptsEditor = designerModel.scriptsEditor;
        return (function (actions) {
            $.extend(analytics_internal_1.findFirstItemMatchesCondition(actions, function (item) { return item.id === analytics_tools_1.ActionId.Copy; }), { textId: _localizationStringId_1.StringId.Copy });
            if (_settings_2.reportStorageWebIsRegister()) {
                actions.push({
                    id: actionId_1.ActionId.NewReport,
                    container: 'menu',
                    text: 'New',
                    displayText: function () { return analytics_utils_1.getLocalization('New', 'ReportStringId.UD_Capt_NewReport'); },
                    imageClassName: 'dxrd-image-newreport',
                    imageTemplateName: 'dxrd-svg-menu-newreport',
                    disabled: ko.observable(false),
                    visible: true,
                    hotKey: { ctrlKey: true, keyCode: 'N'.charCodeAt(0) },
                    clickAction: function () {
                        designerModel.navigateByReports.addTab(new xrReport_1.ReportViewModel(xrSubreport_1.SubreportViewModel.defaultReport), ko.observable(''));
                        designerModel.isDirty(true);
                    }
                });
                actions.push(_this._createNewViaWizardAction(reportWizard, designerModel, state));
                actions.push({
                    id: actionId_1.ActionId.OpenReport,
                    container: 'menu',
                    text: 'Open',
                    displayText: function () { return analytics_utils_1.getLocalization('Open', _localizationStringId_1.StringId.Open); },
                    imageClassName: 'dxrd-image-open',
                    imageTemplateName: 'dxrd-svg-menu-open',
                    disabled: ko.observable(false),
                    visible: true,
                    hotKey: { ctrlKey: true, keyCode: 'O'.charCodeAt(0) },
                    clickAction: function () {
                        designerModel.openReportDialog.show(designerModel.navigateByReports.currentTab());
                    }
                });
            }
            if (reportWizard) {
                actions.push(_this._createDesignInReportWizardAction(reportWizard, designerModel, state));
            }
            actions.push({
                id: actionId_1.ActionId.ValidateBindings,
                text: 'Validate Bindings',
                displayText: function () { return analytics_utils_1.getLocalization('Validate Bindings', 'ASPxReportsStringId.ReportDesigner_ToolBarItemText_ValidateBindings'); },
                imageClassName: 'dxrd-image-validateBindingMode',
                imageTemplateName: 'dxrd-svg-toolbar-validateBindingMode',
                disabled: ko.pureComputed(function () { return !report(); }),
                selected: designerModel.validationMode,
                visible: true,
                hasSeparator: true,
                clickAction: function () {
                    designerModel.validationMode(!designerModel.validationMode());
                },
            });
            actions.push({
                id: actionId_1.ActionId.FullScreen,
                text: 'Full Screen',
                displayText: function () { return analytics_utils_1.getLocalization('Full Screen', 'ASPxReportsStringId.ToolBarItemText_FullScreen'); },
                imageClassName: 'dxrd-image-fullscreen',
                imageTemplateName: function () { return designerModel.fullScreen() ? 'dxrd-svg-toolbar-fullscreen-exit' : 'dxrd-svg-toolbar-fullscreen'; },
                disabled: ko.observable(false),
                selected: designerModel.fullScreen,
                visible: true,
                clickAction: function () {
                    designerModel.fullScreen(!designerModel.fullScreen());
                },
            });
            _this._disposables.push(designerModel.fullScreen);
            if (scriptsEditor) {
                actions.push({
                    id: actionId_1.ActionId.Scripts,
                    text: 'Scripts',
                    displayText: function () { return analytics_utils_1.getLocalization('Scripts', 'ReportStringId.RepTabCtl_Scripts'); },
                    imageClassName: 'dxrd-image-scripts',
                    imageTemplateName: 'dxrd-svg-toolbar-scripts',
                    disabled: ko.pureComputed(function () { return !report(); }),
                    visible: ko.pureComputed(function () { return !scriptsEditor.editorVisible(); }),
                    hotKey: { ctrlKey: true, keyCode: 'R'.charCodeAt(0) },
                    clickAction: function () {
                        scriptsEditor.initialize();
                        scriptsEditor.editorVisible(true);
                    },
                    hasSeparator: true
                });
            }
            if (reportPreview) {
                var previewAction = {
                    id: actionId_1.ActionId.Preview,
                    text: 'Preview',
                    displayText: function () { return analytics_utils_1.getLocalization('Preview', 'ASPxReportsStringId.ToolBarItemText_Preview'); },
                    imageClassName: 'dxrd-image-preview',
                    imageTemplateName: 'dxrd-svg-preview-print_preview',
                    templateName: reportPreview.canSwitchToDesigner ? 'dxrd-toolbar-two-way-switch' : undefined,
                    disabled: ko.pureComputed(function () { return !report(); }),
                    visible: ko.pureComputed(function () { return !reportPreview.previewVisible(); }),
                    hotKey: { ctrlKey: true, keyCode: 'P'.charCodeAt(0) },
                    clickAction: function () {
                        reportPreview.previewVisible(true);
                        reportPreview.initialize(_reportPreviewService_1.ReportPreviewService.initializePreview(report()));
                    },
                    hasSeparator: true
                };
                previewAction.contentData = {
                    items: [
                        { getDisplayText: function () { return analytics_utils_1.getLocalization('Design', 'ASPxReportsStringId.ToolBarItemText_Design'); }, active: true },
                        { itemData: previewAction, active: false }
                    ]
                };
                actions.push(previewAction);
            }
            if (dataSourceWizard) {
                actions.push({
                    id: actionId_1.ActionId.AddSqlDataSource,
                    container: 'menu',
                    text: 'Add Data Source...',
                    displayText: function () { return analytics_utils_1.getLocalization('Add Data Source...', 'ASPxReportsStringId.ReportDesigner_Wizard_AddDataSource'); },
                    imageClassName: 'dxrd-image-add-datasource',
                    imageTemplateName: 'dxrd-svg-menu-add_datasource',
                    disabled: ko.pureComputed(function () { return !report(); }),
                    visible: false,
                    clickAction: function () {
                        dataSourceWizard.initialize(analytics_wizard_1._createDefaultDataSourceWizardState());
                        dataSourceWizard.start();
                        dataSourceWizard.isVisible(true);
                    }
                });
            }
            if (multiQueryDataSourceWizard) {
                actions.push(_this._createMultiQueryDataSourceWizardAction(multiQueryDataSourceWizard, designerModel));
            }
            if (localizationEditor)
                actions.push(_this._createLocalizationModeAction(localizationEditor, report, designerModel));
            var tab = designerModel.navigateByReports.currentTab;
            actions.push({
                id: actionId_1.ActionId.Save,
                container: 'menu',
                text: 'Save',
                displayText: function () { return analytics_utils_1.getLocalization('Save', _localizationStringId_1.StringId.Save); },
                imageClassName: 'dxrd-image-save',
                imageTemplateName: 'dxrd-svg-menu-save',
                disabled: ko.pureComputed(function () { return !report() || (tab() && !tab().isDirty()); }),
                visible: true,
                hotKey: { ctrlKey: true, keyCode: 'S'.charCodeAt(0) },
                clickAction: function () {
                    if (_settings_2.reportStorageWebIsRegister()) {
                        var currentTab = designerModel.navigateByReports.currentTab();
                        if (!currentTab.isDirty()) {
                            return;
                        }
                        if (!currentTab.context().url()) {
                            designerModel.saveReportDialog.show(currentTab);
                        }
                        else {
                            var args = { report: currentTab.context().report, url: currentTab.context().url(), cancel: false };
                            callbacks.reportSaving && callbacks.reportSaving(args);
                            if (args.cancel)
                                return;
                            reportStorageWeb_1.ReportStorageWeb.setData(currentTab.context().report.serialize(), currentTab.context().url())
                                .done(function (result) {
                                currentTab.isDirty(false);
                                callbacks.reportSaved && callbacks.reportSaved({ report: currentTab.context().report, url: currentTab.context().url() });
                                analytics_internal_1.ShowMessage(analytics_utils_1.getLocalization('The report has been successfully saved.', 'ASPxReportsStringId.ReportDesigner_SaveReport_Message_OK'), analytics_internal_1.NotifyType.success);
                            }).fail(function () {
                                callbacks.onServerError && callbacks.onServerError({ state: 'save', model: { report: currentTab.context().report, url: currentTab.context().url() } });
                            });
                        }
                    }
                    else {
                        report().save();
                    }
                }
            });
            if (_settings_2.reportStorageWebIsRegister()) {
                actions.push({
                    id: actionId_1.ActionId.SaveAs,
                    container: 'menu',
                    text: 'Save As',
                    displayText: function () { return analytics_utils_1.getLocalization('Save As', _localizationStringId_1.StringId.SaveAs); },
                    imageClassName: 'dxrd-image-saveas',
                    imageTemplateName: 'dxrd-svg-menu-saveas',
                    disabled: ko.pureComputed(function () { return !report(); }),
                    visible: true,
                    clickAction: function () {
                        designerModel.saveReportDialog.show(designerModel.navigateByReports.currentTab());
                    }
                });
            }
            actions.push({
                id: actionId_1.ActionId.Exit,
                container: 'menu',
                text: 'Exit',
                displayText: function () { return analytics_utils_1.getLocalization('Exit', 'ReportStringId.UD_Capt_Exit'); },
                imageClassName: 'dxrd-image-exit',
                imageTemplateName: 'dxrd-svg-menu-exit',
                disabled: ko.observable(false),
                visible: true,
                clickAction: function () {
                    designerModel.navigateByReports.closeAll().done(function () {
                        exitDesigner && exitDesigner();
                    });
                }
            });
            nextCustomizer && nextCustomizer(actions);
        });
    };
    ReportDesignerInitializer.prototype._patchReportBeforeRedesign = function (reportViewModel, state) {
        var removedDataSourceInfos = [];
        if (!state.newDataSource && reportViewModel.dataSource() && state.dataSource) {
            var stateDsInfo = chooseAvailableDataSourcePage_1._restoreDataSourceFromState(state.dataSource);
            var dataSourceInfo = reportViewModel.dataSourceHelper().findDataSourceInfoByName(stateDsInfo.name);
            removedDataSourceInfos.push(dataSourceInfo);
            reportViewModel.dataSourceHelper().removeDataSource(dataSourceInfo);
            reportViewModel.dataSourceHelper().allDataSources().forEach(function (dataSource) {
                if (dataSource.data instanceof dataFederation_1.DataFederationDataSource) {
                    var federationDataSourceInfo = reportViewModel.dataSourceHelper().findDataSourceInfoByName(dataSource.name);
                    if (federationDataSourceInfo) {
                        removedDataSourceInfos.push(federationDataSourceInfo);
                        reportViewModel.dataSourceHelper().removeDataSource(federationDataSourceInfo);
                    }
                }
            });
        }
        return {
            json: JSON.stringify({ 'XtraReportsLayoutSerializer': reportViewModel.serialize() }),
            removedDataSourceInfos: removedDataSourceInfos,
        };
    };
    ReportDesignerInitializer.prototype._restoreAfterFail = function (reportViewModel, removedDataSourceInfos) {
        removedDataSourceInfos.forEach(function (info) {
            reportViewModel.dataSourceHelper().restoreDataSource(info);
        });
    };
    ReportDesignerInitializer.prototype.addContextActions = function (func) {
        var _this = this;
        if (func === void 0) { func = function (settings) {
            var isDisabled = function () { return _this.buildingModel.model() && _this.buildingModel.model().language() !== metadata_1.defaultCulture; };
            settings.actionProviders = [new reportElementActions_1.ReportElementActions(_this.buildingModel.surface, _this.buildingModel.selection),
                new elementsGroupActions_1.ElementsGroupActions(_this.buildingModel.surface, _this.buildingModel.selection),
                new reportActions_1.ReportActions(_this._designerCallbacks.componentAdded),
                new tableRowActions_1.TableRowActions(_this.buildingModel.selection, _this._designerCallbacks.componentAdded, isDisabled),
                new tableCellActions_1.TableCellActions(_this.buildingModel.selection, _this._designerCallbacks.componentAdded, isDisabled),
                new textElementAction_1.TextElementAction(_this.buildingModel.selection),
                new tableCellGroupActions_1.TableCellGroupActions(_this.buildingModel.selection),
                new pdfContentActions_1.PdfContentActions(_this.buildingModel.selection, isDisabled),
                new crossTabActions_1.CrossTabActions(_this._converters, isDisabled),
                new pivotGridActions_1.PivotGridActions(_this._converters, isDisabled)];
            settings.createDefaultGroupAction(_this.buildingModel.editableObject, _this.buildingModel.undoEngine);
        }; }
        _super.prototype.addContextActions.call(this, func);
        return this;
    };
    ReportDesignerInitializer.prototype.addActionList = function (actionListFunc) {
        var _this = this;
        if (actionListFunc === void 0) { actionListFunc = function () {
            var designerShortcutsEnabled = ko.computed(function () {
                var isDesignMode = _this.buildingModel.designMode();
                var isWizardVisible = _this.buildingModel.wizard && _this.buildingModel.wizard.isVisible();
                var isDataSourceWizardVisible = _this.buildingModel.dataSourceWizard && _this.buildingModel.dataSourceWizard.isVisible();
                var isMultiQueryDataSourceWizardVisible = _this.buildingModel.multiQueryDataSourceWizard && _this.buildingModel.multiQueryDataSourceWizard.isVisible();
                var isLocalizationModeVisible = _this.buildingModel.localizationMode && _this.buildingModel.localizationMode();
                return isDesignMode && !isWizardVisible && !isDataSourceWizardVisible && !isMultiQueryDataSourceWizardVisible && !isLocalizationModeVisible;
            });
            _this._addDisposable(designerShortcutsEnabled);
            var actions = new analytics_internal_1.ActionLists(_this.buildingModel.surface, _this.buildingModel.selection, _this.buildingModel.undoEngine, _this._customizeDesignerActions(_this.buildingModel, _this._designerCallbacks.customizeActions, _this._designerCallbacks.exitDesigner, function () { return _this._reportcontext() && _this._reportcontext().state() || _this.buildingModel.state; }, _this._designerCallbacks), designerShortcutsEnabled, _copyPasteStrategy_1.reportCopyPasteStrategy(_this._designerCallbacks.componentAdded), _this.buildingModel.zoomStep, function (_) { return !_this.buildingModel.canAddItems(); });
            _this.addElement('actionStorage', function () { return $.extend({}, _this._createActionsStorage(actions.menuItems), _this._createActionsStorage(actions.toolbarItems)); });
            return actions;
        }; }
        _super.prototype.addActionList.call(this, actionListFunc);
        return this;
    };
    ReportDesignerInitializer.prototype._createChartDesignerPart = function (context) {
        var _this = this;
        var chartValueBindingProvider = ko.computed(function () { return context() && context().chartValueBindingProvider; });
        this._addDisposable(chartValueBindingProvider);
        var chartDesignerOptions = _chartUtils_1.createChartDesignerOptions(this.buildingModel, this.buildingModel.dataSourceHelper, this.buildingModel.model, this.buildingModel.parameters, chartValueBindingProvider);
        this.addElement('runChartDesigner', function () { return function (chart) {
            chartDesignerOptions.run(chart);
        }; });
        this.addElement('chartDataSources', function () { return ko.computed(function () {
            var pivotGrids = _this.buildingModel.controlsHelper.allControls().filter(function (item) { return item instanceof xrPivotgrid_1.XRPivotGridViewModel; }).map(function (item) { return { displayName: item.name, value: item }; });
            var usedDataSources = _this.buildingModel.dataSourceHelper() && _this.buildingModel.dataSourceHelper().usedDataSources() && _this.buildingModel.dataSourceHelper().usedDataSources().map(function (item) { return { displayName: item.name, value: item.data }; }), result = [].concat(pivotGrids, usedDataSources);
            return result;
        }); });
        this._addDisposable(this.buildingModel.controlsHelper.allControls.subscribe(function (newArr) {
            newArr.filter(function (item) { return item instanceof xrChart_1.XRChartViewModel; }).forEach(function (chart) {
                if (chart.isPivotGridDataSource() && newArr.indexOf(chart.dataSource()) === -1)
                    chart.dataSource(null);
            });
        }));
        this._addDisposable(chartDesignerOptions);
        return { id: null, templateName: reportDesignerElements_1.ReportDesignerElements.ChartDialog, model: chartDesignerOptions };
    };
    ReportDesignerInitializer.prototype._createWizardPart = function (wizardName, model) {
        if (model instanceof analytics_wizard_1.FullscreenWizard) {
            return { id: reportDesignerElements_1.ReportDesignerAddOns[wizardName + 'Fullscreen'], templateName: reportDesignerElements_1.ReportDesignerAddOns[wizardName + 'Fullscreen'].split('#')[0], model: model };
        }
        return { id: reportDesignerElements_1.ReportDesignerAddOns[wizardName], templateName: reportDesignerElements_1.ReportDesignerAddOns[wizardName].split('#')[0], model: model };
    };
    ReportDesignerInitializer.prototype.addParts = function (func) {
        var _this = this;
        if (func === void 0) { func = function (parts) {
            var reportConverter = new _reportConverter_1.ReportConverter(_this.buildingModel.controlsHelper, _this.buildingModel.undoEngine, _this._dataBiningMode);
            if (_this._defaultCrossTabControl === 'XRCrossTab') {
                _this._converters.push(new _crossTabConverter_1.CrossTabConverter(_this.buildingModel.selection, _this._reportcontext), new _crossTabConverter_1.PivotGridConverter(_this.buildingModel.selection));
            }
            _this._converters.push(reportConverter);
            _this._addDisposable(_this._reportcontext.subscribe(function (newVal) {
                if (newVal)
                    reportConverter.convert(newVal.report, _this._convertBindingsToExpressions);
            }));
            [analytics_internal_1.DesignerBaseElements.MenuButton, analytics_internal_1.DesignerBaseElements.Toolbox].forEach(function (item) {
                var oldItem = parts.filter(function (part) { return part.id === item; })[0];
                var index = parts.indexOf(oldItem);
                parts.splice(index, 1);
            });
            parts.push.apply(parts, [{ id: analytics_internal_1.DesignerBaseElements.GroupedToolbox, templateName: analytics_internal_1.DesignerBaseElements.GroupedToolbox, model: _this.buildingModel },
                { id: reportDesignerElements_1.ReportDesignerElements.NavigationPanel, templateName: reportDesignerElements_1.ReportDesignerElements.NavigationPanel, model: _this.buildingModel.navigateByReports },
                { id: null, templateName: reportDesignerElements_1.ReportDesignerElements.ReportDialog, model: _this.buildingModel.saveReportDialog },
                { id: null, templateName: reportDesignerElements_1.ReportDesignerElements.ReportDialog, model: _this.buildingModel.saveReportDialogLight },
                { id: null, templateName: reportDesignerElements_1.ReportDesignerElements.ReportDialog, model: _this.buildingModel.openReportDialog },
                { id: reportDesignerElements_1.ReportDesignerElements.MenuButton, templateName: reportDesignerElements_1.ReportDesignerElements.MenuButton, model: _this.buildingModel },
                _this._createChartDesignerPart(_this._reportcontext),
                { id: null, templateName: reportDesignerElements_1.ReportDesignerElements.Parameters, model: _this.buildingModel.parameters }].concat(_this._converters.map(function (model) { return { id: null, templateName: reportDesignerElements_1.ReportDesignerElements.ReportConverterDialog, model: model }; })));
            return parts;
        }; }
        _super.prototype.addParts.call(this, func);
        this._designerCallbacks.customizeParts && this._designerCallbacks.customizeParts(this.buildingModel.parts);
        return this;
    };
    ReportDesignerInitializer.prototype.addDefaultAddons = function (addons) {
        if (addons === void 0) { addons = [
            { id: reportDesignerElements_1.ReportDesignerAddOns.Preview, templateName: reportDesignerElements_1.ReportDesignerAddOns.Preview, model: this.buildingModel.reportPreviewModel },
            this._createWizardPart('ReportWizard', this.buildingModel.wizard),
            { id: reportDesignerElements_1.ReportDesignerAddOns.DataSourceWizard, templateName: reportDesignerElements_1.ReportDesignerAddOns.DataSourceWizard.split('#')[0], model: this.buildingModel.dataSourceWizard },
            this._createWizardPart('MultiQueryDataSourceWizard', this.buildingModel.multiQueryDataSourceWizard),
            { id: reportDesignerElements_1.ReportDesignerAddOns.LocalizationEditor, templateName: reportDesignerElements_1.ReportDesignerAddOns.LocalizationEditor.split('#')[0], model: this.buildingModel.localizationEditor },
            { id: reportDesignerElements_1.ReportDesignerAddOns.ErrorPanel, templateName: reportDesignerElements_1.ReportDesignerAddOns.ErrorPanel, model: this.buildingModel.errorPanelViewModel }
        ]; }
        this.addElement('addOns', function () { return ko.observableArray(addons); });
        return this;
    };
    ReportDesignerInitializer.prototype.tryAddSqlDataSourceEditorAddon = function (relationsEditor) {
        if (relationsEditor === void 0) { relationsEditor = this._sqlDataSourceEditor.relationsEditor; }
        if (relationsEditor)
            this.buildingModel.addOns.push({ id: reportDesignerElements_1.ReportDesignerAddOns.MasterDetailEditor, templateName: reportDesignerElements_1.ReportDesignerAddOns.MasterDetailEditor, model: relationsEditor });
        return this;
    };
    ReportDesignerInitializer.prototype.tryAddScriptEditorAddon = function (isScriptsDisabled) {
        if (this._tryAddScriptEditor(isScriptsDisabled))
            this.buildingModel.addOns.push({ id: reportDesignerElements_1.ReportDesignerAddOns.ScriptEditor, templateName: reportDesignerElements_1.ReportDesignerAddOns.ScriptEditor, model: this.buildingModel.scriptsEditor });
        return this;
    };
    ReportDesignerInitializer.prototype.tryAddInlineRichTextEdit = function () {
        var inlineRichEdit = richEdit_1.registerRichEditInline()(this._selection);
        if (inlineRichEdit) {
            this.addElement('richInlineControl', function () { return inlineRichEdit; });
        }
        return this;
    };
    ReportDesignerInitializer.prototype.onContextChanged = function (subreports, func) {
        var _this = this;
        if (func === void 0) { func = function (context) {
            if (context) {
                _this.buildingModel.selectedPath(null);
                if (_this.buildingModel.toolboxItems) {
                    _this.buildingModel.toolboxItems.forEach(function (item) { item.disabled(!_this.buildingModel.canAddItems()); });
                }
            }
            else {
                if (_this.buildingModel.selection) {
                    _this.buildingModel.selection.clear();
                    _this.buildingModel.selection.focused(_this.buildingModel.surface());
                }
                _this.buildingModel.editableObject && _this.buildingModel.editableObject(null);
                _this.buildingModel.toolboxItems && _this.buildingModel.toolboxItems.forEach(function (item) { item.disabled(true); });
                _this.buildingModel.popularProperties && _this.buildingModel.popularProperties.cleanEditors();
            }
        }; }
        func(this._reportcontext());
        this._addDisposable(this._reportcontext.subscribe(function (newVal) { return func(newVal); }));
        return this;
    };
    ReportDesignerInitializer.prototype.configurateRtl = function (rtl) {
        this.rtl = !!rtl;
        config_1.default({ rtlEnabled: !!this.rtl });
        return this;
    };
    ReportDesignerInitializer.prototype.configureReportStorageRegistration = function (reportStorageIsRegister, allowMDI) {
        _settings_2.reportStorageWebIsRegister(reportStorageIsRegister === undefined ? _settings_2.reportStorageWebIsRegister() : reportStorageIsRegister);
        this._allowMDI = _settings_2.reportStorageWebIsRegister() ? allowMDI : false;
        return this;
    };
    ReportDesignerInitializer.prototype.applyUri = function (uriSettings) {
        settings_1.HandlerUri(uriSettings.reportDesignerUri || settings_1.HandlerUri());
        _handlerUri_1.HandlerUri(uriSettings.reportDesignerUri);
        this._previewUri = uriSettings.previewUri;
        return this;
    };
    ReportDesignerInitializer.prototype.initBindingMode = function (dataBiningMode, convertBindingsToExpressions) {
        this._dataBiningMode = dataBiningMode;
        this._convertBindingsToExpressions = convertBindingsToExpressions;
        return this;
    };
    ReportDesignerInitializer.prototype.initDefaultCrossTabControl = function (defaultCrossTabControl) {
        this._defaultCrossTabControl = defaultCrossTabControl;
        settings_1.DefaultCrossTabControl(defaultCrossTabControl || 'XRCrossTab');
        return this;
    };
    ReportDesignerInitializer.prototype.registerControls = function (dataBindingMode, reportItemsProvider) {
        settings_1.DataBindingMode(dataBindingMode || 'Expressions');
        _registerControls_1.registerControls(reportItemsProvider);
        return this;
    };
    ReportDesignerInitializer.prototype.addCallbacks = function (callbacks) {
        this._callbacks = callbacks;
        if (!this._callbacks.designer)
            this._callbacks.designer = {};
        if (!this._callbacks.preview)
            this._callbacks.preview = {};
        this._callbacks.designer.fieldLists = this._callbacks.designer.fieldLists || _reportDataSourceService_1.ReportDataSourceService.fieldListCallback;
        return this;
    };
    ReportDesignerInitializer.prototype.addProcessErrorCallback = function (processError) {
        if (processError === void 0) { processError = this._designerCallbacks && this._designerCallbacks.onServerError; }
        this._disposables.push(analytics_internal_1.processErrorEvent(processError));
        return this;
    };
    ReportDesignerInitializer.prototype.runCustomizeToolboxEvent = function (customizeToolbox) {
        if (customizeToolbox === void 0) { customizeToolbox = this._designerCallbacks && this._designerCallbacks.customizeToolbox; }
        customizeToolbox && customizeToolbox(settings_1.controlsFactory());
        return this;
    };
    ReportDesignerInitializer.prototype.initCultureInfo = function (cultureInfoList) {
        $.extend(true, _utils_2.cultureInfo, cultureInfoList);
        return this;
    };
    ReportDesignerInitializer.prototype.updateFont = function (fontSet) {
        if (fontSet) {
            var fonts = {};
            if (fontSet instanceof Array)
                fontSet.forEach(function (fontName) { return fonts[fontName] = fontName; });
            else
                fonts = fontSet;
            this.buildingModel.updateFont(fonts);
            this.buildingModel.sortFont();
        }
        return this;
    };
    ReportDesignerInitializer.prototype.initFormatStringPatterns = function (formatStringData) {
        if (formatStringData) {
            formatStringData.standardPatterns && Object.keys(formatStringData.standardPatterns).forEach(function (propName) {
                if (!analytics_widgets_internal_1.formatStringStandardPatterns[propName])
                    analytics_widgets_internal_1.formatStringStandardPatterns[propName] = formatStringData.standardPatterns[propName];
                else
                    analytics_widgets_internal_1.formatStringStandardPatterns[propName].patterns = formatStringData.standardPatterns[propName].patterns;
            });
            formatStringData.customPatterns && Object.keys(formatStringData.customPatterns).forEach(function (propName) {
                settings_1.formatStringEditorCustomSet[propName] = formatStringData.customPatterns[propName];
            });
        }
        return this;
    };
    ReportDesignerInitializer.prototype.addPopularProperties = function (controlsFactory, accessibilityProvider) {
        var _this = this;
        _super.prototype.addPopularProperties.call(this, controlsFactory, this._accessibilityProvider);
        this.addElement('popularVisible', function () { return ko.pureComputed(function () {
            return _this.buildingModel.popularProperties._editors().some(function (x) { return x.visible(); }) ||
                _this.buildingModel.contextActions && _this.buildingModel.contextActions().length > 0;
        }); });
        return this;
    };
    ReportDesignerInitializer.prototype.addInlineTextEdit = function (func) {
        var _this = this;
        this.addElement('inlineTextEdit', func ? func : function () { return new analytics_internal_1.InlineTextEdit(_this._selection); });
        return this;
    };
    ReportDesignerInitializer.prototype.addStylesProjection = function (styles) {
        var _this = this;
        if (styles === void 0) { styles = ko.pureComputed(function () { return _this.buildingModel.model() && _this.buildingModel.model().styles; }); }
        this.addElement('styles', function () { return styles; });
        return this;
    };
    ReportDesignerInitializer.prototype.addFormattingRulesProjection = function (rules) {
        var _this = this;
        if (rules === void 0) { rules = ko.pureComputed(function () { return _this.buildingModel.model() && _this.buildingModel.model().formattingRuleSheet; }); }
        this.addElement('formattingRuleSheet', function () { return rules; });
        return this;
    };
    ReportDesignerInitializer.prototype.addReportExplorerProvider = function (reportExplorerProvider) {
        if (reportExplorerProvider === void 0) { reportExplorerProvider = new analytics_internal_1.ObjectExplorerProvider([{ model: this.buildingModel.model, name: 'Report', className: 'master_report' }], ['bands', 'controls', 'rows', 'cells'], ko.observable(null)); }
        this.addElement('reportExplorerProvider', function () { return reportExplorerProvider; });
        return this;
    };
    ReportDesignerInitializer.prototype.addControlsProjection = function (controlsHelper) {
        var _this = this;
        if (controlsHelper === void 0) { controlsHelper = this.buildingModel.controlsHelper; }
        this.addElement('getControls', function () { return function (target) {
            return ko.pureComputed(function () {
                return _this._getControls(controlsHelper.getControls(ko.unwrap(target)), function (item) {
                    return !(item instanceof xrBand_1.BandViewModel || item instanceof xrReport_1.ReportViewModel);
                });
            });
        }; });
        this.addElement('controls', function () { return _this._getControls(controlsHelper.allControls, function (item) { return !(item instanceof xrBand_1.BandViewModel || item instanceof xrReport_1.ReportViewModel); }); });
        return this;
    };
    ReportDesignerInitializer.prototype.addBandsProjection = function (controlsHelper) {
        var _this = this;
        if (controlsHelper === void 0) { controlsHelper = this.buildingModel.controlsHelper; }
        this.addElement('bands', function () { return function (filter, IsNoneNeaded) {
            return _this._getControls(controlsHelper.allControls, function (item) {
                return item instanceof xrBand_1.BandViewModel && (filter ? filter(item) : true);
            }, IsNoneNeaded);
        }; });
        return this;
    };
    ReportDesignerInitializer.prototype.addWizardRunner = function () {
        var _this = this;
        this.addElement('_wizardRunner', function () { return new _wizardRunner_1.WizardRunner({
            visible: _this.getModel().appMenuVisible,
            collapsed: _this.getModel().isMenuCollapsed
        }); });
        return this;
    };
    ReportDesignerInitializer.prototype.addWizards = function (connectionStrings, wizardSettings, cusomizeSettingsFunc) {
        var initializerSettings = new _settings_1.WizardsInitializerSettings(connectionStrings, wizardSettings, this._designerCallbacks, this.rtl);
        this.addElement('connections', function () { return connectionStrings; });
        cusomizeSettingsFunc(initializerSettings);
        if (initializerSettings.reportWizard) {
            this.addElement('registerReportWizardPages', function () { return initializerSettings.registerReportWizardPages; });
            this.addElement('wizard', function () { return initializerSettings.reportWizard; });
        }
        if (initializerSettings.dataSourceWizard) {
            this.addElement('dataSourceWizard', function () { return initializerSettings.dataSourceWizard; });
        }
        if (initializerSettings.multiQueryDataSourceWizard) {
            this.addElement('registerMultiQueryDataSourceWizardPages', function () { return initializerSettings.registerMultiQueryDataSourceWizardPages; });
            this.addElement('multiQueryDataSourceWizard', function () { return initializerSettings.multiQueryDataSourceWizard; });
        }
        this._sqlDataSourceEditor = initializerSettings.sqlDataSourceEditor;
        this._jsonDataSourceEditor = initializerSettings.jsonDataSourceEditor;
        this._objectDataSourceEditor = initializerSettings.objectDataSourceEditor;
        this._dataSourceActionProvider = initializerSettings.dataSourceActionProvider;
        return this;
    };
    ReportDesignerInitializer.prototype.addLocalizationEditor = function () {
        var _this = this;
        this.addElement('localizationEditor', function () { return new _localizationEditor_1.LocalizationEditor({
            controlScrollingTool: _this.buildingModel.controlScrollingTool,
            report: function () { return _this.buildingModel.model(); },
            selection: _this.buildingModel.selection
        }); });
        this.addElement('localizationMode', function () { return ko.observable(false); });
        this.addElement('isLocalized', function () { return function (item) { return _this.buildingModel.model() && _this.buildingModel.model()._localization.hasCulture(item); }; });
        return this;
    };
    ReportDesignerInitializer.prototype.addStaticContext = function () {
        analytics_internal_1.appendStaticContextToRootViewModel(this.buildingModel, {
            config: config_1.default,
            _static: __assign({}, analytics_internal_1.staticContext._static, { PivotGridFieldViewModel: pivotgridfield_1.PivotGridFieldViewModel, SortBySummaryInfoCondition: sortBySummary_1.SortBySummaryInfoCondition, LookUpValue: lookUpValue_1.LookUpValue, DragDropHandler: analytics_internal_1.DragDropHandler, getControlFullName: analytics_internal_1.getControlFullName, editorTemplates: analytics_widgets_1.editorTemplates, formattingRuleSerializationsInfo: formattingrules_1.formattingRuleSerializationsInfo, StylesEditorHeaderModel: styleseditor_1.StylesEditorHeaderModel, TreeListController: analytics_widgets_internal_1.TreeListController, TableOfContentsLevel: xrTableOfContentsLevel_1.TableOfContentsLevel, propertiesGridEditorsPaddingLeft: analytics_widgets_internal_1.propertiesGridEditorsPaddingLeft, CustomizeLabelPage: customizeLabelPage_1.CustomizeLabelPage, formatSearchResult: _utils_3.formatSearchResult })
        });
        return this;
    };
    ReportDesignerInitializer.prototype.tryApplyBindings = function (applyBindings, element) {
        var _this = this;
        if (applyBindings) {
            this._designerCallbacks.beforeRender && this._designerCallbacks.beforeRender(this);
            $(element).children().remove();
            ko.applyBindings(this.buildingModel, element);
            this.buildingModel.afterRender();
            var dispose = function () {
                _this.buildingModel.dispose();
            };
            analytics_internal_1.addDisposeCallback(element, dispose);
        }
        return this;
    };
    ReportDesignerInitializer.prototype.dispose = function () {
        window.removeEventListener('resize', this._updateCallback);
        window.removeEventListener('resize', this.buildingModel.reportPreviewModel.resizeCallback);
        _super.prototype.dispose.call(this);
        settings_1.controlsFactory().dispose();
        this.removeProperties();
    };
    return ReportDesignerInitializer;
}(analytics_internal_1.CommonDesignerGenerator));
exports.ReportDesignerInitializer = ReportDesignerInitializer;


/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var reportDesignerContext_1 = __webpack_require__(318);
var navigateTab_1 = __webpack_require__(330);
var _settings_1 = __webpack_require__(31);
var reportStorageWeb_1 = __webpack_require__(34);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var NavigateByReports = (function (_super) {
    __extends(NavigateByReports, _super);
    function NavigateByReports(options) {
        var _this = _super.call(this) || this;
        _this._isReportLoading = ko.observable(false);
        _this.save = function (tab) { return void 0; };
        _this.height = ko.observable(0);
        _this.tabs = ko.observableArray([]);
        _this._selectedIndex = ko.observable(-1);
        _this.selectedIndex = ko.computed({
            read: function () { return _this._selectedIndex(); },
            write: function (value) { if (value != -1)
                _this._selectedIndex(value); }
        });
        _this.allowMDI = options.allowMDI != undefined ? options.allowMDI : true;
        _this.knownEnums = options.knownEnums;
        _this._callbacks = options.callbacks || {};
        _this._selection = options.selection;
        _this._initializeOptions = options.initOptions;
        var currentTab = null;
        _this._disposables.push(_this.selectedIndex);
        _this._disposables.push(_this.currentTab = ko.pureComputed(function () {
            if (_this.selectedIndex() !== -1) {
                var oldValue = currentTab;
                currentTab = _this.tabs.peek()[_this.selectedIndex()];
                if (currentTab !== oldValue)
                    _this._isReportLoading(true);
                return currentTab;
            }
            else {
                return null;
            }
        }));
        if (options.report)
            _this.addTab(options.report, options.reportUrl || ko.observable(null));
        _this._disposables.push(_this.currentTab.subscribe(function (newVal) {
            setTimeout(function () {
                _this._isReportLoading(false);
                _this.height.notifySubscribers();
                _this.checkHeight();
                _this._callbacks.tabChanged && _this._callbacks.tabChanged(newVal);
            }, 1);
        }));
        return _this;
    }
    NavigateByReports.prototype._removeTab = function (tab) {
        var _this = this;
        var removingDeferred = $.Deferred();
        if (!this._callbacks.reportTabClosing || !this._callbacks.reportTabClosing(tab, removingDeferred)) {
            removingDeferred.resolve();
        }
        removingDeferred.done(function () {
            var currentIndex = _this._selectedIndex(), closingIndex = _this.tabs().indexOf(tab), newIndex = (currentIndex < closingIndex || currentIndex === closingIndex && currentIndex < _this.tabs().length - 1)
                ? currentIndex
                : currentIndex - 1;
            _this.tabs.remove(tab);
            _this._selectedIndex(newIndex);
            if (newIndex === currentIndex)
                _this.selectedIndex.notifySubscribers();
            _this._callbacks.reportTabClosed && _this._callbacks.reportTabClosed(tab);
            tab.dispose();
        });
        return removingDeferred.promise();
    };
    NavigateByReports.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._selectedIndex(-1);
        this.disposeObservableArray(this.tabs);
        this.resetObservableArray(this.tabs);
    };
    NavigateByReports.prototype._closeTab = function (deletedTab) {
        var closingDeferred = $.Deferred();
        deletedTab.close = closingDeferred;
        if (deletedTab.isDirty()) {
            this.save(deletedTab);
        }
        else {
            closingDeferred.resolve();
        }
        return closingDeferred.promise();
    };
    NavigateByReports.prototype._closeAll = function (deferred) {
        var _this = this;
        if (this.tabs().length === 0) {
            deferred.resolve();
            return;
        }
        var tab = this.tabs()[this.tabs().length - 1];
        this._closeTab(tab).done(function () {
            _this._removeTab(tab)
                .done(function () { return _this._closeAll(deferred); })
                .fail(function () { return deferred.reject(); });
        });
    };
    NavigateByReports.prototype._getTabByControl = function (report, reportUrl) {
        return this.tabs().filter(function (tab) { return reportUrl ? tab.context().url() === reportUrl : tab.context().report === report; })[0];
    };
    NavigateByReports.prototype._addTab = function (report, url) {
        var _this = this;
        var newTab = new navigateTab_1.NavigateTab({
            report: report,
            url: url,
            isReportLoading: this._isReportLoading,
            callbacks: {
                afterInititalize: function (tab) {
                    tab._disposables.push(tab.displayName.subscribe(function () { return _this.checkHeight(); }));
                    tab.icon = !_this.allowMDI && _this.tabs().length === 0 ? undefined : 'dx-icon-close';
                    if (!tab.displayName()) {
                        tab.context().report.name(analytics_internal_1.getUniqueName(_this.tabs().map(function (t) { return t.displayName(); }), 'Report'));
                        tab.undoEngine.clearHistory();
                    }
                    tab._disposables.push(tab.context.subscribe(function (newVal) { return _this.height.notifySubscribers(); }));
                },
                createContext: function (report, url) {
                    return new reportDesignerContext_1.ReportDesignerContext({
                        report: report,
                        selection: _this._selection,
                        designerCallbacks: _this._callbacks,
                        knownEnums: _this.knownEnums,
                        initializeOptions: _this._initializeOptions,
                        url: url
                    });
                }
            }
        });
        this.tabs.push(newTab);
        this.switch(newTab);
        newTab.undoEngine.clearHistory();
    };
    NavigateByReports.prototype.changeContext = function (report, reportUrl) {
        if (!this.currentTab())
            this.addTab(report, reportUrl);
        else {
            this.currentTab().changeContext(report, ko.unwrap(reportUrl || this.currentTab().url));
        }
    };
    NavigateByReports.prototype.init = function (isLoading) {
        this._isReportLoading = isLoading;
    };
    NavigateByReports.prototype.removeTab = function (tab, force) {
        var _this = this;
        if (force === void 0) { force = false; }
        if (force)
            return this._removeTab(tab);
        this._closeTab(tab).done(function () {
            _this._removeTab(tab);
        });
    };
    NavigateByReports.prototype.closeAll = function () {
        var deferred = $.Deferred();
        this._closeAll(deferred);
        return deferred.promise();
    };
    NavigateByReports.prototype.switch = function (tab) {
        this._selectedIndex(this.tabs().indexOf(tab));
    };
    NavigateByReports.prototype._createNewTab = function (report, url) {
        if (url === void 0) { url = ko.observable(''); }
        this._addTab(report, url);
        var onOpened = this._callbacks.reportOpened;
        onOpened && setTimeout(function () {
            onOpened && onOpened({ report: report, url: ko.unwrap(url) });
        }, 10);
    };
    NavigateByReports.prototype.goToSubreport = function (subreportSurface) {
        if (_settings_1.reportStorageWebIsRegister()) {
            var subreportControl = subreportSurface.getControlModel();
            var currentReport = null;
            if (!subreportControl.reportSourceUrl())
                currentReport = subreportControl.cloneReportSource();
            this.addTab(currentReport, subreportControl.reportSourceUrl);
        }
    };
    NavigateByReports.prototype.addTab = function (report, url, onCancel) {
        var _this = this;
        if (url === void 0) { url = ko.observable(''); }
        if (onCancel === void 0) { onCancel = function () { return void 0; }; }
        var $deferred = $.Deferred();
        var tab = this._getTabByControl(report, url());
        if (!tab) {
            if ((function (args) { return void (_this._callbacks.reportOpening && _this._callbacks.reportOpening(args)) || args; })({ url: url(), cancel: false }).cancel) {
                onCancel();
                return $deferred.reject().promise();
            }
            if (url() && !report) {
                reportStorageWeb_1.ReportStorageWeb.getReportByUrl(url()).done(function (result) {
                    $deferred.resolve();
                    _this._createNewTab(result, url);
                }).fail(function () { return $deferred.reject(); });
            }
            else {
                $deferred.resolve();
                this._createNewTab(report, url);
            }
        }
        else {
            $deferred.resolve();
            this.switch(tab);
        }
        return $deferred.promise();
    };
    NavigateByReports.prototype.checkHeight = function () {
        var currentHeight = $('.dxrd-navigation-panel-wrapper').outerHeight();
        if (this.height() !== currentHeight) {
            this.height(currentHeight);
        }
    };
    return NavigateByReports;
}(analytics_utils_1.Disposable));
exports.NavigateByReports = NavigateByReports;


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrReport_1 = __webpack_require__(16);
var _calculatedFieldsSource_1 = __webpack_require__(319);
var _parametersViewModel_1 = __webpack_require__(218);
var _displayNameProvider_1 = __webpack_require__(322);
var _reportItemsProvider_1 = __webpack_require__(323);
var _dataSourceHelper_1 = __webpack_require__(146);
var _fieldListDataSourcesHelper_1 = __webpack_require__(101);
var _designControlsHelper_1 = __webpack_require__(325);
var _dataSourceItemsExtender_1 = __webpack_require__(326);
var _chartFieldListExtender_1 = __webpack_require__(327);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var _styleHelper_1 = __webpack_require__(91);
var _designerErrorProvider_1 = __webpack_require__(328);
var _runtimeErrorProvider_1 = __webpack_require__(329);
var ReportDesignerContext = (function (_super) {
    __extends(ReportDesignerContext, _super);
    function ReportDesignerContext(options) {
        var _this = _super.call(this) || this;
        _this.report = options.report || new xrReport_1.ReportViewModel(options.data);
        _this.url = ko.isObservable(options.url) ? options.url : ko.observable(options.url);
        if (options.dataSourceRefs)
            _this.report.dataSourceRefs = options.dataSourceRefs;
        _this.report.parameterHelper.initialize(options.knownEnums, options.designerCallbacks);
        var selection = options.selection;
        var data = options.initializeOptions;
        var designerCallbacks = options.designerCallbacks;
        _this.surface = new xrReport_1.ReportSurface(_this.report);
        _this.parameters = new _parametersViewModel_1.ParametersViewModel(_this.report);
        _this.dataSourceHelper = new _dataSourceHelper_1.DataSourceHelper(_this.report.objectStorage, _this.report.dataSourceRefs, data.availableDataSources);
        _this.report.dataSourceHelper(_this.dataSourceHelper);
        _this.fieldListDataSourceHelper = new _fieldListDataSourcesHelper_1.FieldListDataSourcesHelper();
        _this.fieldListDataSourceHelper.updateDataSources(_this.dataSourceHelper, _this.report, _this.parameters.parameters);
        _this.calcFieldsSource = new _calculatedFieldsSource_1.CalculatedFieldsSource(_this.report.calculatedFields, _this.report.dataSource, _this.dataSourceHelper);
        var chartValueBindingAvailableSources = ko.observableArray(_this._getChartAvailableSources(_this.dataSourceHelper, _this.report.dataSource(), _this.parameters));
        var subscription = _this.report.dataSource.subscribe(function (newVal) {
            chartValueBindingAvailableSources(_this._getChartAvailableSources(_this.dataSourceHelper, newVal, _this.parameters));
        });
        _this._disposables.push({
            dispose: function () {
                chartValueBindingAvailableSources([]);
                subscription.dispose();
            }
        });
        var dataSourceItemsExtender = new _dataSourceItemsExtender_1.DataSourceItemsExtender(_this.dataSourceHelper.usedDataSources);
        var chartFieldListExtender = new _chartFieldListExtender_1.ChartFieldListExtender();
        _this.state = function () {
            var extensions = _this.report && _this.report.extensions.peek() || [];
            if (extensions.length > 0) {
                return {
                    reportExtensions: _this.report.extensions().map(function (item) {
                        return {
                            'Key': item.key(),
                            'Value': item.value()
                        };
                    })
                };
            }
            return data.state;
        };
        _this.fieldListItemsExtenders = [
            _this.parameters,
            dataSourceItemsExtender,
            _this.calcFieldsSource,
            chartFieldListExtender
        ];
        _this.controlsHelper = new _designControlsHelper_1.DesignControlsHelper(_this.report, selection);
        _this.stylesHelper = new _styleHelper_1.StylesHelper(_this.report, _this.controlsHelper);
        _this.report.stylesHelper(_this.stylesHelper);
        var wrappedCallback = _this.fieldListDataSourceHelper.wrapFieldsCallback(designerCallbacks.fieldLists, _this.state);
        _this.fieldListProvider = new analytics_internal_1.FieldListProvider(wrappedCallback, _this.fieldListDataSourceHelper.fieldListDataSources, _this.fieldListItemsExtenders);
        _this.reportItemsProvider = new _reportItemsProvider_1.ReportItemsProvider(_this.controlsHelper, _this.fieldListProvider);
        _this.dataBindingsProvider = new analytics_internal_1.FieldListProvider(wrappedCallback, _this.fieldListDataSourceHelper.fieldListDataSources, [_this.parameters, _this.calcFieldsSource, chartFieldListExtender]);
        _this.report.dataBindingsProvider(_this.dataBindingsProvider);
        _this.chartValueBindingProvider = new analytics_internal_1.FieldListProvider(wrappedCallback, chartValueBindingAvailableSources, [_this.parameters, _this.calcFieldsSource]);
        _this.displayNameProvider = new _displayNameProvider_1.DisplayNameProvider(_this.fieldListProvider, _this.fieldListDataSourceHelper.dataSourceHelper(), _this.report.dataSource);
        _this.expressionDisplayNameProvider = new _displayNameProvider_1.DisplayNameProvider(_this.reportItemsProvider, _this.fieldListDataSourceHelper.dataSourceHelper(), _this.report.dataSource);
        _this.reportErrorProvider = new _designerErrorProvider_1.DesignerErrorProvider(_this.report);
        _this.runtimeErrorProvider = new _runtimeErrorProvider_1.RuntimeErrorProvider();
        _this._disposables.push(_this.report);
        _this._disposables.push(_this.surface);
        _this._disposables.push(_this.displayNameProvider);
        _this._disposables.push(_this.expressionDisplayNameProvider);
        _this._disposables.push(_this.dataSourceHelper);
        _this._disposables.push(_this.fieldListDataSourceHelper);
        _this._disposables.push(_this.calcFieldsSource);
        _this._disposables.push(_this.parameters);
        _this._disposables.push(_this.controlsHelper);
        _this._disposables.push(_this.reportItemsProvider);
        _this._disposables.push(_this.stylesHelper);
        _this._disposables.push(_this.reportErrorProvider);
        return _this;
    }
    ReportDesignerContext.prototype._getChartAvailableSources = function (dsHelper, dataSource, parameters) {
        return [
            dataSource && dsHelper.findDataSourceInfo(dataSource),
            { ref: 'Parameters', name: 'Parameters', specifics: 'parameters', data: parameters },
            { ref: 'none', name: 'none', specifics: 'none', data: null }
        ].filter(function (x) { return x; });
    };
    ReportDesignerContext.prototype.getInfo = function () {
        return [{ propertyName: 'report', modelName: '@Report' }];
    };
    ReportDesignerContext.prototype.isModelReady = function () {
        return this.report && this.report.isModelReady();
    };
    ReportDesignerContext.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.report = null;
        this.url = null;
        this.surface = null;
        this.parameters = null;
        this.dataSourceHelper = null;
        this.fieldListDataSourceHelper = null;
        this.calcFieldsSource = null;
        this.fieldListItemsExtenders = [];
        this.controlsHelper = null;
        this.fieldListProvider = null;
        this.reportItemsProvider = null;
        this.dataBindingsProvider = null;
        this.chartValueBindingProvider = null;
        this.displayNameProvider = null;
        this.expressionDisplayNameProvider = null;
        this.stylesHelper = null;
        this.dataBindingsProvider = null;
    };
    return ReportDesignerContext;
}(analytics_utils_1.Disposable));
exports.ReportDesignerContext = ReportDesignerContext;


/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var calculatedField_1 = __webpack_require__(64);
var customFunctions_1 = __webpack_require__(80);
var parameter_1 = __webpack_require__(29);
var _fieldListController_1 = __webpack_require__(100);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_1 = __webpack_require__(4);
var _wrappedExpressionOptions_1 = __webpack_require__(84);
var CalculatedFieldsSource = (function (_super) {
    __extends(CalculatedFieldsSource, _super);
    function CalculatedFieldsSource(calculatedFields, reportDataSource, dataSourceHelper) {
        var _this = _super.call(this) || this;
        _this._calculatedFieldsInfo = {};
        _this._ordinaryFieldsInfo = {};
        _this._fieldsDataMembersInfo = {};
        _this.addAction = {
            clickAction: function (item) {
                return _this.addCalculatedField(item.path);
            },
            imageClassName: 'dxrd-image-add-calcfield',
            imageTemplateName: 'dxrd-svg-operations-add_calcfield',
            text: 'Add calculated field',
            displayText: function () { return analytics_utils_1.getLocalization('Add calculated field', 'ASPxReportsStringId.ReportDesigner_FieldListActions_AddCalculatedField'); }
        };
        _this.removeAction = {
            clickAction: function (item) {
                _this.removeCalculatedField(item.path);
            },
            position: 50,
            imageClassName: 'dxrd-image-recycle-bin',
            imageTemplateName: 'dxrd-svg-operations-recycle_bin',
            text: 'Remove calculated field',
            displayText: function () { return analytics_utils_1.getLocalization('Remove calculated field', 'ASPxReportsStringId.ReportDesigner_FieldListActions_RemoveCalculatedField'); }
        };
        _this._calculatedFieldsInfo = {};
        _this._calculatedFields = calculatedFields;
        _this._dataSourceHelper = ko.observable(dataSourceHelper);
        _this._reportDataSource = reportDataSource;
        for (var index = 0; index < calculatedFields().length; index++) {
            _this._initializeCalculatedField(calculatedFields()[index]);
        }
        var self = _this;
        _this._disposables.push(_this._calculatedFields.subscribe(function (changes) {
            for (var index = 0; index < changes.length; index++) {
                if (changes[index].status === 'added') {
                    self._initializeCalculatedField(changes[index].value);
                }
                else if (changes[index].status === 'deleted') {
                    var fullPath = self._getFieldPathRequest(changes[index].value).fullPath;
                    self._getDataMembersInfoByPath(fullPath).remove(function (item) {
                        return changes[index].value.name === item.name;
                    });
                    changes[index].value.dispose();
                }
            }
        }, null, 'arrayChange'));
        _this._disposables.push(_this._reportDataSource.subscribe(function (newValue) {
            for (var index = 0; index < calculatedFields().length; index++) {
                if (!calculatedFields()[index].dataSource()) {
                    _this._updateFieldPathRequest(calculatedFields()[index]);
                }
            }
        }));
        _this.addCalculatedField = function (fullPath) {
            var pathRequest = new analytics_utils_1.PathRequest(fullPath);
            var newField = _this.createCalculatedField(pathRequest.path);
            var dataSourceInfo = _this._dataSourceHelper().findDataSourceInfoByID(pathRequest.id) || _this._dataSourceHelper().findDataSourceInfoByRef(pathRequest.ref);
            newField.dataSource(dataSourceInfo.data);
            calculatedFields.push(newField);
            return newField;
        };
        _this.removeCalculatedField = function (fullPath) {
            var pathRequest = new analytics_utils_1.PathRequest(fullPath);
            calculatedFields.remove(function (item) {
                var path = item.dataMember() ? (item.dataMember() + '.' + item.name) : item.name;
                return pathRequest.path === path;
            });
        };
        return _this;
    }
    CalculatedFieldsSource.prototype.dispose = function () {
        var _this = this;
        _super.prototype.dispose.call(this);
        Object.keys(this._calculatedFieldsInfo).forEach(function (name) {
            _this.disposeObservableArray(_this._calculatedFieldsInfo[name]);
            _this.resetObservableArray(_this._calculatedFieldsInfo[name]);
            delete _this._calculatedFieldsInfo[name];
        });
        this.disposeObservableArray(this._calculatedFields);
        this.resetObservableArray(this._calculatedFields);
        this._dataSourceHelper(null);
        this._reportDataSource = null;
        this._fieldsDataMembersInfo = null;
        this._fieldsCallback = null;
    };
    CalculatedFieldsSource.prototype._getDataMembersInfoByPath = function (fullPath) {
        this._calculatedFieldsInfo[fullPath] = this._calculatedFieldsInfo[fullPath] || ko.observableArray();
        return this._calculatedFieldsInfo[fullPath];
    };
    CalculatedFieldsSource.prototype._subscribeFieldProperties = function (field) {
        var _this = this;
        field._disposables.push(field.dataMember.subscribe(function (newValue) {
            _this._getDataMembersInfoByPath(field.pathRequest.fullPath).remove(field);
            field.pathRequest = new analytics_utils_1.PathRequest(analytics_internal_1.getFullPath(field.pathRequest.id || field.pathRequest.ref, newValue));
            _this._getDataMembersInfoByPath(field.pathRequest.fullPath).push(field);
        }));
        field._disposables.push(field.dataSource.subscribe(function (newValue) {
            _this._updateFieldPathRequest(field);
        }));
        field._disposables.push(field.calculatedFieldName.subscribe(function (newValue) {
            _this._getDataMembersInfoByPath(field.pathRequest.fullPath).notifySubscribers();
        }));
    };
    CalculatedFieldsSource.prototype._getFieldPathRequest = function (field) {
        var dataSourceInfo = this._dataSourceHelper().findDataSourceInfo(field.dataSource() || this._reportDataSource());
        if (dataSourceInfo)
            return new analytics_utils_1.PathRequest(analytics_internal_1.getFullPath(dataSourceInfo.id || dataSourceInfo.ref, field.dataMember()));
        return new analytics_utils_1.PathRequest('none');
    };
    CalculatedFieldsSource.prototype._updateFieldPathRequest = function (field) {
        this._getDataMembersInfoByPath(field.pathRequest.fullPath).remove(field);
        field.pathRequest = this._getFieldPathRequest(field);
        if (field.pathRequest.ref !== 'none') {
            this._getDataMembersInfoByPath(field.pathRequest.fullPath).push(field);
        }
    };
    CalculatedFieldsSource.prototype._initializeCalculatedField = function (field) {
        var _this = this;
        var pathRequest = this._getFieldPathRequest(field);
        field['getPath'] = function (propertyName) {
            var dataSourceInfo = _this._dataSourceHelper().findDataSourceInfo(field.dataSource() || _this._reportDataSource());
            return dataSourceInfo && (dataSourceInfo.id || dataSourceInfo.ref);
        };
        field._disposables.push(field.expressionObj = new _wrappedExpressionOptions_1.WrappedExpressionOptions({
            value: field['expression'],
            path: ko.pureComputed(function () {
                return _this._getFieldPathRequest(field).fullPath;
            }),
            fieldName: field.calculatedFieldName,
            functions: customFunctions_1.reportFunctionDisplay.filter(function (cat) { return cat.category != 'Summary'; })
        }));
        field._disposables.push(field.expressionObj.path);
        field.nameEditable = ko.pureComputed({
            read: function () {
                return field.calculatedFieldName();
            },
            write: function (value) {
                var fields = this._ordinaryFieldsInfo[field.pathRequest.fullPath];
                if (!!value && analytics_internal_1.getFirstItemByPropertyValue(this._calculatedFields(), 'name', value) === null && analytics_internal_1.getFirstItemByPropertyValue(fields || [], 'displayName', value) === null) {
                    field.calculatedFieldName(value);
                }
            },
            owner: this
        });
        field._disposables.push(field.nameEditable);
        field.pathRequest = pathRequest;
        field.propertyGrid = new analytics_widgets_1.ObjectProperties(ko.observable(field));
        field._disposables.push(field.propertyGrid);
        this._subscribeFieldProperties(field);
        this._getDataMembersInfoByPath(pathRequest.fullPath).push(field);
    };
    CalculatedFieldsSource.prototype._generateNewFieldName = function () {
        var i = 1;
        var generatedName;
        do {
            generatedName = 'calculatedField' + i++;
        } while (analytics_internal_1.getFirstItemByPropertyValue(this._calculatedFields(), 'name', generatedName) !== null);
        return generatedName;
    };
    CalculatedFieldsSource.prototype.createCalculatedField = function (dataMember) {
        return new calculatedField_1.CalculatedField({
            '@Name': this._generateNewFieldName(),
            '@DataMember': dataMember
        });
    };
    CalculatedFieldsSource.prototype.getActions = function (context) {
        var result = [];
        if (context.hasItems && (context.data.specifics === 'List' || context.data.specifics === 'ListSource') && context.path.indexOf(parameter_1.Parameter.ParametersRefString) !== 0) {
            result.push(this.addAction);
        }
        if (context.data && context.data.specifics && context.data.specifics.indexOf('calc') === 0) {
            result.push(this.removeAction);
        }
        return result;
    };
    CalculatedFieldsSource.prototype.beforeItemsFilled = function (request, items) {
        if (request.fullPath) {
            items.push.apply(items, this._getDataMembersInfoByPath(request.fullPath)());
        }
        return false;
    };
    CalculatedFieldsSource.prototype.afterItemsFilled = function (request, items) {
        if (request.fullPath) {
            this._ordinaryFieldsInfo[request.fullPath] = items;
            items.sort(function (a, b) {
                var aIsList = _fieldListController_1.FieldListController.isList(a) ? 1 : 0;
                var bIsList = _fieldListController_1.FieldListController.isList(b) ? 1 : 0;
                if (aIsList !== bIsList) {
                    return bIsList - aIsList;
                }
                else {
                    return (a.displayName && b.displayName) ? a.displayName.localeCompare(b.displayName) : a.name.localeCompare(b.name);
                }
            });
        }
    };
    return CalculatedFieldsSource;
}(analytics_utils_1.Disposable));
exports.CalculatedFieldsSource = CalculatedFieldsSource;


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var parameter_1 = __webpack_require__(81);
var parameter_2 = __webpack_require__(29);
var analytics_utils_1 = __webpack_require__(0);
var analytics_widgets_1 = __webpack_require__(4);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var parameterExpressionAddon_1 = __webpack_require__(321);
var SettingsAreaModel = (function () {
    function SettingsAreaModel(_parameter) {
        this._parameter = _parameter;
        this.valueSourceSettingsType = this._parameter.valueSourceSettingsType;
        this.valueSourceSettings = this._parameter.valueSourceSettings;
    }
    SettingsAreaModel.prototype.getInfo = function () {
        return this._parameter.getInfo().reduce(function (currentInfo, x) {
            if (x.propertyName === 'valueSourceSettingsType') {
                var info = analytics_internal_1.extend(true, {}, x);
                info.editor = analytics_widgets_1.editorTemplates.getEditor('combobox');
                currentInfo.push(info);
            }
            else if (x.propertyName === parameter_1.valueSourceSettingsSerializationInfo.propertyName) {
                var info = analytics_internal_1.extend(true, {}, x);
                info.editor = analytics_widgets_1.editorTemplates.getEditor('inplaceObjectEditor');
                currentInfo.push(info);
            }
            return currentInfo;
        }, []);
    };
    SettingsAreaModel.prototype.isPropertyVisible = function (propertyName) {
        if (propertyName === 'valueSourceSettings')
            return this.valueSourceSettingsType() !== 'None';
        return true;
    };
    return SettingsAreaModel;
}());
var ParametersDialogBase = (function (_super) {
    __extends(ParametersDialogBase, _super);
    function ParametersDialogBase(_currentReport) {
        var _this = _super.call(this) || this;
        _this._currentReport = _currentReport;
        _this._undoEngine = null;
        _this._isSubmited = false;
        _this.buttons = [
            _this._createButton(analytics_utils_1.getLocalization('OK', analytics_internal_1.StringId.DataAccessBtnOK), function () { return _this.submit(); }),
            _this._createButton(analytics_utils_1.getLocalization('Cancel', analytics_internal_1.StringId.DataAccessBtnCancel), function () { return _this.visible(false); })
        ];
        _this._selectedParameter = ko.observable(null);
        _this._selectedSettings = ko.computed(function () {
            return _this._selectedParameter() && new SettingsAreaModel(_this._selectedParameter());
        });
        _this.visible = ko.observable(false);
        _this.container = function (element) { return analytics_internal_1.getParentContainer(element); };
        _this._disposables.push(_this._selectedSettings, _this._propertiesGrid = new analytics_widgets_1.ObjectProperties(_this._selectedParameter), _this._settingsGrid = new analytics_widgets_1.ObjectProperties(_this._selectedSettings), _this.visible.subscribe(function (newVal) { return !newVal && _this.close(); }));
        _this._propertiesGrid.createEditorAddOn = function (editor) {
            if (_this._selectedParameter() && _this._selectedParameter().propertyExpressionMapper.getExpressionProperty(editor.name) &&
                editor.name.toLocaleLowerCase().indexOf('value') === -1) {
                var addon = new parameterExpressionAddon_1.ParameterExpressionAddOn(editor, _this._selectedParameter);
                return {
                    data: addon,
                    templateName: 'dx-wizard-menu-box-editorswitch'
                };
            }
        };
        return _this;
    }
    ParametersDialogBase.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._currentReport = null;
        this.selectParameter(null);
        this._undoEngine = null;
    };
    ParametersDialogBase.prototype.onSubmit = function () { };
    Object.defineProperty(ParametersDialogBase.prototype, "undoEngine", {
        get: function () {
            if (!this._undoEngine) {
                this._undoEngine = analytics_utils_1.UndoEngine.tryGetUndoEngine(this._currentReport);
            }
            return this._undoEngine;
        },
        enumerable: true,
        configurable: true
    });
    ParametersDialogBase.prototype._createButton = function (text, action) {
        return {
            toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                text: text, onClick: action
            }
        };
    };
    ParametersDialogBase.prototype.selectParameter = function (parameter) {
        var previousParameter = this._selectedParameter();
        parameter && parameter._isEditing(true);
        this._selectedParameter(parameter);
        previousParameter && previousParameter._isEditing(false);
    };
    ParametersDialogBase.prototype.show = function (parameter) {
        this.undoEngine.start();
        this._isSubmited = false;
        this._onStart(parameter);
        this.visible(true);
    };
    ParametersDialogBase.prototype._onStart = function (parameter) {
        this.selectParameter(parameter);
    };
    ParametersDialogBase.prototype.close = function () {
        var cancel = !this._isSubmited && this.undoEngine._hasSessionChanges();
        this.undoEngine.end();
        if (cancel)
            this.undoEngine.undo(true);
        this.selectParameter(null);
    };
    ParametersDialogBase.prototype.submit = function () {
        this._isSubmited = true;
        this.onSubmit();
        this.visible(false);
    };
    return ParametersDialogBase;
}(analytics_utils_1.Disposable));
exports.ParametersDialogBase = ParametersDialogBase;
var AddParameterDialog = (function (_super) {
    __extends(AddParameterDialog, _super);
    function AddParameterDialog() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.popupCss = 'dxrd-parameters-add-dialog';
        _this.title = analytics_utils_1.getLocalization('Add Parameter', 'ASPxReportsStringId.ReportDesigner_ParametersDialog_AddParameter');
        _this.width = 900;
        _this.height = 632;
        _this.contentTemplate = 'dxrd-parameter-edit';
        return _this;
    }
    AddParameterDialog.prototype._createParameter = function (parameters) {
        if (parameters === void 0) { parameters = this._currentReport.parameters(); }
        var newName = analytics_internal_1.getUniqueNameForNamedObjectsArray(parameters, 'parameter'), newParameter = new parameter_2.Parameter({ '@Name': newName, '@Description': 'P' + newName.slice(1) }, this._currentReport);
        return newParameter;
    };
    AddParameterDialog.prototype.onSubmit = function () {
        this._selectedParameter()._isEditing(false);
        this._currentReport.parameters.push(this._selectedParameter());
    };
    AddParameterDialog.prototype._onStart = function (parameter) {
        if (parameter === void 0) { parameter = this._createParameter(); }
        _super.prototype._onStart.call(this, parameter);
    };
    return AddParameterDialog;
}(ParametersDialogBase));
exports.AddParameterDialog = AddParameterDialog;
var EditParametersDialog = (function (_super) {
    __extends(EditParametersDialog, _super);
    function EditParametersDialog(report) {
        var _this = _super.call(this, report) || this;
        _this.width = 'auto';
        _this.height = 684;
        _this.popupCss = 'dxrd-parameters-edit-dialog';
        _this.title = analytics_utils_1.getLocalization('Edit Parameters', 'ASPxReportsStringId.ReportDesigner_ParametersDialog_EditParameters');
        _this.contentEmptyAreaPlaceHolder = analytics_utils_1.getLocalization('Click the Add button to create a parameter.', 'ReportStringId.ParameterEditor_ParameterSettingsPlaceholder');
        _this.contentTemplate = 'dxrd-parameters-content';
        _this._parametersListOptions = {
            addHandler: function () { return _this._createParameter(); },
            collapsed: false,
            showScroll: true,
            alwaysShow: true,
            displayName: 'Parameters',
            template: 'dxrd-parameter-editing-collection-item',
            selectedItem: _this._selectedParameter,
            values: ko.observable(_this._currentReport.parameters),
            textEmptyArray: { text: 'No parameters to display.', localizationId: 'ReportStringId.ParameterEditor_ParameterListPlaceholder' }
        };
        var previousParameter = _this._selectedParameter();
        _this._disposables.push(_this._selectedParameter.subscribe(function (parameter) {
            if (parameter == previousParameter)
                return;
            parameter && parameter._isEditing(true);
            previousParameter && previousParameter._isEditing(false);
            previousParameter = parameter;
        }));
        _this._disposables.push(_this.contentVisible = ko.computed(function () {
            return _this._currentReport.parameters().length > 0;
        }));
        return _this;
    }
    EditParametersDialog.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._parametersListOptions = null;
    };
    EditParametersDialog.prototype.onSubmit = function () { };
    return EditParametersDialog;
}(AddParameterDialog));
exports.EditParametersDialog = EditParametersDialog;


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_utils_1 = __webpack_require__(0);
var ParameterExpressionAddOn = (function (_super) {
    __extends(ParameterExpressionAddOn, _super);
    function ParameterExpressionAddOn(_editor, _parameter) {
        var _this = _super.call(this) || this;
        _this._editor = _editor;
        _this._parameter = _parameter;
        _this.imageTemplateName = 'dx-objectdatasource-expression';
        _this._disposables.push(ko.computed(function () {
            if (_this._parameter()) {
                var wrappedExpression = _this._editor.value.peek();
                var expressionValue = wrappedExpression && wrappedExpression.value && wrappedExpression.value.peek();
                _this._parameter().propertyExpressionMapper.getExpressionProperty(_this._editor.name).showExpression(!!expressionValue);
            }
        }));
        _this._disposables.push(_this.isExpression = ko.pureComputed({
            read: function () {
                if (_this._parameter()) {
                    return _this._parameter().propertyExpressionMapper.getExpressionProperty(_this._editor.name).showExpression();
                }
            },
            write: function (value) { return _this._parameter() && _this._parameter().propertyExpressionMapper.getExpressionProperty(_this._editor.name).showExpression(value); }
        }));
        return _this;
    }
    ParameterExpressionAddOn.prototype.switchEditors = function () {
        this.isExpression(!this.isExpression());
    };
    return ParameterExpressionAddOn;
}(analytics_utils_1.Disposable));
exports.ParameterExpressionAddOn = ParameterExpressionAddOn;


/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var DisplayNameProvider = (function () {
    function DisplayNameProvider(_fieldsProvider, _dataSourceHelper, _rootDS) {
        this._fieldsProvider = _fieldsProvider;
        this._dataSourceHelper = _dataSourceHelper;
        this._rootDS = _rootDS;
        this._requests = {};
        this._fieldsProvider = _fieldsProvider;
        this._dataSourceHelper = _dataSourceHelper;
        this._rootDS = _rootDS;
    }
    DisplayNameProvider.prototype._getRequest = function (path) {
        var _this = this;
        if (!this._requests[path]) {
            var pathRequest = new analytics_utils_1.PathRequest(path);
            this._requests[path] = ko.pureComputed(function () { return _this._fieldsProvider.getItems(pathRequest); });
        }
        return this._requests[path];
    };
    DisplayNameProvider.prototype._ignoreDisplayNameRequest = function (propertyName) {
        if (propertyName.indexOf('ReportItems') === 0)
            return true;
        return false;
    };
    DisplayNameProvider.prototype._getDisplayNameRequest = function (path, fieldName) {
        var _this = this;
        var def = $.Deferred();
        this._getRequest(path)().done(function (data) {
            var displayName = _this._getFieldDisplayName(data, fieldName);
            if (!displayName)
                def.reject();
            else
                def.resolve(displayName);
        }).fail(function () {
            def.reject();
        });
        return def.promise();
    };
    DisplayNameProvider.prototype._createRequestInfo = function (dataSource, path, dataMember, dataMemberOffset, includeDataSourceName) {
        if (!dataMember)
            return null;
        var dataSourceName = null;
        if (!path) {
            var ds = (dataSource || this._rootDS());
            var dsInfo = ds && this._dataSourceHelper.findDataSourceInfo(ds);
            if (!dsInfo)
                return null;
            path = (dsInfo.ref || dsInfo.id);
            if (includeDataSourceName)
                dataSourceName = dsInfo.name;
        }
        var offset = analytics_internal_1.getFullPath(path, dataMemberOffset);
        return {
            fullPath: offset + '.' + dataMember,
            offset: offset,
            dataMember: dataMember,
            dataMemberParts: dataMember.split('.'),
            dataSourceName: dataSourceName
        };
    };
    DisplayNameProvider.prototype._getFieldDisplayName = function (fields, fieldName) {
        if (!fields)
            return null;
        var field = analytics_internal_1.findFirstItemMatchesCondition(fields, function (field) { return field.name === fieldName; });
        return field ? field.displayName : null;
    };
    DisplayNameProvider.prototype._getDisplayName = function (request) {
        var def = $.Deferred();
        if (!request) {
            def.reject();
            return def.promise();
        }
        var fieldsRequests = [];
        for (var i = -1, path = request.offset; i < request.dataMemberParts.length - 1;) {
            fieldsRequests.push(this._getDisplayNameRequest(path, request.dataMemberParts[i + 1]));
            path += '.' + request.dataMemberParts[++i];
        }
        $.when.apply($, fieldsRequests).done(function () {
            var result = request.dataSourceName ? (request.dataSourceName + ' - ') : '';
            for (var i = 0; i < arguments.length; i++) {
                result += arguments[i];
                if (i < arguments.length - 1)
                    result += '.';
            }
            def.resolve(result);
        }).fail(function () { return def.reject(); });
        return def.promise();
    };
    DisplayNameProvider.prototype._getRealName = function (request) {
        if (!request)
            return $.Deferred().reject().promise();
        return this._getRealNameRequest(request.offset, request.dataMember);
    };
    DisplayNameProvider.prototype._getRealNameRequest = function (path, dataMember) {
        var _this = this;
        var def = $.Deferred();
        this._getRequest(path)()
            .done(function (items) {
            var targetItem = items.filter(function (item) { return dataMember === item.displayName; })[0];
            if (!targetItem)
                targetItem = items.filter(function (item) { return dataMember.indexOf(item.displayName + '.') === 0 && item.isList; })[0];
            if (targetItem) {
                dataMember === targetItem.displayName ? def.resolve(targetItem.name) :
                    _this._getRealNameRequest(path + '.' + targetItem.name, dataMember.substring(targetItem.displayName.length + 1))
                        .done(function (data) {
                        def.resolve(targetItem.name + '.' + data);
                    })
                        .fail(function () {
                        def.reject();
                    });
            }
            else {
                def.reject();
            }
        })
            .fail(function () {
            def.reject();
        });
        return def.promise();
    };
    DisplayNameProvider.prototype.getDisplayName = function (dataSource, dataMember, dataMemberOffset, includeDataSourceName) {
        if (dataMemberOffset === void 0) { dataMemberOffset = ''; }
        if (includeDataSourceName === void 0) { includeDataSourceName = true; }
        var request = this._createRequestInfo(dataSource, null, dataMember, dataMemberOffset, includeDataSourceName);
        return this._getDisplayName(request);
    };
    DisplayNameProvider.prototype.getDisplayNameByPath = function (path, dataMember) {
        var _this = this;
        if (this._ignoreDisplayNameRequest(dataMember))
            return $.Deferred().resolve(dataMember).promise();
        return this._getByPath(path, dataMember, function (x) { return _this._getDisplayName(x); });
    };
    DisplayNameProvider.prototype.getRealName = function (path, dataMember) {
        var _this = this;
        return this._getByPath(path, dataMember, function (x) { return _this._getRealName(x); });
    };
    DisplayNameProvider.prototype._getByPath = function (path, dataMember, getNameFunc) {
        var _this = this;
        path = path || '';
        var request = this._createRequestInfo(null, path, dataMember, '', false);
        var pathParts = path.split('.');
        if (pathParts.length === 1) {
            return getNameFunc(request);
        }
        else {
            var result = $.Deferred();
            getNameFunc(request).done(function (x) {
                result.resolve(x);
            }).fail(function (x) {
                request = _this._createRequestInfo(null, pathParts[0], dataMember, '', false);
                getNameFunc(request).done(function (x) {
                    result.resolve(x);
                }).fail(function (x) { return result.reject(); });
            });
            return result.promise();
        }
    };
    DisplayNameProvider.prototype.dispose = function () {
        var _this = this;
        Object.keys(this._requests).forEach(function (key) {
            _this._requests[key].dispose();
            delete _this._requests[key];
        });
    };
    return DisplayNameProvider;
}());
exports.DisplayNameProvider = DisplayNameProvider;


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrReport_1 = __webpack_require__(16);
var _createIDataMemberInfoByName_1 = __webpack_require__(177);
var calculatedField_1 = __webpack_require__(64);
var analytics_utils_1 = __webpack_require__(0);
var $ = __webpack_require__(3);
var ReportItemsProvider = (function (_super) {
    __extends(ReportItemsProvider, _super);
    function ReportItemsProvider(controlsHelper, fieldListProvider) {
        var _this = _super.call(this) || this;
        _this._rootItems = {
            'ReportItems': function (path, controlsHelper) {
                return _this.getReportElementsByPath(controlsHelper, path.split('.'));
            }
        };
        _this.getItems = function (path, rootItems) {
            var rootItems = $.extend({}, _this._rootItems, rootItems);
            var getItemsFunc = undefined;
            Object.keys(rootItems).some(function (currentName) {
                var rootItem = { propertyName: currentName, getItems: rootItems[currentName] };
                getItemsFunc = _this._tryGenerateGetItemsFunc(rootItem, path.path) || _this._tryGenerateGetItemsFunc(rootItem, path.fullPath);
                return !!getItemsFunc;
            });
            if (getItemsFunc) {
                var $deferred = $.Deferred();
                var items = getItemsFunc(controlsHelper);
                items && $deferred.resolve(items) || $deferred.reject();
                return $deferred.promise();
            }
            else if (path.fullPath === 'Root') {
                var $deferred = $.Deferred();
                var result = Object.keys(rootItems).map(function (name) { return _createIDataMemberInfoByName_1.createIDataMemberInfoByName(name); });
                $deferred.resolve(result);
                return $deferred.promise();
            }
            else {
                return fieldListProvider.getItems(path);
            }
        };
        _this.getItemByPath = function (pathRequest, rootItems) {
            var parts = pathRequest.fullPath.split('.');
            var propertyName = parts.pop();
            return _this._getItemByPath(parts, rootItems, propertyName);
        };
        return _this;
    }
    ReportItemsProvider.prototype._getControlByName = function (controlsHelper, name) {
        if (name === 'Report') {
            return controlsHelper.allControls().filter(function (x) { return x instanceof xrReport_1.ReportViewModel; })[0];
        }
        return controlsHelper.allControls().filter(function (x) { return controlsHelper.getNameProperty(x)() === name; })[0];
    };
    ReportItemsProvider.prototype._getProperties = function (targetInfo, propertyName) {
        return targetInfo.filter(function (x) { return x.modelName === '@' + propertyName || x.modelName === propertyName; })[0];
    };
    ReportItemsProvider.prototype._tryGenerateGetItemsFunc = function (rootItem, path) {
        if (path.indexOf(rootItem.propertyName) === 0) {
            return function (controlsHelper) { return rootItem.getItems(path, controlsHelper); };
        }
    };
    ReportItemsProvider.prototype.getReportElementsByPath = function (controlsHelper, path) {
        if (path.length === 1) {
            return controlsHelper.allControls().map(function (x) {
                var name = x instanceof xrReport_1.ReportViewModel ? 'Report' : controlsHelper.getNameProperty(x)();
                return _createIDataMemberInfoByName_1.createIDataMemberInfoByName(name);
            });
        }
        path = path.slice(1);
        var control = this._getControlByName(controlsHelper, path[0]);
        if (!control) {
            return null;
        }
        var info = control.getInfo();
        var controlsPath = path.slice(1);
        for (var i = 0; i < controlsPath.length; i++) {
            info = this._getProperties(info, controlsPath[i]);
            info = info && info.info;
        }
        if (info) {
            return info.filter(function (x) { return !!x.modelName && !x.array; }).map(function (x) {
                var name = x.modelName.indexOf('@') === 0 ? x.modelName.slice(1) : x.modelName;
                return _createIDataMemberInfoByName_1.createIDataMemberInfoByName(name, x.info ? 'list' : 'string');
            });
        }
        else {
            return null;
        }
    };
    ReportItemsProvider.prototype._getItemByPath = function (pathParts, rootItems, propertyName) {
        var _this = this;
        var $deferred = $.Deferred();
        var currentPropertyName = propertyName;
        if (pathParts.length === 0)
            return $deferred.reject().promise();
        var parentPathRequest = new analytics_utils_1.PathRequest(pathParts.join('.'));
        this.getItems(parentPathRequest, rootItems).done(function (items) {
            var isParameter = pathParts.length === 1 && pathParts[0] === 'Parameters';
            if (!isParameter && items.length === 0) {
                currentPropertyName = [pathParts.pop(), currentPropertyName].join('.');
                return _this._getItemByPath(pathParts, rootItems, currentPropertyName)
                    .done(function (item) { return $deferred.resolve(item); })
                    .fail(function () { return $deferred.reject(); });
            }
            var item = items.filter(function (x) { return x.name === currentPropertyName; })[0];
            if (item) {
                if (item instanceof calculatedField_1.CalculatedField && pathParts.length > 1) {
                    currentPropertyName = pathParts.pop();
                    _this._getItemByPath(pathParts, rootItems, currentPropertyName)
                        .done(function () { return $deferred.resolve(item); })
                        .fail(function () { return $deferred.reject(); });
                }
                else if (isParameter && item.isList) {
                    $deferred.reject();
                }
                else {
                    $deferred.resolve(item);
                }
            }
            else if (isParameter) {
                items.forEach(function (parameter) {
                    if (!parameter.isList)
                        return;
                    _this._getItemByPath(['Parameters', parameter.name], rootItems, currentPropertyName)
                        .done(function (innerParameter) { return $deferred.resolve(innerParameter); });
                });
                $deferred.state() !== 'resolved' && $deferred.reject();
            }
            else {
                $deferred.reject();
            }
        }).fail(function () { return $deferred.reject(); });
        return $deferred.promise();
    };
    return ReportItemsProvider;
}(analytics_utils_1.Disposable));
exports.ReportItemsProvider = ReportItemsProvider;


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var RenameDataSourceStrategy = (function () {
    function RenameDataSourceStrategy(dsHelper, _afterRenameCallBack) {
        var _this = this;
        this.dsHelper = dsHelper;
        this._afterRenameCallBack = _afterRenameCallBack;
        this._rename = function (dataSourceInfo, name) {
            dataSourceInfo.name = name;
            if (dataSourceInfo.data.name) {
                dataSourceInfo.data.name(name);
            }
            _this._afterRenameCallBack && _this._afterRenameCallBack();
        };
    }
    RenameDataSourceStrategy.prototype.validateName = function (nameCandidate) {
        return nameCandidate && !nameCandidate.match(/(?!\_)[\W]+/);
    };
    RenameDataSourceStrategy.prototype.validateUnique = function (nameCandidate, currentName) {
        return nameCandidate && (nameCandidate === currentName || this.dsHelper().usedDataSources().map(function (dataSource) { return dataSource.name; }).indexOf(nameCandidate) === -1);
    };
    RenameDataSourceStrategy.prototype.tryRename = function (nameCandidate, currentItemData) {
        var currentDs = this.dsHelper && this.dsHelper().findDataSourceInfo(currentItemData);
        if (!currentDs)
            return false;
        this._rename(currentDs, nameCandidate);
        return true;
    };
    return RenameDataSourceStrategy;
}());
exports.RenameDataSourceStrategy = RenameDataSourceStrategy;


/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var calculatedField_1 = __webpack_require__(64);
var parameter_1 = __webpack_require__(29);
var DesignControlsHelper = (function (_super) {
    __extends(DesignControlsHelper, _super);
    function DesignControlsHelper(target, selection) {
        return _super.call(this, target, [{
                added: function (control) { },
                deleted: function (control) { control.surface === selection.focused() && selection.focused(control.surface.findNextSelection()); }
            }], ['controls', 'bands', 'crossBandControls', 'rows', 'cells', 'fields', 'styles', 'parameters', 'formattingRuleSheet', 'calculatedFields', 'components']) || this;
    }
    DesignControlsHelper.prototype.dispose = function () {
        this._xrPdfSignatureCollection = [];
        _super.prototype.dispose.call(this);
    };
    DesignControlsHelper.prototype.getNameProperty = function (model) {
        if (model instanceof parameter_1.Parameter)
            return model.parameterName;
        if (model instanceof calculatedField_1.CalculatedField)
            return model.calculatedFieldName;
        return _super.prototype.getNameProperty.call(this, model);
    };
    DesignControlsHelper.prototype._setName = function (value) {
        if (value !== this.target) {
            _super.prototype._setName.call(this, value);
        }
    };
    DesignControlsHelper.prototype._setDefaultText = function (value) {
        var controlType = value.controlType || 'Unknown';
        controlType !== 'XRCrossTabCell' && _super.prototype._setDefaultText.call(this, value);
    };
    DesignControlsHelper.prototype._getNamePrefix = function (value) {
        var controlType = value.controlType || 'Unknown';
        if (controlType === 'XRCrossTabCell') {
            return value.namePrefix;
        }
        return _super.prototype._getNamePrefix.call(this, value);
    };
    return DesignControlsHelper;
}(analytics_internal_1.DesignControlsHelper));
exports.DesignControlsHelper = DesignControlsHelper;


/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var DataSourceItemsExtender = (function () {
    function DataSourceItemsExtender(dataSources) {
        this._dataSources = dataSources;
    }
    DataSourceItemsExtender.prototype.beforeItemsFilled = function (request, items) {
        return false;
    };
    DataSourceItemsExtender.prototype.afterItemsFilled = function (request, items) {
        if (!(this._dataSources && this._dataSources.peek()))
            return;
        if (!request.fullPath) {
            this._dataSources.peek().forEach(function (dataSourceItem) {
                var dataMember = analytics_internal_1.getFirstItemByPropertyValue(items, 'displayName', dataSourceItem.name);
                if (!(dataMember && dataSourceItem.data))
                    return;
                if (dataSourceItem.data.tableInfoCollection) {
                    dataMember['contenttemplate'] = 'dxrd-datasource-item';
                    dataMember['tableInfoItems'] = dataSourceItem.data.tableInfoCollection;
                }
                else if (dataSourceItem.isSqlDataSource) {
                    dataMember['canAddSqlQuery'] = true;
                }
                else if (dataSourceItem.isJsonDataSource) {
                    dataMember['isJsonDataSource'] = true;
                }
                else if (dataSourceItem.isObjectDataSource) {
                    dataMember['isObjectDataSource'] = true;
                    dataMember['hasParams'] = dataSourceItem['hasParams'];
                }
                dataMember['canRemove'] = true;
            });
        }
        else if (request.fullPath === request.id || request.fullPath === request.ref) {
            var dataSourcesInfo = this._dataSources.peek().filter(function (dataSourceItem) {
                return !!dataSourceItem.id && dataSourceItem.id === request.id || !!dataSourceItem.ref && dataSourceItem.ref === request.ref;
            })[0];
            if (!dataSourcesInfo || !dataSourcesInfo.isSqlDataSource)
                return;
            items.forEach(function (dataMemberItem) { dataMemberItem['canEditQuery'] = dataMemberItem.isList; });
        }
    };
    return DataSourceItemsExtender;
}());
exports.DataSourceItemsExtender = DataSourceItemsExtender;


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ChartFieldListExtender = (function () {
    function ChartFieldListExtender() {
    }
    ChartFieldListExtender.prototype.beforeItemsFilled = function (request, items) {
        if (request.ref !== 'PivotGrid' && request.id !== 'PivotGrid')
            return false;
        switch (request.path) {
            case 'dataMember': return true;
            case 'seriesDataMember': {
                items.push({ name: 'Arguments', displayName: 'Arguments', specifics: 'String' }, { name: 'Series', displayName: analytics_utils_1.getLocalization('Series', 'DevExpress.XtraReports.UI.XRChart.Series'), specifics: 'String' }, { name: 'Values', displayName: analytics_utils_1.getLocalization('Values', 'DevExpress.XtraCharts.SeriesPoint.Values'), specifics: 'Integer' });
                return true;
            }
            case 'valueDataMembers': {
                items.push({ name: 'Values', displayName: analytics_utils_1.getLocalization('Values', 'DevExpress.XtraCharts.SeriesPoint.Values'), specifics: 'Integer' });
                return true;
            }
        }
    };
    return ChartFieldListExtender;
}());
exports.ChartFieldListExtender = ChartFieldListExtender;


/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var settings_1 = __webpack_require__(12);
var DesignerErrorProvider = (function (_super) {
    __extends(DesignerErrorProvider, _super);
    function DesignerErrorProvider(_report) {
        var _this = _super.call(this) || this;
        _this._report = _report;
        _this.errors = ko.observableArray([]);
        return _this;
    }
    DesignerErrorProvider.prototype.collectErrors = function () {
        var _this = this;
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'getDesignErrors', JSON.stringify({
            'XtraReportsLayoutSerializer': this._report.serialize()
        })).done(function (result) {
            _this.errors(result);
        });
    };
    return DesignerErrorProvider;
}(analytics_utils_1.Disposable));
exports.DesignerErrorProvider = DesignerErrorProvider;


/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var RuntimeErrorProvider = (function () {
    function RuntimeErrorProvider() {
        this.errors = ko.observableArray();
    }
    RuntimeErrorProvider.prototype.collectErrors = function () { };
    return RuntimeErrorProvider;
}());
exports.RuntimeErrorProvider = RuntimeErrorProvider;


/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var reportStorageWeb_1 = __webpack_require__(34);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var NavigateTab = (function (_super) {
    __extends(NavigateTab, _super);
    function NavigateTab(options) {
        var _this = _super.call(this) || this;
        _this._isReportLoading = options.isReportLoading;
        _this._callbacks = options.callbacks;
        _this.context = ko.observable(_this._callbacks.createContext(options.report, options.url));
        _this._disposables.push(_this.displayName = ko.computed(function () { return _this._generateDisplayName(_this.context().report); }));
        _this.undoEngine = new analytics_utils_1.UndoEngine(_this.context, ['surface', 'reportSource'], 'getInfo', ['objectStorage']);
        _this.isDirty = _this.undoEngine.isDirty;
        _this.isModified = _this.undoEngine.isDirty;
        _this._disposables.push(_this.report = _this._createReport());
        _this._disposables.push(_this.url = _this._createReportUrl());
        _this._callbacks.afterInititalize(_this);
        return _this;
    }
    NavigateTab.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.undoEngine['_callDisposeFunction'](this.context());
        this.context().dispose();
    };
    NavigateTab.prototype._generateDisplayName = function (model) {
        var name = model && (model.displayNameObject() || model.name());
        return name;
    };
    NavigateTab.prototype._createReport = function () {
        var _this = this;
        return ko.computed({
            read: function () { return _this.context().report; },
            write: function (newVal) { return _this.changeContext(newVal, _this.context().url()); }
        });
    };
    NavigateTab.prototype._createReportUrl = function () {
        var _this = this;
        return ko.computed({
            read: function () { return _this.context().url(); },
            write: function (newVal) { return _this.context().url(newVal); }
        });
    };
    NavigateTab.prototype.changeContext = function (report, reportUrl) {
        this.context(this._callbacks.createContext(report, reportUrl));
        this._isReportLoading(false);
    };
    NavigateTab.prototype.resetIsModified = function () {
        this.undoEngine.isDirty(false);
        this.undoEngine.clearHistory();
    };
    NavigateTab.prototype.refresh = function (resetState) {
        var _this = this;
        this._isReportLoading(true);
        reportStorageWeb_1.ReportStorageWeb.getReportByUrl((this.context().url())).done(function (result) {
            _this.report(result);
            if (resetState) {
                _this.resetIsModified();
            }
        });
    };
    return NavigateTab;
}(analytics_utils_1.Disposable));
exports.NavigateTab = NavigateTab;


/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var CustomMergingEngine = (function () {
    function CustomMergingEngine() {
    }
    CustomMergingEngine.prototype._customMergeForFormatString = function (propertyName, controls, undoEngine) {
        if (propertyName === 'formatString') {
            var result = ko.observable(controls.every(function (control) { return controls[0][propertyName].peek() === control[propertyName].peek(); }) ? controls[0][propertyName].peek() : null);
            return {
                result: result,
                subscriptions: [
                    result.subscribe(function (newVal) {
                        undoEngine && undoEngine().start();
                        controls.forEach(function (control) {
                            if (!control.disabled()) {
                                control[propertyName](newVal);
                            }
                        });
                        undoEngine && undoEngine().end();
                    })
                ]
            };
        }
    };
    CustomMergingEngine.prototype.customMerge = function (propertyName, controls, undoEngine) {
        var _this = this;
        if (propertyName === 'dataBindings') {
            var result = ko.observableArray();
            var subscriptions = [];
            var allBindings = [].concat.apply([], controls.map(function (x) { return x[propertyName](); }));
            controls[0][propertyName]().map(function (x) { return x.propertyName(); }).forEach(function (name) {
                var availableBindings = allBindings.filter(function (binding) {
                    return binding.propertyName() === name;
                });
                if (availableBindings.length === controls.length) {
                    var combinedObj = analytics_internal_1.CombinedObject._merge(availableBindings, undoEngine, function (propertyName, controls, undoEngine) { return _this._customMergeForFormatString(propertyName, controls, undoEngine); });
                    var binding = combinedObj.result;
                    binding['isEmpty'] = function () {
                        return !(binding['dataMember']() || binding['dataSource']() || binding['parameter']());
                    };
                    binding['visible'] = ko.observable(false);
                    binding['disabled'] = ko.computed(function () {
                        return availableBindings.every(function (x) { return x.disabled(); });
                    });
                    combinedObj.subscriptions.push(binding['disabled']);
                    result.push(binding);
                    subscriptions = [].concat.apply(subscriptions, combinedObj.subscriptions);
                }
            });
            return { result: result, subscriptions: subscriptions };
        }
    };
    return CustomMergingEngine;
}());
exports.CustomMergingEngine = CustomMergingEngine;


/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _reportScriptService_1 = __webpack_require__(221);
var _eventArgsTypes_1 = __webpack_require__(333);
var _languageHelper_1 = __webpack_require__(334);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var _reportDummyCreator_1 = __webpack_require__(222);
var ScriptsEditor = (function (_super) {
    __extends(ScriptsEditor, _super);
    function ScriptsEditor(report, allControls) {
        var _this = _super.call(this) || this;
        _this._selectionNotEmpty = ko.observable(false);
        _this._canUndo = ko.observable(false);
        _this._canRedo = ko.observable(false);
        _this._cursorPosition = ko.observable().extend({ throttle: 100 });
        _this.guid = ko.observable(null);
        _this.editorContainer = ko.observable();
        _this.editorVisible = ko.observable(false);
        _this.toolbarItems = [];
        _this.controls = ko.observableArray([]);
        _this.selectedControl = ko.observable();
        _this.events = ko.observable([]);
        _this.selectedEvent = ko.observable();
        _this.validateDisabled = ko.observable(false);
        _this.aceOptions = {
            enableBasicAutocompletion: true,
            enableSnippets: true,
            enableLiveAutocompletion: true,
            showPrintMargin: false
        };
        var self = _this;
        var cursorPositionChanging = false;
        _this.languageHelper = new _languageHelper_1.LanguageHelper(report);
        _this._updateEditorState = function () {
            if (_this.editorContainer() && _this.editorContainer().getSession()) {
                _this._canUndo(_this.editorContainer().getSession().getUndoManager().hasUndo());
                _this._canRedo(_this.editorContainer().getSession().getUndoManager().hasRedo());
            }
        };
        _this.selectionChanged = function (editor) {
            _this._selectionNotEmpty(!editor.getSelection().isEmpty());
            _this._updateEditorState();
            editor.focus();
        };
        _this.report = report;
        _this.scriptsText = ko.pureComputed({
            read: function () { return _this.report() && _this.report().scriptsSource(); },
            write: function (newText) { _this.report() && _this.report().scriptsSource(newText); }
        });
        _this._initializeToolbar();
        _this.editorContainer.subscribe(function (editor) {
            if (editor.getSession()) {
                editor.getSession().getSelection().on('changeSelection', function () {
                    _this.selectionChanged(editor);
                });
                editor.getSession().getSelection().on('changeCursor', function () {
                    self._cursorPosition(editor.getCursorPosition());
                });
            }
        });
        _this._cursorPosition.subscribe(function (currentCursorPosition) {
            var currentFunctionName = _this._getFunctionName(currentCursorPosition.row), control, event;
            _this.controls().some(function (ctrl) {
                control = ctrl;
                event = _this._getEventByFunction(ctrl, currentFunctionName);
                return !!event;
            });
            if (control && event) {
                try {
                    cursorPositionChanging = true;
                    _this.selectedControl(control);
                    _this.selectedEvent(event);
                }
                finally {
                    cursorPositionChanging = false;
                }
            }
        });
        _this._disposables.push(ko.computed(function () {
            _this.controls(allControls().filter(function (control) { return !!control.scripts && !control.lockedInUserDesigner(); }));
        }));
        _this.selectedControl.subscribe(function (newSelectedControl) {
            var eventsList = [];
            if (newSelectedControl) {
                var info = newSelectedControl.getInfo();
                var scripts = info.filter(function (x) { return x.propertyName === 'scripts'; })[0];
                eventsList = scripts && scripts.info.filter(function (x) { return ko.unwrap(x.visible) !== false && !ko.unwrap(x.disabled); }).map(function (item) {
                    return item.propertyName.indexOf('on') === 0 ? item.propertyName.substring(2) : item.propertyName;
                });
            }
            _this.selectedEvent('');
            _this.events(eventsList);
        });
        _this._ensureFunction = function (functionName, eventArgsType) {
            var editorContainer = _this.editorContainer();
            if (editorContainer) {
                var editorContent = editorContainer.getValue();
                if (editorContent.indexOf(functionName) === -1) {
                    var newEventHandler = _this.languageHelper.createNewHandler(functionName, eventArgsType);
                    var resultScripts = editorContent.concat(newEventHandler);
                    _this.report().scriptsSource(resultScripts);
                    editorContainer.setValue(resultScripts);
                }
            }
        };
        _this.ensureEvent = function (eventName, functionName, model) {
            var selectedControl = model;
            if (!selectedControl) {
                selectedControl = _this.selectedControl();
            }
            functionName = ScriptsEditor.generateFunctionName(selectedControl, eventName, functionName, _this.allFunctionNames);
            var eventArgsType = ScriptsEditor.getEventArgsType(eventName);
            _this._ensureFunction(functionName, eventArgsType);
            _this._changeSelection(functionName);
            selectedControl.scripts['on' + eventName](functionName);
            _this.selectedControl(selectedControl);
            if (_this.controls.indexOf(selectedControl) === -1) {
                _this.controls.push($.extend({ displayExpr: selectedControl.name }, selectedControl));
            }
            _this.selectedEvent(eventName);
        };
        _this.selectedEvent.subscribe(function (newEvent) {
            if (!cursorPositionChanging && newEvent) {
                var selectedControl = _this.selectedControl();
                var selectedControlNewEvent = selectedControl && selectedControl.scripts['on' + newEvent];
                var newEventFunction = selectedControlNewEvent && selectedControlNewEvent();
                if (!newEventFunction || _this.allFunctionNames.indexOf(newEventFunction) === -1) {
                    _this.ensureEvent(newEvent);
                }
                else {
                    _this._changeSelection(newEventFunction);
                }
            }
        });
        return _this;
    }
    ScriptsEditor.prototype._changeSelection = function (textToSelect) {
        var editorContainer = this.editorContainer();
        if (editorContainer) {
            editorContainer.find(textToSelect, {
                backwards: false,
                wrap: false,
                caseSensitive: false,
                wholeWord: true,
                regExp: false
            }, true);
            editorContainer.findNext();
            editorContainer.findPrevious();
        }
    };
    ScriptsEditor.prototype._initializeToolbar = function () {
        var _this = this;
        var self = this, copyText = ko.observable('');
        this.toolbarItems.push({
            text: 'Cut',
            displayText: function () { return analytics_utils_1.getLocalization('Cut', 'AnalyticsCoreStringId.EditCut'); },
            imageClassName: 'dxrd-image-cut',
            imageTemplateName: 'dxrd-svg-toolbar-cut',
            disabled: ko.pureComputed(function () { return !self.report() || !self._selectionNotEmpty(); }),
            visible: true,
            clickAction: function () {
                copyText(self.editorContainer().getCopyText());
                self.editorContainer().execCommand('cut');
            },
            hotKey: { ctrlKey: true, keyCode: 'X'.charCodeAt(0) }
        });
        this.toolbarItems.push({
            text: 'Copy',
            displayText: function () { return analytics_utils_1.getLocalization('Copy', 'AnalyticsCoreStringId.Cmd_Copy'); },
            imageClassName: 'dxrd-image-copy',
            imageTemplateName: 'dxrd-svg-toolbar-copy',
            disabled: ko.pureComputed(function () { return !self.report() || !self._selectionNotEmpty(); }),
            visible: true,
            clickAction: function () {
                copyText(self.editorContainer().getCopyText());
            },
            hotKey: { ctrlKey: true, keyCode: 'C'.charCodeAt(0) }
        });
        this.toolbarItems.push({
            text: 'Paste',
            displayText: function () { return analytics_utils_1.getLocalization('Paste', 'AnalyticsCoreStringId.Cmd_Paste'); },
            imageClassName: 'dxrd-image-paste',
            imageTemplateName: 'dxrd-svg-toolbar-paste',
            disabled: ko.pureComputed(function () { return !self.report() || !copyText(); }),
            visible: true,
            clickAction: function () {
                self.editorContainer().onPaste(copyText());
            },
            hotKey: { ctrlKey: true, keyCode: 'V'.charCodeAt(0) }
        });
        this.toolbarItems.push({
            text: 'Delete',
            displayText: function () { return analytics_utils_1.getLocalization('Delete', 'AnalyticsCoreStringId.Cmd_Delete'); },
            imageClassName: 'dxrd-image-delete',
            imageTemplateName: 'dxrd-svg-toolbar-delete',
            disabled: ko.pureComputed(function () { return !self.report() || !self._selectionNotEmpty(); }),
            visible: true,
            clickAction: function () {
                self.editorContainer().execCommand('del');
            }
        });
        this.toolbarItems.push({
            text: 'Undo',
            displayText: function () { return analytics_utils_1.getLocalization('Undo', 'AnalyticsCoreStringId.Undo'); },
            imageClassName: 'dxrd-image-undo',
            imageTemplateName: 'dxrd-svg-toolbar-undo',
            disabled: ko.pureComputed(function () { return !self.report() || !self._canUndo(); }),
            visible: true,
            clickAction: function () {
                self.editorContainer().undo(false);
                self._updateEditorState();
            },
            hotKey: { ctrlKey: true, keyCode: 'Z'.charCodeAt(0) },
            hasSeparator: true
        });
        this.toolbarItems.push({
            text: 'Redo',
            displayText: function () { return analytics_utils_1.getLocalization('Redo', 'AnalyticsCoreStringId.Redo'); },
            imageClassName: 'dxrd-image-redo',
            imageTemplateName: 'dxrd-svg-toolbar-redo',
            disabled: ko.pureComputed(function () { return !self.report() || !self._canRedo(); }),
            visible: true,
            clickAction: function () {
                self.editorContainer().redo(false);
                self._updateEditorState();
            },
            hotKey: { ctrlKey: true, keyCode: 'Y'.charCodeAt(0) },
        });
        this.toolbarItems.push({
            text: 'Controls',
            disabled: ko.pureComputed(function () { return !_this.report(); }),
            visible: this.editorVisible,
            clickAction: $.noop,
            control: self.selectedControl,
            controls: self.controls,
            displayExpr: function (value) { return analytics_internal_1.getControlFullName(value); },
            templateName: 'dxrd-scripting-controlchooser',
            hasSeparator: true
        });
        this.toolbarItems.push({
            text: 'Events',
            disabled: ko.pureComputed(function () { return !_this.report(); }),
            visible: this.editorVisible,
            clickAction: $.noop,
            events: self.events,
            event: self.selectedEvent,
            templateName: 'dxrd-scripting-eventchooser'
        });
        this.toolbarItems.push({
            text: 'Validate',
            displayText: function () { return analytics_utils_1.getLocalization('Validate', 'ReportStringId.ScriptEditor_Validate'); },
            imageClassName: 'dxrd-image-validate',
            imageTemplateName: 'dxrd-svg-toolbar-validate',
            disabled: ko.pureComputed(function () {
                return !self.report() || self.validateDisabled() || !self.editorContainer();
            }),
            visible: this.editorVisible,
            hotKey: { ctrlKey: true, keyCode: 'L'.charCodeAt(0) },
            clickAction: function () {
                self.validateDisabled(true);
                self._setScriptsText();
                _reportScriptService_1.ReportScriptService.validateScripts(self.report()).done(function (result) {
                    if (!self.editorContainer())
                        return;
                    var errors = [];
                    result.forEach(function (error) {
                        var linesCount = self.editorContainer().getSession().getLength();
                        errors.push({
                            row: self._getValidIndex(error.Line, linesCount),
                            column: self._getValidIndex(error.Column, linesCount),
                            text: error.ErrorNumber + ' - ' + error.ErrorText,
                            type: error.IsWarning ? 'warning' : 'error'
                        });
                    });
                    self.editorContainer().getSession().setAnnotations(errors);
                    self.validateDisabled(false);
                    if (errors.length > 0) {
                        analytics_internal_1.ShowMessage(analytics_utils_1.getLocalization('The script contains error(s).', 'ASPxReportsStringId.ReportDesigner_ScriptValidation_Message_ContainsErrors'));
                    }
                    else {
                        analytics_internal_1.ShowMessage(analytics_utils_1.getLocalization('The script is valid.', 'ASPxReportsStringId.ReportDesigner_ScriptValidation_Message_ValidScript'), 'success');
                    }
                })
                    .fail(function (result) {
                    analytics_internal_1.ShowMessage(analytics_utils_1.getLocalization('Impossible to validate the script.', 'ASPxReportsStringId.ReportDesigner_ScriptValidation_Error'));
                    self.validateDisabled(false);
                });
            },
            hasSeparator: true
        });
        this.toolbarItems.push({
            text: 'Design',
            displayText: function () { return analytics_utils_1.getLocalization('Design', 'ReportStringId.RepTabCtl_Designer'); },
            imageClassName: 'dxrd-image-design',
            imageTemplateName: 'dxrd-svg-preview-report_designer',
            disabled: ko.pureComputed(function () { return !_this.report(); }),
            visible: this.editorVisible,
            hotKey: { ctrlKey: true, keyCode: 'P'.charCodeAt(0) },
            clickAction: function () {
                self._setScriptsText();
                self.editorVisible(false);
            },
            hasSeparator: true
        });
    };
    ScriptsEditor.prototype._getValidIndex = function (errorPosition, linesCount) {
        var position = errorPosition <= linesCount ? Math.max(1, errorPosition) : 1;
        return Math.max(0, position - 1);
    };
    ScriptsEditor.prototype._setScriptsText = function () {
        var editorContainer = this.editorContainer();
        if (editorContainer) {
            this.scriptsText(editorContainer.getValue());
        }
    };
    ScriptsEditor.prototype._getFunctionName = function (row) {
        var name = '', allLines = this.editorContainer().getSession().getDocument().getAllLines();
        for (var rowIndex = row; rowIndex >= 0; rowIndex--) {
            if (name) {
                break;
            }
            for (var index = 0; index < this.allFunctionNames.length; index++) {
                if (allLines[rowIndex].indexOf(this.allFunctionNames[index]) !== -1) {
                    name = this.allFunctionNames[index];
                    break;
                }
            }
        }
        return name;
    };
    ScriptsEditor.prototype._getEventByFunction = function (control, currentFunctionName) {
        var result = '';
        Object.keys(control.scripts).some(function (propertyName) {
            if (result) {
                return true;
            }
            var eventName = propertyName;
            if (ko.unwrap(control.scripts[eventName]) === currentFunctionName && eventName.indexOf('on') === 0) {
                result = eventName.substring(2);
            }
            return false;
        });
        return result;
    };
    ScriptsEditor.generateFunctionName = function (control, eventName, functionName, allFunctionNames) {
        if (allFunctionNames === void 0) { allFunctionNames = []; }
        if (functionName || ko.unwrap(control.name)) {
            return analytics_internal_1.replaceInvalidSymbols(functionName || (ko.unwrap(control.name) + '_' + eventName));
        }
        else {
            return analytics_internal_1.getUniqueName(allFunctionNames, eventName);
        }
    };
    ScriptsEditor.getEventArgsType = function (eventName) {
        return _eventArgsTypes_1.eventArgsTypes[eventName] || 'System.EventArgs';
    };
    ScriptsEditor.prototype.initialize = function () {
        var _this = this;
        var self = this;
        _reportScriptService_1.ReportScriptService.setCodeDom('', JSON.stringify({
            'XtraReportsLayoutSerializer': _reportDummyCreator_1.ReportDummyCreator._createDummy(this.report().serialize())
        })).done(function (result) {
            _this.guid(result.Guid);
        });
    };
    Object.defineProperty(ScriptsEditor.prototype, "allFunctionNames", {
        get: function () {
            return this.scriptsText() ? this.languageHelper.getFunctionNamesFromScript(this.scriptsText()) : [];
        },
        enumerable: true,
        configurable: true
    });
    return ScriptsEditor;
}(analytics_utils_1.Disposable));
exports.ScriptsEditor = ScriptsEditor;


/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.eventArgsTypes = {
    'EvaluateBinding': 'DevExpress.XtraReports.UI.BindingEventArgs',
    'AfterPrint': 'System.EventArgs',
    'BeforePrint': 'System.Drawing.Printing.PrintEventArgs',
    'PrintOnPage': 'DevExpress.XtraReports.UI.PrintOnPageEventArgs',
    'Draw': 'DevExpress.XtraReports.UI.DrawEventArgs',
    'HtmlItemCreated': 'DevExpress.XtraReports.UI.HtmlEventArgs',
    'LocationChanged': 'DevExpress.XtraReports.UI.ChangeEventArgs',
    'ParentChanged': 'DevExpress.XtraReports.UI.ChangeEventArgs',
    'PreviewClick': 'DevExpress.XtraReports.UI.PreviewMouseEventArgs',
    'PreviewDoubleClick': 'DevExpress.XtraReports.UI.PreviewMouseEventArgs',
    'PreviewMouseDown': 'DevExpress.XtraReports.UI.PreviewMouseEventArgs',
    'PreviewMouseMove': 'DevExpress.XtraReports.UI.PreviewMouseEventArgs',
    'PreviewMouseUp': 'DevExpress.XtraReports.UI.PreviewMouseEventArgs',
    'SizeChanged': 'DevExpress.XtraReports.UI.ChangeEventArgs',
    'TextChanged': 'System.EventArgs',
    'SummaryCalculated': 'DevExpress.XtraReports.UI.TextFormatEventArgs',
    'SummaryGetResult': 'DevExpress.XtraReports.UI.SummaryGetResultEventArgs',
    'SummaryReset': 'System.EventArgs',
    'SummaryRowChanged': 'System.EventArgs',
    'BandLevelChanged': 'System.EventArgs',
    'SortingSummaryGetResult': 'DevExpress.XtraReports.UI.GroupSortingSummaryGetResultEventArgs',
    'SortingSummaryReset': 'System.EventArgs',
    'SortingSummaryRowChanged': 'DevExpress.XtraReports.UI.GroupSortingSummaryRowChangedEventArgs',
    'DataSourceDemanded': 'System.EventArgs',
    'BandHeightChanged': 'DevExpress.XtraReports.UI.BandEventArgs',
    'DataSourceRowChanged': 'DevExpress.XtraReports.UI.DataSourceRowEventArgs',
    'FillEmptySpace': 'DevExpress.XtraReports.UI.BandEventArgs',
    'PrintProgress': 'DevExpress.XtraPrinting.PrintProgressEventArgs',
    'ParametersRequestBeforeShow': 'DevExpress.XtraReports.Parameters.ParametersRequestEventArgs',
    'ParametersRequestValueChanged': 'DevExpress.XtraReports.Parameters.ParametersRequestValueChangedEventArgs',
    'ParametersRequestSubmit': 'DevExpress.XtraReports.Parameters.ParametersRequestEventArgs',
    'GetValue': 'DevExpress.XtraReports.UI.GetValueEventArgs',
    'FieldValueDisplayText': 'DevExpress.XtraReports.UI.PivotGrid.PivotFieldDisplayTextEventArgs',
    'PrintCell': 'DevExpress.XtraReports.UI.PivotGrid.CustomExportCellEventArgs',
    'PrintFieldValue': 'DevExpress.XtraReports.UI.PivotGrid.CustomExportFieldValueEventArgs',
    'PrintHeader': 'DevExpress.XtraReports.UI.PivotGrid.CustomExportHeaderEventArgs',
    'CustomSummary': 'DevExpress.XtraReports.UI.PivotGrid.PivotGridCustomSummaryEventArgs',
    'CustomGroupInterval': 'DevExpress.XtraReports.UI.PivotGrid.PivotCustomGroupIntervalEventArgs',
    'CustomChartDataSourceData': 'DevExpress.XtraReports.UI.PivotGrid.PivotCustomChartDataSourceDataEventArgs',
    'CustomChartDataSourceRows': 'DevExpress.XtraReports.UI.PivotGrid.PivotCustomChartDataSourceRowsEventArgs',
    'CustomCellDisplayText': 'DevExpress.XtraReports.UI.PivotGrid.PivotCellDisplayTextEventArgs',
    'CustomCellValue': 'DevExpress.XtraReports.UI.PivotGrid.PivotCellValueEventArgs',
    'CustomColumnWidth': 'DevExpress.XtraReports.UI.PivotGrid.PivotCustomColumnWidthEventArgs',
    'CustomFieldSort': 'DevExpress.XtraReports.UI.PivotGrid.PivotGridCustomFieldSortEventArgs',
    'CustomServerModeSort': 'DevExpress.XtraReports.UI.PivotGrid.PivotGridCustomServerModeSortEventArgs',
    'CustomFieldValueCells': 'DevExpress.XtraReports.UI.PivotGrid.PivotCustomFieldValueCellsEventArgs',
    'CustomRowHeight': 'DevExpress.XtraReports.UI.PivotGrid.PivotCustomRowHeightEventArgs',
    'CustomUnboundFieldData': 'DevExpress.XtraReports.UI.PivotGrid.CustomFieldDataEventArgs',
    'PrefilterCriteriaChanged': 'System.EventArgs',
    'CustomDrawSeries': 'DevExpress.XtraCharts.CustomDrawSeriesEventArgs',
    'CustomDrawSeriesPoint': 'DevExpress.XtraCharts.CustomDrawSeriesPointEventArgs',
    'CustomDrawCrosshair': 'DevExpress.XtraCharts.CustomDrawCrosshairEventArgs',
    'CustomDrawAxisLabel': 'DevExpress.XtraCharts.CustomDrawAxisLabelEventArgs',
    'CustomPaint': 'DevExpress.XtraCharts.CustomPaintEventArgs',
    'BoundDataChanged': 'System.EventArgs',
    'PieSeriesPointExploded': 'DevExpress.XtraCharts.PieSeriesPointExplodedEventArgs',
    'AxisScaleChanged': 'DevExpress.XtraCharts.AxisScaleChangedEventArgs',
    'AxisWholeRangeChanged': 'DevExpress.XtraCharts.AxisRangeChangedEventArgs',
    'AxisVisualRangeChanged': 'DevExpress.XtraCharts.AxisRangeChangedEventArgs',
    'SmallChartTextShowing': 'System.EventArgs'
};


/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _reportCompleter_1 = __webpack_require__(335);
var ace_1 = __webpack_require__(489);
var analytics_widgets_internal_1 = __webpack_require__(8);
var mode_csharp_1 = __webpack_require__(490);
var mode_vbscript_1 = __webpack_require__(491);
analytics_widgets_internal_1.aceAvailable(!!ace_1.default);
if (!window['ace'] && analytics_widgets_internal_1.aceAvailable()) {
    ace_1.default.config.setModuleUrl('ace/mode/csharp', mode_csharp_1.default);
    ace_1.default.config.setModuleUrl('ace/mode/vbscript', mode_vbscript_1.default);
}
var LanguageHelper = (function () {
    function LanguageHelper(report) {
        this._report = report;
    }
    LanguageHelper.prototype.getLanguageMode = function () {
        if (this._report()) {
            var scriptLanguage = this._report().scriptLanguage();
            switch (scriptLanguage) {
                case 'CSharp':
                    return 'ace/mode/csharp';
                case 'VisualBasic':
                    return 'ace/mode/vbscript';
                default:
                    return 'ace/mode/text';
            }
        }
    };
    LanguageHelper.prototype.createNewHandler = function (eventName, eventArgsType) {
        if (this._report()) {
            var scriptLanguage = this._report().scriptLanguage();
            switch (scriptLanguage) {
                case 'CSharp':
                    return '\r\nprivate void ' + eventName + '(object sender, ' + eventArgsType + ' e) {\r\n\r\n}\r\n';
                case 'VisualBasic':
                    return '\r\nPrivate Sub ' + eventName + '(ByVal sender As Object, ByVal e As ' + eventArgsType + ')\r\n\r\nEnd Sub\r\n';
                case 'JScript':
                    return '\r\nprivate final function ' + eventName + '(sender : System.Object, e : ' + eventArgsType + ') {\r\n\r\n}\r\n';
            }
        }
    };
    LanguageHelper.prototype.getFunctionNamesFromScript = function (scripts) {
        if (this._report()) {
            var keyWords = { 'CSharp': 'void ', 'VisualBasic': 'Sub ', 'JScript': 'function ' };
            var scriptLanguage = this._report().scriptLanguage();
            var events = [];
            if (scripts) {
                var lines = scripts.match(new RegExp(keyWords[scriptLanguage] + '(([A-Z])|[a-z])\\w+\\(', 'g'));
                lines && lines.forEach(function (line) {
                    events.push(line.substring(keyWords[scriptLanguage].length, line.length - 1));
                });
            }
            return events;
        }
    };
    LanguageHelper.prototype.createCompleters = function (editor, bindingContext, viewModel) {
        return [new _reportCompleter_1.ReportCompleter(bindingContext.$root.model, editor, viewModel.guid)];
    };
    return LanguageHelper;
}());
exports.LanguageHelper = LanguageHelper;


/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _reportScriptService_1 = __webpack_require__(221);
var _reportDummyCreator_1 = __webpack_require__(222);
var ReportCompleter = (function () {
    function ReportCompleter(report, editorInstance, guid) {
        this.completions = [];
        this.report = report;
        this.editorInstance = editorInstance;
        this.guid = guid;
        this.oldPrefix = null;
    }
    ReportCompleter.prototype.__getCompletions = function (editor, session, pos, prefix, callback) {
        var self = this;
        _reportScriptService_1.ReportScriptService.getCompletions(editor, session, pos, prefix, callback, this.report(), this.editorInstance, this.guid())
            .done(function (result) {
            if (result) {
                if (result.State === 1) {
                    _reportScriptService_1.ReportScriptService.setCodeDom(self.guid(), JSON.stringify({
                        'XtraReportsLayoutSerializer': _reportDummyCreator_1.ReportDummyCreator._createDummy(self.report().serialize())
                    })).done(function (result) {
                        self.guid(result.Guid);
                        self.__getCompletions(editor, session, pos, prefix, callback);
                    });
                }
                else {
                    var errors = [];
                    if (result.Errors.length > 0) {
                        var linesCount = editor.getSession().getLength();
                        result.Errors.forEach(function (error) {
                            if (error.Line < linesCount && error.Line >= 0) {
                                errors.push({
                                    row: error.Line + 1,
                                    column: error.Column,
                                    text: error.ErrorNumber + ' - ' + error.ErrorText,
                                    type: error.IsWarning ? 'warning' : 'error'
                                });
                            }
                        });
                        editor.getSession().setAnnotations(errors);
                    }
                    self.completions = result.Completions;
                    callback(null, result.Completions);
                }
            }
        });
    };
    ReportCompleter.prototype.getCompletions = function (editor, session, pos, prefix, callback) {
        if (!this.oldPrefix || prefix[0] !== this.oldPrefix) {
            this.oldPrefix = prefix[0];
            this.__getCompletions(editor, session, pos, prefix, callback);
        }
        else if (this.oldPrefix == prefix[0] && this.completions.length > 0) {
            callback(null, this.completions);
        }
    };
    return ReportCompleter;
}());
exports.ReportCompleter = ReportCompleter;


/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _sqlDataSourceEditor_1 = __webpack_require__(147);
var _jsonDataSourceEditor_1 = __webpack_require__(219);
var _objectDataSourceEditor_1 = __webpack_require__(223);
var _dataSourceActions_1 = __webpack_require__(337);
var reportWizard_1 = __webpack_require__(148);
var _reportDataSourceService_1 = __webpack_require__(72);
var objectStorageItem_1 = __webpack_require__(38);
var _fieldListDataSourcesHelper_1 = __webpack_require__(101);
var _reportWizardService_1 = __webpack_require__(153);
var _masterDetailRequestModel_1 = __webpack_require__(149);
var _utils_1 = __webpack_require__(42);
var _reportWizardCreating_1 = __webpack_require__(346);
var utils_1 = __webpack_require__(370);
var saveAsReportDialog_1 = __webpack_require__(371);
var saveReportDialog_1 = __webpack_require__(372);
var openReportDialog_1 = __webpack_require__(373);
var analytics_utils_1 = __webpack_require__(0);
var analytics_wizard_1 = __webpack_require__(7);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var _qBRequestWrapper_1 = __webpack_require__(73);
var _parameterUtils_1 = __webpack_require__(46);
var dataFederation_1 = __webpack_require__(55);
var WizardsInitializerSettings = (function () {
    function WizardsInitializerSettings(connectionStrings, wizardSettings, callbacks, rtl) {
        this.callbacks = callbacks;
        this.reportWizardOptions = new utils_1._ReportWizardOptions();
        this.multiQueryWizardOptions = new analytics_wizard_1._MultiQueryDataSourceWizardOptions();
        this.dataSourceWizardOptions = new analytics_wizard_1._DataSourceWizardOptions();
        [this.reportWizardOptions, this.multiQueryWizardOptions, this.dataSourceWizardOptions].forEach(function (wizardOptions) {
            wizardOptions.connectionStrings = connectionStrings;
            wizardOptions.wizardSettings = wizardSettings;
            wizardOptions.requestWrapper = _qBRequestWrapper_1.QBRequestWrapper();
            wizardOptions.rtl = rtl;
        });
    }
    WizardsInitializerSettings.prototype._doFinishCallback = function (data, connections) {
        if (data.dataSourceType === analytics_wizard_1.DataSourceType.Sql) {
            return this.sqlDataSourceEditor.applySqlDataSourceWizardChanges(data);
        }
        else if (data.dataSourceType === analytics_wizard_1.DataSourceType.Json) {
            var deferred = $.Deferred();
            if (data.jsonDataSourceWizard.jsonSource && data.jsonDataSourceWizard.newConnectionName) {
                this.jsonDataSourceEditor.saveJsonSource(data, connections).
                    done(function (result) { deferred.resolve(result); })
                    .fail(function () { return deferred.reject(); });
            }
            else {
                this.jsonDataSourceEditor.applyDataSourceWizardChanges(data)
                    .done(function (result) { deferred.resolve(result); })
                    .fail(function () { return deferred.reject(); });
            }
            return deferred.promise();
        }
        else if (data.dataSourceType === analytics_wizard_1.DataSourceType.Object) {
            var deferred = $.Deferred();
            this.objectDataSourceEditor.applyDataSourceWizardChanges(data)
                .done(function (result) { deferred.resolve(result); })
                .fail(function () { return deferred.reject(); });
        }
        return $.Deferred().resolve(null).promise();
    };
    WizardsInitializerSettings.prototype._getParameters = function (model) {
        if (model && model()) {
            return _parameterUtils_1.collectAvailableParameters(model().parameters()).map(function (x) {
                var obj = new analytics_utils_1.ModelSerializer().serialize(x);
                return { name: obj['@Name'], value: obj['@ValueInfo'] };
            });
        }
        return [];
    };
    WizardsInitializerSettings.prototype._getItemsProviderCallBack = function (itemsProvider) {
        if (itemsProvider)
            return itemsProvider;
        return null;
    };
    WizardsInitializerSettings.prototype.createSqlDataSourceWizard = function (disableCustomSql, itemsProvider, model) {
        var _this = this;
        this.dataSourceWizardOptions.callbacks = {
            selectStatement: function (connection, queryJSON) { return _qBRequestWrapper_1.QBRequestWrapper().getSelectStatement(connection, queryJSON); },
            finishCallback: function (data) { return _this._doFinishCallback(data, _this.dataSourceWizardOptions.connectionStrings); },
            customizeQBInitData: function (data) {
                data.parametersItemsProvider = itemsProvider;
                data.requestWrapper = _qBRequestWrapper_1.QBRequestWrapper();
                return data;
            },
            getParameters: function () { return _this._getParameters(model); },
            getItemsProviderCallback: function () { return _this._getItemsProviderCallBack(itemsProvider()); }
        };
        this.dataSourceWizardOptions.disableCustomSql = disableCustomSql;
        this.dataSourceWizard = analytics_wizard_1._createDataSourceWizard(undefined, this.dataSourceWizardOptions);
        return this.dataSourceWizard;
    };
    WizardsInitializerSettings.prototype.createSqlDataSourceEditor = function (settings) {
        this.sqlDataSourceEditor = new _sqlDataSourceEditor_1.SqlDataSourceEditor(settings.dataSourceHelper, settings.dataSourceWizard, settings.model, settings.undoEngine, settings.fieldListProvider);
        this.jsonDataSourceEditor = new _jsonDataSourceEditor_1.JsonDataSourceEditor(settings.dataSourceHelper, settings.dataSourceWizard, settings.model, settings.undoEngine, settings.fieldListProvider);
        this.objectDataSourceEditor = new _objectDataSourceEditor_1.ObjectDataSourceEditor(settings.dataSourceHelper, settings.dataSourceWizard, settings.model, settings.undoEngine, settings.fieldListProvider);
        this.dataSourceActionProvider = new _dataSourceActions_1.DataSourceActions(settings.dataSourceHelper, settings.model, settings.undoEngine);
    };
    WizardsInitializerSettings.prototype.createMultipleQueriesWizardCallbacks = function (itemsProvider, model) {
        var _this = this;
        this.multipleQueriesWizardCallbacks = {
            selectStatement: function (connection, queryJSON) { return _qBRequestWrapper_1.QBRequestWrapper().getSelectStatement(connection, queryJSON); },
            sqlDataSourceResultSchema: function (dataSource) { return _qBRequestWrapper_1.QBRequestWrapper().rebuildResultSchema(dataSource); },
            finishCallback: function (data) { return _this._doFinishCallback(data, _this.multiQueryWizardOptions.connectionStrings); },
            customQueriesPreset: _reportDataSourceService_1.ReportDataSourceService.getCustomQueriesPreset,
            customizeQBInitData: function (data) {
                data.parametersItemsProvider = itemsProvider;
                data.requestWrapper = _qBRequestWrapper_1.QBRequestWrapper();
                return data;
            },
            getParameters: function () { return _this._getParameters(model); },
            getItemsProviderCallback: function () { return _this._getItemsProviderCallBack(itemsProvider()); }
        };
    };
    WizardsInitializerSettings.prototype.createMultiQueryDataSourceWizard = function (disableCustomSql, multipleQueriesWizardCallbacks, allowCreateNewJsonConnection) {
        var _this = this;
        if (multipleQueriesWizardCallbacks === void 0) { multipleQueriesWizardCallbacks = this.multipleQueriesWizardCallbacks; }
        if (allowCreateNewJsonConnection === void 0) { allowCreateNewJsonConnection = false; }
        this.multiQueryWizardOptions.callbacks = multipleQueriesWizardCallbacks;
        this.multiQueryWizardOptions.allowCreateNewJsonConnection = allowCreateNewJsonConnection;
        this.multiQueryWizardOptions.disableCustomSql = disableCustomSql;
        this.registerMultiQueryDataSourceWizardPages = function (factory) {
            analytics_wizard_1._registerMultiQueryDataSourcePages(factory, _this.multiQueryWizardOptions);
        };
        if (this.reportWizardOptions.wizardSettings.useFullscreenWizard) {
            this.multiQueryDataSourceWizard = analytics_wizard_1._createDataSourceFullscreenWizard(this.multiQueryWizardOptions);
        }
        else
            this.multiQueryDataSourceWizard = analytics_wizard_1._createMultiQueryDataSourceWizard(undefined, this.multiQueryWizardOptions);
    };
    WizardsInitializerSettings.prototype.createReportWizard = function (settings) {
        var _this = this;
        this.reportWizardOptions.allowCreateNewJsonConnection = settings.data.allowCreateNewJsonConnection;
        this.reportWizardOptions.hideDataMemberSubItems = settings.data.isReportServer;
        this.reportWizardOptions.disableCustomSql = settings.data.disableCustomSql;
        this.reportWizardOptions.dataSources = ko.pureComputed(function () {
            var result;
            if (!settings.dataSourceHelper()) {
                result = (settings.data.availableDataSources || []).map(function (object) {
                    return $.extend({}, object, { data: new objectStorageItem_1.ObjectStorageItem(object.data) });
                });
            }
            if (!result) {
                result = settings.data.isReportServer ? settings.dataSourceHelper().availableDataSources : settings.dataSourceHelper().mergedDataSources();
            }
            return result.filter(function (object) { return !(object.data instanceof dataFederation_1.DataFederationDataSource) && !object.hasErrors; });
        });
        var fieldsCallback = function (request, dataSource) {
            _fieldListDataSourcesHelper_1.patchRequest(request, [dataSource], settings.state());
            return _this.callbacks.fieldLists(request);
        };
        this.reportWizardOptions.callbacks = $.extend({}, this.multipleQueriesWizardCallbacks, {
            fieldListsCallback: fieldsCallback,
            createSqlDataSourceInfo: _sqlDataSourceEditor_1.SqlDataSourceEditor.createSqlDataSourceInfo,
            createJsonDataSourceInfo: _jsonDataSourceEditor_1.JsonDataSourceEditor.createJsonDataSourceInfo,
            getItemsProviderCallback: function () { return _this._getItemsProviderCallBack(_this.reportWizard.itemsProvider()); },
            finishCallback: function (reportWizardModel) {
                settings.isLoading(true);
                var deferred = $.Deferred();
                _reportWizardService_1.ReportWizardService.generateReportFromWizardState(reportWizardModel, _masterDetailRequestModel_1.MasterDetailRequestModel, settings.state(), function (wizardModel) {
                    _this.reportWizard.events.call('beforeFinish', { state: settings.state(), wizardModel: wizardModel });
                })
                    .done(function (result) {
                    settings.navigation.currentTab().undoEngine.start();
                    settings.isDirty(true);
                    var newReport = _utils_1.createReportViewModel(result, settings.navigation.currentTab().context().report);
                    settings.navigation.currentTab().changeContext(newReport, '');
                    settings.navigation.currentTab.notifySubscribers();
                    settings.navigation.currentTab().undoEngine.end();
                    settings.isLoading(false);
                    deferred.resolve(newReport);
                })
                    .fail(function () { deferred.reject(); });
                return deferred.promise();
            }
        });
        this.registerReportWizardPages = function (factory) {
            reportWizard_1._registerReportWizardPages(factory, _this.reportWizardOptions);
        };
        this.reportWizard = _reportWizardCreating_1._createReportWizard(this.reportWizardOptions);
    };
    return WizardsInitializerSettings;
}());
exports.WizardsInitializerSettings = WizardsInitializerSettings;
var ReportDialogSettings = (function () {
    function ReportDialogSettings(_designerCallbacks) {
        this._designerCallbacks = _designerCallbacks;
    }
    ReportDialogSettings.prototype.createSaveReportDialog = function (reportUrls) {
        this.saveReportDialog = new saveAsReportDialog_1.SaveAsReportDialog(reportUrls, this._designerCallbacks);
        this._designerCallbacks.customizeSaveAsDialog && this._designerCallbacks.customizeSaveAsDialog(this.saveReportDialog);
    };
    ReportDialogSettings.prototype.createSaveReportDialogLight = function (saveReportDialog) {
        if (saveReportDialog === void 0) { saveReportDialog = this.saveReportDialog; }
        this.saveReportDialogLight = new saveReportDialog_1.SaveReportDialog(saveReportDialog, this._designerCallbacks);
        this._designerCallbacks.customizeSaveDialog && this._designerCallbacks.customizeSaveDialog(this.saveReportDialogLight);
    };
    ReportDialogSettings.prototype.createOpenReportDialog = function (reportUrls, navigation) {
        this.openReportDialog = new openReportDialog_1.OpenReportDialog(reportUrls, navigation, this._designerCallbacks);
        this._designerCallbacks.customizeOpenDialog && this._designerCallbacks.customizeOpenDialog(this.openReportDialog);
    };
    return ReportDialogSettings;
}());
exports.ReportDialogSettings = ReportDialogSettings;


/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _dataUtils_1 = __webpack_require__(60);
var analytics_utils_1 = __webpack_require__(0);
var DataSourceActions = (function () {
    function DataSourceActions(dsHelper, reportViewModel, undoEngine) {
        var _this = this;
        this.removeDataSourceAction = {
            clickAction: function (item) {
                _this.removeDataSource(item.data.name);
            },
            position: 50,
            imageClassName: 'dxrd-image-recycle-bin',
            imageTemplateName: 'dxrd-svg-operations-recycle_bin',
            text: analytics_utils_1.getLocalization('Remove Data Source', 'ASPxReportsStringId.ReportDesigner_FieldListActions_RemoveDataSource')
        };
        this._dsHelper = dsHelper;
        this._reportViewModel = reportViewModel;
        this._undoEngine = undoEngine;
    }
    DataSourceActions.prototype._findDataSource = function (dataSourceID) {
        return this._dsHelper().usedDataSources().filter(function (item) {
            return item.id === dataSourceID || item.ref === dataSourceID;
        })[0];
    };
    DataSourceActions.prototype.removeDataSource = function (dataSourceID) {
        var dsInfo = this._findDataSource(dataSourceID);
        if (!dsInfo)
            return;
        _dataUtils_1.removeDataSourceFromReport(this._dsHelper(), this._reportViewModel().dataSource, this._undoEngine, dsInfo);
    };
    DataSourceActions.prototype.getActions = function (context) {
        var result = [];
        if (!context.data)
            return result;
        if (context.data['canRemove'] === true) {
            result.push(this.removeDataSourceAction);
        }
        return result;
    };
    return DataSourceActions;
}());
exports.DataSourceActions = DataSourceActions;


/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _previewRequestWrapper_1 = __webpack_require__(92);
var reportWizardState_1 = __webpack_require__(18);
var CrossTabFieldInfoBase = (function () {
    function CrossTabFieldInfoBase(info) {
        this.__type = '';
        this.FieldName = info.name;
        this.DisplayText = info.displayName;
    }
    return CrossTabFieldInfoBase;
}());
exports.CrossTabFieldInfoBase = CrossTabFieldInfoBase;
var CrossTabGroupFieldInfo = (function (_super) {
    __extends(CrossTabGroupFieldInfo, _super);
    function CrossTabGroupFieldInfo(info) {
        var _this = _super.call(this, info) || this;
        _this.SortOrder = _previewRequestWrapper_1.ColumnSortOrder[info.sortOrder] || _previewRequestWrapper_1.ColumnSortOrder.Ascending;
        return _this;
    }
    return CrossTabGroupFieldInfo;
}(CrossTabFieldInfoBase));
exports.CrossTabGroupFieldInfo = CrossTabGroupFieldInfo;
var CrossTabColumnFieldInfo = (function (_super) {
    __extends(CrossTabColumnFieldInfo, _super);
    function CrossTabColumnFieldInfo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.__type = 'CrossTabColumnFieldInfo:#DevExpress.XtraReports.Wizards.CrossTab';
        return _this;
    }
    return CrossTabColumnFieldInfo;
}(CrossTabGroupFieldInfo));
exports.CrossTabColumnFieldInfo = CrossTabColumnFieldInfo;
var CrossTabRowFieldInfo = (function (_super) {
    __extends(CrossTabRowFieldInfo, _super);
    function CrossTabRowFieldInfo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.__type = 'CrossTabRowFieldInfo:#DevExpress.XtraReports.Wizards.CrossTab';
        return _this;
    }
    return CrossTabRowFieldInfo;
}(CrossTabGroupFieldInfo));
exports.CrossTabRowFieldInfo = CrossTabRowFieldInfo;
var CrossTabDataFieldInfo = (function (_super) {
    __extends(CrossTabDataFieldInfo, _super);
    function CrossTabDataFieldInfo(info) {
        var _this = _super.call(this, info) || this;
        _this.__type = 'CrossTabDataFieldInfo:#DevExpress.XtraReports.Wizards.CrossTab';
        _this.SummaryType = reportWizardState_1.PivotSummaryType[info.summaryType] || reportWizardState_1.PivotSummaryType.Sum;
        return _this;
    }
    return CrossTabDataFieldInfo;
}(CrossTabFieldInfoBase));
exports.CrossTabDataFieldInfo = CrossTabDataFieldInfo;


/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var ColorScheme = (function () {
    function ColorScheme(name, localizationId, baseColor) {
        this._isCustom = false;
        this.name = name;
        this.localizationId = localizationId;
        this.baseColor = baseColor;
        this.color = analytics_utils_1.colorFromString(baseColor)();
        this.displayName = analytics_utils_1.getLocalization(this.name, this.localizationId);
        this.selected = ko.observable(false);
    }
    return ColorScheme;
}());
exports.ColorScheme = ColorScheme;
var CustomColorScheme = (function (_super) {
    __extends(CustomColorScheme, _super);
    function CustomColorScheme(name, localizationId, baseColor) {
        var _this = _super.call(this, name, localizationId, baseColor) || this;
        _this.color = analytics_utils_1.colorFromString(baseColor);
        _this.editorColor = ko.observable(_this.color());
        _this.popoverVisible = ko.observable(false);
        return _this;
    }
    CustomColorScheme.prototype.applyColor = function () {
        this.color(this.editorColor());
        this.baseColor = analytics_utils_1.colorToString(this.editorColor());
        this.popoverVisible(false);
    };
    CustomColorScheme.prototype.resetColor = function () {
        this.editorColor(this.color());
        this.popoverVisible(false);
    };
    return CustomColorScheme;
}(ColorScheme));
exports.CustomColorScheme = CustomColorScheme;


/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _labelWizardUtils_1 = __webpack_require__(228);
var reportWizardState_1 = __webpack_require__(18);
var analytics_internal_1 = __webpack_require__(2);
var PageSetupHelper = (function () {
    function PageSetupHelper() {
    }
    PageSetupHelper.mm2px = function (val) { return analytics_internal_1.unitsToPixel(10 * val, 'TenthsOfAMillimeter'); };
    PageSetupHelper.in2px = function (val) { return analytics_internal_1.unitsToPixel(100 * val, 'HundredthsOfAnInch'); };
    PageSetupHelper.px2mm = function (val) { return analytics_internal_1.pixelToUnits(val, 'TenthsOfAMillimeter', 1) / 10; };
    PageSetupHelper.px2in = function (val) { return analytics_internal_1.pixelToUnits(val, 'HundredthsOfAnInch', 1) / 100; };
    PageSetupHelper.mm2in = function (val) { return val * _labelWizardUtils_1.CONVERSION_COEEFICIENT; };
    PageSetupHelper.in2mm = function (val) { return val / _labelWizardUtils_1.CONVERSION_COEEFICIENT; };
    PageSetupHelper.getConverter = function (from, to) {
        if (from === to)
            return function (x) { return x; };
        var unitCode = function (unit) {
            switch (unit) {
                case reportWizardState_1.GraphicsUnit.Inch:
                    return 'in';
                case reportWizardState_1.GraphicsUnit.Millimeter:
                    return 'mm';
                case reportWizardState_1.GraphicsUnit.Pixel:
                    return 'px';
            }
        };
        var fnName = unitCode(from) + '2' + unitCode(to);
        return PageSetupHelper[fnName];
    };
    return PageSetupHelper;
}());
exports.PageSetupHelper = PageSetupHelper;


/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _dataSourceWizardHelper_1 = __webpack_require__(104);
var analytics_wizard_1 = __webpack_require__(7);
var ConfigureMasterDetailRelationshipsPage = (function (_super) {
    __extends(ConfigureMasterDetailRelationshipsPage, _super);
    function ConfigureMasterDetailRelationshipsPage(createSqlDataSourceInfo, sqlDataSourceResultSchema) {
        var _this = _super.call(this, sqlDataSourceResultSchema) || this;
        _this._dataSourceWizardHelper = new _dataSourceWizardHelper_1.DataSourceWizardHelper(_this, createSqlDataSourceInfo);
        return _this;
    }
    ConfigureMasterDetailRelationshipsPage.prototype.initialize = function (state) {
        return _super.prototype.initialize.call(this, state.sqlDataSourceWizard);
    };
    ConfigureMasterDetailRelationshipsPage.prototype.commit = function () {
        var _this = this;
        return this._dataSourceWizardHelper.commit(function () { return _super.prototype.commit.call(_this); }, function (state) { return analytics_wizard_1._restoreSqlDataSourceFromState(state).sqlDataSource; });
    };
    return ConfigureMasterDetailRelationshipsPage;
}(analytics_wizard_1.ConfigureMasterDetailRelationshipsPage));
exports.ConfigureMasterDetailRelationshipsPage = ConfigureMasterDetailRelationshipsPage;
function _registerConfigureMasterDetailRelationshipsPage(factory, callbacks) {
    _dataSourceWizardHelper_1.overrideSqlDataSourceWizardPage(factory, analytics_wizard_1.DataSourceWizardPageId.ConfigureMasterDetailRelationshipsPage, {
        create: function () {
            return new ConfigureMasterDetailRelationshipsPage(callbacks.createSqlDataSourceInfo, callbacks.sqlDataSourceResultSchema);
        }
    });
}
exports._registerConfigureMasterDetailRelationshipsPage = _registerConfigureMasterDetailRelationshipsPage;


/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _dataSourceWizardHelper_1 = __webpack_require__(104);
var analytics_wizard_1 = __webpack_require__(7);
var MultiQueryConfigurePage = (function (_super) {
    __extends(MultiQueryConfigurePage, _super);
    function MultiQueryConfigurePage(reportWizardOptions) {
        var _this = _super.call(this, reportWizardOptions) || this;
        _this._dataSourceWizardHelper = new _dataSourceWizardHelper_1.DataSourceWizardHelper(_this, reportWizardOptions.callbacks.createSqlDataSourceInfo);
        return _this;
    }
    MultiQueryConfigurePage.prototype._getQueriesCount = function () {
        return this['_dataSource']().queries().length;
    };
    MultiQueryConfigurePage.prototype._canEditQueryParameters = function () {
        var _this = this;
        return this['_dataSource']().queries().some(function (query) { return analytics_wizard_1._canEditQueryParameters(query, _this['_customQueries']()); });
    };
    MultiQueryConfigurePage.prototype.initialize = function (state) {
        return _super.prototype.initialize.call(this, state.sqlDataSourceWizard);
    };
    MultiQueryConfigurePage.prototype.commit = function () {
        var _this = this;
        return this._dataSourceWizardHelper.commit(function () { return _super.prototype.commit.call(_this); }, function (state) { return analytics_wizard_1._restoreSqlDataSourceFromState(state).sqlDataSource; });
    };
    return MultiQueryConfigurePage;
}(analytics_wizard_1.MultiQueryConfigurePage));
exports.MultiQueryConfigurePage = MultiQueryConfigurePage;
function _registerMultiQueryConfigurePage(factory, reportWizardOptions) {
    _dataSourceWizardHelper_1.overrideSqlDataSourceWizardPage(factory, analytics_wizard_1.SqlDataSourceWizardPageId.MultiQueryConfigurePage, {
        create: function () {
            return new MultiQueryConfigurePage(reportWizardOptions);
        },
        resetState: function (state) {
            delete state.sqlDataSourceWizard.customQueries;
            delete state.sqlDataSourceWizard.sqlDataSourceJSON;
        }
    });
}
exports._registerMultiQueryConfigurePage = _registerMultiQueryConfigurePage;


/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _dataSourceWizardHelper_1 = __webpack_require__(104);
var _qBRequestWrapper_1 = __webpack_require__(73);
var analytics_wizard_1 = __webpack_require__(7);
var MultiQueryConfigureParametersPage = (function (_super) {
    __extends(MultiQueryConfigureParametersPage, _super);
    function MultiQueryConfigureParametersPage(createSqlDataSourceInfo, parametersConverters, requestWrapper) {
        var _this = _super.call(this, parametersConverters, requestWrapper) || this;
        _this.createSqlDataSourceInfo = createSqlDataSourceInfo;
        _this._dataSourceWizardHelper = new _dataSourceWizardHelper_1.DataSourceWizardHelper(_this, createSqlDataSourceInfo);
        return _this;
    }
    MultiQueryConfigureParametersPage.prototype.initialize = function (state) {
        return _super.prototype.initialize.call(this, state.sqlDataSourceWizard);
    };
    MultiQueryConfigureParametersPage.prototype.commit = function () {
        var _this = this;
        return this._dataSourceWizardHelper.commit(function () { return _super.prototype.commit.call(_this); }, function (state) { return analytics_wizard_1._restoreSqlDataSourceFromState(state).sqlDataSource; });
    };
    return MultiQueryConfigureParametersPage;
}(analytics_wizard_1.MultiQueryConfigureParametersPage));
exports.MultiQueryConfigureParametersPage = MultiQueryConfigureParametersPage;
function _registerMultiQueryConfigureParametersPage(factory, callbacks) {
    _dataSourceWizardHelper_1.overrideSqlDataSourceWizardPage(factory, analytics_wizard_1.SqlDataSourceWizardPageId.MultiQueryConfigureParametersPage, {
        create: function () {
            return new MultiQueryConfigureParametersPage(callbacks.createSqlDataSourceInfo, undefined, _qBRequestWrapper_1.QBRequestWrapper);
        }
    });
}
exports._registerMultiQueryConfigureParametersPage = _registerMultiQueryConfigureParametersPage;


/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_wizard_1 = __webpack_require__(7);
var SetReportTitlePage = (function (_super) {
    __extends(SetReportTitlePage, _super);
    function SetReportTitlePage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.reportTitle = ko.observable('');
        return _this;
    }
    SetReportTitlePage.prototype.initialize = function (data) {
        this.reportTitle(data.reportTitle ? data.reportTitle : '');
        return $.Deferred().resolve().promise();
    };
    SetReportTitlePage.prototype.canNext = function () {
        return false;
    };
    SetReportTitlePage.prototype.canFinish = function () {
        return true;
    };
    SetReportTitlePage.prototype.commit = function () {
        return $.Deferred().resolve({
            reportTitle: this.reportTitle()
        }).promise();
    };
    return SetReportTitlePage;
}(analytics_wizard_1.WizardPageBase));
exports.SetReportTitlePage = SetReportTitlePage;
function _registerSetReportTitlePage(factory) {
    factory.registerMetadata(pageId_1.ReportWizardPageId.SetReportTitlePage, {
        create: function () { return new SetReportTitlePage(); },
        getState: function (state) { return state; },
        setState: function (data, state) { return state.reportTitle = data.reportTitle; },
        resetState: function (state, defaultState) { return state.reportTitle = defaultState.reportTitle; },
        template: 'dxrd-page-reportTitle',
        description: analytics_utils_1.getLocalization('We have all the information needed to process the report.', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportComplete_Description')
    });
}
exports._registerSetReportTitlePage = _registerSetReportTitlePage;


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var reportWizardState_1 = __webpack_require__(18);
var chooseAvailableDataSourcePage_1 = __webpack_require__(24);
var ReportWizardStateHelper = (function () {
    function ReportWizardStateHelper() {
    }
    ReportWizardStateHelper.applyDataBindings = function (state, model) {
        var modelDS = model.dataSource();
        var dataSourceInfo = modelDS && modelDS['dataSourceInfo'];
        state.dataSource = dataSourceInfo && chooseAvailableDataSourcePage_1._convertToStateDataSource(dataSourceInfo);
        state.dataMember = model.dataMember() || '';
    };
    ReportWizardStateHelper.applyPageSetup = function (state, model) {
        var unit;
        var _pageSetupProps = [
            model.pageWidth(),
            model.pageHeight(),
            model.margins.left(),
            model.margins.right(),
            model.margins.top(),
            model.margins.bottom()
        ];
        switch (model.measureUnit()) {
            case 'HundredthsOfAnInch':
                _pageSetupProps = _pageSetupProps.map(function (x) { return x / 100; });
                unit = reportWizardState_1.GraphicsUnit.Inch;
                break;
            case 'TenthsOfAMillimeter':
                _pageSetupProps = _pageSetupProps.map(function (x) { return x / 10; });
                unit = reportWizardState_1.GraphicsUnit.Millimeter;
                break;
            case 'Pixels':
                unit = reportWizardState_1.GraphicsUnit.Pixel;
                break;
        }
        state.pageSetup = {
            paperKind: model.paperKind(),
            unit: unit,
            width: _pageSetupProps[0],
            height: _pageSetupProps[1],
            marginLeft: _pageSetupProps[2],
            marginRight: _pageSetupProps[3],
            marginTop: _pageSetupProps[4],
            marginBottom: _pageSetupProps[5],
            landscape: model.landscape()
        };
    };
    return ReportWizardStateHelper;
}());
exports.ReportWizardStateHelper = ReportWizardStateHelper;


/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var reportWizard_1 = __webpack_require__(148);
var fullscreenReportWizard_1 = __webpack_require__(232);
var legacyReportWizard_1 = __webpack_require__(359);
function _createReportWizard(reportWizardOptions) {
    if (reportWizardOptions.wizardSettings.useFullscreenWizard && reportWizardOptions.wizardSettings.useMasterDetailWizard)
        return fullscreenReportWizard_1._createFullscreenReportWizard(reportWizardOptions);
    else if (reportWizardOptions.wizardSettings.useMasterDetailWizard)
        return reportWizard_1._createReportWizard(reportWizardOptions);
    else
        return legacyReportWizard_1._createLegacyReportWizard(reportWizardOptions);
}
exports._createReportWizard = _createReportWizard;


/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var chooseAvailableDataSourcePage_1 = __webpack_require__(24);
var pageId_1 = __webpack_require__(14);
var chooseReportTypePage_1 = __webpack_require__(103);
var analytics_utils_1 = __webpack_require__(0);
var analytics_wizard_1 = __webpack_require__(7);
var SelectDataSourcePage = (function (_super) {
    __extends(SelectDataSourcePage, _super);
    function SelectDataSourcePage(reportWizardOptions) {
        var _this = _super.call(this) || this;
        _this.reportWizardOptions = reportWizardOptions;
        return _this;
    }
    SelectDataSourcePage.prototype.registerSections = function () {
        if (this.reportWizardOptions.dataSources().length > 0) {
            chooseAvailableDataSourcePage_1._registerChooseAvailableDataSourcePage(this._factory, this.reportWizardOptions);
            this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.ChooseAvailableDataSourcePage);
        }
        if (this.reportWizardOptions.canCreateDataSource) {
            chooseReportTypePage_1._registerChooseDataSourceTypePage(this._factory, this.reportWizardOptions);
            this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.ChooseDataSourceTypePage);
            var meta = this._factory.getMetadata(pageId_1.FullscreenReportWizardSectionId.ChooseDataSourceTypePage);
            meta['disabledText'] = analytics_utils_1.getLocalization("To specify a data source, select \"No, I'd like to create a new data source\".", 'AnalyticsCoreStringId.Wizard_SelectDataSourceType_Placeholder');
        }
        if (this.reportWizardOptions.dataSources().length > 0 && this.reportWizardOptions.canCreateDataSource) {
            this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.ChooseAvailableDataSourcePage, analytics_wizard_1.WizardSectionPosition.Top);
            this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.ChooseDataSourceTypePage, analytics_wizard_1.WizardSectionPosition.Bottom);
        }
    };
    SelectDataSourcePage.prototype.getNextSectionId = function (sectionId) {
        if (!sectionId && this.reportWizardOptions.dataSources().length > 0)
            return pageId_1.FullscreenReportWizardSectionId.ChooseAvailableDataSourcePage;
        else if (!sectionId)
            return pageId_1.FullscreenReportWizardSectionId.ChooseDataSourceTypePage;
        else if (sectionId === pageId_1.FullscreenReportWizardSectionId.ChooseAvailableDataSourcePage && !this._stateManager.getCurrentState().dataSource)
            return pageId_1.FullscreenReportWizardSectionId.ChooseDataSourceTypePage;
    };
    return SelectDataSourcePage;
}(analytics_wizard_1.FullscreenWizardPage));
exports.SelectDataSourcePage = SelectDataSourcePage;
function _registerSelectDataSourcePage(factory, reportWizardOptions) {
    factory.registerMetadata(pageId_1.FullscreenReportWizardPageId.SelectDataSourcePage, {
        setState: function (data, state) {
            state.dataSourceType = data.dataSourceType;
            state.dataSource = data.dataSource;
        },
        getState: function (state) {
            return state;
        },
        resetState: function (state, defaultState) {
            state.dataSource = defaultState.dataSource;
            state.dataSourceType = defaultState.dataSourceType;
        },
        create: function () {
            return new SelectDataSourcePage(reportWizardOptions);
        },
        navigationPanelText: analytics_utils_1.getLocalization('Select Data Source', 'ASPxReportsStringId.ReportDesigner_Wizard_SelectDataSource'),
        template: 'dx-wizard-fullscreen-page'
    });
}
exports._registerSelectDataSourcePage = _registerSelectDataSourcePage;


/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var pageId_1 = __webpack_require__(14);
var _utils_1 = __webpack_require__(49);
var chooseAvailableDataSourcePage_1 = __webpack_require__(24);
var analytics_wizard_1 = __webpack_require__(7);
var $ = __webpack_require__(3);
var objectItemCreation_1 = __webpack_require__(41);
var SpecifySqlDataSourceSettingsPage = (function (_super) {
    __extends(SpecifySqlDataSourceSettingsPage, _super);
    function SpecifySqlDataSourceSettingsPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SpecifySqlDataSourceSettingsPage.prototype.registerSections = function () {
        _super.prototype.registerSections.call(this);
        [
            this._factory.getMetadata(pageId_1.FullscreenReportWizardSectionId.ConfigureMasterDetailRelationshipsPage),
            this._factory.getMetadata(pageId_1.FullscreenReportWizardSectionId.ConfigureQueryParametersPage)
        ].forEach(function (meta) {
            meta.canFinish = function () { return false; };
            meta.canNext = function (page) { return page.canNext() || page.canFinish(); };
        });
    };
    SpecifySqlDataSourceSettingsPage.prototype.commit = function () {
        var _this = this;
        var deferred = $.Deferred();
        _super.prototype.commit.call(this).done(function (commitResult) {
            var dataSourcePromise = _this['_dataSourceWizardOptions'].callbacks.createSqlDataSourceInfo(analytics_wizard_1._restoreSqlDataSourceFromState(commitResult.sqlDataSourceWizard, undefined, commitResult.dataSourceId).sqlDataSource);
            dataSourcePromise.done(function (result) {
                result.data = objectItemCreation_1.createNewObjectItem(result.data);
                deferred.resolve({
                    sqlDataSourceWizard: commitResult,
                    newDataSource: chooseAvailableDataSourcePage_1._convertToStateDataSource(result)
                });
            }).fail(deferred.reject);
        });
        return deferred.promise();
    };
    return SpecifySqlDataSourceSettingsPage;
}(analytics_wizard_1.SpecifySqlDataSourceSettingsPage));
exports.SpecifySqlDataSourceSettingsPage = SpecifySqlDataSourceSettingsPage;
function _registerSpecifySqlDataSourceSettingsPage(factory, wizardOptions) {
    analytics_wizard_1._registerSpecifySqlDataSourceSettingsPage(factory, wizardOptions);
    _utils_1.overrideFullscreenDataSourceWizardPageMetadata(factory, analytics_wizard_1.FullscreenDataSourceWizardPageId.SpecifySqlDataSourceSettingsPage, function () { return new SpecifySqlDataSourceSettingsPage(wizardOptions); });
}
exports._registerSpecifySqlDataSourceSettingsPage = _registerSpecifySqlDataSourceSettingsPage;


/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var chooseJsonSchemaPage_1 = __webpack_require__(230);
var _utils_1 = __webpack_require__(49);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var analytics_wizard_1 = __webpack_require__(7);
var SpecifyJsonDataSourceSettingsPage = (function (_super) {
    __extends(SpecifyJsonDataSourceSettingsPage, _super);
    function SpecifyJsonDataSourceSettingsPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SpecifyJsonDataSourceSettingsPage.prototype.registerSections = function () {
        _super.prototype.registerSections.call(this);
        chooseJsonSchemaPage_1._registerChooseJsonSchemaPage(this._factory, this['_dataSourceWizardOptions'].callbacks);
        var meta = this._factory.getMetadata(pageId_1.FullscreenReportWizardSectionId.ChooseJsonSchemaPage);
        meta['disabledText'] = analytics_utils_1.getLocalization('To select data fields, choose or create a data connection.', 'AnalyticsCoreStringId.JsonDSWizard_ChooseJsonSchemaPage_Placeholder');
    };
    return SpecifyJsonDataSourceSettingsPage;
}(analytics_wizard_1.SpecifyJsonDataSourceSettingsPage));
exports.SpecifyJsonDataSourceSettingsPage = SpecifyJsonDataSourceSettingsPage;
function _registerSpecifyJsonDataSourceSettingsPage(factory, wizardOptions) {
    analytics_wizard_1._registerSpecifyJsonDataSourceSettingsPage(factory, wizardOptions);
    _utils_1.overrideFullscreenDataSourceWizardPageMetadata(factory, pageId_1.FullscreenReportWizardPageId.SpecifyJsonDataSourceSettingsPage, function () { return new SpecifyJsonDataSourceSettingsPage(wizardOptions); });
}
exports._registerSpecifyJsonDataSourceSettingsPage = _registerSpecifyJsonDataSourceSettingsPage;


/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _objectDataSourceEditor_1 = __webpack_require__(223);
var chooseAvailableDataSourcePage_1 = __webpack_require__(24);
var $ = __webpack_require__(3);
var _utils_1 = __webpack_require__(49);
var analytics_wizard_1 = __webpack_require__(7);
var objectItemCreation_1 = __webpack_require__(41);
var SpecifyObjectDataSourceSettingsPage = (function (_super) {
    __extends(SpecifyObjectDataSourceSettingsPage, _super);
    function SpecifyObjectDataSourceSettingsPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SpecifyObjectDataSourceSettingsPage.prototype.canNext = function () {
        return _super.prototype.canFinish.call(this);
    };
    SpecifyObjectDataSourceSettingsPage.prototype.initialize = function (state) {
        this._dataSourceId = state.dataSourceId;
        return _super.prototype.initialize.call(this, state);
    };
    SpecifyObjectDataSourceSettingsPage.prototype.commit = function () {
        var _this = this;
        var deferred = $.Deferred();
        _super.prototype.commit.call(this).done(function (state) {
            var infoPromise = _objectDataSourceEditor_1.ObjectDataSourceEditor.createObjectDataSourceInfo(state, analytics_wizard_1._restoreObjectDataSourceFromState(state, undefined, _this._dataSourceId));
            infoPromise.done(function (result) {
                result.data = objectItemCreation_1.createNewObjectItem(result.data);
                deferred.resolve({
                    objectDataSourceWizard: state,
                    newDataSource: chooseAvailableDataSourcePage_1._convertToStateDataSource(result)
                });
            });
        });
        return deferred.promise();
    };
    return SpecifyObjectDataSourceSettingsPage;
}(analytics_wizard_1.SpecifyObjectDataSourceSettingsPage));
exports.SpecifyObjectDataSourceSettingsPage = SpecifyObjectDataSourceSettingsPage;
function _registerSpecifyObjectDataSourceSettingsPage(factory, wizardOptions) {
    analytics_wizard_1._registerSpecifyObjectDataSourceSettingsPage(factory, wizardOptions);
    _utils_1.overrideFullscreenDataSourceWizardPageMetadata(factory, analytics_wizard_1.FullscreenDataSourceWizardPageId.SpecifyObjectDataSourceSettingsPage, function () { return new SpecifyObjectDataSourceSettingsPage(wizardOptions); });
}
exports._registerSpecifyObjectDataSourceSettingsPage = _registerSpecifyObjectDataSourceSettingsPage;


/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var ko = __webpack_require__(1);
var addGroupingLevelPage_1 = __webpack_require__(102);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var analytics_wizard_1 = __webpack_require__(7);
var analytics_internal_1 = __webpack_require__(2);
var _GroupsFieldStore = (function (_super) {
    __extends(_GroupsFieldStore, _super);
    function _GroupsFieldStore(query, _onChange) {
        var _this = _super.call(this) || this;
        _this._onChange = _onChange;
        _this.groups = ko.observableArray();
        _this.addGroupText = function () { return analytics_utils_1.getLocalization('Add Group', 'ASPxReportsStringId.ReportDesigner_Wizard_AddGroup_Text'); };
        _this.path = query.path;
        _this.displayName = query.displayName;
        _this.dataSource = ko.observableArray(query.fields.map(function (x) {
            return $.extend(true, {}, x, { visible: ko.observable(true) });
        }));
        return _this;
    }
    _GroupsFieldStore.prototype.dispose = function () {
        this.disposeObservableArray(this.groups);
    };
    _GroupsFieldStore.prototype.getSelectedFieldsFlat = function () {
        return [].concat.apply([], [[]].concat(this.getSelectedFields()));
    };
    _GroupsFieldStore.prototype.getSelectedFields = function () {
        return this.groups().filter(function (x) { return x.fields().length > 0; }).map(function (x) { return x.fields(); });
    };
    _GroupsFieldStore.prototype.isCreateGroupEnabled = function () {
        var groupsWithoutFields = this.groups().filter(function (x) { return x.fields().length === 0; }).length;
        var newAvailableGroupsCount = this.dataSource().length - this.getSelectedFieldsFlat().length;
        return newAvailableGroupsCount - groupsWithoutFields > 0;
    };
    _GroupsFieldStore.prototype.add = function () {
        this.groups.push(new _GroupField(this, this._onChange));
        this._onChange();
    };
    _GroupsFieldStore.prototype.remove = function (index) {
        this.groups()[index].dispose();
        this.groups.splice(index, 1);
        this._onChange();
    };
    _GroupsFieldStore.prototype.moveUpDisabled = function (index) {
        return index === 0;
    };
    _GroupsFieldStore.prototype.moveDownDisabled = function (index) {
        return index === this.groups().length - 1;
    };
    _GroupsFieldStore.prototype.moveup = function (index) {
        var groups = this.groups();
        groups.splice(index - 1, 2, groups[index], groups[index - 1]);
        this.groups.valueHasMutated();
        this._onChange();
    };
    _GroupsFieldStore.prototype.movedown = function (index) {
        var groups = this.groups();
        groups.splice(index, 2, groups[index + 1], groups[index]);
        this.groups.valueHasMutated();
        this._onChange();
    };
    return _GroupsFieldStore;
}(analytics_utils_1.Disposable));
exports._GroupsFieldStore = _GroupsFieldStore;
var _GroupField = (function (_super) {
    __extends(_GroupField, _super);
    function _GroupField(_store, _onChange) {
        var _this = _super.call(this) || this;
        _this._store = _store;
        _this._onChange = _onChange;
        _this.fields = ko.observableArray();
        _this._disposables.push(_this.fields.subscribe(function () { return _this._onChange(); }));
        var needRefresh = true;
        _this.value = {
            dataSource: _this._store.dataSource,
            showDropDownButton: true,
            searchEnabled: true,
            value: _this.fields,
            multiline: false,
            showSelectionControls: true,
            valueExpr: 'name',
            displayExpr: 'displayName',
            searchExpr: ['displayName'],
            onOpened: function (e) {
                _this._updateDataSource();
                if (e.component._popup) {
                    var _$content = $(e.component.content());
                    var _selectAll = _$content.find('.dx-list-select-all');
                    var _popupHeight = _$content.height();
                    _selectAll.css('display', 'none');
                    _$content.height(_popupHeight - _selectAll.outerHeight());
                    e.component._popup.refreshPosition();
                }
                if (needRefresh) {
                    e.component._refresh();
                    needRefresh = false;
                }
            },
            onClosed: function (e) {
                _this._store.dataSource().forEach(function (x) { return x.visible(true); });
                needRefresh = true;
            },
        };
        return _this;
    }
    _GroupField.prototype._updateDataSource = function () {
        var _this = this;
        this._store.dataSource().forEach(function (item) {
            item.visible(!_this._store.groups.peek().some(function (group) {
                return group !== _this && group.fields().indexOf(item.name) !== -1;
            }));
        });
    };
    _GroupField.prototype.getOptions = function (options) {
        return analytics_internal_1.extend(this.value, { dropDownOptions: options.dropDownOptions });
    };
    return _GroupField;
}(analytics_utils_1.Disposable));
exports._GroupField = _GroupField;
var AddGroupFieldsPage = (function (_super) {
    __extends(AddGroupFieldsPage, _super);
    function AddGroupFieldsPage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._reportTree = [];
        _this._groupInfos = ko.observableArray();
        return _this;
    }
    AddGroupFieldsPage.prototype.dispose = function () {
        this.disposeObservableArray(this._groupInfos);
    };
    AddGroupFieldsPage.prototype.canFinish = function () {
        return true;
    };
    AddGroupFieldsPage.prototype._mergeGroups = function (newGroups) {
        var currentGroups = this._groupInfos();
        newGroups.forEach(function (groupInfo) {
            var currentGroup = currentGroups.filter(function (group) { return group.displayName === groupInfo.displayName; })[0];
            if (!currentGroup || currentGroup.groups().length === 0)
                return;
            currentGroup.groups().filter(function (group) { return group.fields().length > 0; }).forEach(function (group) {
                var availabelFields = groupInfo.dataSource().filter(function (field) { return group.fields().some(function (x) { return x === field.name; }); });
                if (availabelFields.length > 0) {
                    groupInfo.add();
                    groupInfo.groups()[groupInfo.groups().length - 1].fields(availabelFields.map(function (x) { return x.name; }));
                }
            });
        });
        this.disposeObservableArray(this._groupInfos);
    };
    AddGroupFieldsPage.prototype.initialize = function (state) {
        var _this = this;
        this._reportTree = addGroupingLevelPage_1._fillTreeQueries([], state.masterDetailInfoCollection, 0).map(function (item) { return $.extend(true, {}, item); });
        var newGroups = this._reportTree.filter(function (x) { return x.fields.length > 0; }).map(function (x) { return new _GroupsFieldStore(x, _this._onChange); });
        this._mergeGroups(newGroups);
        this._groupInfos(newGroups);
        return $.Deferred().resolve().promise();
    };
    AddGroupFieldsPage.prototype.commit = function () {
        var masterDetailGroups = {};
        var masterDetailSummaryOptionsColumns = {};
        this._groupInfos().forEach(function (groupInfo) {
            var selectedFields = groupInfo.getSelectedFields();
            if (selectedFields.length > 0) {
                masterDetailGroups[groupInfo.path] = selectedFields;
            }
        });
        this._reportTree.forEach(function (query) {
            var availableFields = query.fields.filter(function (field) { return field.specifics && ['integer', 'float', 'date', 'bool'].indexOf(field.specifics.toLowerCase()) > -1; });
            if (masterDetailGroups[query.path]) {
                availableFields = availableFields.filter(function (field) { return masterDetailGroups[query.path].some(function (items) { return items.indexOf(field.name) === -1; }); });
            }
            if (availableFields.length > 0) {
                masterDetailSummaryOptionsColumns[query.path] = availableFields;
            }
        });
        return $.Deferred().resolve({
            masterDetailGroups: masterDetailGroups,
            masterDetailSummaryOptionsColumns: masterDetailSummaryOptionsColumns
        }).promise();
    };
    return AddGroupFieldsPage;
}(analytics_wizard_1.WizardPageBase));
exports.AddGroupFieldsPage = AddGroupFieldsPage;
function _registerAddGroupFieldsPage(factory) {
    addGroupingLevelPage_1._registerAddGroupingLevelPage(factory);
    var meta = factory.getMetadata(pageId_1.ReportWizardPageId.AddGroupingLevelPage);
    meta.create = function () {
        return new AddGroupFieldsPage();
    };
    meta['disabledText'] = analytics_utils_1.getLocalization('To add groups to the report, select data fields.', 'ASPxReportsStringId.ReportDesigner_Wizard_AddGroupFields_Placeholder');
    meta.template = 'dxrd-page-masterdetail-groups-section';
}
exports._registerAddGroupFieldsPage = _registerAddGroupFieldsPage;


/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _masterDetailWizardUtils_1 = __webpack_require__(150);
var addGroupingLevelPage_1 = __webpack_require__(102);
var chooseSummaryOptionsPage_1 = __webpack_require__(226);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_wizard_1 = __webpack_require__(7);
var AddSummaryFieldsPage = (function (_super) {
    __extends(AddSummaryFieldsPage, _super);
    function AddSummaryFieldsPage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._toggleIgnoreNullValues = function () {
            _this.ignoreNullValues(!_this.ignoreNullValues());
            _this._onChange();
        };
        _this._fieldListProvider = ko.observable(null);
        _this.ignoreNullValues = ko.observable(false);
        _this._template = 'dxrd-page-masterdetail-summary-section';
        _this._reportTree = ko.observableArray([]);
        _this._availableFieldsCount = ko.observable(0);
        _this._summaryInfos = ko.observableArray([]);
        _this._selectFieldToSummaryCaption = analytics_utils_1.getLocalization('Select fields and assign summary functions to them', 'ASPxReportsStringId.ReportDesigner_MasterDetailWizard_SummaryOptions_SelectFieldsAndSummaries');
        _this._fieldsCaption = analytics_utils_1.getLocalization('Field', 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryFields_Text');
        _this._summaryFunctionCaption = analytics_utils_1.getLocalization('Summary Functions', 'ASPxReportsStringId.ReportDesigner_MasterDetailWizard_SummaryOptions_SummaryFunctions');
        _this._ignoreNullValuesCaption = analytics_utils_1.getLocalization('Ignore null values', 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_IgnoreNullValues');
        return _this;
    }
    AddSummaryFieldsPage.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this._summaryInfos);
    };
    AddSummaryFieldsPage.prototype._fillTreeQueries = function (tree, queries, availableQueries) {
        addGroupingLevelPage_1._fillTreeQueries([], queries, 0).forEach(function (value) {
            if (availableQueries[value.path]) {
                var fields = value.fields.filter(function (x) { return availableQueries[value.path].some(function (field) { return field.name === x.name; }); });
                var treeItem = $.extend(true, {}, value);
                treeItem.fields = fields;
                tree.push(treeItem);
            }
        });
        return tree;
    };
    AddSummaryFieldsPage.prototype._createSummaryInfo = function () {
        var _this = this;
        var newItem = new _masterDetailWizardUtils_1.SummaryInfoFieldlist();
        newItem._disposables.push(newItem.selectedPath.subscribe(function (newVal) {
            if (!newVal)
                newItem.field(null);
            else {
                _this._fieldListProvider().getItemByPath({
                    fullPath: newVal,
                    path: newVal
                }).done(function (item) {
                    newItem.field(item);
                    _this._createNewItemIfNeed();
                });
            }
            _this._onChange();
        }));
        newItem._disposables.push(newItem.functionValue.subscribe(function (newVal) {
            _this._onChange();
        }));
        return newItem;
    };
    AddSummaryFieldsPage.prototype._createNewItemIfNeed = function () {
        var _summaryInfos = this._summaryInfos.peek();
        if (_summaryInfos.filter(function (item) { return !item.field(); }).length === 0 && _summaryInfos.length < this._availableFieldsCount())
            this._summaryInfos.push(this._createSummaryInfo());
    };
    AddSummaryFieldsPage.prototype._getParentName = function (parent) {
        if (parent.parent) {
            return [this._getParentName(parent.parent), parent.displayName].join('.');
        }
        return parent.displayName;
    };
    AddSummaryFieldsPage.prototype._flat = function (fields, parent) {
        var _this = this;
        var flatList = fields.map(function (x) {
            if (x.path) {
                x.name = x.path;
            }
            else {
                x.path = [parent.path, x.name].join('.');
            }
            if (parent) {
                x.parent = {
                    path: parent.path,
                    displayName: _this._getParentName(parent)
                };
            }
            return x;
        });
        fields.forEach(function (x) {
            if (x.fields) {
                flatList = flatList.concat(_this._flat(x.fields, x));
            }
        });
        return flatList;
    };
    AddSummaryFieldsPage.prototype._removeSummaryInfo = function (info) {
        var index = this._summaryInfos.indexOf(info);
        if (index === -1)
            return;
        info.dispose();
        this._summaryInfos.splice(index, 1);
        if (this._summaryInfos.length === 0) {
            this._createNewItemIfNeed();
        }
        this._onChange();
    };
    AddSummaryFieldsPage.prototype.canFinish = function () {
        return true;
    };
    AddSummaryFieldsPage.prototype._updateSummaries = function (flatlist) {
        var _this = this;
        this._summaryInfos().filter(function (x) { return x.field() && flatlist.every(function (item) { return item.path !== x.field().path; }); }).forEach(function (item) {
            _this._summaryInfos().splice(_this._summaryInfos().indexOf(item), 1);
        });
        this._summaryInfos.valueHasMutated();
    };
    AddSummaryFieldsPage.prototype.initialize = function (state) {
        var _this = this;
        this.ignoreNullValues(state.ignoreNullValuesForSummary);
        this._reportTree(this._fillTreeQueries([], state.masterDetailInfoCollection, state.masterDetailSummaryOptionsColumns));
        var flatList = this._flat(this._reportTree());
        this._updateSummaries(flatList);
        this._availableFieldsCount(this._reportTree().reduce(function (count, item) {
            count += item.fields.length;
            return count;
        }, 0));
        this._fieldListProvider({
            getItemByPath: function (path) {
                return $.Deferred().resolve(flatList.filter(function (x) { return x.path === path.fullPath; })[0]).promise();
            },
            getItems: function (path) {
                var deferred = $.Deferred();
                if (path.fullPath === '') {
                    deferred.resolve(_this._reportTree().filter(function (root) { return root.fields.some(function (field) { return _this._summaryInfos().every(function (summaryInfo) {
                        return summaryInfo.field() !== field;
                    }); }); }));
                }
                else {
                    var item = _this._reportTree().filter(function (x) { return x.path === path.fullPath; })[0];
                    if (item) {
                        deferred.resolve(item.fields.filter(function (field) {
                            return _this._summaryInfos().every(function (summaryInfo) { return summaryInfo.field() !== field; });
                        }));
                    }
                    else
                        deferred.resolve([]);
                }
                return deferred.promise();
            }
        });
        this._createNewItemIfNeed();
        return $.Deferred().resolve().promise();
    };
    AddSummaryFieldsPage.prototype.commit = function () {
        var masterDetailSummariesInfo = {};
        this._summaryInfos().forEach(function (summaryOption) {
            var field = summaryOption.field();
            if (!field)
                return;
            if (!masterDetailSummariesInfo[field['parent'].path]) {
                masterDetailSummariesInfo[field['parent'].path] = [];
            }
            masterDetailSummariesInfo[field['parent'].path].push({
                column: summaryOption.field(),
                summaryFunctions: summaryOption.value.value().map(function (item) {
                    return summaryOption.value.dataSource.map(function (option) { return option.value; }).indexOf(item);
                })
            });
        });
        var ignoreNullValuesForSummary = this.ignoreNullValues();
        return $.Deferred().resolve({
            masterDetailSummariesInfo: masterDetailSummariesInfo,
            ignoreNullValuesForSummary: ignoreNullValuesForSummary
        }).promise();
    };
    return AddSummaryFieldsPage;
}(analytics_wizard_1.WizardPageBase));
exports.AddSummaryFieldsPage = AddSummaryFieldsPage;
function _registerAddSummaryFieldsPage(factory) {
    chooseSummaryOptionsPage_1._registerChooseSummaryOptionsPage(factory);
    var meta = factory.getMetadata(pageId_1.ReportWizardPageId.ChooseSummaryOptionsPage);
    meta.create = function () {
        return new AddSummaryFieldsPage();
    };
    meta['disabledText'] = analytics_utils_1.getLocalization('To add a summary field to the report, select a data field (numeric, date-time or boolean) and ensure that it is not used in groups.', 'ASPxReportsStringId.ReportDesigner_Wizard_AddSummaryFields_Placeholder');
    meta.template = 'dxrd-page-masterdetail-summary-section';
}
exports._registerAddSummaryFieldsPage = _registerAddSummaryFieldsPage;


/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var selectLabelTypePage_1 = __webpack_require__(231);
var customizeLabelPage_1 = __webpack_require__(152);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var analytics_wizard_1 = __webpack_require__(7);
var SpecifyLabelSettingsPage = (function (_super) {
    __extends(SpecifyLabelSettingsPage, _super);
    function SpecifyLabelSettingsPage(_reportWizardOptions) {
        var _this = _super.call(this) || this;
        _this._reportWizardOptions = _reportWizardOptions;
        return _this;
    }
    SpecifyLabelSettingsPage.prototype.registerSections = function () {
        selectLabelTypePage_1._registerSelectLabelTypePage(this._factory);
        customizeLabelPage_1._registerCustomizeLabelPage(this._factory);
        this._factory.getMetadata(pageId_1.FullscreenReportWizardSectionId.SelectLabelTypePage)['recreate'] = false;
        this._factory.getMetadata(pageId_1.FullscreenReportWizardSectionId.CustomizeLabelPage)['recreate'] = false;
        this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.SelectLabelTypePage, this._reportWizardOptions.rtl ? analytics_wizard_1.WizardSectionPosition.Right : analytics_wizard_1.WizardSectionPosition.Left);
        this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.CustomizeLabelPage, this._reportWizardOptions.rtl ? analytics_wizard_1.WizardSectionPosition.Left : analytics_wizard_1.WizardSectionPosition.Right);
    };
    SpecifyLabelSettingsPage.prototype.canNext = function () {
        return false;
    };
    SpecifyLabelSettingsPage.prototype.getNextSectionId = function (sectionId) {
        if (!sectionId) {
            return pageId_1.FullscreenReportWizardSectionId.SelectLabelTypePage;
        }
        else if (sectionId === pageId_1.FullscreenReportWizardSectionId.SelectLabelTypePage)
            return pageId_1.FullscreenReportWizardSectionId.CustomizeLabelPage;
    };
    return SpecifyLabelSettingsPage;
}(analytics_wizard_1.FullscreenWizardPage));
exports.SpecifyLabelSettingsPage = SpecifyLabelSettingsPage;
function _registerSpecifyLabelSettingsPage(factory, reportWizardOptions) {
    factory.registerMetadata(pageId_1.FullscreenReportWizardPageId.SpecifyLabelSettingsPage, {
        setState: function (data, state) {
            if (data && (!state.labelDetails || data.labelDetails.id !== state.labelDetails.id))
                state.labelDetails = data.labelDetails;
            state.labelDetails.width = data.labelDetails.width;
            state.labelDetails.height = data.labelDetails.height;
            state.labelDetails.hPitch = data.labelDetails.hPitch;
            state.labelDetails.vPitch = data.labelDetails.vPitch;
            state.labelDetails.topMargin = data.labelDetails.topMargin;
            state.labelDetails.leftMargin = data.labelDetails.leftMargin;
            state.labelDetails.rightMargin = data.labelDetails.rightMargin;
            state.labelDetails.bottomMargin = data.labelDetails.bottomMargin;
            state.labelDetails.unit = data.labelDetails.unit;
            state.labelDetails.paperKindId = data.labelDetails.paperKindId;
        },
        getState: function (state) { return state; },
        resetState: function (state, defaultState) {
            state.labelDetails = defaultState.labelDetails;
        },
        create: function () {
            return new SpecifyLabelSettingsPage(reportWizardOptions);
        },
        navigationPanelText: analytics_utils_1.getLocalization('Specify Page Settings', 'ASPxReportsStringId.ReportDesigner_Wizard_SpecifyPageSettings'),
        template: 'dx-wizard-fullscreen-page',
        description: analytics_utils_1.getLocalization("Choose the page size and customize the label's parameters.", 'ASPxReportsStringId.ReportDesigner_Wizard_LabelPageSize')
    });
}
exports._registerSpecifyLabelSettingsPage = _registerSpecifyLabelSettingsPage;


/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var configureReportPageSettingsAndColorSchemeSection_1 = __webpack_require__(355);
var pageId_1 = __webpack_require__(14);
var reportWizardState_1 = __webpack_require__(18);
var configureReportPageSettingsPage_1 = __webpack_require__(151);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_wizard_1 = __webpack_require__(7);
var SpecifyPageSettingsPage = (function (_super) {
    __extends(SpecifyPageSettingsPage, _super);
    function SpecifyPageSettingsPage(_reportWizardOptions) {
        var _this = _super.call(this) || this;
        _this._reportWizardOptions = _reportWizardOptions;
        return _this;
    }
    SpecifyPageSettingsPage.prototype.canNext = function () {
        return false;
    };
    SpecifyPageSettingsPage.prototype.canFinish = function () {
        return true;
    };
    SpecifyPageSettingsPage.prototype.registerSections = function () {
        configureReportPageSettingsAndColorSchemeSection_1._registerConfigureReportPageSettingsSection(this._factory);
        _registerSpecifyReportTitlePage(this._factory);
        var meta = this._factory.getMetadata(pageId_1.FullscreenReportWizardSectionId.ConfigurePageSettingsPage);
        meta['recreate'] = false;
        meta.description = analytics_utils_1.getLocalization('Specify page settings and a report color scheme.', 'ASPxReportsStringId.ReportDesigner_Wizard_SpecifyPageSettingsColorScheme');
        meta = this._factory.getMetadata(pageId_1.FullscreenReportWizardSectionId.SpecifyReportTitlePage);
        meta['recreate'] = false;
        meta.description = analytics_utils_1.getLocalization('Specify the report title.', 'ASPxReportsStringId.ReportDesigner_Wizard_SpecifyReportTitle');
        this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.ConfigurePageSettingsPage, this._reportWizardOptions.rtl ? analytics_wizard_1.WizardSectionPosition.Right : analytics_wizard_1.WizardSectionPosition.Left);
        this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.SpecifyReportTitlePage, this._reportWizardOptions.rtl ? analytics_wizard_1.WizardSectionPosition.Left : analytics_wizard_1.WizardSectionPosition.Right);
    };
    SpecifyPageSettingsPage.prototype.getNextSectionId = function (sectionId) {
        if (!sectionId)
            return pageId_1.FullscreenReportWizardSectionId.ConfigurePageSettingsPage;
        else if (sectionId === pageId_1.FullscreenReportWizardSectionId.ConfigurePageSettingsPage)
            return pageId_1.FullscreenReportWizardSectionId.SpecifyReportTitlePage;
    };
    return SpecifyPageSettingsPage;
}(analytics_wizard_1.FullscreenWizardPage));
exports.SpecifyPageSettingsPage = SpecifyPageSettingsPage;
function _registerSpecifyPageSettingsPage(factory, reportWizardOptions) {
    factory.registerMetadata(pageId_1.FullscreenReportWizardPageId.SpecifyPageSettingsPage, {
        getState: function (state) {
            return state;
        },
        setState: function (data, state) {
            state.colorScheme.baseColor = data.colorScheme.baseColor;
            state.colorScheme.name = data.colorScheme.name;
            state.reportTitle = data.reportTitle;
            configureReportPageSettingsPage_1._applyPageSetting(data.pageSetup, state.pageSetup);
        },
        resetState: function (state, defaultState) {
            state.colorScheme.baseColor = defaultState.colorScheme.baseColor;
            state.colorScheme.name = defaultState.colorScheme.name;
            state.reportTitle = defaultState.reportTitle;
            configureReportPageSettingsPage_1._applyPageSetting(defaultState.pageSetup, state.pageSetup);
        },
        create: function () {
            return new SpecifyPageSettingsPage(reportWizardOptions);
        },
        template: 'dx-wizard-fullscreen-page',
        description: analytics_utils_1.getLocalization('Manage page and color settings.', 'TODO'),
        navigationPanelText: analytics_utils_1.getLocalization('Specify Page Settings', 'ASPxReportsStringId.ReportDesigner_Wizard_SpecifyPageSettings')
    });
}
exports._registerSpecifyPageSettingsPage = _registerSpecifyPageSettingsPage;
var SpecifyReportTitlePage = (function (_super) {
    __extends(SpecifyReportTitlePage, _super);
    function SpecifyReportTitlePage() {
        var _this = _super.call(this) || this;
        _this._foreColor = ko.observable('white');
        _this._masterDetailInfo = ko.observableArray();
        _this.reportTitle = ko.observable('');
        _this._color = ko.observable('rgba( 75, 75, 75, 1)');
        _this._disposables.push(_this.reportTitle.subscribe(function () { return _this._onChange(); }));
        _this._disposables.push(_this._previewPageHelper = new configureReportPageSettingsPage_1.PreviewPageHelper());
        _this._previewPageHelper.updatePageSettings(reportWizardState_1.defaultPageSetupState);
        return _this;
    }
    SpecifyReportTitlePage.prototype._getBrightness = function (r, g, b) {
        r = r / 255.0;
        g = g / 255.0;
        b = b / 255.0;
        var max = Math.max(r, g, b);
        var min = Math.min(r, g, b);
        return (max + min) / 2;
    };
    SpecifyReportTitlePage.prototype._fillTables = function (info) {
        var _this = this;
        info.forEach(function (item) {
            var fields = item.fields.filter(function (x) { return x.checked; });
            if (fields.length > 0) {
                _this._masterDetailInfo.push({
                    fields: fields.slice(0, 4)
                });
            }
            if (item.relations.length > 0) {
                _this._fillTables(item.relations);
            }
        });
    };
    SpecifyReportTitlePage.prototype.initialize = function (state) {
        var deferred = $.Deferred();
        this._masterDetailInfo([]);
        if (state.colorScheme['baseColor']) {
            this._color(state.colorScheme['_color']);
            var color = state.colorScheme['baseColor'].split(',').map(function (x) { return parseInt(x); });
            this._foreColor(this._getBrightness(color[1], color[2], color[3]) > 0.6 ? 'black' : 'white');
        }
        this.reportTitle(state.reportTitle ? state.reportTitle : '');
        this._fillTables(state.masterDetailInfoCollection);
        this._reportTitleVisible = !!(state.dataSource || state.newDataSource);
        this._previewPageHelper.updatePageSettings(state.pageSetup);
        _super.prototype.initialize.call(this, state.pageSetup).done(function () {
            deferred.resolve();
        });
        return deferred.promise();
    };
    SpecifyReportTitlePage.prototype.commit = function () {
        var deferred = $.Deferred();
        deferred.resolve({
            reportTitle: this.reportTitle()
        });
        return deferred.promise();
    };
    SpecifyReportTitlePage.prototype._reportTitlePlaceholder = function () {
        return analytics_utils_1.getLocalization('Type title here...', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportTitle_Placeholder');
    };
    return SpecifyReportTitlePage;
}(analytics_wizard_1.WizardPageBase));
exports.SpecifyReportTitlePage = SpecifyReportTitlePage;
function _registerSpecifyReportTitlePage(factory) {
    factory.registerMetadata(pageId_1.ReportWizardPageId.SetReportTitlePage, {
        create: function () { return new SpecifyReportTitlePage(); },
        getState: function (state) { return state; },
        setState: function (data, state) {
            state.reportTitle = data.reportTitle;
        },
        resetState: function (state, defaultState) {
            state.reportTitle = defaultState.reportTitle;
        },
        template: 'dxrd-page-pageSetup-preview',
        description: analytics_utils_1.getLocalization('Manage page and color settings.', 'TODO')
    });
}
exports._registerSpecifyReportTitlePage = _registerSpecifyReportTitlePage;


/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var configureReportPageSettingsPage_1 = __webpack_require__(151);
var colorSchemePage_1 = __webpack_require__(227);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var analytics_wizard_1 = __webpack_require__(7);
var $ = __webpack_require__(3);
var ConfigurePageSettingsPage = (function (_super) {
    __extends(ConfigurePageSettingsPage, _super);
    function ConfigurePageSettingsPage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._configureReportPageSettingsPage = new configureReportPageSettingsPage_1.ConfigureReportPageSettingsPage();
        _this._colorSchemePage = new colorSchemePage_1.ChooseReportColorSchemePage();
        _this._colorSchemePageVisible = true;
        return _this;
    }
    ConfigurePageSettingsPage.prototype.dispose = function () {
        this._configureReportPageSettingsPage.dispose();
        this._colorSchemePage.dispose();
    };
    ConfigurePageSettingsPage.prototype.addColorScheme = function (name, color, position) {
        this._colorSchemePage.addColorScheme(name, color, position);
    };
    ConfigurePageSettingsPage.prototype.removeColorScheme = function () {
        var names = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            names[_i] = arguments[_i];
        }
        var _a;
        (_a = this._colorSchemePage).removeColorScheme.apply(_a, names);
    };
    ConfigurePageSettingsPage.prototype.removeAllColorSchemes = function () {
        this._colorSchemePage.removeAllColorSchemes();
    };
    ConfigurePageSettingsPage.prototype.setCustomColor = function (color) {
        this._colorSchemePage.setCustomColor(color);
    };
    ConfigurePageSettingsPage.prototype.onChange = function (callback) {
        this._colorSchemePage.onChange(callback);
        this._configureReportPageSettingsPage.onChange(callback);
    };
    ConfigurePageSettingsPage.prototype.canNext = function () {
        return this._colorSchemePage.canNext() && this._configureReportPageSettingsPage.canNext();
    };
    ConfigurePageSettingsPage.prototype.canFinish = function () {
        return this._colorSchemePage.canFinish() && this._configureReportPageSettingsPage.canFinish();
    };
    ConfigurePageSettingsPage.prototype.initialize = function (state) {
        this._colorSchemePageVisible = this._colorSchemePage._lookupData.scheme.length > 0 && !!(state.dataSource || state.newDataSource);
        return $.when.apply($, [
            this._configureReportPageSettingsPage.initialize(state.pageSetup),
            this._colorSchemePage.initialize(state.colorScheme)
        ]);
    };
    ConfigurePageSettingsPage.prototype.commit = function () {
        var _this = this;
        var deferred = $.Deferred();
        this._colorSchemePage.commit().done(function (colorResult) {
            _this._configureReportPageSettingsPage.commit().done(function (configureReportPageSettingsPageResult) {
                deferred.resolve({
                    pageSetup: configureReportPageSettingsPageResult,
                    colorScheme: colorResult
                });
            });
        });
        return deferred.promise();
    };
    return ConfigurePageSettingsPage;
}(analytics_wizard_1.WizardPageBase));
exports.ConfigurePageSettingsPage = ConfigurePageSettingsPage;
function _registerConfigureReportPageSettingsSection(factory) {
    factory.registerMetadata(pageId_1.ReportWizardPageId.ConfigureReportPageSettingsPage, {
        create: function () { return new ConfigurePageSettingsPage(); },
        getState: function (state) { return state; },
        setState: function (data, state) {
            configureReportPageSettingsPage_1._applyPageSetting(data.pageSetup, state.pageSetup);
            colorSchemePage_1._applyColorSchemeState(data.colorScheme, state.colorScheme);
        },
        resetState: function (state, defaultState) {
            configureReportPageSettingsPage_1._applyPageSetting(defaultState.pageSetup, state.pageSetup);
            colorSchemePage_1._applyColorSchemeState(defaultState.colorScheme, state.colorScheme);
        },
        template: 'dxrd-page-pageSetupAndColorScheme',
        description: analytics_utils_1.getLocalization('Specify page settings and a report color scheme.', 'ASPxReportsStringId.ReportDesigner_Wizard_SpecifyPageSettingsColorScheme')
    });
}
exports._registerConfigureReportPageSettingsSection = _registerConfigureReportPageSettingsSection;


/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var analytics_wizard_1 = __webpack_require__(7);
var fields_1 = __webpack_require__(57);
var pageId_1 = __webpack_require__(14);
var defineReportLayoutPage_1 = __webpack_require__(233);
var configureCrossTabPage_1 = __webpack_require__(357);
var DefineCrossTabPage = (function (_super) {
    __extends(DefineCrossTabPage, _super);
    function DefineCrossTabPage(_reportWizardOptions) {
        var _this = _super.call(this) || this;
        _this._reportWizardOptions = _reportWizardOptions;
        _this._className = 'dxrd-wizard-section-crosstab';
        return _this;
    }
    DefineCrossTabPage.prototype._showPageDescription = function () {
        return false;
    };
    DefineCrossTabPage.prototype.canNext = function () {
        return true;
    };
    DefineCrossTabPage.prototype.registerSections = function () {
        _registerSelectSingleDataMemberPage(this._factory, this._reportWizardOptions);
        this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.SelectSingleDataMemberPage, analytics_wizard_1.WizardSectionPosition.TopLeft);
        configureCrossTabPage_1._registerConfigureCrossTabPage(this._factory, pageId_1.FullscreenReportWizardSectionId.ConfigureCrossTabColumnsPage, 'Columns', 'ReportStringId.CrossTab_ColumnAreaName', fields_1.sortOrderdefaultValAscending);
        this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.ConfigureCrossTabColumnsPage, analytics_wizard_1.WizardSectionPosition.TopRight);
        configureCrossTabPage_1._registerConfigureCrossTabPage(this._factory, pageId_1.FullscreenReportWizardSectionId.ConfigureCrossTabRowsPage, 'Rows', 'ReportStringId.CrossTab_RowAreaName', fields_1.sortOrderdefaultValAscending);
        this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.ConfigureCrossTabRowsPage, analytics_wizard_1.WizardSectionPosition.BottomLeft);
        configureCrossTabPage_1._registerConfigureCrossTabPage(this._factory, pageId_1.FullscreenReportWizardSectionId.ConfigureCrossTabDataPage, 'Data', 'ReportStringId.CrossTab_DataAreaName', fields_1.crossTabSummaryType);
        this._setSectionPosition(pageId_1.FullscreenReportWizardSectionId.ConfigureCrossTabDataPage, analytics_wizard_1.WizardSectionPosition.BottomRight);
    };
    DefineCrossTabPage.prototype.getNextSectionId = function (sectionId) {
        if (!sectionId)
            return pageId_1.FullscreenReportWizardSectionId.SelectSingleDataMemberPage;
        else if (sectionId === pageId_1.FullscreenReportWizardSectionId.SelectSingleDataMemberPage) {
            return pageId_1.FullscreenReportWizardSectionId.ConfigureCrossTabColumnsPage;
        }
        else if (sectionId === pageId_1.FullscreenReportWizardSectionId.ConfigureCrossTabColumnsPage) {
            return pageId_1.FullscreenReportWizardSectionId.ConfigureCrossTabRowsPage;
        }
        else if (sectionId === pageId_1.FullscreenReportWizardSectionId.ConfigureCrossTabRowsPage) {
            return pageId_1.FullscreenReportWizardSectionId.ConfigureCrossTabDataPage;
        }
    };
    DefineCrossTabPage.prototype.commit = function () {
        var result = {};
        this._sections.forEach(function (section) {
            if (section && section.page().page instanceof configureCrossTabPage_1.ConfigureCrossTabPage) {
                var page = section.page().page;
                result[page.stateName] = page.fieldInfos().filter(function (x) { return x.field(); }).map(function (x) {
                    var info = {
                        name: x.field().name, displayName: x.field().displayName
                    };
                    info[page.itemInfo.propertyName] = x.functionValue().value;
                    return info;
                });
            }
        });
        var defferer = $.Deferred();
        _super.prototype.commit.call(this).done(function (sectionsResult) {
            defferer.resolve(analytics_internal_1.extend(sectionsResult, result));
        });
        return defferer.promise();
    };
    return DefineCrossTabPage;
}(analytics_wizard_1.FullscreenWizardPage));
exports.DefineCrossTabPage = DefineCrossTabPage;
function _registerSelectSingleDataMemberPage(factory, reportWizardOptions) {
    factory.registerMetadata(pageId_1.FullscreenReportWizardSectionId.SelectSingleDataMemberPage, {
        create: function () {
            return new configureCrossTabPage_1.SelectCrossTabDataMember(reportWizardOptions.callbacks.fieldListsCallback, reportWizardOptions.hideDataMemberSubItems);
        },
        template: 'dxrd-page-crosstab-dataMembers',
        getState: function (state) { return state; },
        setState: function (data, state) {
            state.crossTabFields = data.crossTabFields;
            state.dataMemberPath = data.dataMemberPath;
            state.dataMemberInfo = data.dataMemberInfo;
        },
        resetState: function (state, defaultState) {
            state.crossTabFields = defaultState.crossTabFields;
            state.dataMemberPath = defaultState.dataMemberPath;
            state.dataMemberInfo = defaultState.dataMemberInfo;
        }
    });
}
exports._registerSelectSingleDataMemberPage = _registerSelectSingleDataMemberPage;
function _registerDefineCrossTabPage(factory, reportWizardOptions) {
    defineReportLayoutPage_1._registerDefineReportLayoutPage(factory, reportWizardOptions);
    var meta = factory.getMetadata(pageId_1.FullscreenReportWizardPageId.DefineReportLayoutPage);
    var newMeta = analytics_internal_1.extend({}, meta, {
        create: function () {
            return new DefineCrossTabPage(reportWizardOptions);
        },
        setState: function (data, state) {
            state.crossTabFields = data.crossTabFields;
            state.dataMemberPath = data.dataMemberPath;
            state.dataMemberInfo = data.dataMemberInfo;
            state.crossTabColumnsFieldInfo = data.crossTabColumnsFieldInfo;
            state.crossTabRowsFieldInfo = data.crossTabRowsFieldInfo;
            state.crossTabDataFieldInfo = data.crossTabDataFieldInfo;
        },
        resetState: function (state, defaultState) {
            state.crossTabFields = defaultState.crossTabFields;
            state.dataMemberPath = defaultState.dataMemberPath;
            state.dataMemberInfo = defaultState.dataMemberInfo;
            state.crossTabColumnsFieldInfo = defaultState.crossTabColumnsFieldInfo;
            state.crossTabRowsFieldInfo = defaultState.crossTabRowsFieldInfo;
            state.crossTabDataFieldInfo = defaultState.crossTabDataFieldInfo;
        }
    });
    factory.registerMetadata(pageId_1.FullscreenReportWizardPageId.DefineCrossTabPage, newMeta);
}
exports._registerDefineCrossTabPage = _registerDefineCrossTabPage;


/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var analytics_wizard_1 = __webpack_require__(7);
var analytics_wizard_internal_1 = __webpack_require__(59);
var $ = __webpack_require__(3);
var ko = __webpack_require__(1);
var _crossTabDragUtils_1 = __webpack_require__(358);
var _utils_1 = __webpack_require__(49);
var selectDataMembersPage_1 = __webpack_require__(154);
var SelectCrossTabDataMember = (function (_super) {
    __extends(SelectCrossTabDataMember, _super);
    function SelectCrossTabDataMember(_fieldListCallBack, _hideDataMemberSubItems) {
        if (_hideDataMemberSubItems === void 0) { _hideDataMemberSubItems = false; }
        var _this = _super.call(this, _fieldListCallBack, _hideDataMemberSubItems) || this;
        _this._pageRendered = false;
        _this._createCrossTabLeafTreeNode = function (item, isChecked, path) {
            var field = new analytics_wizard_internal_1.FieldTreeNode(item.name, item.displayName, item.specifics, isChecked, path);
            _this._disposables.push(field);
            clearTimeout(_this._timeout);
            _this._timeout = setTimeout(function () {
                if (!_this._pageRendered && _this._firstRenderNode.initialized()) {
                    _this._afteCheck(_this._firstRenderNode);
                    _this._pageRendered = true;
                }
            }, 1);
            field.disabled(!field.checked());
            _this._disposables.push(field.checked.subscribe(function (val) {
                field.disabled(!val);
            }));
            return field;
        };
        _this._createCrossTabTreeNode = function (item, isChecked, path) {
            var node = new analytics_wizard_internal_1.SingleCheckedDataMemberTreeNode(item.name, item.displayName, item.specifics, isChecked, path, _this._afteCheck);
            _this._disposables.push(node);
            if (!_this._firstRenderNode) {
                _this._firstRenderNode = node;
            }
            return node;
        };
        _this._afteCheck = function (node) {
            var rootItems = _this._signleFieldMemberFieldListModel.itemsProvider.getRootItems();
            rootItems.forEach(function (item) {
                item.setChecked(false);
            });
            node._checked(true);
            node.children().forEach(function (item) {
                item.setChecked(item.isList ? false : true);
            });
            _this._onChange();
        };
        _this._title = 'Avalible Fields';
        _this._icon = 'dxrd-svg-wizard-crosstab-fields';
        var fieldListProvider = new analytics_internal_1.FieldListProvider(_this._wrapFieldListCallback(_fieldListCallBack), ko.observableArray([]));
        _this._disposables.push(_this._itemsProvider = new analytics_wizard_internal_1.TreeNodeItemsProvider(fieldListProvider, _this._rootItems, _this._createCrossTabTreeNode, _this._createCrossTabLeafTreeNode));
        _this._disposables.push(_this._controller = new _crossTabDragUtils_1.CrossTabWizardFieldListController());
        _this._dragHelperContent = new analytics_internal_1.DragHelperContent(null);
        _this._disposables.push(_this._controller.dragDropHandler = new _crossTabDragUtils_1.CrossTabWizardDragDropHandler(_this._dragHelperContent, function (dropTarget, name) {
            if (dropTarget && dropTarget instanceof ConfigureCrossTabPage)
                dropTarget.addInfo(name);
        }));
        _this._signleFieldMemberFieldListModel = {
            itemsProvider: _this._itemsProvider,
            selectedPath: ko.observable(null),
            treeListController: _this._controller,
            templateName: 'dxrd-treelist-with-checkbox'
        };
        return _this;
    }
    SelectCrossTabDataMember.prototype._findFirstCheckedField = function (dataMembers) {
        var result = null;
        for (var i = 0; i < dataMembers.length; i++) {
            var element = dataMembers[i];
            if (element.checked()) {
                result = element;
                break;
            }
            if (element.children && element.children().length) {
                result = this._findFirstCheckedField(element.children().filter(function (x) { return x.isList; }));
                if (result)
                    break;
            }
        }
        return result;
    };
    SelectCrossTabDataMember.prototype.commit = function () {
        var dataMember = this._findFirstCheckedField(this._itemsProvider.getRootItems());
        var result = dataMember ? {
            crossTabFields: dataMember && dataMember.children().filter(function (x) { return !x.isList; }) || [],
            dataMemberPath: analytics_internal_1.getFullPath(this.dataSourcePath, dataMember.path),
            dataMemberInfo: dataMember
        } : {};
        return $.Deferred().resolve(result).promise();
    };
    return SelectCrossTabDataMember;
}(selectDataMembersPage_1.SelectDataMembersPage));
exports.SelectCrossTabDataMember = SelectCrossTabDataMember;
var ConfigureCrossTabPage = (function (_super) {
    __extends(ConfigureCrossTabPage, _super);
    function ConfigureCrossTabPage(stateName, itemInfo, title, localizationId) {
        var _this = _super.call(this) || this;
        _this.stateName = stateName;
        _this.itemInfo = itemInfo;
        _this.changeAlways = true;
        _this.underCursor = ko.observable(new analytics_internal_1.HoverInfo());
        _this._crossTabFields = ko.observableArray([]);
        _this._template = 'dxrd-page-crosstab-setlayout';
        _this.fieldInfos = ko.observableArray([]);
        _this._title = analytics_utils_1.getLocalization(title, localizationId);
        _this._icon = 'dxrd-svg-wizard-crosstab-' + title.toLowerCase();
        _this._fieldName = analytics_utils_1.getLocalization('Field Name', 'ASPxReportsStringId.ReportDesigner_Wizard_PageCrossTab_FieldName_Caption');
        _this._valueName = analytics_utils_1.getLocalization(itemInfo.displayName, itemInfo.localizationId);
        _this._disposables.push(_this.isDroppable = ko.computed(function () {
            if (analytics_internal_1.DragDropHandler.started())
                return _this.underCursor().isOver;
            else
                return false;
        }));
        return _this;
    }
    ConfigureCrossTabPage.prototype._removeInfo = function (item) {
        this.fieldInfos.splice(this.fieldInfos.indexOf(item), 1);
        this.addInfo();
    };
    ConfigureCrossTabPage.prototype.addInfo = function (fieldName) {
        var _this = this;
        var newField = analytics_internal_1.findFirstItemMatchesCondition(this.fieldInfos(), function (item) { return item.field() === null; });
        if (!newField) {
            newField = new _utils_1.FieldInfo(this.itemInfo.valuesArray);
            this.fieldInfos.push(newField);
            this._disposables.push(newField.field.subscribe(function (newValue) {
                if (!newField.functionValue())
                    _this.setFieldDefaultValue(_this.itemInfo.defaultVal, newField);
                _this.addInfo();
                _this._onChange();
            }));
        }
        if (fieldName) {
            var field = analytics_internal_1.findFirstItemMatchesCondition(this._crossTabFields(), function (item) { return item.name === fieldName; });
            newField.field(field);
        }
    };
    ConfigureCrossTabPage.prototype.setFieldDefaultValue = function (defaultVal, fieldInfo) {
        fieldInfo.functionValue(analytics_internal_1.findFirstItemMatchesCondition(fieldInfo.value.dataSource, function (item) { return item.value === defaultVal; }));
    };
    ConfigureCrossTabPage.prototype.initialize = function (state, stateChanged) {
        if (stateChanged === void 0) { stateChanged = false; }
        if (stateChanged) {
            state[this.stateName] = [];
            this.fieldInfos([]);
        }
        this._crossTabFields(state.crossTabFields);
        this.addInfo();
        return $.Deferred().resolve().promise();
    };
    ConfigureCrossTabPage.prototype.canFinish = function () {
        return true;
    };
    return ConfigureCrossTabPage;
}(analytics_wizard_1.WizardPageBase));
exports.ConfigureCrossTabPage = ConfigureCrossTabPage;
function _registerConfigureCrossTabPage(factory, pageId, title, localizationId, info) {
    var stateName = 'crossTab' + title + 'FieldInfo';
    factory.registerMetadata(pageId, {
        setState: function (data, state) { },
        getState: function (state) { return state; },
        resetState: function (state, defaultState) { },
        create: function () {
            return new ConfigureCrossTabPage(stateName, info, title, localizationId);
        },
        template: 'dxrd-page-crosstab-setlayout',
    });
}
exports._registerConfigureCrossTabPage = _registerConfigureCrossTabPage;


/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var analytics_elements_1 = __webpack_require__(5);
var analytics_widgets_1 = __webpack_require__(4);
var _fieldListController_1 = __webpack_require__(100);
var CrossTabWizardFieldListController = (function (_super) {
    __extends(CrossTabWizardFieldListController, _super);
    function CrossTabWizardFieldListController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.showIconsForChildItems = function () { return true; };
        return _this;
    }
    CrossTabWizardFieldListController.prototype.isDraggable = function (item) {
        if (!analytics_internal_1.isList(item.data))
            return true;
        return false;
    };
    return CrossTabWizardFieldListController;
}(_fieldListController_1.FieldListController));
exports.CrossTabWizardFieldListController = CrossTabWizardFieldListController;
var CrossTabWizardDragDropHandler = (function (_super) {
    __extends(CrossTabWizardDragDropHandler, _super);
    function CrossTabWizardDragDropHandler(dragHelperContent, _addHandler) {
        var _this = _super.call(this, null, null, ko.observable(null), null, dragHelperContent) || this;
        _this._addHandler = _addHandler;
        _this.parent = function () { return $('.dx-designer-viewport .dx-fullscreen-wizard'); };
        _this.containment = '.dxrd-report-wizard';
        return _this;
    }
    CrossTabWizardDragDropHandler.prototype.helper = function (draggable, event) {
        this._dropTarget = null;
        var item = draggable;
        var target = $(event.target).closest('.ui-draggable');
        var rect = new analytics_elements_1.Rectangle(event.offsetX + 6, event.offsetY + 6, target.width(), target.height());
        rect.className = 'dxrd-image-ghost-report';
        this.dragHelperContent.reset();
        this.dragHelperContent.setContent(rect, {
            template: 'dxrd-drag-helper-source-reorder-treelist',
            data: {
                imageClassName: item.imageClassName,
                imageTemplateName: item.imageTemplateName,
                text: item.text
            }
        });
        var templateHtml = analytics_widgets_1.getTemplate(this.dragHelperContent.template);
        var $container = $(templateHtml).css({ 'display': 'block' });
        $container.prependTo(this.parent());
        ko.applyBindingsToDescendants(this.dragHelperContent, $container[0]);
        return $container;
    };
    CrossTabWizardDragDropHandler.prototype.doStopDrag = function (ui, draggable) {
        this.dragHelperContent.reset();
        if (this._dropTarget) {
            this._addHandler(this._dropTarget, draggable.data.name);
        }
    };
    CrossTabWizardDragDropHandler.prototype.drag = function (event, ui) {
        var target = this.getTarget(event);
        var page = $(target).closest('.dxrd-wizard-page');
        if (page.length) {
            this._dropTarget = ko.dataFor(page.get(0));
        }
    };
    return CrossTabWizardDragDropHandler;
}(analytics_internal_1.DragDropHandler));
exports.CrossTabWizardDragDropHandler = CrossTabWizardDragDropHandler;


/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var reportWizardState_1 = __webpack_require__(18);
var _legacyReportRequestModel_1 = __webpack_require__(360);
var pageId_1 = __webpack_require__(14);
var reportWizard_1 = __webpack_require__(148);
var chooseReportTypePage_1 = __webpack_require__(103);
var selectDataMemberPage_1 = __webpack_require__(361);
var selectColumnsPage_1 = __webpack_require__(362);
var addGroupingLevelPage_1 = __webpack_require__(363);
var chooseSummaryOptionsPage_1 = __webpack_require__(364);
var chooseReportLayoutPage_1 = __webpack_require__(366);
var chooseReportStylePage_1 = __webpack_require__(368);
var analytics_utils_1 = __webpack_require__(0);
var analytics_wizard_1 = __webpack_require__(7);
var reportWizardStateCreating_1 = __webpack_require__(105);
var LegacyReportWizard = (function (_super) {
    __extends(LegacyReportWizard, _super);
    function LegacyReportWizard(pageFactory, _reportWizardOptions) {
        var _this = _super.call(this, pageFactory, _reportWizardOptions.callbacks.finishCallback) || this;
        _this._reportWizardOptions = _reportWizardOptions;
        _this._requestModelType = _legacyReportRequestModel_1.LegacyReportRequestModel;
        _this.title = analytics_utils_1.getLocalization('Report Wizard', 'ASPxReportsStringId.ReportDesigner_Wizard_Header');
        return _this;
    }
    LegacyReportWizard.prototype._callBeforeFinishHandler = function (state, wizardModel) { };
    LegacyReportWizard.prototype._callAfterFinishHandler = function (state, result) {
        this.events.call('afterFinish', { state: state, wizardResult: result });
    };
    LegacyReportWizard.prototype.initialize = function (state) {
        var _this = this;
        if (state === void 0) { state = reportWizardStateCreating_1.createReportWizardState(); }
        _super.prototype.initialize.call(this, state, function (factory, stateManager) { return new LegacyReportWizardPageIterator(factory, stateManager, _this._reportWizardOptions); });
    };
    LegacyReportWizard.prototype.start = function (finishCallback) {
        if (finishCallback)
            this['_finishCallback'] = finishCallback;
        _super.prototype.start.call(this);
    };
    return LegacyReportWizard;
}(analytics_wizard_1.PopupWizard));
exports.LegacyReportWizard = LegacyReportWizard;
var LegacyReportWizardPageIterator = (function (_super) {
    __extends(LegacyReportWizardPageIterator, _super);
    function LegacyReportWizardPageIterator(pageFactory, stateManager, reportWizardOptions) {
        return _super.call(this, pageFactory, stateManager, reportWizardOptions) || this;
    }
    LegacyReportWizardPageIterator.prototype.getNextPageId = function (pageId) {
        if (!pageId)
            return pageId_1.ReportWizardPageId.SelectReportTypePage;
        if (pageId === pageId_1.ReportWizardPageId.SelectReportTypePage && this._getCurrentState().reportType === reportWizardState_1.ReportType.Label) {
            return pageId_1.ReportWizardPageId.SelectLabelTypePage;
        }
        else if (pageId === pageId_1.ReportWizardPageId.SelectLabelTypePage) {
            return pageId_1.ReportWizardPageId.CustomizeLabelPage;
        }
        else if (pageId === pageId_1.ReportWizardPageId.SelectReportTypePage && (this._getCurrentState().reportType === reportWizardState_1.ReportType.Databound)) {
            return pageId_1.ReportWizardPageId.ChooseAvailableDataSourcePage;
        }
        else if (pageId === pageId_1.ReportWizardPageId.ChooseAvailableDataSourcePage && !this._getCurrentState().dataSource) {
            return analytics_wizard_1.SqlDataSourceWizardPageId.ChooseConnectionPage;
        }
        else if (_super.prototype.getNextPageId.call(this, pageId)) {
            return _super.prototype.getNextPageId.call(this, pageId);
        }
        else if (pageId === pageId_1.ReportWizardPageId.ChooseAvailableDataSourcePage && this._getCurrentState().dataSource) {
            return pageId_1.LegacyReportWizardPageId.ChooseDataMemberPage;
        }
        else if (pageId === analytics_wizard_1.DataSourceWizardPageId.ConfigureMasterDetailRelationshipsPage ||
            pageId === analytics_wizard_1.SqlDataSourceWizardPageId.MultiQueryConfigurePage ||
            pageId === analytics_wizard_1.SqlDataSourceWizardPageId.MultiQueryConfigureParametersPage) {
            return pageId_1.LegacyReportWizardPageId.ChooseDataMemberPage;
        }
        else if (pageId === pageId_1.LegacyReportWizardPageId.ChooseDataMemberPage) {
            return pageId_1.LegacyReportWizardPageId.SelectColumnsPage;
        }
        else if (pageId === pageId_1.LegacyReportWizardPageId.SelectColumnsPage) {
            return pageId_1.LegacyReportWizardPageId.AddGroupingLevelPage;
        }
        else if (pageId === pageId_1.LegacyReportWizardPageId.AddGroupingLevelPage && this._getCurrentState().summaryOptionsColumns.length > 0) {
            return pageId_1.LegacyReportWizardPageId.ChooseSummaryOptionsPage;
        }
        else if (pageId === pageId_1.LegacyReportWizardPageId.ChooseSummaryOptionsPage || (pageId === pageId_1.LegacyReportWizardPageId.AddGroupingLevelPage && this._getCurrentState().summaryOptionsColumns.length == 0)) {
            return pageId_1.LegacyReportWizardPageId.ChooseReportLayoutPage;
        }
        else if (pageId === pageId_1.LegacyReportWizardPageId.ChooseReportLayoutPage) {
            return pageId_1.LegacyReportWizardPageId.ChooseReportStylePage;
        }
        else if (pageId === pageId_1.LegacyReportWizardPageId.ChooseReportStylePage) {
            return pageId_1.ReportWizardPageId.SetReportTitlePage;
        }
    };
    return LegacyReportWizardPageIterator;
}(analytics_wizard_1.MultiQueryDataSourceWizardPageIterator));
exports.LegacyReportWizardPageIterator = LegacyReportWizardPageIterator;
function _createLegacyReportWizard(reportWizardOptions) {
    var factory = new analytics_wizard_1.PageFactory();
    reportWizard_1._registerCommonReportWizardPages(factory, reportWizardOptions);
    chooseReportTypePage_1._registerSelectReportTypePage(factory, {
        showVertical: false,
        canCreateDatabound: function () {
            return reportWizardOptions.dataSources().length > 0 ||
                reportWizardOptions.connectionStrings.sql().length > 0;
        }
    });
    selectDataMemberPage_1._registerLegacyChooseDataMemberPage(factory, reportWizardOptions);
    selectColumnsPage_1._registerLegacySelectColumnsPage(factory, reportWizardOptions.callbacks.fieldListsCallback);
    addGroupingLevelPage_1._registerLegacyAddGroupingLevelPage(factory);
    chooseSummaryOptionsPage_1._registerLegacyChooseSummaryOptionsPage(factory);
    chooseReportLayoutPage_1._registerLegacyChooseReportLayoutPage(factory);
    chooseReportStylePage_1._registerLegacyChooseReportStylePage(factory);
    return new LegacyReportWizard(factory, reportWizardOptions);
}
exports._createLegacyReportWizard = _createLegacyReportWizard;


/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _commonRequestModel_1 = __webpack_require__(224);
var paperKind_1 = __webpack_require__(225);
var reportWizardState_1 = __webpack_require__(18);
var LegacyReportRequestModel = (function (_super) {
    __extends(LegacyReportRequestModel, _super);
    function LegacyReportRequestModel(state) {
        var _this = _super.call(this, state) || this;
        if (state.reportType === reportWizardState_1.ReportType.Databound) {
            _this.AdjustFieldWidth = state.fitFieldsToPage;
            if (state.fields.length) {
                _this.Columns = state.fields.map(function (value) { return value.name; });
                _this.ColumnInfo = state.fields.map(function (value) {
                    return {
                        Name: value.name,
                        DisplayName: value.displayName,
                        TypeSpecifics: 0
                    };
                });
            }
            else {
                _this.Columns = null;
                _this.ColumnInfo = null;
            }
            _this.DataSourceName = null;
            _this.GroupingLevels = state.groups;
            _this.Layout = state.layout;
            _this.Portrait = state.portrait;
            _this.ReportStyleId = state.style;
            _this.SummaryOptions = (state.summaryOptions || []).map(function (item) {
                return {
                    ColumnName: item.columnName,
                    Flags: item.flags
                };
            });
            if (state.pageSetup) {
                _this.PaperKind = paperKind_1.PaperKind[state.pageSetup.paperKind];
                _this.PaperSize = {
                    width: state.pageSetup.width,
                    height: state.pageSetup.height
                };
                _this.Margins = {
                    Left: state.pageSetup.marginLeft,
                    Right: state.pageSetup.marginRight,
                    Top: state.pageSetup.marginTop,
                    Bottom: state.pageSetup.marginBottom
                };
                _this.Unit = state.pageSetup.unit;
            }
        }
        return _this;
    }
    return LegacyReportRequestModel;
}(_commonRequestModel_1.CommonRequestModel));
exports.LegacyReportRequestModel = LegacyReportRequestModel;


/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = __webpack_require__(49);
var chooseAvailableDataSourcePage_1 = __webpack_require__(24);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_wizard_1 = __webpack_require__(7);
var analytics_widgets_internal_1 = __webpack_require__(8);
var DataMemberPageTreeListController = (function (_super) {
    __extends(DataMemberPageTreeListController, _super);
    function DataMemberPageTreeListController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataMemberPageTreeListController.prototype.canSelect = function (value) {
        return (this.hasItems(value.data) && !!value.path) || value.data.specifics === 'none';
    };
    return DataMemberPageTreeListController;
}(analytics_widgets_internal_1.DataMemberTreeListController));
var LegacyChooseDataMemberPage = (function (_super) {
    __extends(LegacyChooseDataMemberPage, _super);
    function LegacyChooseDataMemberPage(reportWizardOptions) {
        var _this = _super.call(this) || this;
        _this._rootItems = ko.observableArray([]);
        _this._selectedPath = ko.observable(null);
        _this._fieldListCallBack = reportWizardOptions.callbacks.fieldListsCallback;
        _this._createSqlDataSourceInfo = reportWizardOptions.callbacks.createSqlDataSourceInfo;
        _this._hideDataMemberSubItems = reportWizardOptions.hideDataMemberSubItems;
        _this.scrollViewHeight = _utils_1._masterDetailScrollViewHeight;
        _this.fieldListModel = {
            itemsProvider: new analytics_internal_1.FieldListProvider(_this._wrapFieldListCallback(_this._fieldListCallBack), _this._rootItems),
            selectedPath: _this._selectedPath,
            treeListController: new DataMemberPageTreeListController()
        };
        return _this;
    }
    LegacyChooseDataMemberPage.prototype._wrapFieldListCallback = function (itemsCallback) {
        var _this = this;
        return function (pathRequest) {
            if (_this._hideDataMemberSubItems) {
                var deferred = $.Deferred();
                deferred.resolve([]);
                return deferred.promise();
            }
            else {
                return itemsCallback(new analytics_utils_1.PathRequest(_this.dataSourcePath + '.' + pathRequest.fullPath), _this._dataSource);
            }
        };
    };
    Object.defineProperty(LegacyChooseDataMemberPage.prototype, "dataSourcePath", {
        get: function () {
            return (this._dataSource.id || this._dataSource.ref);
        },
        enumerable: true,
        configurable: true
    });
    LegacyChooseDataMemberPage.prototype._beginInternal = function (state) {
        var _this = this;
        this._dataSource = chooseAvailableDataSourcePage_1._restoreDataSourceFromState(state.newDataSource || state.dataSource);
        if (!state.dataMemberPath) {
            return this._fieldListCallBack(new analytics_utils_1.PathRequest(this.dataSourcePath), this._dataSource).done(function (fields) {
                _this._selectedPath(null);
                _this._rootItems(fields.map(function (value) {
                    return {
                        name: value.displayName,
                        id: value.name,
                        specifics: 'List',
                        dataSerializer: null,
                        data: {}
                    };
                }));
            });
        }
        else {
            this._selectedPath(state.dataMemberPath.replace(this.dataSourcePath + '.', ''));
            return $.Deferred().resolve().promise();
        }
    };
    LegacyChooseDataMemberPage.prototype.canNext = function () {
        return !!this._selectedPath();
    };
    LegacyChooseDataMemberPage.prototype.canFinish = function () {
        return !!this._selectedPath();
    };
    LegacyChooseDataMemberPage.prototype.initialize = function (state) {
        return this._beginInternal(state);
    };
    LegacyChooseDataMemberPage.prototype.commit = function () {
        return $.Deferred().resolve({
            dataMemberPath: analytics_internal_1.getFullPath(this.dataSourcePath, this._selectedPath()),
            dataMemberInfo: this.fieldListModel.treeListController.selectedItem && this.fieldListModel.treeListController.selectedItem.data
        }).promise();
    };
    return LegacyChooseDataMemberPage;
}(analytics_wizard_1.WizardPageBase));
exports.LegacyChooseDataMemberPage = LegacyChooseDataMemberPage;
function _registerLegacyChooseDataMemberPage(factory, reportWizardOptions) {
    factory.registerMetadata(pageId_1.LegacyReportWizardPageId.ChooseDataMemberPage, {
        setState: function (data, state) {
            state.dataMemberInfo = data.dataMemberInfo;
            state.dataMemberPath = data.dataMemberPath;
        },
        getState: function (state) {
            return state;
        },
        resetState: function (state, defaultState) {
            state.dataMemberInfo = defaultState.dataMemberInfo;
            state.dataMemberPath = defaultState.dataMemberPath;
        },
        create: function () {
            return new LegacyChooseDataMemberPage(reportWizardOptions);
        },
        template: 'dxrd-page-dataMember',
        description: analytics_utils_1.getLocalization('The table or view you choose determines wich columns will be available in your report.', 'ASPxReportsStringId.ReportDesigner_Wizard_ChooseDataMember')
    });
}
exports._registerLegacyChooseDataMemberPage = _registerLegacyChooseDataMemberPage;


/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var chooseAvailableDataSourcePage_1 = __webpack_require__(24);
var _utils_1 = __webpack_require__(74);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var analytics_wizard_1 = __webpack_require__(7);
var $ = __webpack_require__(3);
var LegacySelectColumnsPage = (function (_super) {
    __extends(LegacySelectColumnsPage, _super);
    function LegacySelectColumnsPage(getFieldListItems) {
        var _this = _super.call(this) || this;
        _this._selectedPath = null;
        _this._fields = [];
        _this.select = function () {
            _this.selectedFields.add(_this.availableFields.activeItem);
            _this.availableFields.removeActiveItem();
        };
        _this.selectAll = function () {
            _this.selectedFields.setItems(_this._fields.slice(0));
            _this.availableFields.removeAll();
        };
        _this.unselect = function () {
            _this.availableFields.add(_this.selectedFields.activeItem);
            _this.selectedFields.removeActiveItem();
        };
        _this.unselectAll = function () {
            _this.availableFields.setItems(_this._fields.slice(0));
            _this.selectedFields.removeAll();
        };
        _this.availableFieldDblClick = function (field) {
            _this.availableFields.activeItem = field;
            _this.select();
        };
        _this.availableFieldClick = function (e) {
            _this.availableFields.activeItem = e.itemData;
        };
        _this.selectedFieldDblClick = function (field) {
            _this.selectedFields.activeItem = field;
            _this.unselect();
        };
        _this.selectedFieldClick = function (e) {
            _this.selectedFields.activeItem = e.itemData;
        };
        _this.availableFields = new _utils_1.ListViewModel(analytics_utils_1.getLocalization('Available fields', 'ASPxReportsStringId.ReportDesigner_Wizard_AvailableFields'));
        _this.selectedFields = new _utils_1.ListViewModel(analytics_utils_1.getLocalization('Selected fields', 'ASPxReportsStringId.ReportDesigner_Wizard_SelectedFields'));
        _this._fieldListsCallback = getFieldListItems;
        return _this;
    }
    LegacySelectColumnsPage.prototype.canFinish = function () {
        return true;
    };
    LegacySelectColumnsPage.prototype.canNext = function () {
        return !this.selectedFields.isEmpty;
    };
    LegacySelectColumnsPage.prototype.selectedPath = function () {
        return this._selectedPath;
    };
    LegacySelectColumnsPage.prototype.reset = function () {
        this._selectedPath = null;
    };
    LegacySelectColumnsPage.prototype.initialize = function (state) {
        var _this = this;
        this.selectedFields.setItems(state.fields || []);
        if (this._selectedPath != state.dataMemberPath) {
            return this._fieldListsCallback(new analytics_utils_1.PathRequest(state.dataMemberPath), chooseAvailableDataSourcePage_1._restoreDataSourceFromState(state.newDataSource || state.dataSource))
                .done(function (fields) {
                _this._fields = fields.filter(function (item) {
                    return (item.specifics !== 'List' && item.specifics !== 'ListSource' && item.isList !== true);
                });
                _this._selectedPath = state.dataMemberPath;
                _this.availableFields.setItems(_this._fields.filter(function (value) {
                    return _this.selectedFields.items.indexOf(value) === -1;
                }));
            });
        }
        else {
            this.availableFields.setItems(this._fields.filter(function (value) {
                return _this.selectedFields.items.indexOf(value) === -1;
            }));
            return $.Deferred().resolve().promise();
        }
    };
    LegacySelectColumnsPage.prototype.commit = function () {
        return $.Deferred().resolve({
            fields: this.selectedFields.items
        }).promise();
    };
    LegacySelectColumnsPage.prototype.isSelectEnable = function () {
        return !!this.availableFields.activeItem;
    };
    LegacySelectColumnsPage.prototype.isUnselectEnable = function () {
        return !!this.selectedFields.activeItem;
    };
    return LegacySelectColumnsPage;
}(analytics_wizard_1.WizardPageBase));
exports.LegacySelectColumnsPage = LegacySelectColumnsPage;
function _registerLegacySelectColumnsPage(factory, fieldListItemsCallback) {
    factory.registerMetadata(pageId_1.LegacyReportWizardPageId.SelectColumnsPage, {
        setState: function (data, state) {
            state.fields = data.fields;
        },
        getState: function (state) {
            return state;
        },
        resetState: function (state, defaultState) {
            state.fields = defaultState.fields;
        },
        create: function () {
            return new LegacySelectColumnsPage(fieldListItemsCallback);
        },
        template: 'dxrd-page-columns',
        description: analytics_utils_1.getLocalization('Select the columns you want to display within your report.', 'ASPxReportsStringId.ReportDesigner_Wizard_ChooseColumns')
    });
}
exports._registerLegacySelectColumnsPage = _registerLegacySelectColumnsPage;


/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = __webpack_require__(74);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_wizard_1 = __webpack_require__(7);
var analytics_internal_1 = __webpack_require__(2);
var LegacyAddGroupingLevelPage = (function (_super) {
    __extends(LegacyAddGroupingLevelPage, _super);
    function LegacyAddGroupingLevelPage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.fields = new _utils_1.ListViewModel(analytics_utils_1.getLocalization('Available fields', 'ASPxReportsStringId.ReportDesigner_Wizard_AvailableFields'));
        _this.groups = new _utils_1.ListViewModel(analytics_utils_1.getLocalization('Groups', 'ASPxReportsStringId.ReportDesigner_Groups'));
        _this.addNewGroup = function () {
            if (_this.isCreateGroupEnabled()) {
                _this.groups.add({ fields: ko.observableArray([_this.fields.activeItem]) });
                _this.fields.removeActiveItem();
            }
        };
        _this.appendFieldsToGroup = function () {
            if (_this.isAppendToGroupEnabled()) {
                _this.groups.activeItem.fields.push(_this.fields.activeItem);
                _this.fields.removeActiveItem();
            }
        };
        _this.removeGroup = function () {
            if (_this.isRemoveGroupEnabled()) {
                _this.fields.addRange(_this.groups.activeItem.fields());
                _this.groups.removeActiveItem();
            }
        };
        _this.moveUp = function () {
            _this.groups.moveUp();
        };
        _this.moveDown = function () {
            _this.groups.moveDown();
        };
        _this.fieldDblClick = function (field) {
            _this.fields.activeItem = field;
            _this.addNewGroup();
        };
        _this.fieldClick = function (e) {
            _this.fields.activeItem = e.itemData;
        };
        _this.groupDblClick = function (group) {
            _this.groups.activeItem = group;
            _this.removeGroup();
        };
        _this.groupClick = function (e) {
            _this.groups.activeItem = e.itemData;
        };
        return _this;
    }
    LegacyAddGroupingLevelPage.prototype.canFinish = function () {
        return true;
    };
    LegacyAddGroupingLevelPage.prototype.isCreateGroupEnabled = function () {
        return !!this.fields.activeItem;
    };
    LegacyAddGroupingLevelPage.prototype.isAppendToGroupEnabled = function () {
        return this.fields.activeItem && this.groups.activeItem && this.groups.activeItem.fields().length > 0;
    };
    LegacyAddGroupingLevelPage.prototype.isRemoveGroupEnabled = function () {
        return this.groups.activeItem && this.groups.activeItem.fields().length > 0;
    };
    LegacyAddGroupingLevelPage.prototype.isMoveUpEnabled = function () {
        return this.groups.isMoveUpEnabled();
    };
    LegacyAddGroupingLevelPage.prototype.isMoveDownEnabled = function () {
        return this.groups.isMoveDownEnabled();
    };
    LegacyAddGroupingLevelPage.prototype.initialize = function (state) {
        this.initialFields = state.fields || [];
        var fields = ko.observableArray((state.fields || []).map(function (value, index, array) { return value.displayName; }));
        this.groups.setItems((state.groups || []).map(function (value) {
            fields.removeAll(value);
            return { fields: ko.observableArray(value) };
        }));
        this.fields.setItems(fields());
        return $.Deferred().resolve().promise();
    };
    LegacyAddGroupingLevelPage.prototype.commit = function () {
        var _this = this;
        var groups = this.groups.items.map(function (item) {
            return item.fields();
        });
        var summaryColumns = [];
        if (!this.groups.isEmpty) {
            this.fields.items.forEach(function (fieldName) {
                var field = analytics_internal_1.getFirstItemByPropertyValue(_this.initialFields, 'displayName', fieldName);
                if (field.specifics && ['integer', 'float', 'date'].indexOf(field.specifics.toLowerCase()) > -1) {
                    summaryColumns.push(field);
                }
            });
            summaryColumns.sort(function (a, b) { return a.name.localeCompare(b.name); });
        }
        return $.Deferred().resolve({
            groups: groups,
            summaryOptionsColumns: summaryColumns
        }).promise();
    };
    return LegacyAddGroupingLevelPage;
}(analytics_wizard_1.WizardPageBase));
exports.LegacyAddGroupingLevelPage = LegacyAddGroupingLevelPage;
function _registerLegacyAddGroupingLevelPage(factory) {
    factory.registerMetadata(pageId_1.LegacyReportWizardPageId.AddGroupingLevelPage, {
        setState: function (data, state) {
            state.groups = data.groups;
            state.summaryOptionsColumns = data.summaryOptionsColumns;
        },
        getState: function (state) {
            return state;
        },
        resetState: function (state, defaultState) {
            state.groups = defaultState.groups;
            state.summaryOptionsColumns = defaultState.summaryOptionsColumns;
        },
        create: function () {
            return new LegacyAddGroupingLevelPage();
        },
        template: 'dxrd-page-groups',
        description: analytics_utils_1.getLocalization('Create multiple groups, each with a single field value, or define several fields in the same group.', 'ASPxReportsStringId.ReportDesigner_Wizard_CreateGroups')
    });
}
exports._registerLegacyAddGroupingLevelPage = _registerLegacyAddGroupingLevelPage;


/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _summaryOptionsPageUtils_1 = __webpack_require__(365);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_wizard_1 = __webpack_require__(7);
var LegacyChooseSummaryOptionsPage = (function (_super) {
    __extends(LegacyChooseSummaryOptionsPage, _super);
    function LegacyChooseSummaryOptionsPage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._columns = [];
        _this.summaryOptions = ko.observableArray([]);
        _this.ignoreNullValues = ko.observable(false);
        _this.toggleIgnoreNullValues = function () {
            _this.ignoreNullValues(!_this.ignoreNullValues());
        };
        return _this;
    }
    LegacyChooseSummaryOptionsPage.prototype.canFinish = function () {
        return true;
    };
    LegacyChooseSummaryOptionsPage.prototype.initialize = function (state) {
        var _this = this;
        this.ignoreNullValues(state.ignoreNullValuesForSummary);
        var changes = ko.utils.compareArrays(state.summaryOptionsColumns || [], this._columns);
        var isColumnsChanged = changes.some(function (change, index, array) { return change.status != 'retained'; });
        if (isColumnsChanged) {
            this._columns = state.summaryOptionsColumns || [];
            this.summaryOptions.removeAll();
            this._columns.forEach(function (column) {
                _this.summaryOptions.push(new _summaryOptionsPageUtils_1.SummaryOptionsWrapper(column.name, column.displayName));
            });
        }
        this.summaryOptions.notifySubscribers();
        return $.Deferred().resolve().promise();
    };
    LegacyChooseSummaryOptionsPage.prototype.commit = function () {
        return $.Deferred().resolve({
            ignoreNullValuesForSummary: this.ignoreNullValues(),
            summaryOptions: this.summaryOptions().map(function (value) { return value.getOptions(); })
        }).promise();
    };
    return LegacyChooseSummaryOptionsPage;
}(analytics_wizard_1.WizardPageBase));
exports.LegacyChooseSummaryOptionsPage = LegacyChooseSummaryOptionsPage;
function _registerLegacyChooseSummaryOptionsPage(factory) {
    factory.registerMetadata(pageId_1.LegacyReportWizardPageId.ChooseSummaryOptionsPage, {
        setState: function (data, state) {
            state.summaryOptions = data.summaryOptions;
            state.ignoreNullValuesForSummary = data.ignoreNullValuesForSummary;
        },
        getState: function (state) {
            return state;
        },
        resetState: function (state, defaultState) {
            state.summaryOptions = defaultState.summaryOptions;
            state.ignoreNullValuesForSummary = defaultState.ignoreNullValuesForSummary;
        },
        create: function () {
            return new LegacyChooseSummaryOptionsPage();
        },
        template: 'dxrd-page-summaryOptions',
        description: analytics_utils_1.getLocalization('What summary function would you like to calculate?', 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions')
    });
}
exports._registerLegacyChooseSummaryOptionsPage = _registerLegacyChooseSummaryOptionsPage;


/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var SummaryOptionsWrapper = (function () {
    function SummaryOptionsWrapper(name, displayName) {
        this.avg = ko.observable(false);
        this.count = ko.observable(false);
        this.max = ko.observable(false);
        this.min = ko.observable(false);
        this.sum = ko.observable(false);
        this._name = name;
        this.columnName = displayName;
    }
    SummaryOptionsWrapper._getNumber = function (value) {
        return value ? 1 : 0;
    };
    SummaryOptionsWrapper.prototype.getOptions = function () {
        return {
            columnName: this._name,
            flags: SummaryOptionsWrapper._getNumber(this.sum()) << 0 |
                SummaryOptionsWrapper._getNumber(this.avg()) << 1 |
                SummaryOptionsWrapper._getNumber(this.min()) << 2 |
                SummaryOptionsWrapper._getNumber(this.max()) << 3 |
                SummaryOptionsWrapper._getNumber(this.count()) << 4
        };
    };
    return SummaryOptionsWrapper;
}());
exports.SummaryOptionsWrapper = SummaryOptionsWrapper;


/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var layoutPageUtils_1 = __webpack_require__(367);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var analytics_wizard_1 = __webpack_require__(7);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var LegacyChooseReportLayoutPage = (function (_super) {
    __extends(LegacyChooseReportLayoutPage, _super);
    function LegacyChooseReportLayoutPage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._isGroupedReport = ko.observable(false);
        _this._reportLayoutTypes = [
            new layoutPageUtils_1.LayoutTypeItem('Columnar', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Columnar', layoutPageUtils_1.ReportLayout.columnar, 18),
            new layoutPageUtils_1.LayoutTypeItem('Tabular', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Tabular', layoutPageUtils_1.ReportLayout.tabular, 18),
            new layoutPageUtils_1.LayoutTypeItem('Justified', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Justified', layoutPageUtils_1.ReportLayout.justified, 18)
        ];
        _this._groupedReportLayoutsTypes = [
            new layoutPageUtils_1.LayoutTypeItem('Stepped', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Stepped', layoutPageUtils_1.ReportLayout.stepped, 1),
            new layoutPageUtils_1.LayoutTypeItem('Outline 1', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Outline1', layoutPageUtils_1.ReportLayout.outline1, 1),
            new layoutPageUtils_1.LayoutTypeItem('Outline 2', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Outline2', layoutPageUtils_1.ReportLayout.outline2, 1),
            new layoutPageUtils_1.LayoutTypeItem('Align Left 1', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_AlignLeft1', layoutPageUtils_1.ReportLayout.alignLeft1, 1),
            new layoutPageUtils_1.LayoutTypeItem('Align Left 2', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_AlignLeft2', layoutPageUtils_1.ReportLayout.alignLeft2, 1)
        ];
        _this.toggleFitFieldsToPage = function () {
            _this.fitFieldsToPage(!_this.fitFieldsToPage());
        };
        _this.selectedLayoutType = ko.observable(null);
        _this.fitFieldsToPage = ko.observable(true);
        _this.pageOrientationItems = [
            new layoutPageUtils_1.PageOrientationItem('Portrait', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Portrait', layoutPageUtils_1.PageOrientation.Portrait),
            new layoutPageUtils_1.PageOrientationItem('Landscape', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Landscape', layoutPageUtils_1.PageOrientation.Landscape)
        ];
        _this.selectedPageOrientation = ko.observable(_this.pageOrientationItems[0]);
        _this.layoutTypeItems = ko.pureComputed(function () {
            var items = _this._isGroupedReport() ? _this._groupedReportLayoutsTypes : _this._reportLayoutTypes;
            _this.selectedLayoutType(items[0]);
            return items;
        });
        _this.layoutTypeItemClick = function (item) {
            _this.selectedLayoutType(item);
        };
        _this.isSelected = function (item) {
            return _this.selectedLayoutType() === item;
        };
        return _this;
    }
    LegacyChooseReportLayoutPage.prototype.canFinish = function () {
        return true;
    };
    LegacyChooseReportLayoutPage.prototype.initialize = function (state) {
        this._isGroupedReport(state.groups.length > 0);
        var selectedLayoutType = analytics_internal_1.getFirstItemByPropertyValue(this.layoutTypeItems(), 'layoutType', state.layout);
        if (!selectedLayoutType) {
            selectedLayoutType = analytics_internal_1.getFirstItemByPropertyValue(this.layoutTypeItems(), 'layoutType', this._isGroupedReport() ? layoutPageUtils_1.ReportLayout.stepped : layoutPageUtils_1.ReportLayout.columnar);
        }
        this.selectedLayoutType(selectedLayoutType);
        this.fitFieldsToPage(state.fitFieldsToPage === undefined ? true : state.fitFieldsToPage);
        this.selectedPageOrientation((state.portrait === undefined || state.portrait) ? this.pageOrientationItems[0] : this.pageOrientationItems[1]);
        return $.Deferred().resolve().promise();
    };
    LegacyChooseReportLayoutPage.prototype.commit = function () {
        return $.Deferred().resolve({
            layout: this.selectedLayoutType().layoutType,
            fitFieldsToPage: this.fitFieldsToPage(),
            portrait: this.selectedPageOrientation().orientation === layoutPageUtils_1.PageOrientation.Portrait
        }).promise();
    };
    return LegacyChooseReportLayoutPage;
}(analytics_wizard_1.WizardPageBase));
exports.LegacyChooseReportLayoutPage = LegacyChooseReportLayoutPage;
function _registerLegacyChooseReportLayoutPage(factory) {
    factory.registerMetadata(pageId_1.LegacyReportWizardPageId.ChooseReportLayoutPage, {
        setState: function (data, state) {
            state.fitFieldsToPage = data.fitFieldsToPage;
            state.layout = data.layout;
            state.portrait = data.portrait;
        },
        getState: function (state) {
            return state;
        },
        resetState: function (state, defaultState) {
            state.fitFieldsToPage = defaultState.fitFieldsToPage;
            state.layout = defaultState.layout;
            state.portrait = defaultState.portrait;
        },
        create: function () {
            return new LegacyChooseReportLayoutPage();
        },
        template: 'dxrd-page-reportLayoutType',
        description: analytics_utils_1.getLocalization('The report layout specifies the manner in which selected data fields are arranged on individual pages.', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout')
    });
}
exports._registerLegacyChooseReportLayoutPage = _registerLegacyChooseReportLayoutPage;


/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ReportLayout;
(function (ReportLayout) {
    ReportLayout[ReportLayout["stepped"] = 0] = "stepped";
    ReportLayout[ReportLayout["block"] = 1] = "block";
    ReportLayout[ReportLayout["outline1"] = 2] = "outline1";
    ReportLayout[ReportLayout["outline2"] = 3] = "outline2";
    ReportLayout[ReportLayout["alignLeft1"] = 4] = "alignLeft1";
    ReportLayout[ReportLayout["alignLeft2"] = 5] = "alignLeft2";
    ReportLayout[ReportLayout["columnar"] = 6] = "columnar";
    ReportLayout[ReportLayout["tabular"] = 7] = "tabular";
    ReportLayout[ReportLayout["justified"] = 8] = "justified";
})(ReportLayout = exports.ReportLayout || (exports.ReportLayout = {}));
var LayoutTypeItem = (function () {
    function LayoutTypeItem(textValue, textID, layoutType, margin) {
        this.layoutType = layoutType;
        this.margin = margin;
        this.text = analytics_utils_1.getLocalization(textValue, textID);
    }
    Object.defineProperty(LayoutTypeItem.prototype, "imageClassName", {
        get: function () {
            return 'dxrd-report-layout-type-image-' + ReportLayout[this.layoutType].toLowerCase();
        },
        enumerable: true,
        configurable: true
    });
    return LayoutTypeItem;
}());
exports.LayoutTypeItem = LayoutTypeItem;
var PageOrientation;
(function (PageOrientation) {
    PageOrientation[PageOrientation["Portrait"] = 0] = "Portrait";
    PageOrientation[PageOrientation["Landscape"] = 1] = "Landscape";
})(PageOrientation = exports.PageOrientation || (exports.PageOrientation = {}));
var PageOrientationItem = (function () {
    function PageOrientationItem(textValue, textID, orientation) {
        this.orientation = orientation;
        this.text = analytics_utils_1.getLocalization(textValue, textID);
    }
    return PageOrientationItem;
}());
exports.PageOrientationItem = PageOrientationItem;


/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var reportStylePageUtils_1 = __webpack_require__(369);
var pageId_1 = __webpack_require__(14);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_wizard_1 = __webpack_require__(7);
var analytics_internal_1 = __webpack_require__(2);
var LegacyChooseReportStylePage = (function (_super) {
    __extends(LegacyChooseReportStylePage, _super);
    function LegacyChooseReportStylePage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.reportStyleItems = [
            new reportStylePageUtils_1.ReportStyleItem('Bold', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Bold', reportStylePageUtils_1.ReportStyle.Bold),
            new reportStylePageUtils_1.ReportStyleItem('Casual', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Casual', reportStylePageUtils_1.ReportStyle.Casual),
            new reportStylePageUtils_1.ReportStyleItem('Corporate', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Corporate', reportStylePageUtils_1.ReportStyle.Corporate),
            new reportStylePageUtils_1.ReportStyleItem('Compact', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Compact', reportStylePageUtils_1.ReportStyle.Compact),
            new reportStylePageUtils_1.ReportStyleItem('Formal', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Formal', reportStylePageUtils_1.ReportStyle.Formal)
        ];
        _this.selectedReportStyle = ko.observable(_this.reportStyleItems[0]);
        return _this;
    }
    LegacyChooseReportStylePage.prototype.canFinish = function () {
        return true;
    };
    LegacyChooseReportStylePage.prototype.initialize = function (state) {
        this.selectedReportStyle(analytics_internal_1.getFirstItemByPropertyValue(this.reportStyleItems, 'reportStyle', state.style || reportStylePageUtils_1.ReportStyle.Bold));
        return $.Deferred().resolve().promise();
    };
    LegacyChooseReportStylePage.prototype.commit = function () {
        return $.Deferred().resolve({
            style: this.selectedReportStyle().reportStyle
        }).promise();
    };
    return LegacyChooseReportStylePage;
}(analytics_wizard_1.WizardPageBase));
exports.LegacyChooseReportStylePage = LegacyChooseReportStylePage;
function _registerLegacyChooseReportStylePage(factory) {
    factory.registerMetadata(pageId_1.LegacyReportWizardPageId.ChooseReportStylePage, {
        setState: function (data, state) {
            state.style = data.style;
        },
        getState: function (state) {
            return state;
        },
        resetState: function (state, defaultState) {
            state.style = defaultState.style;
        },
        create: function () {
            return new LegacyChooseReportStylePage();
        },
        template: 'dxrd-page-reportStyle',
        description: analytics_utils_1.getLocalization('The report style specifies the appearance of your report.', 'ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle')
    });
}
exports._registerLegacyChooseReportStylePage = _registerLegacyChooseReportStylePage;


/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ReportStyle;
(function (ReportStyle) {
    ReportStyle[ReportStyle["Bold"] = 0] = "Bold";
    ReportStyle[ReportStyle["Casual"] = 1] = "Casual";
    ReportStyle[ReportStyle["Compact"] = 2] = "Compact";
    ReportStyle[ReportStyle["Corporate"] = 3] = "Corporate";
    ReportStyle[ReportStyle["Formal"] = 4] = "Formal";
})(ReportStyle = exports.ReportStyle || (exports.ReportStyle = {}));
var ReportStyleItem = (function () {
    function ReportStyleItem(textDefault, textID, reportStyle) {
        this.reportStyle = reportStyle;
        this.text = analytics_utils_1.getLocalization(textDefault, textID);
    }
    Object.defineProperty(ReportStyleItem.prototype, "className", {
        get: function () {
            return 'dxrd-wizard-report-style-image ' + ReportStyle[this.reportStyle].toLowerCase();
        },
        enumerable: true,
        configurable: true
    });
    return ReportStyleItem;
}());
exports.ReportStyleItem = ReportStyleItem;


/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var inititalizer_1 = __webpack_require__(217);
var analytics_wizard_1 = __webpack_require__(7);
var _ReportWizardOptions = (function (_super) {
    __extends(_ReportWizardOptions, _super);
    function _ReportWizardOptions() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.wizardSettings = new inititalizer_1.ReportWizardSettings().createDefault();
        _this.hideDataMemberSubItems = false;
        return _this;
    }
    return _ReportWizardOptions;
}(analytics_wizard_1._DataSourceWizardOptionsBase));
exports._ReportWizardOptions = _ReportWizardOptions;


/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var reportDialogBase_1 = __webpack_require__(155);
var reportStorageWeb_1 = __webpack_require__(34);
var _settings_1 = __webpack_require__(31);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var SaveAsReportDialogModelBase = (function () {
    function SaveAsReportDialogModelBase(popup, urls) {
        this.noDataText = analytics_internal_1.noDataText();
        this.reportNamePlaceholder = function () { return analytics_utils_1.getLocalization('Enter a report name to save...', 'ASPxReportsStringId.ReportDesigner_SaveAs_NamePlaceholder'); };
        this.urls = urls;
        this.reportUrl = ko.observable('');
        this.reportName = ko.observable('');
        this.onDblClick = function (url) { return popup.save(url); };
        var self = this;
        this.popupButtons = [
            {
                toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                    text: analytics_utils_1.getLocalization('Save', 'AnalyticsCoreStringId.MenuButtons_Save'), disabled: ko.computed(function () { return !self.reportName() || popup.disabled(); }), onClick: function () {
                        popup.save(self.reportName());
                    }
                }
            },
            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { disabled: popup.disabled, text: analytics_utils_1.getLocalization('Cancel', 'AnalyticsCoreStringId.SearchDialog_Cancel'), onClick: function () { popup.cancel(); } } }
        ];
    }
    SaveAsReportDialogModelBase.prototype.onShow = function (tab) {
        var _this = this;
        var self = this;
        reportStorageWeb_1.ReportStorageWeb.getUrls().done(function (result) { self.urls(result); });
        var displayName = (this.urls() || []).filter(function (item) { return item.Key === _this.reportUrl(); })[0];
        this.reportName(displayName && displayName['Value'] || tab.displayName());
    };
    SaveAsReportDialogModelBase.prototype.getUrl = function () {
        return this.reportUrl();
    };
    SaveAsReportDialogModelBase.prototype.setUrl = function (url) {
        this.reportUrl(url);
    };
    return SaveAsReportDialogModelBase;
}());
exports.SaveAsReportDialogModelBase = SaveAsReportDialogModelBase;
var SaveAsReportDialog = (function (_super) {
    __extends(SaveAsReportDialog, _super);
    function SaveAsReportDialog(subreports, callbacks) {
        var _this = _super.call(this) || this;
        _this.closeAfterSave = ko.observable(false);
        _this.title = 'Save Report';
        _this.onSaving = function (e) { callbacks.reportSaving && callbacks.reportSaving(e); };
        _this.onSaved = function (e) { callbacks.reportSaved && callbacks.reportSaved(e); };
        _this.template('dxrd-savereport-dialog-content');
        _this.customize('dxrd-savereport-dialog-content', new SaveAsReportDialogModelBase(_this, subreports));
        _this.title = analytics_utils_1.getLocalization('Save Report', 'ReportStringId.RibbonXRDesign_SaveFile_STipTitle');
        return _this;
    }
    SaveAsReportDialog.prototype.show = function (tab) {
        this.closeAfterSave(false);
        _super.prototype.show.call(this, tab);
    };
    SaveAsReportDialog.prototype.save = function (url) {
        var self = this;
        if (_settings_1.reportStorageWebIsRegister()) {
            self.tab().context().report.displayNameObject(url);
            var data = self.tab().context().report.serialize();
            var args = { report: self.tab().context().report, url: url, cancel: false, dialog: this };
            self.onSaving(args);
            if (args.cancel) {
                return;
            }
            self.disabled(true);
            reportStorageWeb_1.ReportStorageWeb.setNewData(data, url)
                .done(function (result) {
                self.onSaved({ report: self.tab().context().report, url: result });
                var url = result;
                self.tab().context().url(result);
                self.tab().isDirty(false);
                analytics_internal_1.ShowMessage(analytics_utils_1.getLocalization('The report has been successfully saved.', 'ASPxReportsStringId.ReportDesigner_SaveReport_Message_OK'), analytics_internal_1.NotifyType.success);
                if (self.closeAfterSave()) {
                    self.tab().close.resolve();
                }
                reportStorageWeb_1.ReportStorageWeb.getUrls().done(function (result) { self.model()['urls'] && self.model()['urls'](result); });
                self.disabled(false);
                self.visible(false);
            }).fail(function () {
                self.disabled(false);
            });
        }
        else {
            self.tab().context().report.save();
            if (self.closeAfterSave()) {
                self.tab().close.resolve();
            }
            else {
                self.tab().close && self.tab().close.reject();
            }
            this.visible(false);
        }
    };
    return SaveAsReportDialog;
}(reportDialogBase_1.ReportDialogBase));
exports.SaveAsReportDialog = SaveAsReportDialog;


/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var reportDialogBase_1 = __webpack_require__(155);
var _settings_1 = __webpack_require__(31);
var reportStorageWeb_1 = __webpack_require__(34);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var SaveReportDialogModelBase = (function () {
    function SaveReportDialogModelBase(popup) {
        this.reportUrl = ko.observable('');
        this.saveText = ko.observable('');
        var self = this;
        this.popupButtons = [
            {
                toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                    disabled: popup.disabled,
                    text: analytics_utils_1.getLocalization('Yes', 'AnalyticsCoreStringId.ParametersPanel_True'), onClick: function () {
                        popup.save(self.reportUrl());
                    }
                }
            },
            {
                toolbar: 'bottom', location: 'after', widget: 'dxButton', disabled: popup.disabled, options: {
                    disabled: popup.disabled,
                    text: analytics_utils_1.getLocalization('No', 'AnalyticsCoreStringId.ParametersPanel_False'), onClick: function () {
                        popup.notSave();
                    }
                }
            },
            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { disabled: popup.disabled, text: analytics_utils_1.getLocalization('Cancel', 'AnalyticsCoreStringId.SearchDialog_Cancel'), onClick: function () { popup.cancel(); } } }
        ];
    }
    SaveReportDialogModelBase.prototype.onShow = function (tab) {
        this.saveText(analytics_utils_1.getLocalization('"{0}" has been changed. Do you want to save changes ?', 'ReportStringId.UD_Msg_MdiReportChanged').replace('{0}', tab.displayName()));
    };
    SaveReportDialogModelBase.prototype.getUrl = function () {
        return this.reportUrl();
    };
    SaveReportDialogModelBase.prototype.setUrl = function (url) {
        this.reportUrl(url);
    };
    return SaveReportDialogModelBase;
}());
exports.SaveReportDialogModelBase = SaveReportDialogModelBase;
var SaveReportDialog = (function (_super) {
    __extends(SaveReportDialog, _super);
    function SaveReportDialog(saveReportDialog, callbacks) {
        var _this = _super.call(this) || this;
        _this.title = 'Save Report';
        _this.saveReportDialog = saveReportDialog;
        _this.onSaving = function (e) { callbacks.reportSaving && callbacks.reportSaving(e); };
        _this.onSaved = function (e) { callbacks.reportSaved && callbacks.reportSaved(e); };
        _this.width('auto');
        _this.height(260);
        _this.customize('dxrd-savereport-dialog-content-light', new SaveReportDialogModelBase(_this));
        _this.title = analytics_utils_1.getLocalization('Save Report', 'ReportStringId.RibbonXRDesign_SaveFile_STipTitle');
        return _this;
    }
    SaveReportDialog.prototype.save = function (url) {
        var self = this;
        if (_settings_1.reportStorageWebIsRegister()) {
            if (url) {
                var args = { report: self.tab().context().report, url: url, cancel: false };
                self.onSaving(args);
                if (args.cancel) {
                    self.tab().close && self.tab().close.reject();
                    return;
                }
                this.disabled(true);
                reportStorageWeb_1.ReportStorageWeb.setData(self.tab().context().report.serialize(), url)
                    .done(function (jsonResult) {
                    self.onSaved({ report: self.tab().context().report, url: url });
                    self.tab().undoEngine.clearHistory();
                    self.tab().close && self.tab().close.resolve();
                    self.disabled(false);
                    self.visible(false);
                }).fail(function () {
                    self.disabled(false);
                });
            }
            else {
                self.saveReportDialog.show(self.tab());
                self.saveReportDialog.closeAfterSave(true);
                self.visible(false);
            }
        }
        else {
            self.tab().context().report.save();
            self.tab().close && self.tab().close.resolve();
        }
    };
    SaveReportDialog.prototype.notSave = function () {
        this.tab().close.resolve();
        this.visible(false);
    };
    SaveReportDialog.prototype.cancel = function () {
        this.tab().close && this.tab().close.reject();
        _super.prototype.cancel.call(this);
    };
    return SaveReportDialog;
}(reportDialogBase_1.ReportDialogBase));
exports.SaveReportDialog = SaveReportDialog;


/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var reportDialogBase_1 = __webpack_require__(155);
var reportStorageWeb_1 = __webpack_require__(34);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var OpenReportDialogModelBase = (function () {
    function OpenReportDialogModelBase(popup, urls) {
        var _this = this;
        this.urls = urls;
        this.searchValue = ko.observable('');
        this.searchPlaceholder = function () { return analytics_internal_1.searchPlaceholder(); };
        this.reportUrl = ko.observable('');
        this.noDataText = analytics_internal_1.noDataText();
        var self = this;
        this.onDblClick = function (url) { return popup.open(url); };
        this.popupButtons = [
            {
                toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                    text: analytics_utils_1.getLocalization('Open', 'ASPxReportsStringId.SidePanel_Open'), disabled: popup.disabled, onClick: function () {
                        popup.open(self.reportUrl());
                    }
                }, disabled: ko.pureComputed(function () { return !_this.reportUrl(); })
            },
            {
                toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                    text: analytics_utils_1.getLocalization('Cancel', 'AnalyticsCoreStringId.SearchDialog_Cancel'), disabled: popup.disabled, onClick: function () {
                        popup.cancel();
                    }
                }
            }
        ];
    }
    OpenReportDialogModelBase.prototype.onShow = function (tab) {
        var self = this;
        this.searchValue('');
        reportStorageWeb_1.ReportStorageWeb.getUrls().done(function (result) { self.urls(result); });
    };
    OpenReportDialogModelBase.prototype.getUrl = function () {
        return this.reportUrl();
    };
    OpenReportDialogModelBase.prototype.setUrl = function (url) {
        this.reportUrl(url);
    };
    return OpenReportDialogModelBase;
}());
exports.OpenReportDialogModelBase = OpenReportDialogModelBase;
var OpenReportDialog = (function (_super) {
    __extends(OpenReportDialog, _super);
    function OpenReportDialog(subreports, navigateByReports, callbacks) {
        var _this = _super.call(this) || this;
        _this.title = 'Open Report';
        _this.onOpening = function (e) { callbacks.reportOpening && callbacks.reportOpening(e); };
        _this.onOpened = function (e) { callbacks.reportOpened && callbacks.reportOpened(e); };
        _this.navigateByReports = navigateByReports;
        _this.customize('dxrd-openreport-dialog-content', new OpenReportDialogModelBase(_this, subreports));
        _this.title = analytics_utils_1.getLocalization('Open Report', 'ReportStringId.RibbonXRDesign_OpenFile_STipTitle');
        return _this;
    }
    OpenReportDialog.prototype.open = function (url) {
        var _this = this;
        this.disabled(true);
        this.navigateByReports.addTab(null, ko.observable(url)).done(function (x) {
            _this.disabled(false);
            _this.visible(false);
        }).fail(function () { return _this.disabled(false); });
    };
    return OpenReportDialog;
}(reportDialogBase_1.ReportDialogBase));
exports.OpenReportDialog = OpenReportDialog;


/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrDetailReportBand_1 = __webpack_require__(66);
var analytics_internal_1 = __webpack_require__(2);
var ReportSnapLinesCollector = (function (_super) {
    __extends(ReportSnapLinesCollector, _super);
    function ReportSnapLinesCollector(_rtl) {
        var _this = _super.call(this) || this;
        _this._rtl = _rtl;
        return _this;
    }
    ReportSnapLinesCollector.prototype._getCollection = function (parent) {
        if (parent['controls'] && parent['controls']().length > 0) {
            return parent['controls']();
        }
        else if (parent['rows']) {
            return parent['rows']();
        }
        else if (parent['cells']) {
            return parent['cells']();
        }
    };
    ReportSnapLinesCollector.prototype._enumerateBandCollection = function (bandsHolder, parentAbsoluteProsition, callback) {
        var collection = bandsHolder.bands();
        for (var i = 0; i < collection.length; i++) {
            var itemRect = collection[i].getUsefulRect();
            var itemAbsoluteRect = this._processBandRtl({
                top: collection[i].absolutePosition.y(),
                bottom: collection[i].absolutePosition.y() + collection[i].height(),
                left: itemRect.left + parentAbsoluteProsition.left,
                right: itemRect.right + parentAbsoluteProsition.left
            });
            if (collection[i] instanceof xrDetailReportBand_1.DetailReportBandSurface) {
                this._enumerateBandCollection(collection[i].bandsHolder, itemAbsoluteRect, callback);
            }
            else {
                callback(collection[i], itemAbsoluteRect);
            }
        }
        if (bandsHolder.verticalBandsContainer && !bandsHolder.verticalBandsContainer.scrollOffset()) {
            bandsHolder.verticalBandsContainer.verticalBands().forEach((function (band) {
                var absoluteRect = {
                    top: band.absolutePosition.y(),
                    bottom: band.absolutePosition.y() + band._height(),
                    left: band.absolutePosition.x() - band.verticalBandsContainer.scrollOffset(),
                    right: band.absolutePosition.x() + band.rect().width - band.verticalBandsContainer.scrollOffset()
                };
                callback(band, absoluteRect);
            }));
        }
    };
    ReportSnapLinesCollector.prototype._processBandRtl = function (itemAbsoluteRect) {
        if (this._rtl()) {
            itemAbsoluteRect.right = itemAbsoluteRect.left;
            itemAbsoluteRect.left = 0;
        }
        return itemAbsoluteRect;
    };
    ReportSnapLinesCollector.prototype._enumerateCollection = function (parent, parentAbsoluteProsition, callback) {
        if (parent.bandsHolder)
            this._enumerateBandCollection(parent.bandsHolder, parentAbsoluteProsition, callback);
        _super.prototype._enumerateCollection.call(this, parent, parentAbsoluteProsition, callback);
    };
    return ReportSnapLinesCollector;
}(analytics_internal_1.SnapLinesCollector));
exports.ReportSnapLinesCollector = ReportSnapLinesCollector;


/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrSubreport_1 = __webpack_require__(56);
var analytics_internal_1 = __webpack_require__(2);
var SelectionDragDropHandler = (function (_super) {
    __extends(SelectionDragDropHandler, _super);
    function SelectionDragDropHandler(_canAddItems, surface, selection, undoEngine, snapHelper, dragHelperContent) {
        var _this = _super.call(this, surface, selection, undoEngine, snapHelper, dragHelperContent) || this;
        _this._canAddItems = _canAddItems;
        return _this;
    }
    SelectionDragDropHandler.prototype._localizationCanDrop = function (dropTarget, controlModel) {
        var locked = !this._canAddItems() && dropTarget.getControlModel() !== controlModel.parentModel();
        return !locked;
    };
    SelectionDragDropHandler.prototype.getLocation = function (adjustedTarget, item) {
        var location = _super.prototype.getLocation.call(this, adjustedTarget, item);
        if (item instanceof xrSubreport_1.XRSubreportSurface)
            return item.processLocation(location);
        return location;
    };
    SelectionDragDropHandler.prototype.canDrop = function (dropTarget, controlModel, metaData) {
        var canDrop = _super.prototype.canDrop.call(this, dropTarget, controlModel, metaData);
        return canDrop && this._localizationCanDrop(dropTarget, controlModel);
    };
    return SelectionDragDropHandler;
}(analytics_internal_1.SelectionDragDropHandler));
exports.SelectionDragDropHandler = SelectionDragDropHandler;


/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = __webpack_require__(61);
var _utils_2 = __webpack_require__(42);
var analytics_internal_1 = __webpack_require__(2);
var analytics_elements_1 = __webpack_require__(5);
var $ = __webpack_require__(3);
var _tocUtils_1 = __webpack_require__(67);
var ReportToolboxDragDropHandler = (function (_super) {
    __extends(ReportToolboxDragDropHandler, _super);
    function ReportToolboxDragDropHandler(surface, selection, undoEngine, snapHelper, dragHelperContent, controlsFactory, onComponentAdded) {
        var _this = _super.call(this, surface, selection, undoEngine, snapHelper, dragHelperContent, controlsFactory) || this;
        _this._wholeWideControls = ['XRTableOfContents', 'XRPdfContent'];
        _this.onComponentAdded = function (e) { onComponentAdded && onComponentAdded(e); };
        return _this;
    }
    ReportToolboxDragDropHandler.prototype.dispose = function () {
        this.surface = null;
        this.dragHelperContent = null;
        this.snapHelper = null;
    };
    ReportToolboxDragDropHandler.prototype.helper = function (draggable) {
        _super.prototype.helper.call(this, draggable);
        var toolboxItem = draggable;
        if (this._wholeWideControls.indexOf(toolboxItem.type) !== -1) {
            var width = this.surface().pageWidth() - (this.surface().margins.right() + this.surface().margins.left());
            var height = toolboxItem.type === 'XRTableOfContents' ? 46 : 23;
            var size = new analytics_elements_1.Size(width, height);
            this.recalculateSize(size);
            this.dragHelperContent.reset();
            this.dragHelperContent.setContent(new analytics_elements_1.Rectangle(0, 0, width, this._size.height()));
        }
    };
    ReportToolboxDragDropHandler.prototype._processProperty = function (propertyName, target, callback) {
        var _this = this;
        if (target instanceof Object && !$.isFunction(target)) {
            !!target[propertyName] && callback(target);
            Object.keys(target).forEach(function (name) {
                if (target[name] instanceof Object && !$.isFunction(target[name])) {
                    _this._processProperty(propertyName, target[name], callback);
                }
            });
        }
    };
    ReportToolboxDragDropHandler.prototype.doStopDrag = function (ui, draggable) {
        var reportSurface = this.surface();
        var toolboxItem = $.extend(true, {}, draggable);
        this._processProperty('@Padding', toolboxItem.info, function (target) {
            var model = analytics_elements_1.PaddingModel.from(target['@Padding']);
            analytics_elements_1.PaddingModel.unitProperties.forEach(function (name) {
                model[name](model[name]() * reportSurface.dpi() / 100);
            });
            model.dpi(reportSurface.dpi());
            target['@Padding'] = model.toString();
        });
        _super.prototype.doStopDrag.call(this, ui, toolboxItem);
    };
    ReportToolboxDragDropHandler.prototype.addControl = function (control, dropTargetSurface, size) {
        if (control.controlType === 'XRTableOfContents') {
            var dropTargetModel = dropTargetSurface.getControlModel();
            if (!_tocUtils_1.isHeaderOrFooterBandType(dropTargetModel) || !!_tocUtils_1.getExistTableOfContents(dropTargetModel)) {
                var reportSurface = this.surface();
                var reportModel = reportSurface.getControlModel();
                var targetBand = reportModel.getOrCreateBandForToC().band;
                if (!targetBand)
                    return;
                dropTargetSurface = analytics_internal_1.findSurface(targetBand);
            }
            if (!dropTargetSurface)
                return;
            var band = dropTargetSurface.getControlModel();
            var tocModel = control;
            tocModel.allLevels().forEach(function (lvl) {
                lvl.height(_utils_2.recalculateUnit(lvl.height(), band.dpi()));
            });
        }
        _super.prototype.addControl.call(this, control, dropTargetSurface, size);
        var parent = dropTargetSurface.getControlModel();
        _utils_1.dragDropComponentAdded(control, parent);
        this.onComponentAdded({ parent: parent, model: control });
    };
    return ReportToolboxDragDropHandler;
}(analytics_internal_1.ToolboxDragDropHandler));
exports.ReportToolboxDragDropHandler = ReportToolboxDragDropHandler;


/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(234);
__webpack_require__(234);
__webpack_require__(234);
__webpack_require__(234);
var _utils_1 = __webpack_require__(61);
var _getDataSourceDataMember_1 = __webpack_require__(220);
var _dataBindingMode_1 = __webpack_require__(33);
var xrReport_1 = __webpack_require__(16);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var analytics_elements_1 = __webpack_require__(5);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var _fieldListDragDropHelper_1 = __webpack_require__(378);
var FieldListDragDropHandler = (function (_super) {
    __extends(FieldListDragDropHandler, _super);
    function FieldListDragDropHandler(_canAddItems, surface, selection, _undoEngine, snapHelper, dragHelperContent, _dataSources, onComponentAdded) {
        var _this = _super.call(this, surface, selection, _undoEngine, snapHelper, dragHelperContent) || this;
        _this._canAddItems = _canAddItems;
        _this._undoEngine = _undoEngine;
        _this._dataSources = _dataSources;
        _this._getKey = function (item) { return (item.data.isList || item.isMultiSelected()) ? 'List' : item.data.specifics; };
        _this._isIcon = false;
        _this._disposables.push(_this.dataBindingMode = ko.computed(function () { return surface() && surface()._control.dataBindingMode || _dataBindingMode_1.DataBindingMode.Expressions; }));
        _this.cursor = 'arrow';
        _this.onComponentAdded = function (e) { onComponentAdded && onComponentAdded(e); };
        _this.containment = '.dxrd-designer';
        _this['cursorAt'] = {
            top: 0,
            left: 0
        };
        _this['helper'] = function (draggable, event) {
            _super.prototype.helper.call(_this, draggable);
            var item = draggable;
            _utils_1.selectTreeListItem(item, event);
            _this._setDragHelperContent(_fieldListDragDropHelper_1.memberControlsMap, _this._getKey(item));
        };
        return _this;
    }
    FieldListDragDropHandler.prototype._setDragHelperContent = function (memberControlsMap, key) {
        var size = (memberControlsMap[key] || memberControlsMap['Default']).size(this.surface());
        this.recalculateSize(size);
        this.dragHelperContent.reset();
        this.dragHelperContent.setContent(new analytics_elements_1.Rectangle(0, 0, this._size.width(), this._size.height()));
    };
    FieldListDragDropHandler.prototype._getDropTarget = function (memberControlsMapElement) {
        return memberControlsMapElement && memberControlsMapElement.adjustDropTarget && memberControlsMapElement.adjustDropTarget(this.selection.dropTarget) || this.selection.dropTarget;
    };
    FieldListDragDropHandler.prototype._needToChangeHelperContent = function (dragHelperContent, className) {
        return dragHelperContent && dragHelperContent.className === className;
    };
    FieldListDragDropHandler.prototype._updateInnerControlSize = function (control) {
        if (!control.rows)
            return;
        var cells = control.rows()[0].cells();
        var innerControls = [];
        cells.forEach(function (cell) {
            innerControls = innerControls.concat(cell.controls());
        });
        if (innerControls.length === 0)
            return;
        var cellWidth = cells[0].width();
        var cellHeight = cells[0].height();
        innerControls.forEach(function (control) {
            control.size.width(cellWidth);
            control.size.height(cellHeight);
        });
    };
    FieldListDragDropHandler.prototype._addControl = function (control, dropTarget) {
        if (!control)
            return;
        this._undoEngine().start();
        this.addControl(control, dropTarget, this._size);
        this._updateInnerControlSize(control);
        this._undoEngine().end();
        var parent = dropTarget.getControlModel();
        _utils_1.dragDropComponentAdded(control, parent);
        this.onComponentAdded({ parent: parent, model: control });
    };
    FieldListDragDropHandler.prototype._isDefaultBindingAssigned = function (control, treeListItem) {
        if (control['hasDefaultBindingProperty'] && !_utils_1.isList(treeListItem.data)) {
            if (this.dataBindingMode() === _dataBindingMode_1.DataBindingMode.Bindings) {
                var dataBinding = control.getDefaultBinding();
                dataBinding.updateBinding(treeListItem.path, this._dataSources.peek());
            }
            else {
                var dataSourceInfo = _getDataSourceDataMember_1.getDataSourceDataMember(control);
                var expression = control.getDefaultBinding();
                expression.value(_utils_1.getExpressionPath(control, new analytics_utils_1.PathRequest(treeListItem.path)));
            }
            return true;
        }
        return false;
    };
    FieldListDragDropHandler.prototype.canDrop = function (dropTarget, controlModel, metaData) {
        var canDrop = _super.prototype.canDrop.call(this, dropTarget, controlModel, metaData);
        return canDrop && (this._canAddItems() || this._isIcon);
    };
    FieldListDragDropHandler.prototype.drag = function (event, ui) {
        this._isIcon = false;
        if (this.selection.dropTarget) {
            var element = event.target;
            var draggable = ko.dataFor(element);
            var key = this._getKey(draggable), dropTarget = this._getDropTarget(_fieldListDragDropHelper_1.memberControlsMap[key]);
            var dropTargetControl = dropTarget.getControlModel();
            var boundedClass = 'dxrd-image-ghost-bounded';
            var dragHelperContent = this.dragHelperContent.controls()[0];
            if (dropTargetControl['hasDefaultBindingProperty'] && !_utils_1.isList(draggable.data) || dropTarget.dragCallback) {
                if (!this._needToChangeHelperContent(dragHelperContent, boundedClass)) {
                    var rect = new analytics_elements_1.Rectangle(12, 12, 12, 12);
                    rect.className = boundedClass;
                    this._size.width(12);
                    this._size.height(12);
                    this.dragHelperContent.reset();
                    this.dragHelperContent.setContent(rect);
                }
                dropTarget.dragCallback && dropTarget.dragCallback(draggable);
                $(element).draggable && $(element).draggable('option', 'snap', false);
                this.snapHelper.deactivateSnapLines();
                event.altKey = true;
                this._isIcon = true;
            }
            else if (this._needToChangeHelperContent(dragHelperContent, boundedClass)) {
                this._setDragHelperContent(_fieldListDragDropHelper_1.memberControlsMap, key);
            }
        }
        _super.prototype.drag.call(this, event, ui);
    };
    FieldListDragDropHandler.prototype.doStopDrag = function (ui, draggable) {
        var _this = this;
        this.dragHelperContent.reset();
        if (this.dragHelperContent.isLocked())
            return;
        if (this.selection.dropTarget) {
            if (this.selection.dropTarget instanceof xrReport_1.ReportSurface)
                return;
            var position = this._getAbsoluteSurfacePosition(ui);
            this.selection.dropTarget.underCursor().x = position.left - this.selection.dropTarget['absolutePosition'].x();
            this.selection.dropTarget.underCursor().y = position.top - this.selection.dropTarget['absolutePosition'].y();
            var item = draggable;
            var key = item.data.isList ? 'List' : item.data.specifics;
            if (this.surface().isFit && this.surface().isFit(this.selection.dropTarget) || this.selection.dropTarget.underCursor().isOver) {
                var dropTarget = this._getDropTarget(_fieldListDragDropHelper_1.memberControlsMap[key]), dropTargetControl = dropTarget.getControlModel();
                var isMultiSelect = item.selectedItems().length > 1;
                if (!isMultiSelect && this._isDefaultBindingAssigned(dropTargetControl, item))
                    return;
                if (dropTarget.dropCallback) {
                    dropTarget.dropCallback(item);
                    return;
                }
                dropTarget = dropTargetControl.getMetaData().isContainer ? dropTarget : dropTarget.parent;
                if (!dropTarget.canDrop())
                    return;
                if (!isMultiSelect && !_utils_1.isList(item.data)) {
                    var control = (_fieldListDragDropHelper_1.memberControlsMap[key] || _fieldListDragDropHelper_1.memberControlsMap['Default']).drop(item, dropTarget.getControlModel(), this.dataBindingMode());
                    this._addControl(control, dropTarget);
                    return;
                }
                _fieldListDragDropHelper_1.memberControlsMap[isMultiSelect ? 'MultiList' : key]
                    .drop(item, dropTarget.getControlModel(), this.dataBindingMode(), _fieldListDragDropHelper_1.memberControlsMap[isMultiSelect ? 'MultiList' : key].size(this.surface()))
                    .done(function (control) {
                    _this._addControl(control, dropTarget);
                });
            }
        }
    };
    return FieldListDragDropHandler;
}(analytics_internal_1.DragDropHandler));
exports.FieldListDragDropHandler = FieldListDragDropHandler;


/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = __webpack_require__(61);
var parameter_1 = __webpack_require__(29);
var analytics_elements_1 = __webpack_require__(5);
var analytics_utils_1 = __webpack_require__(0);
var $ = __webpack_require__(3);
var xrReport_1 = __webpack_require__(16);
var FieldListDragDropHelper = (function () {
    function FieldListDragDropHelper(_dataBindingMode, _size) {
        this._dataBindingMode = _dataBindingMode;
        this._size = _size;
        this._getItemsFromList = function (treeListItem, childCollection) {
            var deferred = $.Deferred();
            treeListItem.getItems().done(function (items) {
                var simpleFields = items.filter(function (item) { return !_utils_1.isList(item.data); });
                childCollection.push.apply(childCollection, simpleFields);
                deferred.resolve();
            });
            return deferred.promise();
        };
    }
    FieldListDragDropHelper.prototype._createTable = function (parent, items) {
        var _this = this;
        if (items.length === 0)
            return null;
        var tableSize = this._size ? [this._size.width(), this._size.height()].join(',') : '200, 23';
        var table = parent.getControlFactory().createControl({ '@ControlType': 'XRTable', '@SizeF': tableSize }, parent);
        var tableRow = table.createChild({ '@ControlType': 'XRTableRow', '@Weight': '1' });
        items.forEach(function (item) {
            var cell = _utils_1.createSimpleControl('XRTableCell', tableRow);
            if (item.data.specifics !== 'Array') {
                _utils_1.assignBinding(cell, tableRow, 'Text', item, _this._dataBindingMode);
            }
            else {
                var path = item.data instanceof parameter_1.Parameter ? item.path : new analytics_utils_1.PathRequest(item.path).path;
                cell.addChild(_utils_1.createPictureBox(cell, path, _this._dataBindingMode));
            }
        });
        return table;
    };
    FieldListDragDropHelper.prototype._getFirstLevelItems = function (treeListItems) {
        var deferred = $.Deferred();
        var promises = [];
        var childCollection = [];
        for (var i = 0; i < treeListItems.length; i++) {
            if (!_utils_1.isList(treeListItems[i].data))
                childCollection.push.apply(childCollection, [treeListItems[i]]);
            else
                promises.push(this._getItemsFromList(treeListItems[i], childCollection));
        }
        $.when.apply($, promises).done(function () {
            deferred.resolve(childCollection);
        });
        return deferred.promise();
    };
    FieldListDragDropHelper.prototype.createTableFromListSource = function (treeListItem, parent) {
        var _this = this;
        var deferred = $.Deferred();
        treeListItem.getItems().done(function (items) {
            if (items.length === 0)
                deferred.resolve(null);
            var simpleFields = items.filter(function (item) { return !_utils_1.isList(item.data); });
            if (simpleFields.length === 1) {
                var control = (exports.memberControlsMap[simpleFields['specifics']] || exports.memberControlsMap['Default']).drop(simpleFields[0], parent, _this._dataBindingMode);
                deferred.resolve(control);
            }
            else if (simpleFields.length > 1) {
                deferred.resolve(_this._createTable(parent, simpleFields));
            }
            else {
                _this.createTableFromItems(items, parent).done(function (table) { return deferred.resolve(table); });
            }
        });
        return deferred.promise();
    };
    FieldListDragDropHelper.prototype.createTableFromItems = function (treeListItems, parent) {
        var _this = this;
        var deferred = $.Deferred();
        this._getFirstLevelItems(treeListItems).done(function (items) { return deferred.resolve(_this._createTable(parent, items)); });
        return deferred.promise();
    };
    return FieldListDragDropHelper;
}());
exports.FieldListDragDropHelper = FieldListDragDropHelper;
exports.memberControlsMap = {
    'Array': {
        drop: function (treeListItem, dropTargetControl, dataBindingMode) {
            return _utils_1.createPictureBox(dropTargetControl, new analytics_utils_1.PathRequest(treeListItem.path).path, dataBindingMode);
        },
        size: function (surface) {
            return analytics_elements_1.Size.fromString('100, 100');
        }
    },
    'Bool': {
        drop: function (treeListItem, dropTargetControl, dataBindingMode) {
            var control = _utils_1.createSimpleControl('XRCheckBox', dropTargetControl);
            _utils_1.assignBinding(control, dropTargetControl, 'CheckBoxState', treeListItem, dataBindingMode);
            control.text(treeListItem.data.displayName);
            return control;
        },
        size: function (surface) {
            return analytics_elements_1.Size.fromString('100, 23');
        }
    },
    'List': {
        drop: function (treeListItem, dropTargetControl, dataBindingMode, size) {
            var helper = new FieldListDragDropHelper(dataBindingMode, size);
            if (treeListItem.data.specifics === 'ListSource')
                return helper.createTableFromListSource(treeListItem, dropTargetControl);
            return helper.createTableFromItems([treeListItem], dropTargetControl);
        },
        size: _utils_1.getUsefulReportWidth,
        adjustDropTarget: function (dropTarget) {
            if (dropTarget instanceof xrReport_1.ReportSurface)
                return dropTarget;
            var targetSurface = _utils_1.getFirstSurfaceParentByType(dropTarget, _utils_1._checkBandsType);
            targetSurface.underCursor().x = 0;
            return targetSurface;
        }
    },
    'MultiList': {
        drop: function (treeListItem, dropTargetControl, dataBindingMode, size) {
            var helper = new FieldListDragDropHelper(dataBindingMode, size);
            return helper.createTableFromItems(treeListItem.selectedItems(), dropTargetControl);
        },
        size: _utils_1.getUsefulReportWidth,
        adjustDropTarget: function (dropTarget) {
            if (dropTarget instanceof xrReport_1.ReportSurface)
                return dropTarget;
            var targetSurface = _utils_1.getFirstSurfaceParentByType(dropTarget, _utils_1._checkBandsType);
            targetSurface.underCursor().x = 0;
            return targetSurface;
        }
    },
    'Default': {
        drop: function (treeListItem, dropTargetControl, dataBindingMode) {
            var control = _utils_1.createSimpleControl('XRLabel', dropTargetControl);
            _utils_1.assignBinding(control, dropTargetControl, 'Text', treeListItem, dataBindingMode);
            return control;
        },
        size: function (surface) {
            return analytics_elements_1.Size.fromString('100, 23');
        }
    }
};


/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var events = __webpack_require__(492);
var ReportMenuSettings = (function (_super) {
    __extends(ReportMenuSettings, _super);
    function ReportMenuSettings() {
        var _this = _super.call(this) || this;
        _this.appMenuVisible = ko.observable(false);
        _this._$menuElement = null;
        _this.isMenuCollapsed = ko.observable(false);
        _this.toggleAppMenu = function (event) {
            var canToggle = !event || !_this._$menuElement.is(event.target) && !_this._$menuElement.find(event.target).length;
            canToggle && _this._toggleAppMenu();
            return canToggle;
        };
        return _this;
    }
    ReportMenuSettings.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        events.off(document, 'dxpointerdown', this.toggleAppMenu);
        this._$menuElement = null;
    };
    ReportMenuSettings.prototype.setMenuElement = function ($element) {
        this._$menuElement = $element;
    };
    ReportMenuSettings.prototype._toggleAppMenu = function () {
        this.appMenuVisible(!this.appMenuVisible());
        if (this.appMenuVisible()) {
            events.on(document, 'dxpointerdown', this.toggleAppMenu);
        }
        else {
            this.isMenuCollapsed(false);
            events.off(document, 'dxpointerdown', this.toggleAppMenu);
        }
    };
    ReportMenuSettings.prototype.generate = function () {
        var _this = this;
        var result = _super.prototype.generate.call(this);
        if (this.isMenuCollapsed)
            result['isMenuCollapsed'] = this.isMenuCollapsed;
        result['setMenuElement'] = function ($element) { return _this.setMenuElement($element); };
        return result;
    };
    return ReportMenuSettings;
}(analytics_internal_1.MenuSettings));
exports.ReportMenuSettings = ReportMenuSettings;


/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var ReportDesignerControlsHelper = (function (_super) {
    __extends(ReportDesignerControlsHelper, _super);
    function ReportDesignerControlsHelper(helper) {
        var _this = _super.call(this) || this;
        _this.getControls = function (context) { return helper() && helper().getControls(context); };
        _this.getControlByName = function (name) { return helper() && helper().getControlByName(name); };
        _this._disposables.push(_this.allControls = ko.computed(function () { return helper() && helper().allControls() || []; }));
        return _this;
    }
    return ReportDesignerControlsHelper;
}(analytics_utils_1.Disposable));
exports.ReportDesignerControlsHelper = ReportDesignerControlsHelper;


/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = __webpack_require__(61);
var _reportControlsDragDropHelper_1 = __webpack_require__(382);
var xrReport_1 = __webpack_require__(16);
var formattingrules_1 = __webpack_require__(45);
var analytics_internal_1 = __webpack_require__(2);
var analytics_elements_1 = __webpack_require__(5);
var ko = __webpack_require__(1);
var ReportExplorerDragDropHandler = (function (_super) {
    __extends(ReportExplorerDragDropHandler, _super);
    function ReportExplorerDragDropHandler(_canAddItems, surface, selection, undoEngine, dragHelperContent) {
        var _this = _super.call(this, surface, selection, undoEngine, null, dragHelperContent) || this;
        _this._canAddItems = _canAddItems;
        _this.undoEngine = undoEngine;
        _this._lastList = null;
        _this._timeout = null;
        _this._isStyle = function (item) { return item.data && item.data.specifics === 'stylemodel'; };
        _this._isFormatingRule = function (item) { return item.data && item.data.specifics === 'formattingrule'; };
        _this._isReportControl = function (item) { return !_this._isStyle(item) && !_this._isFormatingRule(item); };
        _this.cursor = 'arrow';
        _this.alwaysAlt = true;
        _this.containment = '.dxrd-designer';
        _this['cursorAt'] = {
            top: 0,
            left: 0
        };
        _this.reportControlsDragDropHelper = new _reportControlsDragDropHelper_1.ReportControlsDragDropHelper(_this.dragHelperContent, _this.undoEngine && _this.undoEngine());
        _this.helper = function (draggable, event) {
            var item = draggable;
            _utils_1.selectTreeListItem(item, event);
            if (_this._isReportControl(item)) {
                _this.reportControlsDragDropHelper.helper(draggable, event);
            }
            else {
                var rect = new analytics_elements_1.Rectangle(12, 12, 12, 12);
                var templateId = '';
                if (_this._isStyle(item)) {
                    rect.className = 'dxrd-image-ghost-stylemodel';
                    templateId = 'dxrd-svg-reportexplorer-style';
                }
                else if (_this._isFormatingRule(item)) {
                    rect.className = 'dxrd-image-ghost-formattingrule';
                    templateId = 'dxrd-svg-reportexplorer-formatting_rule';
                }
                _this.dragHelperContent.reset();
                dragHelperContent.setContent(rect, (templateId ? { template: templateId } : null));
                _this._size.width(12);
                _this._size.height(12);
            }
        };
        return _this;
    }
    ReportExplorerDragDropHandler.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.reportControlsDragDropHelper.dispose();
    };
    ReportExplorerDragDropHandler.prototype.startDrag = function (draggable) {
        if (this._isReportControl(draggable)) {
            this.reportControlsDragDropHelper.start(draggable);
        }
        _super.prototype.startDrag.call(this, draggable);
    };
    ReportExplorerDragDropHandler.prototype.drag = function (event, ui) {
        var _this = this;
        var isLocked = this.selection.dropTarget && this.selection.dropTarget.locked;
        if (this.reportControlsDragDropHelper.started) {
            var target = event['toElement'] || (ko.dataFor(event.relatedTarget) && event.relatedTarget) || (event.originalEvent && event.originalEvent.target) || null;
            if (target) {
                this.reportControlsDragDropHelper.setNewDropTarget(ko.dataFor(target), target, event.pageY);
            }
            var _target = this.reportControlsDragDropHelper['_target'];
            if (_target && _target.hasItems && (_target.collapsed && _target.collapsed())) {
                if (this._lastList !== _target) {
                    this._timeout && clearTimeout(this._timeout);
                    this._lastList = _target;
                    this._timeout = setTimeout(function () {
                        _this._lastList.toggleCollapsed();
                    }, 500);
                }
            }
            else {
                this._lastList = null;
                this._timeout && clearTimeout(this._timeout);
            }
            isLocked = isLocked || !this._canAddItems();
        }
        this.dragHelperContent.isLocked(isLocked);
    };
    ReportExplorerDragDropHandler.prototype.doStopDrag = function (ui, draggable, event) {
        this.reportControlsDragDropHelper.started && this.reportControlsDragDropHelper.clearDroppableClasses();
        this.dragHelperContent.reset();
        if (this.dragHelperContent.isLocked())
            return;
        if (this.reportControlsDragDropHelper.started) {
            this.selection.initialize(this.reportControlsDragDropHelper.stop());
        }
        else if (this.selection.dropTarget && !this.selection.dropTarget.locked) {
            if (this.selection.dropTarget instanceof xrReport_1.ReportSurface)
                return;
            var position = this._getAbsoluteSurfacePosition(ui);
            this.selection.dropTarget.underCursor().x = position.left - this.selection.dropTarget['absolutePosition'].x();
            this.selection.dropTarget.underCursor().y = position.top - this.selection.dropTarget['absolutePosition'].y();
            if (this.surface().isFit && this.surface().isFit(this.selection.dropTarget) || this.selection.dropTarget.underCursor().isOver) {
                if (draggable.data && draggable.data.specifics === 'stylemodel') {
                    this.selection.dropTarget.getControlModel()['styleName'] && this.selection.dropTarget.getControlModel()['styleName'](draggable.data.displayName);
                }
                else if (draggable.data && draggable.data.specifics === 'formattingrule') {
                    this.selection.dropTarget.getControlModel()['formattingRuleLinks'] && this.selection.dropTarget.getControlModel()['formattingRuleLinks'].push(formattingrules_1.FormattingRuleLink.createNew(draggable.data.data));
                }
            }
        }
    };
    return ReportExplorerDragDropHandler;
}(analytics_internal_1.DragDropHandler));
exports.ReportExplorerDragDropHandler = ReportExplorerDragDropHandler;


/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrBand_1 = __webpack_require__(15);
var utils_1 = __webpack_require__(156);
var xrReport_1 = __webpack_require__(16);
var xrTableRow_1 = __webpack_require__(48);
var xrTableCell_1 = __webpack_require__(43);
var xrTable_1 = __webpack_require__(195);
var analytics_elements_1 = __webpack_require__(5);
var analytics_widgets_internal_1 = __webpack_require__(8);
var analytics_utils_1 = __webpack_require__(0);
var $ = __webpack_require__(3);
var ReportControlsDragDropHelper = (function (_super) {
    __extends(ReportControlsDragDropHelper, _super);
    function ReportControlsDragDropHelper(_dragHelperContent, _undoEngine) {
        var _this = _super.call(this, _dragHelperContent) || this;
        _this._dragHelperContent = _dragHelperContent;
        _this._undoEngine = _undoEngine;
        _this._isTargetContainer = false;
        _this._orderingAreaHeight = 8;
        _this._tableControlTypes = ['XRTable', 'XRTableCell', 'XRTableRow'];
        return _this;
    }
    ReportControlsDragDropHelper.prototype._canReorder = function (currentTarget, draggableData) {
        var currentModel = this._getElementViewModel(currentTarget);
        if (xrBand_1.BandViewModel.isReorderingBand(this._draggableModel) && xrBand_1.BandViewModel.isReorderingBand(currentModel))
            return utils_1._isReorderBand(this._draggableModel.surface, currentModel);
        return currentTarget.data.specifics === draggableData.specifics ||
            (this._draggableModel.getMetaData().canDrop(currentModel.surface, this._draggableModel) &&
                !currentModel.getMetaData().isContainer && !(currentModel instanceof xrReport_1.ReportViewModel));
    };
    ReportControlsDragDropHelper.prototype._canInsertToTarget = function (targetModel) {
        var targetIsContainer = targetModel.getMetaData().isContainer || targetModel instanceof xrReport_1.ReportViewModel;
        return targetIsContainer && targetModel.surface && targetModel.surface.canDrop()
            && this._draggableModel.getMetaData().canDrop(targetModel.surface, this._draggableModel);
    };
    ReportControlsDragDropHelper.prototype._targetIsClosestOfDraggable = function (target, draggable) {
        return target === draggable || (target.parent && this._targetIsClosestOfDraggable(target.parent, draggable));
    };
    ReportControlsDragDropHelper.prototype._canDrop = function (target, targetModel) {
        var isReportExplorerTreeListItem = target instanceof analytics_widgets_internal_1.TreeListItemViewModel && target.data && target.data['data'] instanceof analytics_elements_1.ElementViewModel;
        if (!isReportExplorerTreeListItem) {
            return false;
        }
        if (this._tableControlTypes.indexOf(this._draggableModel.controlType) === -1 && (targetModel.controlType === 'XRTable' || targetModel.controlType === 'XRTableRow'))
            return false;
        return (this._draggableParent !== this._targetModel && !this._targetIsClosestOfDraggable(this._target, this._draggable) &&
            (this._canReorder(target, this._draggable.data) || this._canInsertToTarget(targetModel)));
    };
    ReportControlsDragDropHelper.prototype._insertTableChildren = function (parent, selectedEl, position, weightsCells) {
        if (weightsCells === void 0) { weightsCells = null; }
        var newChild, selectedRowHeight = 0;
        if (selectedEl['@ControlType'] === 'XRTableRow') {
            newChild = new xrTableRow_1.XRTableRowViewModel(selectedEl, parent);
            selectedRowHeight = newChild.height.peek();
        }
        else if (selectedEl['@ControlType'] === 'XRTableCell') {
            newChild = new xrTableCell_1.XRTableCellViewModel(selectedEl, parent);
        }
        parent.addChild(newChild, position);
        if (weightsCells) {
            weightsCells.splice(position, 0, parseFloat(selectedEl['@Weight']));
            weightsCells.forEach(function (weight, index) {
                parent.cells()[index].weight(weight);
            });
        }
        if (selectedRowHeight) {
            parent.size.height(parent.size.height() + selectedRowHeight);
        }
        return newChild.surface;
    };
    ReportControlsDragDropHelper.prototype._getDroppableClassName = function (isInTopOrderArea, isInBottomOrderArea) {
        var className = this.droppableClassName;
        var targetModel = this._getElementViewModel(this._target);
        if (this._canDrop(this._target, targetModel) && (!this._dragHelperContent || !this._dragHelperContent.isLocked())) {
            var canOrder = this._canReorder(this._target, this._draggable.data);
            var isDragToBottom = canOrder && this.isDragToBottom();
            className = className + ' ' + this.approveClassName;
            if (canOrder && this._draggableModel.controlType !== 'DetailReportBand') {
                className = className + ' ' + this.getDroppablePosition();
                this._isTargetContainer = false;
            }
            else if (canOrder && isDragToBottom && isInBottomOrderArea) {
                className = [className, this.classDropAfter].join(' ');
                this._isTargetContainer = false;
            }
            else if (canOrder && !isDragToBottom && isInTopOrderArea) {
                className = className + ' ' + this.classDropBefore;
                this._isTargetContainer = false;
            }
        }
        return className;
    };
    ReportControlsDragDropHelper.prototype._reorderBands = function (targetModel) {
        if (this._isTargetContainer) {
            targetModel.addChild(this._draggableModel);
        }
        else {
            this._undoEngine && this._undoEngine.start();
            this._draggableModel['level'](targetModel['level']());
            this._undoEngine && this._undoEngine.end();
        }
    };
    ReportControlsDragDropHelper.prototype._reorderTableControls = function (targetModel, siblings, isDragToBottom) {
        var _this = this;
        var clonedSiblings = siblings && siblings().slice(0);
        var draggableInfoClone = this._serializer.serialize(this._draggableModel);
        var weightsCells;
        if (this._draggableModel.controlType === 'XRTableCell') {
            weightsCells = clonedSiblings.filter(function (cell) {
                return cell.name.peek() !== _this._draggableModel.name.peek();
            }).map(function (cell) { return cell.weight.peek(); });
        }
        return this._insertTableChildren(targetModel.parentModel(), draggableInfoClone, siblings.indexOf(targetModel) + isDragToBottom, weightsCells);
    };
    ReportControlsDragDropHelper.prototype._changeControlParent = function (targetModel) {
        var targetRect = targetModel.surface.rect();
        var draggableRect = this._draggableModel.surface.rect();
        var rect = {};
        if (targetRect.width < draggableRect.left + draggableRect.width) {
            rect['left'] = targetRect.width - draggableRect.width;
            rect['left'] = rect['left'] > 0 ? rect['left'] : 0;
        }
        if (targetRect.height < draggableRect.top + draggableRect.height) {
            rect['top'] = targetRect.height - draggableRect.height;
            rect['top'] = rect['top'] > 0 ? rect['top'] : 0;
        }
        this._draggableModel.surface.rect(rect);
        targetModel.addChild(this._draggableModel);
    };
    ReportControlsDragDropHelper.prototype.start = function (draggable) {
        _super.prototype.start.call(this, draggable);
        this._serializer = new analytics_utils_1.ModelSerializer();
        this._draggableParent = this._draggableModel.parentModel();
    };
    ReportControlsDragDropHelper.prototype.setNewDropTarget = function (elementModel, element, mouseLocationY) {
        this.drag(elementModel, element);
        var isInBottomOrderArea;
        var isInTopOrderArea;
        var $targetElement = $(this._targetElement);
        if ($targetElement && $targetElement.length) {
            if (mouseLocationY && this._draggableModel.controlType === 'DetailReportBand') {
                var targetTop = $targetElement.offset().top;
                isInTopOrderArea = mouseLocationY < (targetTop + this._orderingAreaHeight);
                isInBottomOrderArea = mouseLocationY > (targetTop + $targetElement.height() - this._orderingAreaHeight);
                this._isTargetContainer = true;
            }
            $targetElement.addClass(this._getDroppableClassName(isInTopOrderArea, isInBottomOrderArea));
        }
    };
    ReportControlsDragDropHelper.prototype.getSiblings = function () {
        var draggablePathName = this._draggable.data.name.split('.')[0];
        return (this._targetModel.parentModel() || this._targetModel)[draggablePathName];
    };
    ReportControlsDragDropHelper.prototype.stop = function () {
        _super.prototype.stop.call(this);
        if (!this._target || !this._targetModel || !this._canDrop(this._target, this._targetModel)) {
            return this._draggableModel.surface;
        }
        var canReorder = this._canReorder(this._target, this._draggable.data), isReorderingBand = xrBand_1.BandViewModel.isReorderingBand(this._draggableModel), isDragToBottom = this.isDragToBottom(), isBandReordering = isReorderingBand && !this._isTargetContainer;
        if (!isBandReordering) {
            this._draggableParent.removeChild(this._draggableModel);
        }
        if (canReorder) {
            if (isReorderingBand) {
                this._reorderBands(this._targetModel);
            }
            else if (this._tableControlTypes.indexOf(this._draggableModel.controlType) !== -1) {
                this._reorderTableControls(this._targetModel, this.getSiblings(), isDragToBottom);
            }
            else {
                this.reorderSiblings(isDragToBottom);
            }
        }
        else if (this._targetModel instanceof xrTable_1.XRTableControlViewModel || this._targetModel instanceof xrTableRow_1.XRTableRowViewModel) {
            var draggableInfoClone = this._serializer.serialize(this._draggableModel);
            return this._insertTableChildren(this._targetModel, draggableInfoClone, 0);
        }
        else {
            this._changeControlParent(this._targetModel);
        }
        return this._draggableModel.surface;
    };
    return ReportControlsDragDropHelper;
}(analytics_widgets_internal_1.ReorderTreeListDragDropHelper));
exports.ReportControlsDragDropHelper = ReportControlsDragDropHelper;


/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionId = {
    NewReport: 'dxrd-newreport',
    NewReportViaWizard: 'dxrd-newreport-via-wizard',
    OpenReport: 'dxrd-open-report',
    ReportWizard: 'dxrd-run-wizard',
    ReportWizardFullScreen: 'dxrd-run-wizard-full-screen',
    Preview: 'dxrd-preview',
    Scripts: 'dxrd-scripts',
    AddDataSource: 'dxrd-add-datasource',
    AddSqlDataSource: 'dxrd-add-sql-datasource',
    AddMultiQuerySqlDataSource: 'dxrd-add-multi-query-sql-datasource',
    ValidateBindings: 'dxrd-validate-bindings',
    Save: 'dxrd-save',
    SaveAs: 'dxrd-save-as',
    Exit: 'dxrd-exit',
    FullScreen: 'dxrd-fullscreen',
    Localization: 'dxrd-localization-editor',
};


/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StringId = {
    Copy: 'ReportStringId.RibbonXRDesign_Copy_STipTitle',
    NewViaWizard: 'ReportStringId.UD_Capt_NewWizardReport',
    Open: 'ReportStringId.UD_Capt_OpenFile',
    Save: 'ReportStringId.Verb_Save',
    SaveAs: 'ReportStringId.UD_Capt_SaveFileAs',
    MdiReportChanged: 'ReportStringId.UD_Msg_MdiReportChanged'
};


/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var xrBand_1 = __webpack_require__(15);
var metadata_1 = __webpack_require__(28);
var xrCheckbox_1 = __webpack_require__(134);
var localizationService_1 = __webpack_require__(386);
var dataSourceSelectBox_1 = __webpack_require__(236);
var _translateHelper_1 = __webpack_require__(388);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var LocalizationEditor = (function (_super) {
    __extends(LocalizationEditor, _super);
    function LocalizationEditor(_options) {
        var _this = _super.call(this) || this;
        _this._options = _options;
        _this.defaultLanguageText = function () { return metadata_1.availableCultures()[metadata_1.defaultCulture]; };
        _this.currentLanguageText = function () { return metadata_1.availableCultures()[_this.language()]; };
        _this.localizationItems = ko.observableArray();
        _this.textToSearch = ko.observable('');
        _this.searchPlaceholder = function () { return analytics_internal_1.searchPlaceholder(); };
        _this.searchBox = ko.observable(null);
        _this.isSearching = ko.observable(false);
        _this.getResizableOptions = analytics_internal_1.getResizableOptions;
        _this.isVisible = ko.observable(false);
        _this.width = ko.observable(500);
        _this.showLoadIndicator = ko.observable(false);
        _this.getLoadPanelPosition = function (element) { return $(element).closest('.dxrd-localization-editor'); };
        _this._disposables.push(_this.availableCultures = dataSourceSelectBox_1.DataSourceSelectBox.createDataSource(Object.keys(metadata_1.availableCultures()).map(function (key) {
            return { value: key, displayValue: metadata_1.availableCultures()[key] };
        })));
        _this.translateHelper = new _translateHelper_1.TranslateHelper();
        return _this;
    }
    LocalizationEditor.prototype._uncollapseParent = function (newVal) {
        var parent = newVal.parentModel();
        if (!parent)
            return;
        if (parent instanceof xrBand_1.BandViewModel) {
            parent.expanded(true);
        }
        this._uncollapseParent(parent);
    };
    LocalizationEditor.prototype._subscribeFocused = function () {
        var _this = this;
        return this._options.selection.focused.subscribe(function (newVal) {
            _this._uncollapseParent(newVal.getControlModel());
            _this._options.controlScrollingTool.scrollToControl(newVal);
        });
    };
    LocalizationEditor.prototype._getDefaultLanguageItems = function () {
        return this._options.report()._localization.items.get(metadata_1.defaultCulture).properties;
    };
    LocalizationEditor.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.localizationItems().forEach(function (x) { return x.dispose(); });
        this.localizationItems.removeAll();
        this._autoScrollingSubscription && this._autoScrollingSubscription.dispose();
        this._options = null;
        this.language = null;
        this.searchBox(null);
        this._selectionDisabled = null;
        this.translateHelper.dispose();
    };
    LocalizationEditor.prototype._isLocalizableControl = function (x) {
        if (x instanceof xrCheckbox_1.XRCheckBoxViewModel) {
            return x.glyphAlignment() !== 'Center';
        }
        return true;
    };
    LocalizationEditor.prototype._localizableControls = function () {
        var _this = this;
        return this._options.report().enumerateComponents().filter(function (x) {
            return x instanceof xrControl_1.XRControlViewModel &&
                x.getLocalizationProperties &&
                x['text'] &&
                !x.hasDataBindingByName() &&
                _this._isLocalizableControl(x);
        });
    };
    LocalizationEditor.prototype.applyLocalization = function (serviceName) {
        var _this = this;
        if (this.language() !== metadata_1.defaultCulture) {
            this.showLoadIndicator(true);
            var textCollection = this.localizationItems().reduce(function (result, item) {
                if (item.visible())
                    result.push(item.localizedText);
                return result;
            }, []);
            localizationService_1._translationFactory.translate(serviceName, textCollection.map(function (x) { return x(); }), this.language()).done(function (result) {
                result.texts.forEach(function (val, i) {
                    textCollection[i](val);
                });
                _this.showLoadIndicator(false);
            }).fail(function () {
                _this.showLoadIndicator(false);
            });
        }
    };
    LocalizationEditor.prototype.clearLocalization = function () {
        this._options.report().clearLocalization(this.language());
    };
    LocalizationEditor.prototype.getRegisteredService = function () {
        return localizationService_1._translationFactory.getFirstRegistered();
    };
    LocalizationEditor.prototype.isDefaultLanguage = function () {
        return this.language() === metadata_1.defaultCulture;
    };
    LocalizationEditor.prototype._updateLocalizationItems = function () {
        var _this = this;
        var defaultProperties = this._getDefaultLanguageItems();
        this.localizationItems(this._localizableControls().map(function (component) {
            var _defaultText = ko.observable(component['text']());
            if (!_this.isDefaultLanguage()) {
                var defaultTextProperty = defaultProperties.filter(function (x) { return x.component === component && x.propertyName === 'Text'; })[0];
                _defaultText(defaultTextProperty && defaultTextProperty.value);
            }
            return {
                component: component,
                defaultText: ko.computed({
                    read: function () { return _defaultText(); },
                    write: function (newVal) {
                        _defaultText(newVal);
                        if (_this.isDefaultLanguage())
                            component['text'](newVal);
                    }
                }),
                isDefaultLanguage: function () { return _this.isDefaultLanguage(); },
                readOnly: function () { return component.isPropertyDisabled('text'); },
                visible: ko.computed(function () {
                    return (_this.isDefaultLanguage() || !!_defaultText() || !!component['text']()) &&
                        (function (regex) {
                            return [_defaultText(), component['text']()].some(function (x) { return regex.test(x); });
                        })(new RegExp(_this.textToSearch(), 'gi'));
                }),
                dispose: function () {
                    this.defaultText.dispose();
                    this.visible.dispose();
                },
                localizedText: component['text'],
                multiline: component['multiline']
            };
        }));
    };
    LocalizationEditor.prototype.start = function () {
        if (this._options.controlScrollingTool) {
            this._autoScrollingSubscription = this._subscribeFocused();
        }
        this.language = this._options.report().language;
        this._updateLocalizationItems();
        this._options.selection.updateSelection(this._options.report().surface);
        this._selectionDisabled = this._options.selection.disabled();
        this._options.selection.disabled(true);
        this.isVisible(true);
    };
    LocalizationEditor.prototype.finish = function () {
        this._autoScrollingSubscription && this._autoScrollingSubscription.dispose();
        this.localizationItems().forEach(function (x) { return x.dispose(); });
        this.localizationItems.removeAll();
        this._options.selection.disabled(this._selectionDisabled);
        this.language = null;
        this._selectionDisabled = null;
        this.searchBox(null);
        this.isVisible(false);
    };
    LocalizationEditor.prototype.onSelectionChanged = function (e) {
        if (e.addedItems[0])
            this._options.selection.updateSelection(e.addedItems[0].component.surface);
        else
            this._options.selection.clear();
    };
    LocalizationEditor.prototype.onItemGotFocus = function (e) {
        if (!e.model.component.surface.selected())
            this._options.selection.updateSelection(e.model.component.surface);
    };
    LocalizationEditor.prototype.switchSearchBox = function () {
        if (this.isSearching()) {
            this.textToSearch('');
        }
        this.isSearching(!this.isSearching());
    };
    return LocalizationEditor;
}(analytics_utils_1.Disposable));
exports.LocalizationEditor = LocalizationEditor;


/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var $ = __webpack_require__(3);
var TranslationFactory = (function () {
    function TranslationFactory() {
        this._services = {};
    }
    TranslationFactory.prototype.getFirstRegistered = function () {
        var _this = this;
        return analytics_internal_1.findFirstItemMatchesCondition(Object.keys(this._services), function (serviseKey) { return _this._services[serviseKey].onRequest !== undefined; });
    };
    TranslationFactory.prototype.getTranslations = function (texts, destinationLanguage) {
        var _this = this;
        var $deferred = $.Deferred();
        $.when.apply($, Object.keys(this._services).map(function (serviceName) { return _this.translate(serviceName, texts, destinationLanguage); })).done(function () {
            var results = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                results[_i] = arguments[_i];
            }
            $deferred.resolve([].concat.apply([], results));
        });
        return $deferred;
    };
    TranslationFactory.prototype.translate = function (name, texts, destinationLanguage) {
        var _this = this;
        if (!this._services[name])
            return;
        var $deferred = $.Deferred();
        $.ajax(this._services[name].onRequest(texts, destinationLanguage)).done(function (result) {
            $deferred.resolve({ name: name, texts: _this._services[name].onResponse(result) });
        }).fail(function () { return $deferred.reject(); });
        return $deferred.promise();
    };
    TranslationFactory.prototype.register = function (name, service) {
        this._services[name] = service;
    };
    TranslationFactory.prototype.unregister = function (name) {
        delete this._services[name];
    };
    return TranslationFactory;
}());
exports._translationFactory = new TranslationFactory();
function registerTranslationService(name, service) {
    exports._translationFactory.register(name, service);
}
exports.registerTranslationService = registerTranslationService;
function unregisterTranslationService(name) {
    exports._translationFactory.unregister(name);
}
exports.unregisterTranslationService = unregisterTranslationService;


/***/ }),
/* 387 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.data.DataSource };

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = __webpack_require__(40);
var analytics_utils_1 = __webpack_require__(0);
var $ = __webpack_require__(3);
var TranslateHelper = (function (_super) {
    __extends(TranslateHelper, _super);
    function TranslateHelper() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._maxInterval = 1000;
        _this._restoreDictionary = {};
        _this._timeouts = {};
        return _this;
    }
    TranslateHelper.prototype._getElement = function (name) {
        return $('.dx-designer .' + name)[0];
    };
    TranslateHelper.prototype.dispose = function () {
        types_1.convertMapToKeyValuePair(this._timeouts).forEach(function (item) { return clearTimeout(item.Value); });
        _super.prototype.dispose.call(this);
    };
    TranslateHelper.prototype.move = function (elementClassName, sign, transform, transition) {
        var _this = this;
        if (sign === void 0) { sign = '-'; }
        if (transform === void 0) { transform = 'translateY'; }
        if (transition === void 0) { transition = '0.35s transform ease-in-out'; }
        clearTimeout(this._timeouts[elementClassName]);
        var element = this._getElement(elementClassName);
        if (element) {
            var result = transform === 'translateY' ? element.clientHeight : element.clientWidth;
            var _transform = transform + '(' + sign + result + 'px)';
            var currentTransition = element.style.transition || 'transform 0s ease 0s';
            var currentVisible = element.style.visibility || 'visible';
            var currentTransform = element.style.transform || 'none';
            this._restoreDictionary[elementClassName] = function (element) {
                element.style.visibility = currentVisible;
                element.style.transform = currentTransform;
                element.style['-webkit-transform'] = currentTransform;
                _this._timeouts[elementClassName] = setTimeout(function () {
                    element.style.transition = currentTransition;
                }, _this._maxInterval);
            };
            element.style.transition = transition;
            element.style.transform = _transform;
            element.style['-webkit-transform'] = _transform;
            this._timeouts[elementClassName] = setTimeout(function () {
                element.style.visibility = 'hidden';
            }, this._maxInterval);
        }
    };
    TranslateHelper.prototype.reset = function (elementClassName) {
        clearTimeout(this._timeouts[elementClassName]);
        var element = this._getElement(elementClassName);
        if (element && this._restoreDictionary[elementClassName]) {
            this._restoreDictionary[elementClassName](element);
            delete this._restoreDictionary[elementClassName];
        }
    };
    return TranslateHelper;
}(analytics_utils_1.Disposable));
exports.TranslateHelper = TranslateHelper;


/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var settings_1 = __webpack_require__(12);
var xrReport_1 = __webpack_require__(39);
var _previewRequestWrapper_1 = __webpack_require__(92);
var analytics_internal_1 = __webpack_require__(2);
var ReportPreviewService = (function () {
    function ReportPreviewService() {
    }
    ReportPreviewService.initializePreview = function (report) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'initializePreview', encodeURIComponent(JSON.stringify({
            layout: JSON.stringify({ 'XtraReportsLayoutSerializer': report.serialize() }),
            culture: report.isLocalized() && report.language() !== xrReport_1.language.defaultVal ? report.language() : ''
        })), _previewRequestWrapper_1.PreviewRequestWrapper.getProcessErrorCallback());
    };
    return ReportPreviewService;
}());
exports.ReportPreviewService = ReportPreviewService;


/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var elementActions_1 = __webpack_require__(391);
var xrReport_1 = __webpack_require__(16);
var xrBand_1 = __webpack_require__(15);
var xrReportelement_1 = __webpack_require__(27);
var ReportElementActions = (function (_super) {
    __extends(ReportElementActions, _super);
    function ReportElementActions(surfaceContext, selection) {
        return _super.call(this, surfaceContext, selection) || this;
    }
    ReportElementActions.prototype.getActions = function (context) {
        if (context && !(context instanceof xrReport_1.ReportViewModel || context instanceof xrBand_1.BandViewModel) && (context instanceof xrReportelement_1.XRReportElementViewModel || context.controlType === 'multiselect')) {
            return _super.prototype.getActions.call(this, context);
        }
        return [];
    };
    return ReportElementActions;
}(elementActions_1.ElementActions));
exports.ReportElementActions = ReportElementActions;


/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var _alignmentHandler_1 = __webpack_require__(237);
var ko = __webpack_require__(1);
var ElementActions = (function (_super) {
    __extends(ElementActions, _super);
    function ElementActions(surfaceContext, selectionProvider) {
        var _this = _super.call(this) || this;
        _this._selectionProvider = selectionProvider;
        _this._isMultiSelect = ko.observable(false);
        var alignHandler = new _alignmentHandler_1.AlignmentHandler(selectionProvider, surfaceContext);
        var fitToContainerAction = new fitToContainerAction_1.FitToContainerAction(selectionProvider.focused);
        _super.prototype.initActions.call(_this, [
            {
                text: 'Align to Grid',
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                displayText: function () { return analytics_utils_1.getLocalization('Align to Grid', 'ReportStringId.Cmd_AlignToGrid'); },
                imageClassName: 'dxrd-image-actions-align_to_grid',
                imageTemplateName: 'dxrd-svg-actions-align_to_grid',
                clickAction: function () { alignHandler.alignToGrid(); },
                disabled: ko.pureComputed(function () { return _this._generalDisabled; }),
            }, {
                text: 'Size to Grid',
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                displayText: function () { return analytics_utils_1.getLocalization('Size to Grid', 'ReportStringId.UD_Capt_MakeSameSizeSizeToGrid'); },
                imageClassName: 'dxrd-image-actions-size_to_grid',
                imageTemplateName: 'dxrd-svg-actions-size_to_grid',
                clickAction: function () { alignHandler.sizeToGrid(); },
                disabled: ko.pureComputed(function () { return _this._generalDisabled; }),
            }, {
                text: 'Center Horizontally',
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                displayText: function () { return analytics_utils_1.getLocalization('Center Horizontally', 'ReportStringId.RibbonXRDesign_CenterHorizontally_STipTitle'); },
                imageClassName: 'dxrd-image-actions-center_horizontally',
                imageTemplateName: 'dxrd-svg-actions-center_horizontally',
                clickAction: function () { alignHandler.centerHorizontally(); },
                disabled: ko.pureComputed(function () {
                    return _this._generalDisabled ||
                        selectionProvider.focused() instanceof xrCrossband_1.XRCrossBandSurface ||
                        (function () {
                            var someParentIsNotBand = false;
                            var someParentNotFocused = false;
                            return selectionProvider.selectedItems.some(function (x) {
                                if (!x.parent)
                                    return true;
                                if (!someParentIsNotBand)
                                    someParentIsNotBand = !(x.parent.getControlModel() instanceof xrBand_1.BandViewModel);
                                if (!someParentNotFocused)
                                    someParentNotFocused = x.parent !== selectionProvider.selectedItems[0].parent;
                                return someParentNotFocused && someParentIsNotBand;
                            });
                        })();
                })
            }, {
                text: 'Center Vertically',
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                displayText: function () { return analytics_utils_1.getLocalization('Center Vertically', 'ReportStringId.RibbonXRDesign_CenterVertically_STipTitle'); },
                imageClassName: 'dxrd-image-actions-center_vertically',
                imageTemplateName: 'dxrd-svg-actions-center_vertically',
                clickAction: function () { alignHandler.centerVertically(); },
                disabled: ko.pureComputed(function () {
                    return _this._generalDisabled ||
                        selectionProvider.focused() instanceof xrCrossband_1.XRCrossBandSurface ||
                        selectionProvider.selectedItems.some(function (x) { return x.parent !== selectionProvider.selectedItems[0].parent; });
                })
            }, {
                text: 'Bring to Front',
                group: function () { return analytics_utils_1.getLocalization('Arranging', 'ReportStringId.RibbonXRDesign_PageGroup_Arranging'); },
                displayText: function () { return analytics_utils_1.getLocalization('Bring to Front', 'ReportStringId.Cmd_BringToFront'); },
                imageClassName: 'dxrd-image-actions-bring_to_front',
                imageTemplateName: 'dxrd-svg-actions-bring_to_front',
                clickAction: function () { alignHandler.bringToFront(); },
                disabled: ko.pureComputed(function () { return _this._generalDisabled || !alignHandler.canChangeZOrder(); }),
            }, {
                text: 'Send to Back',
                group: function () { return analytics_utils_1.getLocalization('Arranging', 'ReportStringId.RibbonXRDesign_PageGroup_Arranging'); },
                displayText: function () { return analytics_utils_1.getLocalization('Send to Back', 'ReportStringId.Cmd_SendToBack'); },
                imageClassName: 'dxrd-image-actions-send_to_back',
                imageTemplateName: 'dxrd-svg-actions-send_to_back',
                clickAction: function () { alignHandler.sendToBack(); },
                disabled: ko.pureComputed(function () { return _this._generalDisabled || !alignHandler.canChangeZOrder(); }),
            }, {
                text: 'Fit Bounds To Container',
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                displayText: function () { return analytics_utils_1.getLocalization('Fit Bounds To Container', 'ReportStringId.Cmd_FitBoundsToContainer'); },
                imageClassName: 'dxrd-image-actions-fit_to_container',
                imageTemplateName: 'dxrd-svg-actions-fit_to_container',
                clickAction: function () { fitToContainerAction.doAction(); },
                disabled: ko.pureComputed(function () { return _this._generalDisabled || !fitToContainerAction.allowed(); }),
                visible: ko.pureComputed(function () {
                    return !_this._isMultiSelect() && fitToContainerAction.visible();
                })
            }
        ]);
        _this.setDisabled = function (context) {
            _this._generalDisabled = _this._selectionProvider.selectedItems.some(function (item) { return item.locked; });
        };
        return _this;
    }
    ElementActions.prototype.condition = function (context) {
        this._isMultiSelect(context.controlType === 'multiselect');
        if (this._isMultiSelect())
            return !this._selectionProvider.selectedItems.some(function (item) { return item instanceof xrCrossTabCell_1.XRCellsurface; });
        return !(context instanceof xrTableCell_1.XRTableCellViewModel || context instanceof xrTableRow_1.XRTableRowViewModel || context instanceof xrCrossTabCell_1.XRCrossTabCellViewModel);
    };
    return ElementActions;
}(analytics_internal_1.BaseActionsProvider));
exports.ElementActions = ElementActions;
var xrCrossband_1 = __webpack_require__(54);
var xrTableCell_1 = __webpack_require__(43);
var xrTableRow_1 = __webpack_require__(48);
var fitToContainerAction_1 = __webpack_require__(392);
var xrBand_1 = __webpack_require__(15);
var xrCrossTabCell_1 = __webpack_require__(71);


/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var xrTableCell_1 = __webpack_require__(43);
var xrControl_1 = __webpack_require__(10);
var xrBand_1 = __webpack_require__(15);
var xrVerticalBand_1 = __webpack_require__(25);
var xrCrossband_1 = __webpack_require__(54);
var xrPagebreak_1 = __webpack_require__(192);
var xrTableOfContents_1 = __webpack_require__(197);
var ko = __webpack_require__(1);
var FitToContainerAction = (function () {
    function FitToContainerAction(_control) {
        var _this = this;
        this._control = _control;
        this._container = ko.pureComputed(function () { return _this._control() && _this._control().parent; });
    }
    FitToContainerAction.prototype.doAction = function () {
        this._control().rect(this._container().getUsefulRect());
    };
    FitToContainerAction.prototype.allowed = function () {
        var container = this._container();
        if (!container || container.getChildrenCollection()().length > 1)
            return false;
        return (container instanceof xrTableCell_1.XRTableCellSurface ||
            container instanceof xrControl_1.XRControlSurface ||
            container instanceof xrBand_1.BandSurface ||
            container instanceof xrVerticalBand_1.VerticalBandSurface);
    };
    FitToContainerAction.prototype.visible = function () {
        return !(this._control() instanceof xrCrossband_1.XRCrossBandSurface ||
            this._control() instanceof xrPagebreak_1.XRPageBreakSurface ||
            this._control() instanceof xrTableOfContents_1.XRTableOfContentsSurface);
    };
    return FitToContainerAction;
}());
exports.FitToContainerAction = FitToContainerAction;


/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _alignmentHandler_1 = __webpack_require__(237);
var _spaceCommandHandler_1 = __webpack_require__(394);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var xrCrossTabCell_1 = __webpack_require__(71);
var ElementsGroupActions = (function (_super) {
    __extends(ElementsGroupActions, _super);
    function ElementsGroupActions(surfaceContext, selectionProvider) {
        var _this = _super.call(this) || this;
        _this._selectionProvider = selectionProvider;
        var alignHandler = new _alignmentHandler_1.AlignmentHandler(selectionProvider, surfaceContext), spaceCommandHandler = new _spaceCommandHandler_1.SpaceCommandHandler(selectionProvider, surfaceContext);
        _super.prototype.initActions.call(_this, [
            {
                text: 'Align Lefts',
                group: function () { return analytics_utils_1.getLocalization('Alignment', 'ReportStringId.RibbonXRDesign_PageGroup_Alignment'); },
                displayText: function () { return analytics_utils_1.getLocalization('Align Lefts', 'ReportStringId.UD_TTip_AlignLeft'); },
                imageClassName: 'dxrd-image-actions-align_lefts',
                imageTemplateName: 'dxrd-svg-actions-align_lefts',
                clickAction: function () { alignHandler.alignLeft(); },
            }, {
                text: 'Align Centers',
                group: function () { return analytics_utils_1.getLocalization('Alignment', 'ReportStringId.RibbonXRDesign_PageGroup_Alignment'); },
                displayText: function () { return analytics_utils_1.getLocalization('Align Centers', 'ReportStringId.RibbonXRDesign_AlignVerticalCenters_STipTitle'); },
                imageClassName: 'dxrd-image-actions-align_centers',
                imageTemplateName: 'dxrd-svg-actions-align_centers',
                clickAction: function () { alignHandler.alignVerticalCenters(); },
            }, {
                text: 'Align Rights',
                group: function () { return analytics_utils_1.getLocalization('Alignment', 'ReportStringId.RibbonXRDesign_PageGroup_Alignment'); },
                displayText: function () { return analytics_utils_1.getLocalization('Align Rights', 'ReportStringId.RibbonXRDesign_AlignRight_Caption'); },
                imageClassName: 'dxrd-image-actions-align_rights',
                imageTemplateName: 'dxrd-svg-actions-align_rights',
                clickAction: function () { alignHandler.alignRight(); },
            }, {
                text: 'Align Tops',
                group: function () { return analytics_utils_1.getLocalization('Alignment', 'ReportStringId.RibbonXRDesign_PageGroup_Alignment'); },
                displayText: function () { return analytics_utils_1.getLocalization('Align Tops', 'ReportStringId.RibbonXRDesign_AlignTop_Caption'); },
                imageClassName: 'dxrd-image-actions-align_tops',
                imageTemplateName: 'dxrd-svg-actions-align_tops',
                clickAction: function () { alignHandler.alignTop(); },
            }, {
                text: 'Align Middles',
                group: function () { return analytics_utils_1.getLocalization('Alignment', 'ReportStringId.RibbonXRDesign_PageGroup_Alignment'); },
                displayText: function () { return analytics_utils_1.getLocalization('Align Middles', 'ReportStringId.RibbonXRDesign_AlignHorizontalCenters_Caption'); },
                imageClassName: 'dxrd-image-actions-align_middles',
                imageTemplateName: 'dxrd-svg-actions-align_middles',
                clickAction: function () { alignHandler.alignHorizontalCenters(); },
            }, {
                text: 'Align Bottoms',
                group: function () { return analytics_utils_1.getLocalization('Alignment', 'ReportStringId.RibbonXRDesign_PageGroup_Alignment'); },
                displayText: function () { return analytics_utils_1.getLocalization('Align Bottoms', 'ReportStringId.RibbonXRDesign_AlignBottom_Caption'); },
                imageClassName: 'dxrd-image-actions-align_bottoms',
                imageTemplateName: 'dxrd-svg-actions-align_bottoms',
                clickAction: function () { alignHandler.alignBottom(); },
            }, {
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                text: 'Size to Control Width',
                displayText: function () { return analytics_utils_1.getLocalization('Size to Control Width', 'ASPxReportsStringId.ReportDesigner_ElementsAction_SizeToControlWidth'); },
                imageClassName: 'dxrd-image-actions-make_same_width',
                imageTemplateName: 'dxrd-svg-actions-make_same_width',
                clickAction: function () { alignHandler.sizeToControlWidth(); },
            }, {
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                text: 'Size to Control Height',
                displayText: function () { return analytics_utils_1.getLocalization('Size to Control Height', 'ASPxReportsStringId.ReportDesigner_ElementsAction_SizeToControlHeight'); },
                imageClassName: 'dxrd-image-actions-make_same_height',
                imageTemplateName: 'dxrd-svg-actions-make_same_height',
                clickAction: function () { alignHandler.sizeToControlHeight(); },
            }, {
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                text: 'Size to Control',
                displayText: function () { return analytics_utils_1.getLocalization('Size to Control', 'ASPxReportsStringId.ReportDesigner_ElementsAction_SizeToControl'); },
                imageClassName: 'dxrd-image-actions-make_same_sizes',
                imageTemplateName: 'dxrd-svg-actions-make_same_sizes',
                clickAction: function () { alignHandler.sizeToControl(); },
            }, {
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                text: 'Make Horizontal Spacing Equal',
                displayText: function () { return analytics_utils_1.getLocalization('Make Horizontal Spacing Equal', 'ReportStringId.UD_TTip_HorizSpaceMakeEqual'); },
                imageClassName: 'dxrd-image-actions-make_horizontal_spacing_equal',
                imageTemplateName: 'dxrd-svg-actions-make_horizontal_spacing_equal',
                clickAction: function () { spaceCommandHandler.horizSpaceMakeEqual(); },
            }, {
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                text: 'Increase Horizontal Spacing',
                displayText: function () { return analytics_utils_1.getLocalization('Increase Horizontal Spacing', 'ReportStringId.UD_TTip_HorizSpaceIncrease'); },
                imageClassName: 'dxrd-image-actions-increase_horizontal_spacing',
                imageTemplateName: 'dxrd-svg-actions-increase_horizontal_spacing',
                clickAction: function () { spaceCommandHandler.horizSpaceIncrease(); },
            }, {
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                text: 'Decrease Horizontal Spacing',
                displayText: function () { return analytics_utils_1.getLocalization('Decrease Horizontal Spacing', 'ReportStringId.RibbonXRDesign_HorizSpaceDecrease_Caption'); },
                imageClassName: 'dxrd-image-actions-decrease_horizontal_spacing',
                imageTemplateName: 'dxrd-svg-actions-decrease_horizontal_spacing',
                clickAction: function () { spaceCommandHandler.horizSpaceDecrease(); },
            }, {
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                text: 'Remove Horizontal Spacing',
                displayText: function () { return analytics_utils_1.getLocalization('Remove Horizontal Spacing', 'ReportStringId.RibbonXRDesign_HorizSpaceConcatenate_Caption'); },
                imageClassName: 'dxrd-image-actions-remove_horizontal_spacing',
                imageTemplateName: 'dxrd-svg-actions-remove_horizontal_spacing',
                clickAction: function () { spaceCommandHandler.horizSpaceConcatenate(); },
            }, {
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                text: 'Make Vertical Spacing Equal',
                displayText: function () { return analytics_utils_1.getLocalization('Make Vertical Spacing Equal', 'ReportStringId.RibbonXRDesign_VertSpaceMakeEqual_Caption'); },
                imageClassName: 'dxrd-image-actions-make_vertical_spacing_equal',
                imageTemplateName: 'dxrd-svg-actions-make_vertical_spacing_equal',
                clickAction: function () { spaceCommandHandler.vertSpaceMakeEqual(); },
            }, {
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                text: 'Increase Vertical Spacing',
                displayText: function () { return analytics_utils_1.getLocalization('Increase Vertical Spacing', 'ReportStringId.RibbonXRDesign_VertSpaceIncrease_STipTitle'); },
                imageClassName: 'dxrd-image-actions-increase_vertical_spacing',
                imageTemplateName: 'dxrd-svg-actions-increase_vertical_spacing',
                clickAction: function () { spaceCommandHandler.vertSpaceIncrease(); },
            }, {
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                text: 'Decrease Vertical Spacing',
                displayText: function () { return analytics_utils_1.getLocalization('Decrease Vertical Spacing', 'ReportStringId.UD_TTip_VertSpaceDecrease'); },
                imageClassName: 'dxrd-image-actions-decrease_vertical_spacing',
                imageTemplateName: 'dxrd-svg-actions-decrease_vertical_spacing',
                clickAction: function () { spaceCommandHandler.vertSpaceDecrease(); },
            }, {
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                text: 'Remove Vertical Spacing',
                displayText: function () { return analytics_utils_1.getLocalization('Remove Vertical Spacing', 'ReportStringId.UD_TTip_VertSpaceConcatenate'); },
                imageClassName: 'dxrd-image-actions-remove_vertical_spacing',
                imageTemplateName: 'dxrd-svg-actions-remove_vertical_spacing',
                clickAction: function () { spaceCommandHandler.vertSpaceConcatenate(); },
            }
        ]);
        _this.setDisabled = function (context) {
            var isDisabled = _this._selectionProvider.selectedItems.some(function (item) { return item.locked; });
            _this.actions.forEach(function (action) {
                action.disabled(isDisabled);
            });
        };
        return _this;
    }
    ElementsGroupActions.prototype.condition = function (context) {
        return this._selectionProvider.selectedItems.length > 1 && !this._selectionProvider.selectedItems.some(function (item) { return item instanceof xrCrossTabCell_1.XRCellsurface; });
    };
    return ElementsGroupActions;
}(analytics_internal_1.BaseActionsProvider));
exports.ElementsGroupActions = ElementsGroupActions;


/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SpaceCommandHandler = (function () {
    function SpaceCommandHandler(selectionProvider, surfaceContext) {
        this._selectionProvider = selectionProvider;
        this._surfaceContext = surfaceContext;
    }
    SpaceCommandHandler.prototype._comparer = function (propertyName) {
        return function (a, b) {
            return a.rect()[propertyName] - b.rect()[propertyName];
        };
    };
    SpaceCommandHandler.prototype._spaceIncrease = function (sign, isHoriz) {
        var sortedSelectedItems = this._selectionProvider.selectedItems.filter(function (item) { return !item.locked; }), axisProperty = isHoriz ? 'left' : 'top', lengthProperty = isHoriz ? 'width' : 'height', margin = isHoriz ? this._surfaceContext().margins.left() : 0, snapGridSize = this._surfaceContext().snapGridSize(), focusedParent = this._selectionProvider.focused().getControlModel().parentModel(), focusedItem = this._selectionProvider.focused();
        sortedSelectedItems.sort(this._comparer(axisProperty));
        var focusedItemIndex = sortedSelectedItems.indexOf(this._selectionProvider.focused());
        this._selectionProvider.selectedItems.filter(function (item) { return !item.locked; }).filter(function (item) { return item !== focusedItem && item.getControlModel().parentModel() === focusedParent; }).forEach(function (item) {
            var itemIndex = sortedSelectedItems.indexOf(item), spaceOffset = Math.abs(itemIndex - focusedItemIndex) * snapGridSize * sign, itemAxisProperty = item.rect()[axisProperty], itemLengthProperty = item.rect()[lengthProperty], parentLengthProperty = item.parent.rect()[lengthProperty] - margin, newValue;
            if (itemIndex < focusedItemIndex) {
                newValue = itemAxisProperty - spaceOffset;
                if (newValue < 0) {
                    newValue = 0;
                }
            }
            else {
                newValue = itemAxisProperty + spaceOffset;
                if ((newValue + itemLengthProperty) > parentLengthProperty) {
                    newValue = parentLengthProperty - itemLengthProperty;
                }
            }
            var val = {};
            val[axisProperty] = newValue;
            item.rect(val);
        });
    };
    SpaceCommandHandler.prototype._spaceMakeEqual = function (isHoriz) {
        this._concatenateWithSpace(isHoriz, function (sortedSelectedItems, axisProperty, lengthProperty) {
            var averageSpace = 0;
            for (var i = 0; i < sortedSelectedItems.length - 1; i++) {
                var currentValue = sortedSelectedItems[i + 1].rect()[axisProperty] - (sortedSelectedItems[i].rect()[axisProperty] + sortedSelectedItems[i].rect()[lengthProperty]);
                averageSpace = (averageSpace * i + currentValue) / (i + 1);
            }
            return averageSpace;
        });
    };
    SpaceCommandHandler.prototype._concatenateWithSpace = function (isHoriz, getSpaceSize) {
        var sortedSelectedItems = this._selectionProvider.selectedItems.filter(function (item) { return !item.locked; }), axisProperty = isHoriz ? 'left' : 'top', lengthProperty = isHoriz ? 'width' : 'height', spaceSize = 0, focusedParent = this._selectionProvider.focused().getControlModel().parentModel();
        sortedSelectedItems.sort(this._comparer(axisProperty));
        spaceSize = getSpaceSize(sortedSelectedItems, axisProperty, lengthProperty);
        this._selectionProvider.selectedItems.filter(function (item) { return !item.locked; }).filter(function (item) { return focusedParent === item.getControlModel().parentModel(); }).forEach(function (item) {
            var itemIndex = sortedSelectedItems.indexOf(item);
            if (itemIndex > 0) {
                var prevControl = sortedSelectedItems[itemIndex - 1], val = {};
                val[axisProperty] = prevControl.rect()[axisProperty] + prevControl.rect()[lengthProperty] + spaceSize;
                item.rect(val);
            }
        });
    };
    SpaceCommandHandler.prototype.horizSpaceConcatenate = function () {
        this._concatenateWithSpace(true, function () { return 0; });
    };
    SpaceCommandHandler.prototype.vertSpaceConcatenate = function () {
        this._concatenateWithSpace(false, function () { return 0; });
    };
    SpaceCommandHandler.prototype.horizSpaceMakeEqual = function () {
        this._spaceMakeEqual(true);
    };
    SpaceCommandHandler.prototype.vertSpaceMakeEqual = function () {
        this._spaceMakeEqual(false);
    };
    SpaceCommandHandler.prototype.horizSpaceDecrease = function () {
        this._spaceIncrease(-1, true);
    };
    SpaceCommandHandler.prototype.horizSpaceIncrease = function () {
        this._spaceIncrease(1, true);
    };
    SpaceCommandHandler.prototype.vertSpaceDecrease = function () {
        this._spaceIncrease(-1, false);
    };
    SpaceCommandHandler.prototype.vertSpaceIncrease = function () {
        this._spaceIncrease(1, false);
    };
    return SpaceCommandHandler;
}());
exports.SpaceCommandHandler = SpaceCommandHandler;


/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var xrReport_1 = __webpack_require__(16);
var metadata_1 = __webpack_require__(28);
var xrBand_1 = __webpack_require__(15);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var ReportActions = (function () {
    function ReportActions(onComponentAdded) {
        var _this = this;
        this._contextModel = ko.observable();
        this._targetModel = ko.computed(function () {
            var model = _this._contextModel();
            if (model) {
                if (model.parentModel() && model.parentModel().parentModel() && model.controlType === 'SubBand') {
                    model = model.parentModel().parentModel();
                }
                else if (model.parentModel() && model.controlType !== 'DevExpress.XtraReports.UI.XtraReport' && model.controlType !== 'DetailReportBand') {
                    model = model.parentModel();
                }
            }
            return model;
        });
        this.actions = [
            {
                group: function () { return analytics_utils_1.getLocalization('Bands', 'ReportStringId.RibbonXRDesign_PageGroup_Bands'); },
                text: 'Insert Top Margin Band',
                displayText: function () { return analytics_utils_1.getLocalization('Insert Top Margin Band', 'ASPxReportsStringId.ReportDesigner_ReportActions_InsertTopMarginBand'); },
                imageClassName: 'dxrd-image-actions-top_margin',
                imageTemplateName: 'dxrd-svg-actions-top_margin',
                disabled: ko.pureComputed(function () {
                    return !_this._canAddBand('TopMarginBand');
                }),
                visible: true,
                clickAction: function () { _this._addBand('TopMarginBand'); },
            }, {
                text: 'Insert Report Header Band',
                group: function () { return analytics_utils_1.getLocalization('Bands', 'ReportStringId.RibbonXRDesign_PageGroup_Bands'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Report Header Band', 'ASPxReportsStringId.ReportDesigner_ReportActions_InsertReportHeaderBand'); },
                imageClassName: 'dxrd-image-actions-report_header',
                imageTemplateName: 'dxrd-svg-actions-report_header',
                disabled: ko.pureComputed(function () {
                    return !_this._canAddBand('ReportHeaderBand');
                }),
                visible: true,
                clickAction: function () { _this._addBand('ReportHeaderBand'); },
            }, {
                text: 'Insert Page Header Band',
                group: function () { return analytics_utils_1.getLocalization('Bands', 'ReportStringId.RibbonXRDesign_PageGroup_Bands'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Page Header Band', 'ASPxReportsStringId.ReportDesigner_ReportActions_InsertPageHeaderBand'); },
                imageClassName: 'dxrd-image-actions-page_header',
                imageTemplateName: 'dxrd-svg-actions-page_header',
                disabled: ko.pureComputed(function () {
                    return !_this._canAddBand('PageHeaderBand');
                }),
                visible: true,
                clickAction: function () { _this._addBand('PageHeaderBand'); },
            }, {
                text: 'Insert Group Header Band',
                group: function () { return analytics_utils_1.getLocalization('Bands', 'ReportStringId.RibbonXRDesign_PageGroup_Bands'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Group Header Band', 'ASPxReportsStringId.ReportDesigner_ReportActions_InsertGroupHeaderBand'); },
                imageClassName: 'dxrd-image-actions-group_header',
                imageTemplateName: 'dxrd-svg-actions-group_header',
                disabled: ko.pureComputed(function () {
                    return !_this._canAddBand('GroupHeaderBand');
                }),
                visible: true,
                clickAction: function () { _this._addBand('GroupHeaderBand'); },
            }, {
                text: 'Insert Detail Band',
                group: function () { return analytics_utils_1.getLocalization('Bands', 'ReportStringId.RibbonXRDesign_PageGroup_Bands'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Detail Band', 'ASPxReportsStringId.ReportDesigner_ReportActions_InsertDetailBand'); },
                imageClassName: 'dxrd-image-actions-detail',
                imageTemplateName: 'dxrd-svg-actions-detail',
                disabled: ko.pureComputed(function () {
                    return !_this._canAddBand('DetailBand');
                }),
                visible: true,
                clickAction: function () { _this._addBand('DetailBand'); },
            }, {
                text: 'Insert Vertical Header Band',
                group: function () { return analytics_utils_1.getLocalization('Bands', 'ReportStringId.RibbonXRDesign_PageGroup_Bands'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Vertical Header Band', 'ASPxReportsStringId.ReportDesigner_ReportActions_InsertVerticalHeaderBand'); },
                imageClassName: 'dxrd-image-actions-vertical_header',
                imageTemplateName: 'dxrd-svg-actions-vertical_header',
                disabled: ko.pureComputed(function () {
                    return !_this._canAddBand('VerticalHeaderBand');
                }),
                visible: true,
                clickAction: function () { _this._addBand('VerticalHeaderBand'); },
            }, {
                text: 'Insert Vertical Detail Band',
                group: function () { return analytics_utils_1.getLocalization('Bands', 'ReportStringId.RibbonXRDesign_PageGroup_Bands'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Vertical Detail Band', 'ASPxReportsStringId.ReportDesigner_ReportActions_InsertVerticalDetailBand'); },
                imageClassName: 'dxrd-image-actions-vertical_detail',
                imageTemplateName: 'dxrd-svg-actions-vertical_detail',
                disabled: ko.pureComputed(function () {
                    return !_this._canAddBand('VerticalDetailBand');
                }),
                visible: true,
                clickAction: function () { _this._addBand('VerticalDetailBand'); },
            }, {
                text: 'Insert Vertical Total Band',
                group: function () { return analytics_utils_1.getLocalization('Bands', 'ReportStringId.RibbonXRDesign_PageGroup_Bands'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Vertical Total Band', 'ASPxReportsStringId.ReportDesigner_ReportActions_InsertVerticalTotalBand'); },
                imageClassName: 'dxrd-image-actions-vertical_total',
                imageTemplateName: 'dxrd-svg-actions-vertical_total',
                disabled: ko.pureComputed(function () {
                    return !_this._canAddBand('VerticalTotalBand');
                }),
                visible: true,
                clickAction: function () { _this._addBand('VerticalTotalBand'); },
            }, {
                text: 'Insert Detail Report Band',
                group: function () { return analytics_utils_1.getLocalization('Bands', 'ReportStringId.RibbonXRDesign_PageGroup_Bands'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Detail Report Band', 'ASPxReportsStringId.ReportDesigner_ReportActions_InsertDetailReportBand'); },
                imageClassName: 'dxrd-image-actions-detail_report',
                imageTemplateName: 'dxrd-svg-actions-detail_report',
                disabled: ko.pureComputed(function () {
                    return !_this._canAddBand('DetailReportBand');
                }),
                visible: true,
                clickAction: function () { _this._addBand('DetailReportBand'); },
            }, {
                text: 'Insert Group Footer Band',
                group: function () { return analytics_utils_1.getLocalization('Bands', 'ReportStringId.RibbonXRDesign_PageGroup_Bands'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Group Footer Band', 'ASPxReportsStringId.ReportDesigner_ReportActions_InsertGroupFooterBand'); },
                imageClassName: 'dxrd-image-actions-group_footer',
                imageTemplateName: 'dxrd-svg-actions-group_footer',
                disabled: ko.pureComputed(function () {
                    return !_this._canAddBand('GroupFooterBand');
                }),
                visible: true,
                clickAction: function () { _this._addBand('GroupFooterBand'); },
            }, {
                text: 'Insert Report Footer Band',
                group: function () { return analytics_utils_1.getLocalization('Bands', 'ReportStringId.RibbonXRDesign_PageGroup_Bands'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Report Footer Band', 'ASPxReportsStringId.ReportDesigner_ReportActions_InsertReportFooterBand'); },
                imageClassName: 'dxrd-image-actions-report_footer',
                imageTemplateName: 'dxrd-svg-actions-report_footer',
                disabled: ko.pureComputed(function () {
                    return !_this._canAddBand('ReportFooterBand');
                }),
                visible: true,
                clickAction: function () { _this._addBand('ReportFooterBand'); },
            }, {
                text: 'Insert Page Footer Band',
                group: function () { return analytics_utils_1.getLocalization('Bands', 'ReportStringId.RibbonXRDesign_PageGroup_Bands'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Page Footer Band', 'ASPxReportsStringId.ReportDesigner_ReportActions_InsertPageFooterBand'); },
                imageClassName: 'dxrd-image-actions-page_footer',
                imageTemplateName: 'dxrd-svg-actions-page_footer',
                disabled: ko.pureComputed(function () {
                    return !_this._canAddBand('PageFooterBand');
                }),
                visible: true,
                clickAction: function () { _this._addBand('PageFooterBand'); },
            }, {
                text: 'Insert Bottom Margin Band',
                group: function () { return analytics_utils_1.getLocalization('Bands', 'ReportStringId.RibbonXRDesign_PageGroup_Bands'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Bottom Margin Band', 'ASPxReportsStringId.ReportDesigner_ReportActions_InsertBottomMarginBand'); },
                imageClassName: 'dxrd-image-actions-bottom_margin',
                imageTemplateName: 'dxrd-svg-actions-bottom_margin',
                disabled: ko.pureComputed(function () {
                    return !_this._canAddBand('BottomMarginBand');
                }),
                visible: true,
                clickAction: function () { _this._addBand('BottomMarginBand'); },
            }, {
                text: 'Insert Sub-Band',
                group: function () { return analytics_utils_1.getLocalization('Bands', 'ReportStringId.RibbonXRDesign_PageGroup_Bands'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Sub-Band', 'ASPxReportsStringId.ReportDesigner_ReportActions_InsertSubBand'); },
                imageClassName: 'dxrd-image-actions-subband',
                imageTemplateName: 'dxrd-svg-actions-subband',
                disabled: ko.pureComputed(function () {
                    return !_this._canAddBand('SubBand');
                }),
                visible: true,
                clickAction: function () { _this._addBand('SubBand'); },
            }
        ];
        this.onComponentAdded = function (e) { onComponentAdded && onComponentAdded(e); };
    }
    ReportActions.prototype._canAddBand = function (bandType) {
        if (!this._targetModel()) {
            return false;
        }
        var report = this._targetModel().root;
        if (report && report.language && report.language() !== metadata_1.defaultCulture)
            return false;
        if (bandType === 'GroupHeaderBand' || bandType === 'GroupFooterBand' || bandType === 'DetailReportBand') {
            return true;
        }
        if (bandType === 'SubBand') {
            var model = (this._contextModel());
            return model !== null && !model.lockedInUserDesigner() && (model.controlType.indexOf('XtraReport') === -1 && ['DetailReportBand', 'TopMarginBand', 'BottomMarginBand', 'SubBand'].indexOf(model.controlType) === -1);
        }
        if (this._targetModel().controlType === 'DetailReportBand' && (bandType === 'TopMarginBand' || bandType === 'BottomMarginBand' || bandType === 'PageHeaderBand' || bandType === 'PageFooterBand')) {
            return false;
        }
        return this._targetModel()['bands']().filter(function (band) { return band.controlType === bandType; }).length === 0;
    };
    ReportActions.prototype._addBand = function (bandType) {
        if (this._canAddBand(bandType)) {
            var model = this._targetModel();
            if (bandType === 'SubBand') {
                model = this._contextModel();
            }
            var height = model.root['dpi']();
            var control = model.createChild({ '@ControlType': bandType, '@HeightF': height });
            this.onComponentAdded({ parent: model, model: control });
        }
    };
    ReportActions.prototype.getActions = function (context) {
        if (context instanceof xrReport_1.ReportViewModel || context instanceof xrBand_1.BandViewModel) {
            this._contextModel(context);
            return this.actions;
        }
        else {
            this._contextModel(null);
        }
        return [];
    };
    return ReportActions;
}());
exports.ReportActions = ReportActions;


/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var tableRowActions_1 = __webpack_require__(238);
var xrTableCell_1 = __webpack_require__(43);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var TableCellActions = (function (_super) {
    __extends(TableCellActions, _super);
    function TableCellActions(selection, onComponentAdded, isDisabled) {
        if (isDisabled === void 0) { isDisabled = function () { return false; }; }
        var _this = _super.call(this, selection) || this;
        _super.prototype.initActions.call(_this, [
            {
                text: 'Insert Row Above',
                group: function () { return analytics_internal_1.getLocalization('Table Rows', 'TODO'); },
                displayText: function () { return analytics_internal_1.getLocalization('Insert Row Above', 'ASPxReportsStringId.ReportDesigner_TableActions_InsertRowAbove'); },
                imageClassName: 'dxrd-image-actions-insert_row_above',
                imageTemplateName: 'dxrd-svg-actions-insert_row_above',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function () { _this.insertRowAbove(); },
            }, {
                text: 'Insert Row Below',
                group: function () { return analytics_internal_1.getLocalization('Table Rows', 'TODO'); },
                displayText: function () { return analytics_internal_1.getLocalization('Insert Row Below', 'ASPxReportsStringId.ReportDesigner_TableActions_InsertRowBelow'); },
                imageClassName: 'dxrd-image-actions-insert_row_below',
                imageTemplateName: 'dxrd-svg-actions-insert_row_below',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function () { _this.insertRowBelow(); },
            }, {
                text: 'Delete Row',
                group: function () { return analytics_internal_1.getLocalization('Table Rows', 'TODO'); },
                displayText: function () { return analytics_internal_1.getLocalization('Delete Row', 'ASPxReportsStringId.ReportDesigner_TableActions_DeleteRow'); },
                imageClassName: 'dxrd-image-actions-delete_row',
                imageTemplateName: 'dxrd-svg-actions-delete_row',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function () { _this.deleteRow(); },
            }, {
                text: 'Insert Cell',
                group: function () { return analytics_internal_1.getLocalization('Table Cells', 'TODO'); },
                displayText: function () { return analytics_internal_1.getLocalization('Insert Cell', 'ASPxReportsStringId.ReportDesigner_TableActions_InsertCell'); },
                imageClassName: 'dxrd-image-actions-insert_cell',
                imageTemplateName: 'dxrd-svg-actions-insert_cell',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function () { _this.insertCell(); },
            }, {
                text: 'Delete Cell',
                group: function () { return analytics_internal_1.getLocalization('Table Cells', 'TODO'); },
                displayText: function () { return analytics_internal_1.getLocalization('Delete Cell', 'ASPxReportsStringId.ReportDesigner_TableActions_DeleteCell'); },
                imageClassName: 'dxrd-image-actions-delete_cell',
                imageTemplateName: 'dxrd-svg-actions-delete_cell',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function () { _this.deleteCell(); },
            }, {
                text: 'Insert Column To Left',
                group: function () { return analytics_internal_1.getLocalization('Table Cells', 'TODO'); },
                displayText: function () { return analytics_internal_1.getLocalization('Insert Column To Left', 'ASPxReportsStringId.ReportDesigner_TableActions_InsertColumnToLeft'); },
                imageClassName: 'dxrd-image-actions-insert_column_to_left',
                imageTemplateName: 'dxrd-svg-actions-insert_column_to_left',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function () { _this.insertColumn(false); },
            }, {
                text: 'Insert Column To Right',
                group: function () { return analytics_internal_1.getLocalization('Table Cells', 'TODO'); },
                displayText: function () { return analytics_internal_1.getLocalization('Insert Column To Right', 'ASPxReportsStringId.ReportDesigner_TableActions_InsertColumnToRight'); },
                imageClassName: 'dxrd-image-actions-insert_column_to_right',
                imageTemplateName: 'dxrd-svg-actions-insert_column_to_right',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function () { _this.insertColumn(true); },
            }, {
                text: 'Delete Column',
                group: function () { return analytics_internal_1.getLocalization('Table Cells', 'TODO'); },
                displayText: function () { return analytics_internal_1.getLocalization('Delete Column', 'ASPxReportsStringId.ReportDesigner_TableActions_DeleteColumn'); },
                imageClassName: 'dxrd-image-actions-delete_column',
                imageTemplateName: 'dxrd-svg-actions-delete_column',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function () { _this.deleteColumn(); },
            }
        ]);
        _this.onComponentAdded = function (e) { onComponentAdded && onComponentAdded(e); };
        return _this;
    }
    Object.defineProperty(TableCellActions.prototype, "_cell", {
        get: function () {
            return this.selection.focused().getControlModel();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TableCellActions.prototype, "_row", {
        get: function () {
            return this._cell.parentModel();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TableCellActions.prototype, "_table", {
        get: function () {
            return this._row.parentModel();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TableCellActions.prototype, "_cellSurface", {
        get: function () {
            var cell = this.selection.focused();
            return cell instanceof xrTableCell_1.XRTableCellSurface && cell || null;
        },
        enumerable: true,
        configurable: true
    });
    TableCellActions.prototype.insertCell = function () {
        this._row.insertCellCopy(this._cell, false, this.onComponentAdded);
    };
    TableCellActions.prototype.deleteCell = function () {
        analytics_internal_1.deleteSelection(this.selection);
    };
    TableCellActions.prototype.deleteRow = function () {
        this.selection.initialize(this._cellSurface.parent);
        analytics_internal_1.deleteSelection(this.selection);
    };
    TableCellActions.prototype.insertColumn = function (isRight) {
        this._table.insertColumn(this._cell, isRight, this.onComponentAdded);
    };
    TableCellActions.prototype.deleteColumn = function () {
        this._cellSurface.selectColumn(this.selection);
        analytics_internal_1.deleteSelection(this.selection);
    };
    TableCellActions.prototype.condition = function (context) {
        return context instanceof xrTableCell_1.XRTableCellViewModel && !!this._cellSurface;
    };
    return TableCellActions;
}(tableRowActions_1.TableRowActions));
exports.TableCellActions = TableCellActions;


/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var TextElementAction = (function (_super) {
    __extends(TextElementAction, _super);
    function TextElementAction(_selectionProvider) {
        var _this = _super.call(this) || this;
        _this._selectionProvider = _selectionProvider;
        _super.prototype.initActions.call(_this, [
            {
                text: 'Fit Bounds To Text',
                displayText: function () { return analytics_utils_1.getLocalization('Fit Bounds To Text', 'ReportStringId.Cmd_FitBoundsToText'); },
                imageClassName: 'dxrd-image-actions-fit_bounds_to_text',
                imageTemplateName: 'dxrd-svg-actions-fit_bounds_to_text',
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                disabled: ko.computed(function () { return _this._inaccessibleAction(); }),
                visible: ko.pureComputed(function () {
                    return _this._selectionProvider.selectedItems.every(function (item) { return item.getControlModel().controlType === 'XRLabel' || item.getControlModel().controlType === 'XRCharacterComb'; });
                }),
                clickAction: function () { _this._textControls.forEach(function (item) { return item.fitBoundsToText(); }); }
            }, {
                text: 'Fit Text To Bounds',
                group: function () { return analytics_utils_1.getLocalization('Layout', 'ReportStringId.RibbonXRDesign_PageGroup_Layout'); },
                displayText: function () { return analytics_utils_1.getLocalization('Fit Text To Bounds', 'ReportStringId.Cmd_FitTextToBounds'); },
                imageClassName: 'dxrd-image-actions-fit_text_to_bounds',
                imageTemplateName: 'dxrd-svg-actions-fit_text_to_bounds',
                disabled: ko.computed(function () { return _this._inaccessibleAction(); }),
                visible: ko.pureComputed(function () {
                    return _this._selectionProvider.selectedItems.every(function (item) { return item.getControlModel().controlType === 'XRLabel' || item.getControlModel().controlType === 'XRTableCell'; });
                }),
                clickAction: function () { _this._textControls.forEach(function (item) { return item.fitTextToBounds(); }); }
            },
        ]);
        return _this;
    }
    Object.defineProperty(TextElementAction.prototype, "_textControls", {
        get: function () {
            return this._selectionProvider.selectedItems;
        },
        enumerable: true,
        configurable: true
    });
    TextElementAction.prototype._inaccessibleAction = function () {
        if (this._textControls && this._textControls.some(function (item) { return item.getText && item.getText() === ''; }))
            return true;
        return !!(this._textControls && this._textControls.every(function (item) { return item.hasDataBindingByName && item.hasDataBindingByName('Text'); }));
    };
    TextElementAction.prototype.condition = function (context) {
        return context && (context.controlType === 'XRLabel' || context.controlType === 'XRTableCell' || context.controlType === 'XRCharacterComb' || context.controlType === 'multiselect');
    };
    return TextElementAction;
}(analytics_internal_1.BaseActionsProvider));
exports.TextElementAction = TextElementAction;


/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var TableCellGroupActions = (function (_super) {
    __extends(TableCellGroupActions, _super);
    function TableCellGroupActions(selectionProvider) {
        var _this = _super.call(this) || this;
        _this._selectionProvider = selectionProvider;
        _this._distributeColumnsAction = {
            group: function () { return analytics_utils_1.getLocalization('Table Cells', 'TODO'); },
            text: 'Distribute Columns Evenly',
            displayText: function () { return analytics_utils_1.getLocalization('Distribute Columns Evenly', 'ReportStringId.Cmd_TableDistributeColumnsEvenly'); },
            imageClassName: 'dxrd-image-actions-distribute_columns_evenly',
            imageTemplateName: 'dxrd-svg-actions-distribute_columns_evenly',
            clickAction: function () { _this._distributeColumns(); }
        };
        _this._distributeRowsAction = {
            group: function () { return analytics_utils_1.getLocalization('Table Cells', 'TODO'); },
            text: 'Distribute Rows Evenly',
            displayText: function () { return analytics_utils_1.getLocalization('Distribute Rows Evenly', 'ReportStringId.Cmd_TableDistributeRowsEvenly'); },
            imageClassName: 'dxrd-image-actions-distribute_rows_evenly',
            imageTemplateName: 'dxrd-svg-actions-distribute_rows_evenly',
            clickAction: function () { _this._distributeRows(); }
        };
        _super.prototype.initActions.call(_this, [
            _this._distributeColumnsAction,
            _this._distributeRowsAction
        ]);
        _this.setDisabled = function (context) {
            var status = { rows: false, cols: false }, cells = _this._selectedCells();
            if (cells.length) {
                var row0 = cells[0].parentModel(), colIndex0 = row0.cells().indexOf(cells[0]);
                for (var i = 1; i < cells.length; i++) {
                    var rowi = cells[i].parentModel();
                    if (!status.rows && rowi.name() !== row0.name())
                        status.rows = true;
                    if (!status.cols && rowi.cells().indexOf(cells[i]) != colIndex0)
                        status.cols = true;
                    if (status.rows && status.cols)
                        break;
                }
            }
            _this._distributeColumnsAction.disabled(!status.cols);
            _this._distributeRowsAction.disabled(!status.rows);
        };
        return _this;
    }
    TableCellGroupActions.prototype._distributeColumns = function () {
        var cellsByRows = this._selectedCells()
            .reduce(function (acc, x) {
            var row = x.parentModel().name();
            if (acc[row])
                acc[row].push(x);
            else
                acc[row] = [x];
            return acc;
        }, {});
        Object.keys(cellsByRows).forEach(function (row) {
            var cells = cellsByRows[row];
            if (cells.length >= 2) {
                var weight = cells.reduce(function (acc, x) { return acc + x.weight(); }, 0) / cells.length;
                cells
                    .sort(function (x, y) { return x.left() - y.left(); })
                    .forEach(function (x) { x.weight(weight); });
            }
        });
    };
    TableCellGroupActions.prototype._distributeRows = function () {
        var _this = this;
        var rowModels = this._selectedCells()
            .map(function (x) { return x.parentModel(); })
            .reduce(function (acc, x) { return acc.indexOf(x) >= 0 ? acc : acc.concat(x); }, []), weight = rowModels.reduce(function (acc, x) { return acc + x.weight(); }, 0) / rowModels.length;
        rowModels.forEach(function (x) { x.weight(weight); });
        var minHeight = Math.max.apply(Math, [].concat.apply([], rowModels.map(function (x) { return x.cells(); })).map(function (x) {
            var height = _this._calculateMinimalHeight(x), rowSpan = x['rowSpan']();
            if (rowSpan > 1) {
                var row = x.parentModel(), table = row.parentModel(), rowIdx = table.rows.indexOf(row), divisor = 1;
                for (var i = 1; i < rowSpan; i++) {
                    var nextRow = table.rows()[rowIdx + i];
                    if (!nextRow)
                        break;
                    if (rowModels.indexOf(nextRow) >= 0)
                        divisor++;
                    else
                        height -= nextRow.size.height();
                }
                height /= divisor;
            }
            return height;
        })), height = rowModels[0].height();
        if (height < minHeight) {
            var table = rowModels[0].parentModel();
            table.size.height(table.size.height() + (minHeight - height) * rowModels.length);
            weight *= minHeight / height;
            rowModels.forEach(function (x) { x.weight(weight); });
        }
    };
    TableCellGroupActions.prototype._calculateMinimalHeight = function (cell) {
        return Math.max.apply(Math, [this._calculateTextHeight(cell) + this._calculateBordersHeight(cell) + this._calculatePaddingsHeight(cell)].concat(cell.controls().map(function (control) { return control.location.y() + control.size.height(); })));
    };
    TableCellGroupActions.prototype._calculateTextHeight = function (cell) {
        if (!(cell.text && cell.text()))
            return 0;
        var wordWrap = ko.unwrap(cell['wordWrap']), width = wordWrap ? Math.max(1, cell.width() - this._calculatePaddingsWidth(cell)) + 'px' : 'auto', $div = $('<div>')
            .css($.extend({
            'height': 'auto',
            'width': width,
            'overflow': 'hidden'
        }, cell.surface.cssCalculator.createFont(ko.unwrap(cell['font'])), cell.surface.cssCalculator.createWordWrap(wordWrap, cell.multiline())))
            .html(cell.text())
            .appendTo($('body'));
        try {
            return analytics_internal_1.pixelToUnits(Math.ceil($div[0].getBoundingClientRect().height) + 2, cell.root.measureUnit(), 1);
        }
        finally {
            $div.remove();
        }
    };
    TableCellGroupActions.prototype._calculateBordersHeight = function (cell) {
        var borders = cell.borders();
        var toCount;
        if (borders == 'All')
            toCount = [true, true];
        else {
            toCount = [false, false];
            if (borders.indexOf('Top') >= 0)
                toCount[0] = true;
            if (borders.indexOf('Bottom') >= 0)
                toCount[1] = true;
        }
        var row = cell.parentModel();
        var rowIndex = row.parentModel().rows().indexOf(row);
        if (rowIndex != 0)
            toCount[0] = false;
        return toCount.filter(function (x) { return x; }).length * ko.unwrap(cell['borderWidth']);
    };
    TableCellGroupActions.prototype._isCellTextControl = function (cell) { return cell.surface.getChildrenCollection()().length === 0; };
    TableCellGroupActions.prototype._calculatePaddingsHeight = function (cell) { return this._isCellTextControl(cell) ? cell.paddingObj.top() + cell.paddingObj.bottom() : 0; };
    TableCellGroupActions.prototype._calculatePaddingsWidth = function (cell) { return this._isCellTextControl(cell) ? cell.paddingObj.left() + cell.paddingObj.right() : 0; };
    TableCellGroupActions.prototype._selectedCells = function () {
        var result = [];
        this._selectionProvider.selectedItems
            .map(function (x) { return x.getControlModel(); })
            .forEach(function (x) {
            switch (x.controlType) {
                case 'XRTableCell':
                    result.push(x);
                    break;
                case 'XRTableRow':
                    result.push.apply(result, x.cells());
                    break;
                case 'XRTable':
                    x.rows().forEach(function (row) { return result.push.apply(result, row.cells()); });
                    break;
            }
        });
        return result;
    };
    TableCellGroupActions.prototype.condition = function (context) {
        return this._selectionProvider.selectedItems.length > 1
            && this._selectionProvider.selectedItems.every(function (x) { return ['XRTableCell', 'XRTableRow'].indexOf(x.getControlModel().controlType) >= 0; })
            || this._selectionProvider.selectedItems.length == 1
                && ['XRTable', 'XRTableRow'].indexOf(this._selectionProvider.selectedItems[0].getControlModel().controlType) >= 0;
    };
    return TableCellGroupActions;
}(analytics_internal_1.BaseActionsProvider));
exports.TableCellGroupActions = TableCellGroupActions;


/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrPivotgrid_1 = __webpack_require__(68);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var settings_1 = __webpack_require__(12);
var _defaultCrossTabControl_1 = __webpack_require__(157);
var _crossTabConverter_1 = __webpack_require__(158);
var PivotGridActions = (function (_super) {
    __extends(PivotGridActions, _super);
    function PivotGridActions(_converters, isDisabled) {
        if (isDisabled === void 0) { isDisabled = function () { return false; }; }
        var _this = _super.call(this) || this;
        _this._converters = _converters;
        _super.prototype.initActions.call(_this, [
            {
                text: 'Insert Field in Filter Area',
                group: function () { return analytics_utils_1.getLocalization('Pivot Grid', 'ReportStringId.RibbonXRDesign_PageGroup_PivotGrid'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Field in Filter Area', 'ASPxReportsStringId.ReportDesigner_PivotActions_InsertFieldInTheFilterArea'); },
                imageClassName: 'dxrd-image-actions-add_field_to_filter_area',
                imageTemplateName: 'dxrd-svg-actions-add_field_to_filter_area',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function (model) { model['addFieldToArea']('FilterArea'); }
            },
            {
                text: 'Insert Field in Data Area',
                group: function () { return analytics_utils_1.getLocalization('Pivot Grid', 'ReportStringId.RibbonXRDesign_PageGroup_PivotGrid'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Field in Data Area', 'ASPxReportsStringId.ReportDesigner_PivotActions_InsertFieldInTheDataArea'); },
                imageClassName: 'dxrd-image-actions-add_field_to_data_area',
                imageTemplateName: 'dxrd-svg-actions-add_field_to_data_area',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function (model) { model['addFieldToArea']('DataArea'); }
            },
            {
                text: 'Insert Field in Column Area',
                group: function () { return analytics_utils_1.getLocalization('Pivot Grid', 'ReportStringId.RibbonXRDesign_PageGroup_PivotGrid'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Field in Column Area', 'ASPxReportsStringId.ReportDesigner_PivotActions_InsertFieldInTheColumnArea'); },
                imageClassName: 'dxrd-image-actions-add_field_to_column_area',
                imageTemplateName: 'dxrd-svg-actions-add_field_to_column_area',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function (model) { model['addFieldToArea']('ColumnArea'); }
            },
            {
                text: 'Insert Field in Row Area',
                group: function () { return analytics_utils_1.getLocalization('Pivot Grid', 'ReportStringId.RibbonXRDesign_PageGroup_PivotGrid'); },
                displayText: function () { return analytics_utils_1.getLocalization('Insert Field in Row Area', 'ASPxReportsStringId.ReportDesigner_PivotActions_InsertFieldInTheRowArea'); },
                imageClassName: 'dxrd-image-actions-add_field_to_row_area',
                imageTemplateName: 'dxrd-svg-actions-add_field_to_row_area',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function (model) { model['addFieldToArea']('RowArea'); }
            },
            {
                text: 'Convert to Cross Tab',
                group: function () { return analytics_utils_1.getLocalization('Pivot Grid', 'ReportStringId.RibbonXRDesign_PageGroup_PivotGrid'); },
                displayText: function () { return analytics_utils_1.getLocalization('Convert to Cross Tab', 'ReportStringId.Verb_ConvertPivotGridToCrossTab'); },
                imageClassName: 'dxrd-image-actions-convertation',
                imageTemplateName: 'dxrd-svg-actions-convertation',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                visible: settings_1.DefaultCrossTabControl() == _defaultCrossTabControl_1.DefaultCrossTabControlEnum.XRCrossTab,
                clickAction: function (model) {
                    var converter = _this._converter;
                    converter && converter.convert(model);
                }
            }
        ]);
        return _this;
    }
    Object.defineProperty(PivotGridActions.prototype, "_converter", {
        get: function () {
            return this._converters.filter(function (x) { return x instanceof _crossTabConverter_1.CrossTabConverter; })[0];
        },
        enumerable: true,
        configurable: true
    });
    PivotGridActions.prototype.condition = function (context) {
        return context instanceof xrPivotgrid_1.XRPivotGridViewModel;
    };
    return PivotGridActions;
}(analytics_internal_1.BaseActionsProvider));
exports.PivotGridActions = PivotGridActions;


/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var settings_1 = __webpack_require__(12);
var analytics_internal_1 = __webpack_require__(2);
var ControlConverterService = (function () {
    function ControlConverterService() {
    }
    ControlConverterService.getXmlStringFromJson = function (controlJsonLayout, doneCallback, errorCallback) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'jsonToXmlString', JSON.stringify({ 'XRControlSerializer': { 'Controls': { 'Item1': controlJsonLayout } } }))
            .done(function (result) { return doneCallback(result); })
            .fail(function (error) {
            var message = analytics_internal_1.getErrorMessage(error);
            message && analytics_internal_1.ShowMessage(message);
            errorCallback(error);
        });
    };
    ControlConverterService.getControlModelFromXmlString = function (controlXmlLayout, doneCallback, errorCallback) {
        return analytics_internal_1.ajax(settings_1.HandlerUri(), 'xmlStringToJson', controlXmlLayout)
            .done(function (result) { return doneCallback(JSON.parse(result).XRControlSerializer.Controls.Item1); })
            .fail(function (error) {
            var message = analytics_internal_1.getErrorMessage(error);
            message && analytics_internal_1.ShowMessage(message);
            errorCallback(error);
        });
    };
    return ControlConverterService;
}());
exports.ControlConverterService = ControlConverterService;


/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var xrControl_1 = __webpack_require__(10);
var analytics_internal_1 = __webpack_require__(2);
var style_1 = __webpack_require__(37);
var xrCrossTab_1 = __webpack_require__(98);
exports.reportCopyPasteStrategy = function (componentAdded) { return ({
    createChild: function (pasteTarget, info) {
        var control = null;
        var parent = pasteTarget;
        if (info['restore']) {
            info['restore']();
            return;
        }
        if (info['@ControlType'] === 'XRCrossBandBox' || info['@ControlType'] === 'XRCrossBandLine') {
            parent = pasteTarget.root;
            control = parent.createChild(info);
        }
        else {
            control = analytics_internal_1.copyPasteStrategy.createChild(parent, info);
            if (control instanceof xrControl_1.XRControlViewModel && !info['@Text'] && control.text) {
                control.text('');
            }
        }
        componentAdded && componentAdded({ parent: parent, model: control });
        return control;
    },
    calculateDelta: function (selection, pasteTargetSurface, minPoint) {
        var result = analytics_internal_1.copyPasteStrategy.calculateDelta(selection, pasteTargetSurface, minPoint);
        if (selection.getControlModel().controlType === 'XRCrossBandBox' || selection.getControlModel().controlType === 'XRCrossBandLine') {
            result.y += pasteTargetSurface['absolutePosition'].y();
        }
        return result;
    },
    createSelfRestoringItems: function (model, serializer) {
        if (model instanceof xrCrossTab_1.XRCrossTabViewModel) {
            return model.dependentStyles.map(function (style) {
                var serializedModel = serializer.serialize(style);
                return {
                    restore: function () { return (model.root)['styles'] && model.root['styles'].push(new style_1.StyleModel(serializedModel)); }
                };
            });
        }
        else
            return [];
    },
    canPaste: function (pasteTarget, info) {
        var pasteTargetSurface = pasteTarget.surface;
        var itemInfos = info['objects'].map(function (x) { return pasteTarget.getControlFactory().getControlInfo(pasteTarget.getControlFactory().getControlType(x)); });
        return itemInfos.every(function (x) {
            return (!x.canPaste || x.canPaste(pasteTargetSurface)) &&
                (!x.canDrop || x.canDrop(pasteTargetSurface));
        });
    }
}); };


/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var analytics_tools_1 = __webpack_require__(458);
exports.createChartDesignerOptions = function (designerModel, dataSourceHelper, model, parameters, chartValueBindingProvider) {
    var chartDesignerOptionsVisible = ko.observable(false);
    var chartIsDirty;
    var currentChart = ko.observable(null);
    var disposables = [];
    var chartDisposables = [];
    disposables.push(chartDesignerOptionsVisible.subscribe(function (newVal) {
        if (newVal) {
            currentChart().designTime(true);
            designerModel.undoEngine().start();
        }
        else {
            chartDisposables.forEach(function (x) { return x.dispose(); });
            chartDisposables = [];
            designerModel.undoEngine().end();
            var isDirty = chartIsDirty();
            chartDesignerOptions.options.data.chart(null);
            if (isDirty) {
                var undoEngine = designerModel.undoEngine();
                undoEngine.undo();
                undoEngine.redoEnabled(false);
                undoEngine._observers.pop();
            }
            currentChart().designTime(false);
            currentChart(null);
        }
    }));
    var chartDesignerOptions = {
        dispose: function () {
            chartDisposables.forEach(function (x) { return x.dispose(); });
            disposables.forEach(function (x) { return x.dispose(); });
            chartDisposables = [];
            disposables = [];
        },
        options: null,
        visible: chartDesignerOptionsVisible,
        buttons: [{
                toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                    text: analytics_utils_1.getLocalization('OK', 'PivotGridStringId.FilterOk'), onClick: function () {
                        chartIsDirty(false);
                        chartDesignerOptionsVisible(false);
                    }
                }
            },
            {
                toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                    text: analytics_utils_1.getLocalization('Cancel', 'AnalyticsCoreStringId.SearchDialog_Cancel'), onClick: function () {
                        chartDesignerOptionsVisible(false);
                    }
                }
            }],
        run: function (chartSurface) {
            var xrChart = chartSurface._control;
            currentChart(chartSurface);
            if (!chartDesignerOptions.options) {
                chartDesignerOptions.options = {
                    callbacks: {
                        customizeActions: function (actions) {
                            for (var i = 0; i < actions.length; i++) {
                                if (actions[i].id === analytics_tools_1.ActionId.Undo || actions[i].id === analytics_tools_1.ActionId.Redo) {
                                    actions[i].hasSeparator = false;
                                }
                                else {
                                    actions[i].visible = false;
                                    actions[i].hasSeparator = false;
                                }
                            }
                        },
                        init: function (chartModel) {
                            chartDisposables.push(chartIsDirty = ko.computed({
                                read: function () {
                                    return chartModel.undoEngine().isDirty();
                                },
                                write: function (newVal) {
                                    chartModel.undoEngine().isDirty(newVal);
                                }
                            }));
                            chartModel.displayNameProvider = designerModel.displayNameProvider;
                            chartModel.dataSourceHelper = dataSourceHelper;
                            chartDisposables.push(chartModel.reportParameters = ko.computed(function () { return parameters().parameters(); }));
                            chartDisposables.push(chartModel.reportDataSource = ko.computed(function () { return dataSourceHelper().findDataSourceInfo(model() && model().dataSource()); }));
                            chartModel.reportDataBindingsProvider = chartValueBindingProvider;
                            chartDisposables.push(chartDesignerOptionsVisible.subscribe(function (newVal) {
                                if (newVal) {
                                    chartModel.updateSurfaceSize();
                                }
                            }));
                        }
                    },
                    data: {
                        chart: ko.observable(xrChart.chartModel),
                        availableChartDataSources: designerModel.chartDataSources,
                        width: 500,
                        height: 500
                    },
                    visible: chartDesignerOptionsVisible,
                    rtl: designerModel.rtl,
                    fieldListProvider: designerModel.dataBindingsProvider
                };
            }
            else {
                chartDesignerOptions.options.data.chart(xrChart.chartModel);
            }
            chartDesignerOptions.visible(true);
        },
        container: function (element) { return analytics_internal_1.getParentContainer(element, '.dx-designer'); }
    };
    return chartDesignerOptions;
};


/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var $ = __webpack_require__(3);
exports.ReportDesignerElements = $.extend({}, analytics_internal_1.DesignerBaseElements, {
    MenuButton: 'dxrd-menubutton-template',
    NavigationPanel: 'dxrd-navigation-panel-template',
    ReportDialog: 'dxrd-report-dialog-template',
    ChartDialog: 'dxrd-chart-designer-popup',
    ReportConverterDialog: 'dxrd-report-dialog-converter-template',
    Parameters: 'dxrd-report-parameters-dialogs'
});
exports.ReportDesignerAddOns = {
    Preview: 'dxrd-report-preview',
    ReportWizard: 'dx-wizard-newlayout#report',
    ReportWizardFullscreen: 'dx-wizard-fullscreen#report',
    LocalizationEditor: 'dxrd-localization-editor',
    ErrorPanel: 'dxrd-error-panel',
    DataSourceWizard: 'dx-wizard-newlayout#data-source',
    MultiQueryDataSourceWizard: 'dx-wizard-newlayout#multiquery-data-source',
    MultiQueryDataSourceWizardFullscreen: 'dx-wizard-fullscreen#multiquery-data-source',
    MasterDetailEditor: 'dxrd-masterDetail-editor',
    ScriptEditor: 'dxrd-scripts'
};


/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _dataBindingMode_1 = __webpack_require__(33);
var _utils_1 = __webpack_require__(42);
var _expressionWrapper_1 = __webpack_require__(191);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_elements_1 = __webpack_require__(5);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_internal_1 = __webpack_require__(8);
var analytics_criteria_1 = __webpack_require__(270);
var analytics_criteria_utils_1 = __webpack_require__(494);
var _baseConverter_1 = __webpack_require__(239);
var ReportConverter = (function (_super) {
    __extends(ReportConverter, _super);
    function ReportConverter(_controlsHelper, _undoEngine, _dataBindingMode) {
        if (_dataBindingMode === void 0) { _dataBindingMode = _dataBindingMode_1.DataBindingMode.Expressions; }
        var _this = _super.call(this) || this;
        _this._controlsHelper = _controlsHelper;
        _this._undoEngine = _undoEngine;
        _this._dataBindingMode = _dataBindingMode;
        _this.convertChoiceEnum = {
            'Convert': 'Convert',
            'Cancel': 'Cancel'
        };
        _this._formattingMapper = {
            '@BackColor': '@BackColor',
            '@Sides': '@Borders',
            '@BorderColor': '@BorderColor',
            '@BorderDashStyle': '@BorderDashStyle',
            '@BorderWidthSerializable': '@BorderWidth',
            '@ForeColor': '@ForeColor',
            '@Font': '@Font',
            '@Padding': '@Padding',
            '@TextAlignment': '@TextAlignment',
            '@Visible': '@Visible'
        };
        _this._expressionsToControlMap = {};
        _this._lastChoice = null;
        _this._defaultFormatting = {};
        _this._notShowAgain = ko.observable(false);
        _this._detailLink = 'https://devexpress.github.io/dotnet-eud/interface-elements-for-web/articles/report-designer/bind-to-data/data-binding-modes.html';
        _this._model = null;
        _this._mapFontObj(_this._defaultFormatting, new analytics_widgets_internal_1.FontModel(ko.observable('')));
        _this._mapPaddingObj(_this._defaultFormatting, analytics_elements_1.PaddingModel.from('0,0,0,0'));
        _this.popupOptions.linkUrl = _this._detailLink;
        _this.popupOptions.confirmMessage = analytics_internal_1.formatUnicorn(analytics_utils_1.getLocalization('The {0} contains bindings. Do you want to convert them to expressions?', 'ReportStringId.UD_Msg_ConvertBindings'), analytics_utils_1.getLocalization('Report', 'DevExpress.XtraReports.UI.XtraReport'));
        _this.popupOptions.linkText = analytics_utils_1.getLocalization('Learn more about the expressions...', 'ReportStringId.UD_Msg_ConvertBindings_LinkText');
        _this.popupOptions.buttons.push({ toolbar: 'bottom', location: 'before', widget: 'dxCheckBox', options: { value: _this._notShowAgain, text: analytics_utils_1.getLocalization("Remember my choice and don't ask me again.", 'ReportStringId.UD_Msg_ConvertBindings_RememberMyChoice') } });
        return _this;
    }
    ReportConverter.prototype._mapRulesProperties = function (formatting) {
        var _this = this;
        var newFormatting = {};
        Object.keys(formatting).forEach(function (name) {
            if (_this._formattingMapper[name]) {
                newFormatting[_this._formattingMapper[name]] = formatting[name];
            }
        });
        return newFormatting;
    };
    ReportConverter.prototype._hasBindings = function () {
        var allcontrols = this._controlsHelper.allControls();
        return allcontrols.map(function (x) { return ko.unwrap(x['dataBindings']); }).filter(function (x) { return !!x; }).some(function (x) { return x.some(function (db) { return !!db.dataMember() || !!db.parameter(); }); });
    };
    ReportConverter.prototype._hasFormattingRules = function () {
        return this._model.formattingRuleSheet().length > 0;
    };
    ReportConverter.prototype.convert = function (model, convertBindingsToExpressions) {
        if (convertBindingsToExpressions === void 0) { convertBindingsToExpressions = _utils_1.PromptBoolean.Prompt; }
        if (!model.dataBindingMode) {
            this._model = model;
            model._dataBindingMode(this._dataBindingMode);
            if (this._dataBindingMode !== _dataBindingMode_1.DataBindingMode.Bindings && this._controlsHelper) {
                var needConvert = this._hasBindings() || this._hasFormattingRules();
                if (convertBindingsToExpressions === _utils_1.PromptBoolean.False)
                    return this._cancel(needConvert ? _dataBindingMode_1.DataBindingMode.Bindings : this._dataBindingMode);
                var canConvert = needConvert ? this._canConvertReport() : true;
                if (!canConvert)
                    return this._cancel();
                if (convertBindingsToExpressions === _utils_1.PromptBoolean.True || this._notShowAgain()) {
                    if (needConvert && this._lastChoice !== this.convertChoiceEnum.Cancel)
                        this._applyChanges();
                }
                else {
                    if (!needConvert) {
                        this._model = null;
                        this._expressionsToControlMap = {};
                    }
                    this.popupOptions.visible(needConvert);
                }
            }
        }
    };
    ReportConverter.prototype._generateStyleName = function (ruleName) {
        return ruleName;
    };
    ReportConverter.prototype._createBindingExpression = function (dataBinding, sumformat, condition) {
        if (dataBinding.propertyName() === 'Text' && sumformat) {
            condition = analytics_internal_1.formatUnicorn(sumformat, condition);
        }
        if (dataBinding.propertyName() !== 'Text' && dataBinding.formatString()) {
            condition = analytics_internal_1.formatUnicorn("FormatString('{0}', {1})", dataBinding.formatString(), condition);
        }
        return _expressionWrapper_1.ExpressionWrapper.createExpression(dataBinding.propertyName(), 'BeforePrint', condition);
    };
    ReportConverter.prototype._tryToGenerateBindingExpressions = function (control, expressions, controlDataInfo) {
        var _this = this;
        var dataBindings = ko.unwrap(control['dataBindings']), canConvertDataBindings = true;
        var sumformat = null;
        if (control['Summary'] && ko.unwrap(control['Summary']['Running']) !== 'None') {
            var summaryFunc = ko.unwrap(control['Summary']['Func']);
            if (summaryFunc === 'Custom')
                return false;
            sumformat = 'sum' + summaryFunc + '({0})';
        }
        if (!!dataBindings) {
            canConvertDataBindings = dataBindings.every(function (dataBinding) {
                var condition = '';
                if (dataBinding.dataSource() && controlDataInfo.dataSource !== dataBinding.dataSource()) {
                    return false;
                }
                else if (dataBinding.parameter()) {
                    condition = '[Parameters.' + dataBinding.parameter().name + ']';
                }
                else if (dataBinding.dataMember()) {
                    var condition = dataBinding.dataMember();
                    if (controlDataInfo.dataMember) {
                        var prefix = controlDataInfo.dataMember + '.';
                        if (dataBinding.dataMember().indexOf(prefix) === 0) {
                            condition = dataBinding.dataMember().substring(prefix.length);
                        }
                    }
                    condition = '[' + condition + ']';
                }
                if (condition) {
                    expressions.push(_this._createBindingExpression(dataBinding, sumformat, condition));
                }
                return true;
            });
        }
        return canConvertDataBindings;
    };
    ReportConverter.prototype._resetDataBindings = function (control) {
        var dataBindings = ko.unwrap(control['dataBindings']);
        if (!!dataBindings) {
            dataBindings.forEach(function (dataBinding) {
                var formatString = null;
                if (dataBinding.propertyName() === 'Text') {
                    formatString = control['textFormatString'] && control['textFormatString']();
                }
                dataBinding.resetValue();
                formatString && control['textFormatString'](formatString);
            });
        }
    };
    ReportConverter.prototype._mapPaddingObj = function (obj, padding) {
        obj['@Padding.Left'] = padding.left();
        obj['@Padding.Right'] = padding.right();
        obj['@Padding.Top'] = padding.top();
        obj['@Padding.Bottom'] = padding.bottom();
    };
    ReportConverter.prototype._mapFontObj = function (obj, font) {
        obj['@Font.Name'] = font.family();
        obj['@Font.Size'] = font.size();
        obj['@Font.Italic'] = font.modificators.italic();
        obj['@Font.Strikeout'] = font.modificators.strikeout();
        obj['@Font.Bold'] = font.modificators.bold();
        obj['@Font.Underline'] = font.modificators.underline();
    };
    ReportConverter.prototype._splitFontPropertyValue = function (formatting) {
        if (formatting['@Font']) {
            var font = new analytics_widgets_internal_1.FontModel(ko.observable(formatting['@Font']));
            this._mapFontObj(formatting, font);
            delete formatting['@Font'];
        }
    };
    ReportConverter.prototype._splitPaddingPropertyValue = function (formatting) {
        if (formatting['@Padding']) {
            var padding = analytics_elements_1.PaddingModel.from(formatting['@Padding']);
            this._mapPaddingObj(formatting, padding);
            delete formatting['@Padding'];
        }
    };
    ReportConverter.prototype._patchRuleCondition = function (condition, dataMember, controlDataMember) {
        if (!condition)
            return condition;
        var expression = analytics_criteria_1.CriteriaOperator.parse(condition);
        var processNames = [];
        analytics_criteria_utils_1.criteriaForEach(expression, function (operator, path) {
            if (operator instanceof analytics_criteria_1.OperandProperty && path === dataMember) {
                processNames.push(function () {
                    var propertyName = [dataMember, operator.propertyName].join('.');
                    if (propertyName.indexOf(controlDataMember) === 0 && (propertyName.length === controlDataMember.length || propertyName[controlDataMember.length] === '.')) {
                        propertyName = propertyName.substr(controlDataMember.length + 1, propertyName.length);
                    }
                    operator.propertyName = propertyName;
                });
            }
        }, dataMember);
        processNames.forEach(function (x) { return x(); });
        return new analytics_widgets_internal_1.FilterEditorSerializer().serialize(expression);
    };
    ReportConverter.prototype._tryToGenerateFormattingRulesExpressions = function (control, expressions, rules, controlDataInfo) {
        var _this = this;
        if (!control.formattingRuleLinks)
            return true;
        var conditions = {};
        var currentRules = $.extend(true, [], control.formattingRuleLinks().map(function (x) { return rules[x.value().name()]; }));
        var changedPropertiesWithDot = [];
        var canConvertFormattingRules = currentRules.every(function (rule) {
            if (controlDataInfo.dataSource !== rule.dataSource) {
                return false;
            }
            Object.keys(rule.formatting).forEach(function (name) {
                if (name.indexOf('.') !== -1 && _this._defaultFormatting[name] !== rule.formatting[name]) {
                    changedPropertiesWithDot.push(name);
                }
            });
            return true;
        });
        if (!canConvertFormattingRules) {
            return false;
        }
        currentRules.forEach(function (rule) {
            if (rule.dataMember !== controlDataInfo.dataMember) {
                rule.condition = _this._patchRuleCondition(rule.condition, rule.dataMember, controlDataInfo.dataMember);
            }
            Object.keys(rule.formatting).forEach(function (propertyName) {
                var hasPoint = propertyName.indexOf('.') !== -1;
                if (!hasPoint || (hasPoint && changedPropertiesWithDot.indexOf(propertyName) !== -1)) {
                    if (!conditions[propertyName]) {
                        conditions[propertyName] = [];
                    }
                    conditions[propertyName].unshift(rule.condition, "'" + rule.formatting[propertyName] + "'");
                }
            });
            return true;
        });
        Object.keys(conditions).forEach(function (propertyName) {
            expressions.push(_this._createRuleExpression(conditions[propertyName], '?', propertyName.substring(1)));
        });
        return true;
    };
    ReportConverter.prototype._getControlDataSourceDataMember = function (control) {
        var dataSource = null, dataMember = null;
        while (!dataSource && control) {
            dataSource = dataSource || control['dataSource'] && control['dataSource']();
            dataMember = dataMember || control['dataMember'] && control['dataMember']();
            control = control.parentModel();
        }
        return { dataSource: dataSource, dataMember: dataMember };
    };
    ReportConverter.prototype._generateFormattingRulesDictionary = function () {
        var _this = this;
        var rules = {};
        this._model.formattingRuleSheet().forEach(function (rule) {
            var newRule = {
                condition: rule.condition(),
                formatting: _this._mapRulesProperties(new analytics_utils_1.ModelSerializer().serialize(rule['formatting'])),
                dataSource: rule.dataSource() || _this._model.dataSource(),
                dataMember: rule.dataMember() || _this._model.dataMember()
            };
            _this._splitFontPropertyValue(newRule.formatting);
            _this._splitPaddingPropertyValue(newRule.formatting);
            rules[rule.name()] = newRule;
        });
        return rules;
    };
    ReportConverter.prototype._createRuleExpression = function (collection, defaultVal, propertyName) {
        collection.push(defaultVal);
        return _expressionWrapper_1.ExpressionWrapper.createExpression(propertyName, 'BeforePrint', 'iif(' + collection.join(',') + ')');
    };
    ReportConverter.prototype._canConvertReport = function () {
        var _this = this;
        var controls = this._controlsHelper.allControls()
            .filter(_utils_1.isControl);
        var rules = this._generateFormattingRulesDictionary();
        this._expressionsToControlMap = {};
        return controls.every(function (control) {
            var controlName = ko.unwrap(control.name);
            _this._expressionsToControlMap[controlName] = [];
            var controlDataInfo = _this._getControlDataSourceDataMember(control.parentModel && control.parentModel() || control);
            return _this._tryToGenerateBindingExpressions(control, _this._expressionsToControlMap[controlName], controlDataInfo) &&
                _this._tryToGenerateFormattingRulesExpressions(control, _this._expressionsToControlMap[controlName], rules, controlDataInfo);
        });
    };
    ReportConverter.prototype._applyChanges = function () {
        var _this = this;
        this._lastChoice = this.convertChoiceEnum.Convert;
        var controls = this._controlsHelper.allControls()
            .filter(_utils_1.isControl);
        this._model.formattingRuleSheet.removeAll();
        controls.forEach(function (control) {
            control.formattingRuleLinks && control.formattingRuleLinks.removeAll();
            var controlName = ko.unwrap(control.name);
            _this._resetDataBindings(control);
            var expressions = _this._expressionsToControlMap[controlName];
            if (expressions.length > 0) {
                control.expressionBindings(expressions);
            }
        });
        this.popupOptions.visible(false);
        this._undoEngine().clearHistory();
        this._undoEngine().isDirty(true);
        this._expressionsToControlMap = null;
        this._model = null;
    };
    ReportConverter.prototype._cancel = function (mode) {
        if (mode === void 0) { mode = _dataBindingMode_1.DataBindingMode.Bindings; }
        this._lastChoice = this.convertChoiceEnum.Cancel;
        this._model._dataBindingMode(mode);
        this._model = null;
        this._expressionsToControlMap = {};
        this.popupOptions.visible(false);
    };
    return ReportConverter;
}(_baseConverter_1.BaseConverter));
exports.ReportConverter = ReportConverter;


/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var xrBand_1 = __webpack_require__(15);
var settings_1 = __webpack_require__(12);
var controlsFactory_1 = __webpack_require__(286);
var metadataGroups_1 = __webpack_require__(11);
var _xrTodoControl_1 = __webpack_require__(138);
var xrControl_1 = __webpack_require__(10);
var xrTextControl_1 = __webpack_require__(313);
var xrTextControl_2 = __webpack_require__(135);
var xrCheckbox_1 = __webpack_require__(205);
var xrCheckbox_2 = __webpack_require__(134);
var xrRichText_1 = __webpack_require__(212);
var richEdit_1 = __webpack_require__(69);
var xrRichText_2 = __webpack_require__(97);
var xrPicturebox_1 = __webpack_require__(89);
var xrPicturebox_2 = __webpack_require__(297);
var xrControl_2 = __webpack_require__(309);
var xrTable_1 = __webpack_require__(213);
var xrTable_2 = __webpack_require__(195);
var xrCharactercomb_1 = __webpack_require__(204);
var xrCharactercomb_2 = __webpack_require__(289);
var xrLine_1 = __webpack_require__(209);
var xrLine_2 = __webpack_require__(295);
var xrShape_1 = __webpack_require__(139);
var xrShape_2 = __webpack_require__(299);
var xrBarcode_1 = __webpack_require__(129);
var xrBarcode_2 = __webpack_require__(287);
var xrZipcode_1 = __webpack_require__(214);
var xrZipcode_2 = __webpack_require__(303);
var xrChart_1 = __webpack_require__(144);
var xrChart_2 = __webpack_require__(130);
var xrGauge_1 = __webpack_require__(208);
var xrGauge_2 = __webpack_require__(136);
var xrSparkline_1 = __webpack_require__(140);
var xrSparkline_2 = __webpack_require__(300);
var xrPivotgrid_1 = __webpack_require__(211);
var xrPivotgrid_2 = __webpack_require__(68);
var xrSubreport_1 = __webpack_require__(96);
var xrSubreport_2 = __webpack_require__(56);
var xrPdfContent_1 = __webpack_require__(137);
var xrPdfContent_2 = __webpack_require__(194);
var utils_1 = __webpack_require__(156);
var xrTableOfContents_1 = __webpack_require__(141);
var xrTableOfContents_2 = __webpack_require__(197);
var _tocUtils_1 = __webpack_require__(67);
var xrReport_1 = __webpack_require__(16);
var xrPageinfo_1 = __webpack_require__(210);
var xrPageinfo_2 = __webpack_require__(193);
var xrPagebreak_1 = __webpack_require__(311);
var xrPagebreak_2 = __webpack_require__(192);
var xrCrossband_1 = __webpack_require__(206);
var xrCrossband_2 = __webpack_require__(54);
var xrReport_2 = __webpack_require__(39);
var xrBandMetaData_1 = __webpack_require__(53);
var scriptMetadata_1 = __webpack_require__(13);
var xrMarginBands_1 = __webpack_require__(406);
var xrDetailReportBandMetaData_1 = __webpack_require__(307);
var xrDetailReportBand_1 = __webpack_require__(66);
var xrDetailBandMetaData_1 = __webpack_require__(124);
var xrDetailBand_1 = __webpack_require__(86);
var xrSubband_1 = __webpack_require__(122);
var xrGroupBandMetaData_1 = __webpack_require__(201);
var xrGroupBand_1 = __webpack_require__(407);
var xrPageBandMetaData_1 = __webpack_require__(202);
var xrPageBand_1 = __webpack_require__(408);
var xrVerticalBandMetaData_1 = __webpack_require__(203);
var xrVerticalBand_1 = __webpack_require__(25);
var xrVerticalDetailBandMetaData_1 = __webpack_require__(308);
var xrVerticalDetailBand_1 = __webpack_require__(409);
var pivotgridfield_1 = __webpack_require__(70);
var pivotgridfield_2 = __webpack_require__(131);
var xrTableRow_1 = __webpack_require__(312);
var xrTableRow_2 = __webpack_require__(48);
var xrTableCell_1 = __webpack_require__(145);
var xrTableCell_2 = __webpack_require__(43);
var analytics_utils_1 = __webpack_require__(0);
var getNearestBand_1 = __webpack_require__(127);
var xrPdfSignature_1 = __webpack_require__(215);
var xrPdfSignature_2 = __webpack_require__(304);
var xrCrossTab_1 = __webpack_require__(98);
var xrCrossTab_2 = __webpack_require__(310);
var xrCrossTabCell_1 = __webpack_require__(99);
var xrCrossTabCell_2 = __webpack_require__(71);
var _defaultCrossTabControl_1 = __webpack_require__(157);
var canPasteInBand = function (dropTarget) {
    var model = dropTarget.getControlModel();
    return model instanceof xrBand_1.BandViewModel;
};
function registerControls(fieldListProvider) {
    settings_1.controlsFactory(new controlsFactory_1.ControlsFactory(fieldListProvider));
    settings_1.controlsFactory().registerControl('Unknown', {
        info: metadataGroups_1.unknownSerializationsInfo,
        type: _xrTodoControl_1.UnknownViewModel,
        defaultVal: {
            '@SizeF': '100,23'
        },
        nonToolboxItem: true,
        surfaceType: xrControl_1.XRControlSurface
    });
    settings_1.controlsFactory().registerControl('XRLabel', {
        info: xrTextControl_1.labelSerializationsInfo,
        toolboxIndex: 0,
        defaultVal: {
            '@Padding': '2,2,0,0,100',
            '@Multiline': 'true',
            '@SizeF': '100,23'
        },
        group: 'common',
        defaultBindingName: 'Text',
        surfaceType: xrTextControl_2.XRTextControlSurfaceBase,
        type: xrControl_1.XRControlViewModel,
        popularProperties: xrTextControl_1.popularPropertiesLabel,
        displayName: analytics_utils_1.getLocalization('Label', 'DevExpress.XtraReports.UI.XRLabel')
    });
    settings_1.controlsFactory().registerControl('XRCheckBox', {
        info: xrCheckbox_1.checkboxSerializationsInfo,
        toolboxIndex: 1,
        group: 'common',
        type: xrCheckbox_2.XRCheckBoxViewModel,
        surfaceType: xrCheckbox_2.XRCheckBoxSurface,
        defaultVal: {
            '@SizeF': '100,23',
            '@Padding': '2,2,0,0,100'
        },
        defaultBindingName: 'CheckBoxState',
        popularProperties: xrCheckbox_1.popularPropertiesCheckBox,
        displayName: analytics_utils_1.getLocalization('Check Box', 'DevExpress.XtraReports.UI.XRCheckBox')
    });
    settings_1.controlsFactory().registerControl('XRRichText', {
        info: xrRichText_1.richTextSerializationsInfo,
        toolboxIndex: 2,
        group: 'common',
        defaultVal: {
            '@SizeF': '100,23',
            '@Padding': '2,2,0,0,100'
        },
        surfaceType: richEdit_1.getRichEditSurface()(),
        type: xrRichText_2.XRRichViewModel,
        defaultBindingName: 'Rtf',
        popularProperties: xrRichText_1.popularPropertiesRichText,
        displayName: analytics_utils_1.getLocalization('Rich Text', 'DevExpress.XtraReports.UI.XRRichText')
    });
    settings_1.controlsFactory().registerControl('XRPictureBox', {
        info: xrPicturebox_1.pictureBoxSerializationsInfo,
        toolboxIndex: 3,
        group: 'common',
        defaultVal: {
            '@SizeF': '100,100',
        },
        type: xrPicturebox_2.XRPictureBoxViewModel,
        surfaceType: xrPicturebox_2.XRPictureBoxSurface,
        defaultBindingName: 'ImageSource',
        popularProperties: xrPicturebox_1.popularPropertiesPicture,
        displayName: analytics_utils_1.getLocalization('Picture Box', 'DevExpress.XtraReports.UI.XRPictureBox')
    });
    settings_1.controlsFactory().registerControl('XRPanel', {
        info: xrControl_2.panelSerializationsInfo,
        toolboxIndex: 4,
        group: 'common',
        defaultVal: {
            '@SizeF': '300,75'
        },
        surfaceType: xrControl_1.XRControlSurface,
        type: xrControl_1.XRControlViewModel,
        isContainer: true,
        displayName: analytics_utils_1.getLocalization('Panel', 'DevExpress.XtraReports.UI.XRPanel')
    });
    settings_1.controlsFactory().registerControl('XRTable', {
        info: xrTable_1.tableSerializationsInfo,
        group: 'common',
        type: xrTable_2.XRTableControlViewModel,
        toolboxIndex: 5,
        defaultVal: {
            '@SizeF': '300,25',
            'Rows': {
                'Item1': {
                    '@ControlType': 'XRTableRow',
                    '@Weight': '1',
                    'Cells': {
                        'Item1': {
                            '@ControlType': 'XRTableCell',
                            '@Weight': '1',
                            '@Multiline': 'true',
                            '@Padding': '2,2,0,0,100'
                        },
                        'Item2': {
                            '@ControlType': 'XRTableCell',
                            '@Weight': '1',
                            '@Multiline': 'true',
                            '@Padding': '2,2,0,0,100'
                        },
                        'Item3': {
                            '@ControlType': 'XRTableCell',
                            '@Weight': '1',
                            '@Multiline': 'true',
                            '@Padding': '2,2,0,0,100'
                        }
                    }
                }
            }
        },
        surfaceType: xrTable_2.XRTableSurface,
        popularProperties: xrTable_1.popularPropertiesTable,
        isContainer: true,
        isPasteDeny: true,
        canDrop: function (dropTarget) { return dropTarget.getControlModel().controlType !== 'XRTableRow'; },
        displayName: analytics_utils_1.getLocalization('Table', 'DevExpress.XtraReports.UI.XRTable')
    });
    settings_1.controlsFactory().registerControl('XRCharacterComb', {
        info: xrCharactercomb_1.characterCombSerializationsInfo,
        toolboxIndex: 6,
        group: 'common',
        defaultVal: {
            '@SizeF': '200,80',
            '@Multiline': 'true'
        },
        defaultBindingName: 'Text',
        surfaceType: xrCharactercomb_2.XRCharacterCombSurface,
        type: xrCharactercomb_2.XRCharacterComb,
        popularProperties: xrTextControl_1.popularPropertiesLabel,
        displayName: analytics_utils_1.getLocalization('Character Comb', 'DevExpress.XtraReports.UI.XRCharacterComb')
    });
    settings_1.controlsFactory().registerControl('XRLine', {
        info: xrLine_1.lineSerializationsInfo,
        group: 'graphics',
        toolboxIndex: 7,
        type: xrControl_1.XRControlViewModel,
        surfaceType: xrLine_2.XRLineSurface,
        defaultVal: {
            '@SizeF': '100,23',
        },
        popularProperties: xrLine_1.popularPropertiesLine,
        displayName: analytics_utils_1.getLocalization('Line', 'DevExpress.XtraReports.UI.XRLine')
    });
    settings_1.controlsFactory().registerControl('XRShape', {
        info: xrShape_1.shapeSerializationsInfo,
        toolboxIndex: 8,
        group: 'graphics',
        defaultVal: {
            '@SizeF': '100,100'
        },
        defaultBindingName: 'Tag',
        type: xrShape_2.XRShapeViewModel,
        surfaceType: xrShape_2.XRShapeControlSurface,
        popularProperties: xrShape_1.popularPropertiesShape,
        displayName: analytics_utils_1.getLocalization('Shape', 'DevExpress.XtraReports.UI.XRShape')
    });
    settings_1.controlsFactory().registerControl('XRBarCode', {
        info: xrBarcode_1.barcodeSerializationsInfo,
        toolboxIndex: 9,
        group: 'graphics',
        defaultVal: {
            '@SizeF': '200,75',
            '@Padding': '10,10,0,0,100',
            'Symbology': {
                '@Name': 'Code128'
            },
            '@Text': ''
        },
        defaultBindingName: 'Text',
        surfaceType: xrBarcode_2.XRBarcodeSurface,
        type: xrBarcode_2.XRBarCodeViewModel,
        popularProperties: xrBarcode_1.popularPropertiesBarCode,
        displayName: analytics_utils_1.getLocalization('Bar Code', 'DevExpress.XtraReports.UI.XRBarCode')
    });
    settings_1.controlsFactory().registerControl('XRZipCode', {
        info: xrZipcode_1.zipCodeSerializationInfo,
        type: xrControl_1.XRControlViewModel,
        nonToolboxItem: true,
        group: 'graphics',
        surfaceType: xrZipcode_2.XRZipCodeSurface,
        toolboxIndex: 10,
        defaultVal: {
            '@SizeF': '100,23'
        },
        popularProperties: xrZipcode_1.popularPropertiesZipCode,
        displayName: analytics_utils_1.getLocalization('Zip Code', 'DevExpress.XtraReports.UI.XRZipCode')
    });
    settings_1.controlsFactory().registerControl('XRChart', {
        info: xrChart_1.xrChartSerializationInfo,
        group: 'complex',
        toolboxIndex: 11,
        defaultVal: {
            '@SizeF': '400,300',
            'Chart': {
                'Diagram': {
                    '@TypeNameSerializable': 'XYDiagram',
                    'AxisY': {
                        '@VisibleInPanesSerializable': '-1'
                    },
                    'AxisX': {
                        '@VisibleInPanesSerializable': '-1'
                    }
                },
                'DataContainer': {}
            }
        },
        defaultBindingName: 'Tag',
        type: xrChart_2.XRChartViewModel,
        surfaceType: xrChart_2.XRChartSurface,
        popularProperties: ['name'],
        displayName: analytics_utils_1.getLocalization('Chart', 'DevExpress.XtraReports.UI.XRChart')
    });
    settings_1.controlsFactory().registerControl('XRGauge', {
        info: xrGauge_1.xrGaugeSerializationInfo,
        surfaceType: _xrTodoControl_1.TodoControlSurface,
        type: xrGauge_2.XRGaugeViewModel,
        group: 'complex',
        toolboxIndex: 12,
        defaultVal: {
            '@SizeF': '220,120'
        },
        defaultBindingName: 'Tag',
        popularProperties: xrGauge_1.popularPropertiesGauge,
        displayName: analytics_utils_1.getLocalization('Gauge', 'DevExpress.XtraReports.UI.XRGauge')
    });
    settings_1.controlsFactory().registerControl('XRSparkline', {
        info: xrSparkline_1.sparklineSerializationsInfo,
        toolboxIndex: 13,
        group: 'complex',
        defaultVal: {
            '@SizeF': '150,80',
            'View': {
                '@Type': 'Line'
            },
        },
        surfaceType: xrSparkline_2.XRSparkLineSurface,
        defaultBindingName: 'Tag',
        type: xrSparkline_2.XRSparklineViewModel,
        popularProperties: xrSparkline_1.popularPropertiesSparkline,
        displayName: analytics_utils_1.getLocalization('Sparkline', 'DevExpress.XtraReports.UI.XRSparkline')
    });
    settings_1.controlsFactory().registerControl('XRPivotGrid', {
        info: xrPivotgrid_1.pivotGridSerializationsInfo,
        toolboxIndex: 14,
        group: 'complex',
        defaultVal: {
            '@ControlType': 'XRPivotGrid',
            '@SizeF': '250,120',
            'OptionsChartDataSource': {},
            'Prefilter': {},
            'OptionsPrint': {
                '@FilterSeparatorBarPadding': '3',
                '@UsePrintAppearance': 'true',
                '@PrintFilterHeaders': 'False'
            },
            'OptionsView': {}
        },
        canPaste: canPasteInBand,
        defaultBindingName: 'Tag',
        type: xrPivotgrid_2.XRPivotGridViewModel,
        surfaceType: xrPivotgrid_2.XRPivotGridSurface,
        nonToolboxItem: settings_1.DefaultCrossTabControl() == _defaultCrossTabControl_1.DefaultCrossTabControlEnum.XRCrossTab,
        popularProperties: ['dataSource', 'dataMember'],
        displayName: analytics_utils_1.getLocalization('Pivot Grid', 'DevExpress.XtraReports.UI.XRPivotGrid')
    });
    settings_1.controlsFactory().registerControl('XRCrossTab', {
        info: xrCrossTab_2.crossTabSerializationInfo,
        toolboxIndex: 14,
        type: xrCrossTab_1.XRCrossTabViewModel,
        group: 'complex',
        defaultVal: {
            '@ControlType': 'XRCrossTab',
            '@SizeF': '200,50',
            'ColumnDefinitions': {
                'Item1': {},
                'Item2': {}
            },
            'RowDefinitions': {
                'Item1': {},
                'Item2': {}
            },
            'Cells': {
                'Item1': { '@ControlType': 'XRCrossTabCell', '@ColumnIndex': '0', '@RowIndex': '0', '@Text': null },
                'Item2': { '@ControlType': 'XRCrossTabCell', '@ColumnIndex': '1', '@RowIndex': '1', '@Text': null },
                'Item3': { '@ControlType': 'XRCrossTabCell', '@ColumnIndex': '1', '@RowIndex': '0', '@Text': null },
                'Item4': { '@ControlType': 'XRCrossTabCell', '@ColumnIndex': '0', '@RowIndex': '1', '@Text': null }
            }
        },
        surfaceType: xrCrossTab_1.XRCrossTabSurface,
        displayName: analytics_utils_1.getLocalization('Cross Tab', 'DevExpress.XtraReports.UI.XRCrossTab'),
        nonToolboxItem: settings_1.DefaultCrossTabControl() == _defaultCrossTabControl_1.DefaultCrossTabControlEnum.XRPivotGrid,
        popularProperties: ['dataSource', 'dataMember', 'layoutOptions', 'printOptions', 'controlParameters', 'filterString']
    });
    settings_1.controlsFactory().registerControl('XRCrossTabCell', {
        info: xrCrossTabCell_1.cellserializtionInfo,
        type: xrCrossTabCell_2.XRCrossTabCellViewModel,
        nonToolboxItem: true,
        isDeleteDeny: true,
        group: 'complex',
        defaultVal: {
            '@ControlType': 'XRCrossTabCell',
            '@Text': null,
            '@TextFormatString': null
        },
        surfaceType: xrCrossTabCell_2.XRCellsurface,
        displayName: analytics_utils_1.getLocalization('Cross Tab Cell', 'DevExpress.XtraReports.UI.CrossTab.XRCrossTabCell')
    });
    settings_1.controlsFactory().registerControl('XRSubreport', {
        info: xrSubreport_1.subreportSerializationsInfo,
        toolboxIndex: 15,
        group: 'complex',
        defaultVal: {
            '@SizeF': '100,23',
            'ReportSource': xrSubreport_2.SubreportViewModel.defaultReport
        },
        surfaceType: xrSubreport_2.XRSubreportSurface,
        type: xrSubreport_2.XRSubreportViewModel,
        canPaste: canPasteInBand,
        popularProperties: ['name', 'reportSourceUrl'],
        displayName: analytics_utils_1.getLocalization('Sub-Report', 'DevExpress.XtraReports.UI.XRSubreport')
    });
    settings_1.controlsFactory().registerControl('XRPdfContent', {
        info: xrPdfContent_1.pdfContentSerializationInfo,
        toolboxIndex: 16,
        group: 'complex',
        defaultVal: {
            '@HeightF': '23'
        },
        defaultBindingName: 'SourceUrl',
        surfaceType: xrPdfContent_2.XRPdfContentSurface,
        type: xrPdfContent_2.XRPdfContentViewModel,
        popularProperties: xrPdfContent_1.popularPropertiesPdfContent,
        displayName: analytics_utils_1.getLocalization('PDF Content', 'DevExpress.XtraReports.UI.XRPdfContent'),
        canDrop: function (dropTarget, dragFrom) {
            var bandModel = getNearestBand_1.getNearestBand(dropTarget.getControlModel());
            return bandModel && !utils_1._isMarginBand(bandModel) && !utils_1._isPageBand(bandModel);
        },
        canPaste: canPasteInBand
    });
    settings_1.controlsFactory().registerControl('XRPdfSignature', {
        info: xrPdfSignature_1.pdfSignatureInfo,
        type: xrPdfSignature_2.XRPdfSignatureModel,
        toolboxIndex: 17,
        group: 'complex',
        defaultVal: {
            '@SizeF': '200,100',
            'SignatureOptions': {
                '@DisplayDocumentSignature': 'false'
            }
        },
        surfaceType: xrPdfSignature_2.XRPdfSignatureSurface,
        popularProperties: ['signatureOptions'],
        displayName: analytics_utils_1.getLocalization('PDF Signature', 'DevExpress.XtraReports.UI.XRPdfSignature')
    });
    settings_1.controlsFactory().registerControl('XRTableOfContents', {
        toolboxIndex: 18,
        info: xrTableOfContents_1.tocSerializationsInfo,
        group: 'misc',
        surfaceType: xrTableOfContents_2.XRTableOfContentsSurface,
        type: xrTableOfContents_2.XRTableOfContentsViewModel,
        defaultVal: {
            '@ControlType': 'XRTableOfContents',
            'LevelTitle': {
                '@Text': 'Title',
                '@Height': '23',
                '@Padding': '0,0,0,0,100'
            },
            'LevelDefault': {
                '@Height': '23',
                '@Padding': '0,0,0,0,100'
            }
        },
        canDrop: function (dropTarget, dragFrom) {
            var bandModel = getNearestBand_1.getNearestBand(dropTarget.getControlModel());
            if (!bandModel)
                return false;
            if (!dragFrom) {
                var reportModel = bandModel.root;
                return reportModel.canAddToC();
            }
            else if (_tocUtils_1.isHeaderOrFooterBandType(bandModel)) {
                var toc = _tocUtils_1.getExistTableOfContents(bandModel);
                return !toc || toc === dragFrom;
            }
            return false;
        },
        displayName: analytics_utils_1.getLocalization('Table of Contents', 'DevExpress.XtraReports.UI.XRTableOfContents')
    });
    settings_1.controlsFactory().registerControl('XRPageInfo', {
        info: xrPageinfo_1.pageInfoSerializationsInfo,
        type: xrPageinfo_2.XRPageInfoViewModel,
        surfaceType: xrPageinfo_2.XRPageInfoSurface,
        toolboxIndex: 19,
        group: 'misc',
        defaultVal: {
            '@SizeF': '100,23',
            '@Padding': '2,2,0,0,100'
        },
        popularProperties: xrPageinfo_1.popularPropertiesPageInfo,
        displayName: analytics_utils_1.getLocalization('Page Info', 'DevExpress.XtraReports.UI.XRPageInfo')
    });
    settings_1.controlsFactory().registerControl('XRPageBreak', {
        info: xrPagebreak_1.pageBreakSerializationsInfo,
        type: xrControl_1.XRControlViewModel,
        surfaceType: xrPagebreak_2.XRPageBreakSurface,
        toolboxIndex: 20,
        group: 'misc',
        defaultVal: {
            '@SizeF': '30,2'
        },
        canPaste: canPasteInBand,
        displayName: analytics_utils_1.getLocalization('Page Break', 'DevExpress.XtraReports.UI.XRPageBreak')
    });
    settings_1.controlsFactory().registerControl('XRCrossBandLine', {
        info: xrCrossband_1.crossBandLineControlSerializationsInfo,
        type: xrCrossband_2.XRCrossBandControlViewModel,
        toolboxIndex: 21,
        group: 'misc',
        defaultVal: {
            '@WidthF': '9.38',
            '@StartPointFloat': '0,0',
            '@EndPointFloat': '0,50'
        },
        size: '9.38, 50',
        surfaceType: xrCrossband_2.XRCrossBandSurface,
        popularProperties: xrCrossband_1.popularPropertiesCrossLine,
        displayName: analytics_utils_1.getLocalization('Cross-band Line', 'DevExpress.XtraReports.UI.XRCrossBandLine')
    });
    settings_1.controlsFactory().registerControl('XRCrossBandBox', {
        info: xrCrossband_1.crossBandBoxControlSerializationsInfo,
        type: xrCrossband_2.XRCrossBandControlViewModel,
        toolboxIndex: 22,
        group: 'misc',
        defaultVal: {
            '@WidthF': '50',
            '@StartPointFloat': '0,0',
            '@EndPointFloat': '0,50'
        },
        size: '50,50',
        surfaceType: xrCrossband_2.XRCrossBandSurface,
        displayName: analytics_utils_1.getLocalization('Cross-band Box', 'DevExpress.XtraReports.UI.XRCrossBandBox')
    });
    settings_1.controlsFactory().registerControl('DevExpress.XtraReports.UI.XtraReport', {
        info: xrReport_2.reportSerializationInfo,
        nonToolboxItem: true,
        surfaceType: xrReport_1.ReportSurface,
        popularProperties: xrReport_2.popularPropertiesReport,
        isCopyDeny: true,
        isDeleteDeny: true,
        displayName: analytics_utils_1.getLocalization('Report', 'DevExpress.XtraReports.UI.XtraReport')
    });
    settings_1.controlsFactory().registerControl('TopMarginBand', {
        info: xrBandMetaData_1.bandSerializationInfo.concat(scriptMetadata_1.commonBandScripts),
        type: xrMarginBands_1.TopMarginBand,
        nonToolboxItem: true,
        surfaceType: xrBand_1.BandSurface,
        isContainer: true,
        isCopyDeny: true,
        isDeleteDeny: true,
        displayName: analytics_utils_1.getLocalization('Top Margin', 'DevExpress.XtraReports.UI.TopMarginBand')
    });
    settings_1.controlsFactory().registerControl('BottomMarginBand', {
        info: xrBandMetaData_1.bandSerializationInfo.concat(scriptMetadata_1.commonBandScripts),
        type: xrMarginBands_1.BottomMarginBand,
        nonToolboxItem: true,
        surfaceType: xrMarginBands_1.BottomMarginSurface,
        isContainer: true,
        isCopyDeny: true,
        isDeleteDeny: true,
        displayName: analytics_utils_1.getLocalization('Bottom Margin', 'DevExpress.XtraReports.UI.BottomMarginBand')
    });
    settings_1.controlsFactory().registerControl('DetailReportBand', {
        info: xrDetailReportBandMetaData_1.detailReportBandSerializationInfo,
        type: xrDetailReportBand_1.DetailReportBand,
        nonToolboxItem: true,
        surfaceType: xrDetailReportBand_1.DetailReportBandSurface,
        popularProperties: xrDetailReportBandMetaData_1.popularPropertiesDetailReport,
        isContainer: true,
        isCopyDeny: true,
        canDrop: function (dropTarget, draggableModel) {
            var dropTargetModel = dropTarget.getControlModel();
            return (dropTargetModel.controlType === 'DevExpress.XtraReports.UI.XtraReport' || dropTargetModel.controlType === 'DetailReportBand');
        },
        displayName: analytics_utils_1.getLocalization('Detail Report', 'DevExpress.XtraReports.UI.DetailReportBand')
    });
    settings_1.controlsFactory().registerControl('DetailBand', {
        info: xrDetailBandMetaData_1.detailBandSerializationInfo,
        type: xrDetailBand_1.DetailBand,
        nonToolboxItem: true,
        surfaceType: xrDetailBand_1.DetailBandSurface,
        popularProperties: xrDetailBandMetaData_1.popularPropertiesDetail,
        isContainer: true,
        isCopyDeny: true,
        isDeleteDeny: true,
        displayName: analytics_utils_1.getLocalization('Detail', 'DevExpress.XtraReports.UI.DetailBand')
    });
    settings_1.controlsFactory().registerControl('SubBand', {
        info: xrDetailBandMetaData_1.subBandSerializationInfo,
        type: xrSubband_1.SubBandViewModel,
        nonToolboxItem: true,
        surfaceType: xrSubband_1.SubBandSurface,
        popularProperties: xrDetailBandMetaData_1.generalBandPopularProperties,
        isContainer: true,
        isCopyDeny: true,
        canDrop: function (dropTarget, draggableModel) {
            var dropTargetModel = dropTarget.getControlModel();
            return draggableModel.parentModel() === dropTargetModel.parentModel() && dropTargetModel.controlType === 'SubBand';
        },
        displayName: analytics_utils_1.getLocalization('Sub-Band', 'DevExpress.XtraReports.UI.SubBand')
    });
    settings_1.controlsFactory().registerControl('GroupHeaderBand', {
        info: xrGroupBandMetaData_1.groupHeaderBandSerializationInfo,
        type: xrGroupBand_1.GroupHeaderBand,
        nonToolboxItem: true,
        surfaceType: xrBand_1.BandSurface,
        popularProperties: xrGroupBandMetaData_1.popularPropertiesGroupHeader,
        isContainer: true,
        isCopyDeny: true,
        canDrop: utils_1._isReorderBand,
        displayName: analytics_utils_1.getLocalization('Group Header', 'DevExpress.XtraReports.UI.GroupHeaderBand')
    });
    settings_1.controlsFactory().registerControl('GroupFooterBand', {
        info: xrGroupBandMetaData_1.groupFooterBandSerializationInfo,
        type: xrBand_1.BandViewModel,
        nonToolboxItem: true,
        surfaceType: xrBand_1.BandSurface,
        popularProperties: xrGroupBandMetaData_1.popularPropertiesGroupFooter,
        isContainer: true,
        isCopyDeny: true,
        canDrop: utils_1._isReorderBand,
        displayName: analytics_utils_1.getLocalization('Group Footer', 'DevExpress.XtraReports.UI.GroupFooterBand')
    });
    settings_1.controlsFactory().registerControl('PageHeaderBand', {
        info: xrPageBandMetaData_1.pageBandSerializationInfoPageHeader,
        type: xrBand_1.BandViewModel,
        nonToolboxItem: true,
        surfaceType: xrBand_1.BandSurface,
        popularProperties: xrPageBandMetaData_1.popularPropertiesPageHeader,
        isContainer: true,
        isCopyDeny: true,
        displayName: analytics_utils_1.getLocalization('Page Header', 'DevExpress.XtraReports.UI.PageHeaderBand')
    });
    settings_1.controlsFactory().registerControl('PageFooterBand', {
        info: xrPageBandMetaData_1.pageBandSerializationInfo,
        type: xrBand_1.BandViewModel,
        nonToolboxItem: true,
        surfaceType: xrPageBand_1.PageFooterSurface,
        popularProperties: xrPageBandMetaData_1.popularPropertiesPageFooter,
        isContainer: true,
        isCopyDeny: true,
        displayName: analytics_utils_1.getLocalization('Page Footer', 'DevExpress.XtraReports.UI.PageFooterBand')
    });
    settings_1.controlsFactory().registerControl('ReportHeaderBand', {
        info: xrBandMetaData_1.reportHeaderBandSerializationInfo,
        type: xrBand_1.BandViewModel,
        nonToolboxItem: true,
        surfaceType: xrBand_1.BandSurface,
        popularProperties: xrBandMetaData_1.popularPropertiesReportHeader,
        isContainer: true,
        isCopyDeny: true,
        displayName: analytics_utils_1.getLocalization('Report Header', 'DevExpress.XtraReports.UI.ReportHeaderBand')
    });
    settings_1.controlsFactory().registerControl('ReportFooterBand', {
        info: xrBandMetaData_1.reportFooterBandSerializationInfo,
        type: xrBand_1.BandViewModel,
        nonToolboxItem: true,
        popularProperties: xrBandMetaData_1.popularPropertiesReportFooter,
        surfaceType: xrBand_1.BandSurface,
        isContainer: true,
        isCopyDeny: true,
        displayName: analytics_utils_1.getLocalization('Report Footer', 'DevExpress.XtraReports.UI.ReportFooterBand')
    });
    settings_1.controlsFactory().registerControl('VerticalHeaderBand', {
        info: xrVerticalBandMetaData_1.verticalHeaderBandSerializationInfo,
        type: xrVerticalBand_1.VerticalBandViewModel,
        nonToolboxItem: true,
        popularProperties: xrVerticalBandMetaData_1.popularPropertiesVerticalHeaderBand,
        surfaceType: xrVerticalBand_1.VerticalBandSurface,
        isContainer: true,
        isCopyDeny: true
    });
    settings_1.controlsFactory().registerControl('VerticalDetailBand', {
        info: xrVerticalDetailBandMetaData_1.verticalDetailBandSerializationInfo,
        type: xrVerticalDetailBand_1.VerticalDetailBandViewModel,
        nonToolboxItem: true,
        popularProperties: xrVerticalDetailBandMetaData_1.popularPropertiesVerticalDetailBand,
        surfaceType: xrVerticalBand_1.VerticalBandSurface,
        isContainer: true,
        isCopyDeny: true,
        isDeleteDeny: true
    });
    settings_1.controlsFactory().registerControl('VerticalTotalBand', {
        info: xrVerticalBandMetaData_1.verticalTotalBandSerializationInfo,
        type: xrVerticalBand_1.VerticalBandViewModel,
        nonToolboxItem: true,
        popularProperties: xrVerticalBandMetaData_1.popularPropertiesVerticalTotalBand,
        surfaceType: xrVerticalBand_1.VerticalBandSurface,
        isContainer: true,
        isCopyDeny: true
    });
    settings_1.controlsFactory().registerControl('PivotGridField', {
        info: pivotgridfield_1.pivotGridFieldSerializationsInfo,
        type: pivotgridfield_2.PivotGridFieldViewModel,
        surfaceType: pivotgridfield_2.PivotGridFieldSurface,
        nonToolboxItem: true,
        popularProperties: pivotgridfield_1.popularPropertiesPivotGridField,
        displayName: 'PivotGridField'
    });
    settings_1.controlsFactory().registerControl('XRTableRow', {
        info: xrTableRow_1.tableRowSerializationsInfo,
        type: xrTableRow_2.XRTableRowViewModel,
        defaultVal: {
            '@HeightF': '25',
            '@Weight': '20'
        },
        nonToolboxItem: true,
        surfaceType: xrTableRow_2.XRTableRowSurface,
        isContainer: true,
        isCopyDeny: true,
        isPasteDeny: true,
        canDrop: function (dropTarget) { return dropTarget.getControlModel().controlType === 'XRTable'; },
        displayName: analytics_utils_1.getLocalization('Table Row', 'DevExpress.XtraReports.UI.XRTableRow')
    });
    settings_1.controlsFactory().registerControl('XRTableCell', {
        info: xrTableCell_1.tableCellSerializationsInfo,
        type: xrTableCell_2.XRTableCellViewModel,
        defaultVal: {
            '@Weight': '1',
            '@WidthF': '100',
            '@Multiline': 'true',
            '@Padding': '2,2,0,0,100'
        },
        nonToolboxItem: true,
        surfaceType: xrTableCell_2.XRTableCellSurface,
        popularProperties: xrTableCell_1.popularPropertiesTableCell,
        isContainer: true,
        defaultBindingName: 'Text',
        isCopyDeny: true,
        canDrop: function (dropTarget) { return dropTarget.getControlModel().controlType === 'XRTableRow'; },
        displayName: analytics_utils_1.getLocalization('Table Cell', 'DevExpress.XtraReports.UI.XRTableCell')
    });
}
exports.registerControls = registerControls;


/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrBand_1 = __webpack_require__(15);
var ko = __webpack_require__(1);
var TopMarginBand = (function (_super) {
    __extends(TopMarginBand, _super);
    function TopMarginBand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TopMarginBand.prototype.initHeight = function () {
        this.height = this.parentModel() && this.root.margins.top || ko.observable(0);
        _super.prototype.initHeight.call(this);
    };
    return TopMarginBand;
}(xrBand_1.BandViewModel));
exports.TopMarginBand = TopMarginBand;
var BottomMarginBand = (function (_super) {
    __extends(BottomMarginBand, _super);
    function BottomMarginBand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BottomMarginBand.prototype.initHeight = function () {
        this.height = this.parentModel() && this.root.margins.bottom || ko.observable(0);
        _super.prototype.initHeight.call(this);
    };
    return BottomMarginBand;
}(xrBand_1.BandViewModel));
exports.BottomMarginBand = BottomMarginBand;
var BottomMarginSurface = (function (_super) {
    __extends(BottomMarginSurface, _super);
    function BottomMarginSurface() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BottomMarginSurface.prototype.getBackgroundRect = function () {
        var top = this.parent.pageHeight() - this._height(), bottom, height = this._height();
        return { top: top, bottom: bottom, height: height };
    };
    return BottomMarginSurface;
}(xrBand_1.BandSurface));
exports.BottomMarginSurface = BottomMarginSurface;


/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrBand_1 = __webpack_require__(15);
var groupfield_1 = __webpack_require__(87);
var analytics_utils_1 = __webpack_require__(0);
var GroupHeaderBand = (function (_super) {
    __extends(GroupHeaderBand, _super);
    function GroupHeaderBand(band, parent, serializer) {
        var _this = _super.call(this, band, parent, serializer) || this;
        _this.groupFields = analytics_utils_1.deserializeArray(band.GroupFields, function (field) { return new groupfield_1.GroupFieldModel(field, serializer); });
        _this.sortingSummary.getPath = function (propertyName) {
            if (propertyName === 'fieldName') {
                return _this.getPath('groupFields');
            }
        };
        return _this;
    }
    GroupHeaderBand.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.groupFields);
        this.resetObservableArray(this.groupFields);
    };
    return GroupHeaderBand;
}(xrBand_1.BandViewModel));
exports.GroupHeaderBand = GroupHeaderBand;


/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrBand_1 = __webpack_require__(15);
var PageFooterSurface = (function (_super) {
    __extends(PageFooterSurface, _super);
    function PageFooterSurface() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PageFooterSurface.prototype.getBackgroundRect = function () {
        var top = 0, bottom, height = this._height();
        top = this.parent.pageHeight() - this._totalHeight() - this.parent.margins.bottom();
        return { top: top, bottom: bottom, height: height };
    };
    return PageFooterSurface;
}(xrBand_1.BandSurface));
exports.PageFooterSurface = PageFooterSurface;


/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrVerticalBand_1 = __webpack_require__(25);
var groupfield_1 = __webpack_require__(87);
var analytics_utils_1 = __webpack_require__(0);
var VerticalDetailBandViewModel = (function (_super) {
    __extends(VerticalDetailBandViewModel, _super);
    function VerticalDetailBandViewModel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VerticalDetailBandViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.sortFields);
        this.resetObservableArray(this.sortFields);
    };
    VerticalDetailBandViewModel.prototype.preInit = function (band, parent, serializer) {
        this.sortFields = analytics_utils_1.deserializeArray(band.SortFields, function (field) { return new groupfield_1.GroupFieldModel(field, serializer); });
    };
    return VerticalDetailBandViewModel;
}(xrVerticalBand_1.VerticalBandViewModel));
exports.VerticalDetailBandViewModel = VerticalDetailBandViewModel;


/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var WizardRunner = (function (_super) {
    __extends(WizardRunner, _super);
    function WizardRunner(_menuOptions) {
        var _this = _super.call(this) || this;
        _this._menuOptions = _menuOptions;
        _this._currentWizard = null;
        _this._wizards = {};
        _this._disposables.push(_this._menuOptions.collapsed.subscribe(function (newVal) {
            if (!newVal) {
                _this._currentWizard.close();
                _this._currentWizard = null;
            }
        }));
        return _this;
    }
    WizardRunner.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._currentWizard = null;
        this._wizards = {};
    };
    WizardRunner.prototype.registerCommand = function (wizardType, start, close) {
        this._wizards[wizardType] = { start: start, close: close };
    };
    WizardRunner.prototype.run = function (command) {
        this._currentWizard && this._currentWizard.close();
        this._currentWizard = this._wizards[command];
        this._currentWizard && this._currentWizard.start();
    };
    WizardRunner.prototype.closeWizard = function () {
        this._currentWizard && this._currentWizard.close();
    };
    return WizardRunner;
}(analytics_utils_1.Disposable));
exports.WizardRunner = WizardRunner;


/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var LocaliziblePropertiesAccessibilityProvider = (function (_super) {
    __extends(LocaliziblePropertiesAccessibilityProvider, _super);
    function LocaliziblePropertiesAccessibilityProvider(isDefaultLanguage) {
        var _this = _super.call(this) || this;
        _this.isDefaultLanguage = isDefaultLanguage;
        return _this;
    }
    LocaliziblePropertiesAccessibilityProvider.prototype.isPropertyVisible = function (editor) {
        var visible = _super.prototype.isPropertyVisible.call(this, editor);
        if (visible) {
            if (!this.isDefaultLanguage()) {
                var info = editor.info();
                var hasLocalizedChild = function () { return info.info && info.info.length != 0 && info.info.filter(function (childProperty) { return !!childProperty.localizable; }).length != 0; };
                return !!info.localizable || hasLocalizedChild() || this._hasLocalizedParent(editor._parent());
            }
        }
        return visible;
    };
    LocaliziblePropertiesAccessibilityProvider.prototype._hasLocalizedParent = function (parent) {
        if (!parent)
            return false;
        if (parent.info().localizable)
            return true;
        return this._hasLocalizedParent(parent._parent());
    };
    return LocaliziblePropertiesAccessibilityProvider;
}(analytics_internal_1.PropertiesAccessibilityProvider));
exports.LocaliziblePropertiesAccessibilityProvider = LocaliziblePropertiesAccessibilityProvider;


/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var style_1 = __webpack_require__(37);
var style_2 = __webpack_require__(21);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_1 = __webpack_require__(4);
var StylesEditorHeaderModel = (function () {
    function StylesEditorHeaderModel(styleName, styles, disabled, popupContainer) {
        var _this = this;
        this.displayExpr = 'name';
        this.valueExpr = 'name';
        this.displayCustomValue = true;
        this.placeholder = analytics_internal_1.selectPlaceholder();
        this.noDataText = analytics_internal_1.noDataText();
        this.value = ko.pureComputed({
            read: function () {
                return styleName();
            },
            write: function (newVal) {
                if (newVal !== analytics_utils_1.getLocalization(StylesEditorHeaderModel.newItem, StylesEditorHeaderModel.newItemTextId)) {
                    styleName(newVal);
                }
            }
        });
        this.items = ko.pureComputed(function () {
            var result = [new style_1.StyleModel({ '@Name': analytics_utils_1.getLocalization(StylesEditorHeaderModel.newItem, StylesEditorHeaderModel.newItemTextId) })];
            if (styles && styles()) {
                result.push.apply(result, styles());
            }
            return result;
        });
        this.onValueChanged = function (e) {
            if (e.value === analytics_utils_1.getLocalization(StylesEditorHeaderModel.newItem, StylesEditorHeaderModel.newItemTextId)) {
                var newStyleName = analytics_internal_1.getUniqueNameForNamedObjectsArray(styles(), 'xrControlStyle'), newStyle = new style_1.StyleModel({ '@Name': newStyleName });
                styles.push(newStyle);
                _this.value(newStyleName);
            }
        };
        this.disabled = disabled;
        this.dropDownOptions = { container: popupContainer };
    }
    StylesEditorHeaderModel.newItem = 'Create New Style';
    StylesEditorHeaderModel.newItemTextId = 'ASPxReportsStringId.ReportDesigner_StylesEditor_CreateNew';
    return StylesEditorHeaderModel;
}());
exports.StylesEditorHeaderModel = StylesEditorHeaderModel;
ko.bindingHandlers['dxStylesEditor'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var _subscriptionNewStyle;
        $(element).children().remove();
        var templateHtml = analytics_widgets_1.getTemplate('dx-propertieseditor'), $element = $(element).append(templateHtml);
        var style = ko.pureComputed(function () {
            var value = valueAccessor(), styles = value.styles && value.styles(), filtered = styles && styles.filter(function (item) {
                return item.name() === value.styleName();
            });
            if (filtered && filtered.length > 0) {
                var style = filtered[0];
                _subscriptionNewStyle = style.name.subscribe(function (newName) {
                    value.styleName(newName);
                    _subscriptionNewStyle.dispose();
                });
                return style;
            }
            return null;
        });
        analytics_internal_1.addDisposeCallback(element, function () {
            $element = null;
            _subscriptionNewStyle && _subscriptionNewStyle.dispose();
        });
        ko.applyBindings(bindingContext.createChildContext(new analytics_widgets_1.ObjectProperties(style, { editors: style_2.styleSerializationInfo }, 1, viewModel.disabled, undefined, viewModel.textToSearch)), $element.children()[0]);
        return { controlsDescendantBindings: true };
    }
};


/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var DesignerEditorAddOn = (function (_super) {
    __extends(DesignerEditorAddOn, _super);
    function DesignerEditorAddOn(editor, popupService, imageTemplateName) {
        if (imageTemplateName === void 0) { imageTemplateName = ''; }
        var _this = _super.call(this, editor, popupService) || this;
        _this.imageTemplateName = imageTemplateName;
        return _this;
    }
    DesignerEditorAddOn.prototype.onPopupShown = function (popupService) { };
    DesignerEditorAddOn.prototype.showPopup = function (_, element) {
        _super.prototype.showPopup.call(this, _, element);
        var popupService = this['_popupService'];
        this.onPopupShown(popupService);
        popupService.target(element);
    };
    return DesignerEditorAddOn;
}(analytics_internal_1.EditorAddOn));
exports.DesignerEditorAddOn = DesignerEditorAddOn;
var ExpressionEditorAddOn = (function (_super) {
    __extends(ExpressionEditorAddOn, _super);
    function ExpressionEditorAddOn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ExpressionEditorAddOn.prototype.actionFilter = function (action) {
        return _super.prototype.actionFilter.call(this, action) && action.id === 'dxrd-expression';
    };
    ExpressionEditorAddOn.prototype.onPopupShown = function (popupService) {
        popupService.disabled(false);
        var actions = popupService.actions();
        if (actions.length == 1) {
            var items = actions[0].items;
            if (items && !!items.length) {
                popupService.actions(items);
                popupService.title(actions[0].title);
            }
            else {
                actions[0].action(this['_editor'].name);
            }
        }
    };
    return ExpressionEditorAddOn;
}(DesignerEditorAddOn));
exports.ExpressionEditorAddOn = ExpressionEditorAddOn;
var ValueEditorAddOn = (function (_super) {
    __extends(ValueEditorAddOn, _super);
    function ValueEditorAddOn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ValueEditorAddOn.prototype.onPopupShown = function (popupService) {
        popupService.disabled(this['_editor'].disabled());
    };
    ValueEditorAddOn.prototype.actionFilter = function (action) {
        return _super.prototype.actionFilter.call(this, action) && action.id !== 'dxrd-expression';
    };
    return ValueEditorAddOn;
}(DesignerEditorAddOn));
exports.ValueEditorAddOn = ValueEditorAddOn;


/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_utils_1 = __webpack_require__(0);
var _types_1 = __webpack_require__(415);
var analytics_internal_1 = __webpack_require__(2);
var data_grid_1 = __webpack_require__(496);
var data_source_1 = __webpack_require__(387);
var button_group_1 = __webpack_require__(460);
var xrBand_1 = __webpack_require__(15);
var xrCrossband_1 = __webpack_require__(54);
var ErrorPanelViewModel = (function (_super) {
    __extends(ErrorPanelViewModel, _super);
    function ErrorPanelViewModel(options) {
        var _a;
        var _this = _super.call(this) || this;
        _this._offset = 20;
        _this._height = ko.observable(210);
        _this._errorSource = ko.observable(_types_1.ErrorSource.All);
        _this._choosenTypes = ko.observableArray([]);
        _this._filterValue = ko.observable();
        _this._getUndoEngine = null;
        _this._onClick = function () { return void 0; };
        _this._latestChangeSet = ko.observable(analytics_utils_1._LatestChangeSet.Empty());
        _this.collapsed = ko.observable(true);
        _this.position = ko.observable(null);
        _this._errorList = ko.observableArray([]);
        _this._providers = [];
        _this._subscriptions = [];
        _this._errorMessage = ko.computed(function () { return _this._createMessage(_this._errorList().filter(function (x) { return x.errorType == _types_1.ErrorType.Error; }).length, analytics_internal_1.getLocalization('{0} Error|{0} Errors', 'ReportStringId.ReportDesignAnalyzer_Error')); });
        _this._warningMessage = ko.computed(function () { return _this._createMessage(_this._errorList().filter(function (x) { return x.errorType == _types_1.ErrorType.Warning; }).length, analytics_internal_1.getLocalization('{0} Warning|{0} Warnings', 'ReportStringId.ReportDesignAnalyzer_Warning')); });
        _this._informationMessage = ko.computed(function () { return _this._createMessage(_this._errorList().filter(function (x) { return x.errorType == _types_1.ErrorType.Information; }).length, analytics_internal_1.getLocalization('{0} Message|{0} Messages', 'ReportStringId.ReportDesignAnalyzer_Message')); });
        _this._editableObject = options.editableObject;
        _this._resizableOptions = {
            starting: $.noop,
            handles: 'n',
            stop: function (ev) {
                ev.target.style.top = 'unset';
            },
            resize: function (event, ui) {
                _this._height(ui.size.height);
            },
            disabled: _this.collapsed,
            zoom: 1,
            minimumHeight: 210,
            maxHeight: 420
        };
        _this._getUndoEngine = function () { return options.undoEngine && options.undoEngine(); };
        _this._onClick = options.onClick;
        _this._disposables.push({
            dispose: function () {
                _this._getUndoEngine = null;
                _this._latestChangeSet(analytics_utils_1._LatestChangeSet.Empty());
            }
        });
        data_grid_1.default.length;
        button_group_1.default.length;
        if (options.position) {
            _this._position = {
                left: ko.computed(function () { return _this.collapsed() ? 'auto' : (options.position.left() + _this._offset + 'px'); }),
                right: ko.computed(function () { return options.position.right() + _this._offset + 'px'; }),
                height: ko.computed(function () { return (!_this.collapsed() ? _this._height() : 42) + 'px'; })
            };
            _this._disposables.push(_this._position.height);
            _this._disposables.push(_this._position.left);
            _this._disposables.push(_this._position.right);
        }
        _this._disposables.push(_this._collectErrorButtonDisabled = ko.computed(function () {
            return options.undoEngine && options.undoEngine() && options.undoEngine().getCurrentChangeSet().equal(_this._latestChangeSet());
        }));
        _this._selection = options.selection;
        _this._controlsHelper = options.controlsHelper;
        _this._controlScrollingTool = options.controlScrollingTool;
        _this.createDataGridOptions(options.undoEngine);
        _this._disposables.push(_this._errorMessage, _this._warningMessage, _this._informationMessage);
        (_a = _this._disposables).push.apply(_a, ([_this._errorSource, _this._choosenTypes].map(function (x) {
            return x.subscribe(function () {
                var filter = [];
                if (_this._choosenTypes().length) {
                    filter.push(['errorType', 'anyof', _this._choosenTypes()]);
                }
                if (_this._errorSource() !== _types_1.ErrorSource.All) {
                    filter.push(['errorSource', '=', _this._errorSource()]);
                }
                _this._filterValue(filter.reduce(function (res, val) {
                    if (!res.length)
                        res.push(val);
                    else
                        res.push('and', val);
                    return res;
                }, []));
            }, undefined, undefined);
        })));
        return _this;
    }
    ErrorPanelViewModel.prototype._createMessage = function (count, localizationFormat) {
        var formats = localizationFormat.split('|');
        if (count === 1)
            return analytics_internal_1.formatUnicorn(formats[0], count);
        return analytics_internal_1.formatUnicorn(formats[1], count);
    };
    ErrorPanelViewModel.prototype._expandParentBands = function (root) {
        while (root) {
            var surface = root.surface;
            if (surface instanceof xrBand_1.BandSurface) {
                surface.collapsed(false);
            }
            else if (surface instanceof xrCrossband_1.XRCrossBandSurface) {
                var rect = surface['_unitAbsoluteRect'];
                var expandedBands = [];
                surface.parent.getChildrenCollection()().forEach(function (band) {
                    if (surface.isThereIntersection(rect, band.absoluteRect())) {
                        band.collapsed(false);
                        expandedBands.push(band);
                    }
                });
                var expandChildBands = function (bands) {
                    bands && bands.forEach(function (band) {
                        band.collapsed(false);
                        expandChildBands(band.bandsHolder.bands());
                    });
                };
                expandChildBands(expandedBands);
                return;
            }
            root = root.parentModel();
        }
    };
    ErrorPanelViewModel.prototype.clear = function () {
        this._providers = [];
        this._subscriptions.forEach(function (x) { return x.dispose(); });
        this._subscriptions = [];
        this._errorList([]);
    };
    ErrorPanelViewModel.prototype.navigateToItem = function (name) {
        this._onClick && this._onClick();
        var control = this._controlsHelper.getControlByName(name);
        if (!control)
            return;
        if (control['surface']) {
            this._expandParentBands(control);
            this._selection.focused(control['surface']);
            this._controlScrollingTool.scrollToControl(control['surface']);
        }
        else {
            this._editableObject(control);
        }
    };
    ErrorPanelViewModel.prototype.getNotificationTemplate = function () {
        return this._errorList().length > 0 ? 'dxrd-svg-errorPanel-notification' : 'dxrd-svg-errorPanel-notification_empty';
    };
    ErrorPanelViewModel.prototype.getTitleMessage = function () {
        return [this._errorMessage(), this._warningMessage(), this._informationMessage()].join('\n');
    };
    ErrorPanelViewModel.prototype.assignErrors = function () {
        var errors = this._errorList();
        errors.splice(0);
        for (var i = 0; i < this._providers.length; i++) {
            errors.push.apply(errors, this._providers[i].errors());
        }
        this._errorList.valueHasMutated();
    };
    ErrorPanelViewModel.prototype.subscribeProvider = function (provider) {
        var _this = this;
        this._providers.push(provider);
        this._subscriptions.push(provider.errors.subscribe(function (errors) {
            _this.assignErrors();
        }));
        this.assignErrors();
    };
    ErrorPanelViewModel.prototype.collectErrors = function () {
        var undo = this._getUndoEngine();
        var latestChanges = undo && undo.getCurrentChangeSet();
        if (!undo || !latestChanges.equal(this._latestChangeSet())) {
            this._latestChangeSet(latestChanges);
            for (var i = 0; i < this._providers.length; i++) {
                this._providers[i].collectErrors();
            }
        }
    };
    ErrorPanelViewModel.prototype.toggleCollapsed = function () {
        if (this.collapsed())
            this.collectErrors();
        this.collapsed(!this.collapsed());
    };
    ErrorPanelViewModel.prototype.createDataGridOptions = function (undoEngine) {
        var _this = this;
        var ds = ko.observable(new data_source_1.default(this._errorList()));
        this._disposables.push(this._errorList.subscribe(function (newVal) {
            ds().dispose();
            ds(new data_source_1.default(_this._errorList()));
        }));
        this._dataGridOptions = {
            dataSource: ds,
            showColumnLines: false,
            showRowLines: true,
            showBorders: false,
            filterValue: this._filterValue,
            noDataText: analytics_internal_1.getLocalization('No errors', 'ASPxReportsStringId.ReportDesigner_ErrorPanel_NoErrors'),
            columns: [{
                    caption: ' ',
                    width: '30px',
                    dataField: 'errorType',
                    alignment: 'left',
                    cellTemplate: 'dxrd-errorType-column'
                }, {
                    dataField: 'code',
                    caption: analytics_internal_1.getLocalization('Code', 'ReportStringId.ReportDesignAnalyzer_GridColumn_Code'),
                }, {
                    dataField: 'errorSource',
                    visible: false
                }, {
                    dataField: 'description',
                    visible: false
                },
                {
                    dataField: 'message',
                    caption: analytics_internal_1.getLocalization('Description', 'ReportStringId.ReportDesignAnalyzer_GridColumn_Description'),
                },
                {
                    dataField: 'controlName',
                    caption: analytics_internal_1.getLocalization('Source', 'ReportStringId.ReportDesignAnalyzer_GridColumn_Source'),
                    cellTemplate: 'dxrd-source-column'
                }],
            searchPanel: {
                visible: true
            },
            masterDetail: {
                enabled: true,
                template: 'detail'
            },
            onToolbarPreparing: function (e) {
                var toolbarItems = e.toolbarOptions.items;
                toolbarItems.push({
                    widget: 'dxSelectBox',
                    options: {
                        value: _this._errorSource, valueExpr: 'value', displayExpr: 'displayValue', dataSource: [
                            { value: _types_1.ErrorSource.All, displayValue: analytics_internal_1.getLocalization('All', 'DevExpress.XtraReports.Diagnostics.ErrorSource.All') },
                            { value: _types_1.ErrorSource.ReportCreation, displayValue: analytics_internal_1.getLocalization('Report Creation', 'DevExpress.XtraReports.Diagnostics.ErrorSource.Creation') },
                            { value: _types_1.ErrorSource.ReportLayout, displayValue: analytics_internal_1.getLocalization('Report Layout', 'DevExpress.XtraReports.Diagnostics.ErrorSource.Layout') },
                            { value: _types_1.ErrorSource.ReportScripts, displayValue: analytics_internal_1.getLocalization('Report Scripts', 'DevExpress.XtraReports.Diagnostics.ErrorSource.Scripts') }
                        ]
                    },
                    location: 'before'
                });
                toolbarItems.push({
                    template: 'dxrd-error-type-filter',
                    data: {
                        selectedItemKeys: _this._choosenTypes,
                        items: [
                            { template: 'dxrd-error-type-filter-item', text: function () { return _this._errorMessage(); }, icon: _types_1.ErrorType.Error },
                            { template: 'dxrd-error-type-filter-item', text: function () { return _this._warningMessage(); }, icon: _types_1.ErrorType.Warning },
                            { template: 'dxrd-error-type-filter-item', text: function () { return _this._informationMessage(); }, icon: _types_1.ErrorType.Information }
                        ], keyExpr: 'icon', selectionMode: 'multiple', stylingMode: 'outlined'
                    },
                    location: 'before'
                });
                toolbarItems.push({
                    widget: 'dxButtonWithTemplate',
                    cssClass: 'dxrd-collect-errors-button',
                    options: {
                        icon: 'dxrd-svg-errorPanel-collectErrors',
                        text: analytics_internal_1.getLocalization('Collect Errors', 'ASPxReportsStringId.ReportDesigner_Analyzer_CollectErrors'),
                        onClick: function () { return _this.collectErrors(); },
                        disabled: _this._collectErrorButtonDisabled
                    },
                    location: 'before'
                });
            }
        };
    };
    ErrorPanelViewModel.prototype.getIconTemplateName = function (errorType) {
        return 'dxrd-svg-errorPanel-' + _types_1.ErrorType[errorType].toLocaleLowerCase();
    };
    return ErrorPanelViewModel;
}(analytics_utils_1.Disposable));
exports.ErrorPanelViewModel = ErrorPanelViewModel;


/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ErrorSource;
(function (ErrorSource) {
    ErrorSource[ErrorSource["ReportCreation"] = 0] = "ReportCreation";
    ErrorSource[ErrorSource["ReportLayout"] = 1] = "ReportLayout";
    ErrorSource[ErrorSource["ReportScripts"] = 2] = "ReportScripts";
    ErrorSource[ErrorSource["All"] = 3] = "All";
})(ErrorSource = exports.ErrorSource || (exports.ErrorSource = {}));
var ErrorType;
(function (ErrorType) {
    ErrorType[ErrorType["Error"] = 0] = "Error";
    ErrorType[ErrorType["Warning"] = 1] = "Warning";
    ErrorType[ErrorType["Information"] = 2] = "Information";
})(ErrorType = exports.ErrorType || (exports.ErrorType = {}));


/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ControlScrollingTool = (function (_super) {
    __extends(ControlScrollingTool, _super);
    function ControlScrollingTool(_rootElement) {
        var _this = _super.call(this) || this;
        _this._rootElement = _rootElement;
        return _this;
    }
    ControlScrollingTool.prototype.scrollToControl = function (surface) {
        if (this._viewport == null) {
            this._viewport = this._rootElement.getElementsByClassName('dxrd-viewport')[0];
        }
        if (surface['absolutePosition']) {
            var currentPosition = surface['absolutePosition'];
            var scrollLeft = this._getScrollOffset(currentPosition.x(), this._viewport.scrollLeft, this._viewport.clientWidth, this._viewport.scrollWidth);
            var scrollTop = this._getScrollOffset(currentPosition.y(), this._viewport.scrollTop, this._viewport.clientHeight, this._viewport.scrollHeight);
            if (this._viewport.scrollTo) {
                this._viewport.scrollTo({
                    left: scrollLeft,
                    top: scrollTop
                });
            }
            else {
                this._viewport.scrollLeft = scrollLeft;
                this._viewport.scrollTop = scrollTop;
            }
        }
    };
    ControlScrollingTool.prototype._getScrollOffset = function (elementPosition, scrollOffset, visibleSize, fullSize) {
        var newOffset = scrollOffset;
        if (elementPosition < scrollOffset || elementPosition > (scrollOffset + visibleSize) / 2) {
            newOffset = elementPosition;
            if (newOffset + visibleSize / 2 < fullSize) {
                newOffset -= visibleSize / 2;
            }
        }
        return newOffset;
    };
    ControlScrollingTool.prototype.dispose = function () {
        this._viewport = null;
        this._rootElement = null;
    };
    return ControlScrollingTool;
}(analytics_utils_1.Disposable));
exports.ControlScrollingTool = ControlScrollingTool;


/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var settings_1 = __webpack_require__(12);
var _defaultCrossTabControl_1 = __webpack_require__(157);
var xrCrossTab_1 = __webpack_require__(98);
var _crossTabConverter_1 = __webpack_require__(158);
var CrossTabActions = (function (_super) {
    __extends(CrossTabActions, _super);
    function CrossTabActions(_converters, isDisabled) {
        if (isDisabled === void 0) { isDisabled = function () { return false; }; }
        var _this = _super.call(this) || this;
        _this._converters = _converters;
        _super.prototype.initActions.call(_this, settings_1.DefaultCrossTabControl() == _defaultCrossTabControl_1.DefaultCrossTabControlEnum.XRCrossTab ? [
            {
                text: 'Revert to Original Pivot Grid',
                group: function () { return analytics_utils_1.getLocalization('Cross Tab', 'ReportStringId.RibbonXRDesign_PageGroup_CrossTab'); },
                displayText: function () { return analytics_utils_1.getLocalization('Revert to Original Pivot Grid', 'ReportStringId.Verb_RevertCrossTabToPivotGrid'); },
                imageClassName: 'dxrd-image-actions-convertation',
                imageTemplateName: 'dxrd-svg-actions-convertation',
                disabled: ko.pureComputed(function () { return isDisabled(); }),
                clickAction: function (model) {
                    var converter = _this._converter;
                    converter && converter.convert(model);
                }
            }
        ] : []);
        return _this;
    }
    Object.defineProperty(CrossTabActions.prototype, "_converter", {
        get: function () {
            return this._converters.filter(function (x) { return x instanceof _crossTabConverter_1.PivotGridConverter; })[0];
        },
        enumerable: true,
        configurable: true
    });
    CrossTabActions.prototype.condition = function (context) {
        return context instanceof xrCrossTab_1.XRCrossTabViewModel && !!context.originalPivotGridLayout();
    };
    return CrossTabActions;
}(analytics_internal_1.BaseActionsProvider));
exports.CrossTabActions = CrossTabActions;


/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var xrPdfContent_1 = __webpack_require__(194);
var PdfContentActions = (function (_super) {
    __extends(PdfContentActions, _super);
    function PdfContentActions(_selection, isDisabled) {
        if (isDisabled === void 0) { isDisabled = function () { return false; }; }
        var _this = _super.call(this) || this;
        _this._selection = _selection;
        _super.prototype.initActions.call(_this, [
            {
                text: 'Fit Size to Content',
                group: function () { return analytics_utils_1.getLocalization('Pdf Content', 'ReportStringId.RibbonXRDesign_PageGroup_PdfContent'); },
                displayText: function () { return analytics_utils_1.getLocalization('Fit Size to Content', 'ReportStringId.Verb_FitControlSize'); },
                imageClassName: 'dxrd-image-actions-fit_to_container',
                imageTemplateName: 'dxrd-svg-actions-fit_to_container',
                disabled: ko.pureComputed(function () { return isDisabled() || _this._focusedPdfContent && (_this._focusedPdfContent.generateOwnPages() || !_this._focusedPdfContent.canFit() || !_this._focusedPdfContent.imageSource()); }),
                clickAction: function (model) {
                    model.fitToContent();
                }
            }
        ]);
        return _this;
    }
    Object.defineProperty(PdfContentActions.prototype, "_focusedPdfContent", {
        get: function () {
            var focusedModel = this._selection.focused().getControlModel();
            if (focusedModel instanceof xrPdfContent_1.XRPdfContentViewModel)
                return focusedModel;
            return null;
        },
        enumerable: true,
        configurable: true
    });
    PdfContentActions.prototype.condition = function (context) {
        return context instanceof xrPdfContent_1.XRPdfContentViewModel;
    };
    return PdfContentActions;
}(analytics_internal_1.BaseActionsProvider));
exports.PdfContentActions = PdfContentActions;


/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var reportExpressionEditorWrapper_1 = __webpack_require__(79);
var ExpressionSmartTag = (function (_super) {
    __extends(ExpressionSmartTag, _super);
    function ExpressionSmartTag(reportElement) {
        var _this = _super.call(this) || this;
        _this.reportElement = reportElement;
        _this.templateName = 'dxrd-smart-tag-exressions';
        _this.imageTemplateName = 'dxrd-svg-properties-propertyexpression';
        _this.expressionEditor = ko.observable();
        return _this;
    }
    ExpressionSmartTag.prototype.onClick = function () {
        this.expressionEditor() && this.expressionEditor().dispose();
        this.expressionEditor(new reportExpressionEditorWrapper_1.ReportExpressionEditorWrapper(ko.observable(this.reportElement), ko.observable(null)));
        this.expressionEditor().popupVisible(true);
    };
    return ExpressionSmartTag;
}(analytics_utils_1.Disposable));
exports.ExpressionSmartTag = ExpressionSmartTag;


/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_elements_1 = __webpack_require__(5);
var analytics_utils_1 = __webpack_require__(0);
var xrBand_1 = __webpack_require__(15);
var xrReport_1 = __webpack_require__(16);
var settings_1 = __webpack_require__(12);
var SmartTagModel = (function (_super) {
    __extends(SmartTagModel, _super);
    function SmartTagModel(selection, reportSurface, offset) {
        var _this = _super.call(this) || this;
        _this.margin = ko.observable('');
        _this.smartTags = ko.observableArray();
        _this.visible = ko.observable(true);
        _this.position = new analytics_elements_1.Point(0, 0);
        _this._disposables.push(selection.focused.subscribe(function (selectedSurface) {
            var visible = false;
            var selectedItem = selectedSurface && selectedSurface['_control'];
            var factory = settings_1.smartTagFactory();
            if (selectedItem) {
                var reportElement = selectedItem;
                visible = true;
                _this.smartTags().forEach(function (x) { return x.dispose(); });
                _this.smartTags(factory[reportElement.controlType] ? factory[reportElement.controlType](reportElement) :
                    factory['default'] && factory['default'](reportElement));
            }
            _this.visible(visible);
        }));
        _this._disposables.push(ko.computed(function () {
            if (!reportSurface())
                return;
            var selectedSurface = selection.focused();
            var selectedItem = selectedSurface && selectedSurface['_control'];
            if (selectedItem) {
                var position = selectedSurface['absoluteRect'] && selectedSurface['absoluteRect']();
                if (position) {
                    _this.position.x(position.right + reportSurface().margins.left());
                    _this.position.y(position.top);
                }
                else {
                    _this.position.x(reportSurface()['_width']() + offset());
                    _this.position.y(0);
                }
                _this.margin(_this.getMargin(selectedItem));
            }
        }).extend(({ rateLimit: { timeout: 1, method: 'notifyWhenChangesStop' } })));
        return _this;
    }
    SmartTagModel.prototype.getMargin = function (reportElement) {
        if (reportElement instanceof xrReport_1.ReportViewModel)
            return '3px';
        var margin = reportElement instanceof xrBand_1.BandViewModel ? -22 : 9;
        return margin + 'px';
    };
    return SmartTagModel;
}(analytics_utils_1.Disposable));
exports.SmartTagModel = SmartTagModel;


/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var queryBuilder_widgets_internal_1 = __webpack_require__(456);
var BandLevelEditor = (function (_super) {
    __extends(BandLevelEditor, _super);
    function BandLevelEditor(info, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, info, level, parentDisabled, textToSearch) || this;
        _this.min = 0;
        _this._disposables.push(_this.max = ko.pureComputed(function () {
            var model = _this._model();
            if (model && model.maxLevel)
                return model.maxLevel;
            return model && model.getModel && model.getModel() && model.getModel().maxLevel;
        }));
        return _this;
    }
    return BandLevelEditor;
}(queryBuilder_widgets_internal_1.UndoEditor));
exports.BandLevelEditor = BandLevelEditor;


/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var TextTag = (function () {
    function TextTag(node, inheritValues) {
        this.node = node;
        this.inheritValues = inheritValues;
        this.value = null;
        this.element = null;
        this.hasChildNodes = false;
        this.value = this.node.getAttribute && this.node.getAttribute(ValueConverter.ValueAttrName);
        if (this.value)
            this.value = this.value.trim();
    }
    TextTag.prototype.createElement = function () {
        this.element = document.createTextNode(this.node.outerHTML || this.node.textContent || this.node['data']);
    };
    TextTag.prototype.setProperties = function (parameters, inheritValues) { };
    TextTag.prototype.appendTo = function (el) {
        el.appendChild(this.element);
    };
    return TextTag;
}());
var SpanTag = (function (_super) {
    __extends(SpanTag, _super);
    function SpanTag() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.hasChildNodes = true;
        return _this;
    }
    SpanTag.prototype.createElement = function () {
        this.element = document.createElement('span');
        if (this.inheritValues.backcolor) {
            this.element.style.backgroundColor = 'inherit';
        }
    };
    return SpanTag;
}(TextTag));
var AnchorTag = (function (_super) {
    __extends(AnchorTag, _super);
    function AnchorTag() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.hasChildNodes = true;
        return _this;
    }
    AnchorTag.prototype.createElement = function () {
        this.element = document.createElement('a');
    };
    AnchorTag.prototype.setProperties = function () {
        this.element.href = 'javascript:void(0);';
    };
    return AnchorTag;
}(TextTag));
var ImageTag = (function (_super) {
    __extends(ImageTag, _super);
    function ImageTag() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ImageTag.prototype.appendTo = function (el) { };
    return ImageTag;
}(TextTag));
var SimpleTag = (function (_super) {
    __extends(SimpleTag, _super);
    function SimpleTag() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SimpleTag.prototype.createElement = function () {
        this.element = document.createElement(this.node.nodeName);
    };
    return SimpleTag;
}(SpanTag));
var ColorTag = (function (_super) {
    __extends(ColorTag, _super);
    function ColorTag() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ColorTag.prototype.setProperties = function () {
        this.element.style.color = analytics_utils_1.colorFromString(this.value)();
    };
    return ColorTag;
}(SpanTag));
var BackColorTag = (function (_super) {
    __extends(BackColorTag, _super);
    function BackColorTag() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BackColorTag.prototype.setProperties = function () {
        this.element.style.backgroundColor = analytics_utils_1.colorFromString(this.value)();
        this.inheritValues.backcolor = true;
    };
    return BackColorTag;
}(SpanTag));
var SizeTag = (function (_super) {
    __extends(SizeTag, _super);
    function SizeTag() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SizeTag.prototype.setProperties = function (parameters) {
        var sizeValue;
        var textValue = this.value;
        if (textValue && (textValue[0] === '+' || textValue[0] === '-')) {
            var _val = parseFloat(textValue.substr(1));
            sizeValue = this.inheritValues.fontSize + (textValue[0] === '+' ? _val : _val * (-1));
        }
        else {
            sizeValue = parseFloat(textValue);
        }
        if (!isNaN(sizeValue))
            this.element.style.fontSize = sizeValue + (parameters.fontUnit || 'pt');
        else
            sizeValue = this.inheritValues.fontSize;
        this.inheritValues.fontSize = sizeValue;
    };
    return SizeTag;
}(SpanTag));
var ValueConverter = (function () {
    function ValueConverter(_displayNameParameters) {
        this._displayNameParameters = _displayNameParameters;
        this._regExp = /<(<*)(\/?)(\s*\w+\s*)(=(\s*.+?\s*)|\b[^>]*)?>/gm;
    }
    ValueConverter.prototype._createTag = function (node, inheritValues) {
        if (!this._checkValidTag(node.nodeName) || node.nodeName === '#text') {
            return new TextTag(node, inheritValues);
        }
        else if (node.nodeName === 'COLOR') {
            return new ColorTag(node, inheritValues);
        }
        else if (node.nodeName === 'BACKCOLOR') {
            return new BackColorTag(node, inheritValues);
        }
        else if (node.nodeName === 'HREF') {
            return new AnchorTag(node, inheritValues);
        }
        else if (node.nodeName === 'SIZE') {
            return new SizeTag(node, inheritValues);
        }
        else if (node.nodeName === 'IMG') {
            return new ImageTag(node, inheritValues);
        }
        else if (node.nodeName !== '#text') {
            return new SimpleTag(node, inheritValues);
        }
    };
    ValueConverter.prototype._parceToXml = function (str) {
        var matches;
        while ((matches = this._regExp.exec(str)) !== null) {
            if (matches.index === this._regExp.lastIndex) {
                this._regExp.lastIndex++;
            }
            var fullmatch = matches[0];
            var escapeTag = matches[1];
            var closingTag = matches[2] === '/' ? '/' : '';
            var tag = matches[3];
            var value = matches[5];
            var replacedStr = '';
            if (this._checkValidTag(tag) && !escapeTag) {
                if (value) {
                    replacedStr = '<' + tag + ' ' + ValueConverter.ValueAttrName + "='" + value + "'>";
                }
                else {
                    replacedStr = '<' + closingTag + tag + '>';
                }
            }
            else {
                var _fullmatch = fullmatch;
                if (!!escapeTag) {
                    _fullmatch = _fullmatch.slice(escapeTag.length);
                }
                var $spanEscape = $('<span>');
                replacedStr = $spanEscape.text(_fullmatch)[0].innerHTML;
            }
            str = str.replace(fullmatch, replacedStr);
        }
        str = str.replace(/<nbsp>/g, '&nbsp;');
        str = str.replace(/<br>/g, this._displayNameParameters.wordWrap ? '<br>' : '');
        return str;
    };
    ValueConverter.prototype._checkValidTag = function (tag) {
        switch (tag.toLocaleLowerCase()) {
            case 'href':
            case 'color':
            case 'backcolor':
            case 'size':
            case 'img':
            case 'image':
            case 'br':
            case 'b':
            case 'i':
            case 'u':
            case 'nbsp':
            case 's': return true;
        }
        return false;
    };
    ValueConverter.prototype._createTree = function (treeElement, writeTo, inheritValues) {
        var _this = this;
        if (inheritValues === void 0) { inheritValues = { fontSize: this._displayNameParameters.fontSize || 0 }; }
        if (treeElement.childNodes.length > 0) {
            var childNodes = Array.prototype.slice.call(treeElement.childNodes);
            childNodes.forEach(function (node) {
                var tag = _this._createTag(node, { fontSize: inheritValues.fontSize, backcolor: inheritValues.backcolor });
                tag.createElement();
                tag.setProperties(_this._displayNameParameters);
                tag.appendTo(writeTo);
                if (tag.hasChildNodes)
                    _this._createTree(node, tag.element, tag.inheritValues);
            });
        }
    };
    ValueConverter.prototype.appendTo = function (element) {
        if (!element)
            return;
        var fragment = document.createDocumentFragment();
        var temp = document.createElement('div');
        fragment.appendChild(temp);
        ko.utils.setHtml(element, '');
        ko.utils.setHtml(temp, this._parceToXml(this._displayNameParameters.text));
        this._createTree(temp, element);
        fragment.removeChild(temp);
    };
    ValueConverter.ValueAttrName = 'value';
    return ValueConverter;
}());
exports.ValueConverter = ValueConverter;


/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_internal_1 = __webpack_require__(8);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var ExpressionableFontModel = (function (_super) {
    __extends(ExpressionableFontModel, _super);
    function ExpressionableFontModel(value, _model) {
        var _this = _super.call(this, value) || this;
        _this._model = _model;
        _this.isPropertyHighlighted = function (propertyName) {
            var controlModel = _this._model();
            if (!controlModel)
                return false;
            propertyName = propertyName === 'family' ? 'name' : propertyName;
            return controlModel.isPropertyHighlighted && controlModel.isPropertyHighlighted.apply(controlModel, [propertyName, 'font']);
        };
        $.extend(_this.modificators, {
            boldHasExpression: ko.computed(function () { return _this.isPropertyHighlighted('bold'); }),
            italicHasExpression: ko.computed(function () { return _this.isPropertyHighlighted('italic'); }),
            strikeoutHasExpression: ko.computed(function () { return _this.isPropertyHighlighted('strikeout'); }),
            underlineHasExpression: ko.computed(function () { return _this.isPropertyHighlighted('underline'); })
        });
        _this._disposables.push(_this.modificators.boldHasExpression);
        _this._disposables.push(_this.modificators.italicHasExpression);
        _this._disposables.push(_this.modificators.strikeoutHasExpression);
        _this._disposables.push(_this.modificators.underlineHasExpression);
        return _this;
    }
    return ExpressionableFontModel;
}(analytics_widgets_internal_1.FontModel));
exports.ExpressionableFontModel = ExpressionableFontModel;


/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editorTemplates_1 = __webpack_require__(9);
exports.dataBindingsSerializationInfo = [
    { propertyName: 'ActualValue', editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBinding'), displayName: 'Actual Value', localizationId: 'DevExpress.XtraReports.UI.XRGauge.ActualValue' },
    { propertyName: 'Bookmark', editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBinding'), displayName: 'Bookmark', localizationId: 'DevExpress.XtraReports.UI.XRControl.Bookmark' },
    { propertyName: 'CheckBoxState', editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBinding'), displayName: 'Check Box State', localizationId: 'DevExpress.XtraReports.UI.XRCheckBox.CheckBoxState' },
    { propertyName: 'Html', editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBinding'), displayName: 'HTML', localizationId: 'ASPxReportsStringId.ExportName_html' },
    { propertyName: 'Image', editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBinding'), displayName: 'Image', localizationId: 'DevExpress.XtraReports.UI.XRPictureBox.Image' },
    { propertyName: 'ImageSource', editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBinding'), displayName: 'Image Source', localizationId: 'DevExpress.XtraReports.UI.XRPictureBox.ImageSource' },
    { propertyName: 'ImageUrl', editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBinding'), displayName: 'Image URL', localizationId: 'DevExpress.XtraReports.UI.XRPictureBox.ImageUrl' },
    { propertyName: 'Maximum', editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBinding'), displayName: 'Maximum', localizationId: 'DevExpress.XtraReports.UI.XRGauge.Maximum' },
    { propertyName: 'Minimum', editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBinding'), displayName: 'Minimum', localizationId: 'DevExpress.XtraReports.UI.XRGauge.Minimum' },
    { propertyName: 'NavigateUrl', editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBinding'), displayName: 'Navigation URL', localizationId: 'DevExpress.XtraReports.UI.XRControl.NavigateUrl' },
    { propertyName: 'Rtf', editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBinding'), displayName: 'RTF', localizationId: 'ASPxReportsStringId.ExportName_rtf' },
    { propertyName: 'Tag', editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBinding'), displayName: 'Tag', localizationId: 'DevExpress.XtraReports.UI.XRControl.Tag' },
    { propertyName: 'TargetValue', editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBinding'), displayName: 'Target Value', localizationId: 'DevExpress.XtraReports.UI.XRGauge.TargetValue' },
    { propertyName: 'Text', editor: editorTemplates_1.designerEditorTemplates.getEditor('dataBinding'), displayName: 'Text', localizationId: 'DevExpress.XtraReports.UI.XRControl.Text' }
];


/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrDetailReportBand_1 = __webpack_require__(66);
var analytics_widgets_1 = __webpack_require__(4);
var ko = __webpack_require__(1);
var BandEditorBase = (function (_super) {
    __extends(BandEditorBase, _super);
    function BandEditorBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.generateValue = function (bands) {
            if (!_this.bands) {
                _this.bands = bands(_this.filter, _this.noneNeaded);
            }
            return _this.bands;
        };
        _this.bands = null;
        return _this;
    }
    return BandEditorBase;
}(analytics_widgets_1.Editor));
exports.BandEditorBase = BandEditorBase;
var RunningBandEditor = (function (_super) {
    __extends(RunningBandEditor, _super);
    function RunningBandEditor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.filter = function (item) {
            return item.controlType === 'GroupHeaderBand' || item.controlType === 'DetailReportBand';
        };
        _this.noneNeaded = true;
        return _this;
    }
    return RunningBandEditor;
}(BandEditorBase));
exports.RunningBandEditor = RunningBandEditor;
var BandsEditor = (function (_super) {
    __extends(BandsEditor, _super);
    function BandsEditor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.filter = function (item) {
            return !(item instanceof xrDetailReportBand_1.DetailReportBand);
        };
        _this.noneNeaded = false;
        return _this;
    }
    return BandsEditor;
}(BandEditorBase));
exports.BandsEditor = BandsEditor;
var SortingBandEditor = (function (_super) {
    __extends(SortingBandEditor, _super);
    function SortingBandEditor(info, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, info, level, parentDisabled, textToSearch) || this;
        _this.filter = function (item) {
            return item.controlType === 'GroupHeaderBand' || item.controlType === 'DetailBand';
        };
        _this.noneNeaded = true;
        var value = ko.computed(function () { return _this.value() || {}; });
        _this._disposables.push(value);
        _this.viewmodel = new analytics_widgets_1.ObjectProperties(value, { editors: [groupfieldMetaData_1.sortFields, groupfieldMetaData_1.groupFields] }, level + 1, _this.disabled, textToSearch);
        _this._disposables.push(_this.viewmodel);
        return _this;
    }
    return SortingBandEditor;
}(BandEditorBase));
exports.SortingBandEditor = SortingBandEditor;
var PageBreakBandEditor = (function (_super) {
    __extends(PageBreakBandEditor, _super);
    function PageBreakBandEditor(info, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, info, level, parentDisabled, textToSearch) || this;
        _this._disposables.push(_this.values = ko.pureComputed(function () {
            if (_this._model() && _this._model()[bandsMetadata_1.printAcrossBands.propertyName] && !!_this._model()[bandsMetadata_1.printAcrossBands.propertyName]())
                return bandsMetadata_1.pageBreakWithoutAfterValues;
            else
                return bandsMetadata_1.pageBreakValues;
        }));
        return _this;
    }
    return PageBreakBandEditor;
}(analytics_widgets_1.Editor));
exports.PageBreakBandEditor = PageBreakBandEditor;
var groupfieldMetaData_1 = __webpack_require__(52);
var bandsMetadata_1 = __webpack_require__(26);


/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_widgets_internal_1 = __webpack_require__(8);
var analytics_widgets_1 = __webpack_require__(4);
var ChartValueBindingEditor = (function (_super) {
    __extends(ChartValueBindingEditor, _super);
    function ChartValueBindingEditor(info, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, info, level, parentDisabled, textToSearch) || this;
        _this.treeListController = new analytics_widgets_internal_1.TreeListController();
        return _this;
    }
    ChartValueBindingEditor.prototype.generateDisplayValue = function (reportDataSource) {
        var _this = this;
        if (!this.displayBinding) {
            this._disposables.push(this.displayBinding = ko.computed(function () {
                return _this._model && _this._model() && _this._model()['displayValue'](reportDataSource());
            }));
        }
        return this.displayBinding();
    };
    ChartValueBindingEditor.prototype.generateValue = function (undoEngine, reportParameters, reportDataSource) {
        var _this = this;
        if (!this.binding) {
            this._disposables.push(this.binding = ko.computed({
                read: function () {
                    return _this._model && _this._model() && _this._model()['calculatePath'](reportDataSource()) || '';
                },
                write: function (path) {
                    var pathRequest = new analytics_utils_1.PathRequest(path);
                    undoEngine.start();
                    _this._model()['updateValue'](pathRequest, reportParameters());
                    undoEngine.end();
                }
            }));
        }
        return this.binding;
    };
    return ChartValueBindingEditor;
}(analytics_widgets_1.Editor));
exports.ChartValueBindingEditor = ChartValueBindingEditor;


/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_widgets_1 = __webpack_require__(4);
var DataSourceEditor = (function (_super) {
    __extends(DataSourceEditor, _super);
    function DataSourceEditor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataSourceEditor.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._getEditorOptions = null;
    };
    DataSourceEditor.prototype.getEditorOptions = function (dataSourceHelper, undoEngine, popupContainer) {
        if (!this._getEditorOptions) {
            var _dataSourceHelper = ko.unwrap(dataSourceHelper);
            var items = ko.computed(function () { return _dataSourceHelper && _dataSourceHelper.usedDataSources(); });
            this._disposables.push(items);
            this._getEditorOptions = {
                items: items,
                value: _dataSourceHelper && _dataSourceHelper.dataSourceValue(this.value, undoEngine),
                valueExpr: 'name',
                displayExpr: _dataSourceHelper && _dataSourceHelper.dataSourceDisplayExpr,
                displayCustomValue: true,
                disabled: this.disabled,
                dropDownOptions: { container: popupContainer },
                popupPosition: { boundary: popupContainer },
                useItemTextAsTitle: true
            };
        }
        return this._getEditorOptions;
    };
    return DataSourceEditor;
}(analytics_widgets_1.Editor));
exports.DataSourceEditor = DataSourceEditor;


/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_1 = __webpack_require__(4);
var ExplorerEditor = (function (_super) {
    __extends(ExplorerEditor, _super);
    function ExplorerEditor(modelPropertyInfo, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, modelPropertyInfo, level, parentDisabled, textToSearch) || this;
        _this._collectionNames = ['controls', 'bands'];
        _this._disposables.push(_this.displayExpr = ko.computed(function () {
            var value = ko.unwrap(_this.value);
            return value && ko.unwrap(value.displayName || value.name) || '';
        }));
        var model = ko.computed(function () { return _this._model() && _this._model()['root']; });
        _this._disposables.push(model);
        _this._disposables.push(_this.itemsProvider = new analytics_internal_1.ObjectExplorerProvider([{ model: model, name: 'Report', displayName: 'Report', className: 'master_report' }], ['bands', 'controls', 'rows', 'cells'], _this.value, _reportExplorer_1.ReportExplorerModel.getPathByMember));
        _this.itemsProvider.path('Report');
        _this.treeListController = new analytics_internal_1.ObjectStructureTreeListController(['bands', 'controls', 'rows', 'cells', 'Report']);
        _this.treeListController.canSelect = function (item) {
            return !item.hasItems && !(item.data && (item.data['data'] instanceof xrBand_1.BandViewModel));
        };
        _this.treeListController.itemsFilter = function (item) {
            return item && item['data'] && _this._isVisible(item['data']);
        };
        return _this;
    }
    ExplorerEditor.prototype._isEqualModel = function (item) {
        return item === this._model() || (this._model() && this._model()['isSame'] && this._model()['isSame'](item));
    };
    ExplorerEditor.prototype._isVisible = function (item) {
        if (item instanceof xrBand_1.BandViewModel) {
            for (var i = 0; i < this._collectionNames.length; i++) {
                var collection = item[this._collectionNames[i]] && item[this._collectionNames[i]]();
                if (collection) {
                    for (var j = 0; j < collection.length; j++) {
                        if (this._isVisible(collection[j]))
                            return true;
                    }
                }
            }
            return false;
        }
        else {
            return !this._isEqualModel(item) &&
                item.controlType !== 'XRTableOfContents' &&
                item.controlType !== 'XRPivotGrid' &&
                item.controlType !== 'XRPageBreak' &&
                item.controlType !== 'XRSubreport' &&
                item.controlType !== 'PivotGridField';
        }
    };
    return ExplorerEditor;
}(analytics_widgets_1.Editor));
exports.ExplorerEditor = ExplorerEditor;
var DrillDownEditor = (function (_super) {
    __extends(DrillDownEditor, _super);
    function DrillDownEditor(info, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, info, level, parentDisabled, textToSearch) || this;
        _this.path = ko.observable(null);
        _this._disposables.push(ko.computed(function () {
            if (_this._model() && _this._model() instanceof xrBand_1.BandViewModel) {
                var target = null;
                if (_this._model() instanceof xrDetailBand_1.DetailBand && _this._model().hasHierarchyPrintOptions()) {
                    target = _this._model();
                }
                else {
                    var bands = _this._model().parentModel()['bands']();
                    var position = bands.indexOf(_this._model());
                    target = _this._findFistAvailableBand(bands, position - 1);
                }
                if (target) {
                    _this._setDisabled(false);
                    _this.itemsProvider.path(_reportExplorer_1.ReportExplorerModel.getPathByMember(target));
                }
                else {
                    _this.itemsProvider.path('');
                    _this._setDisabled(true);
                }
            }
        }));
        return _this;
    }
    DrillDownEditor.prototype._setDisabled = function (value) {
        var info = this.info();
        if (info.disabled) {
            if (ko.isObservable(info.disabled)) {
                info.disabled(value);
            }
            else {
                info.disabled = value;
            }
        }
        else {
            info.disabled = ko.observable(value);
        }
    };
    DrillDownEditor.prototype._findFistAvailableBand = function (bands, position) {
        if (position === -1) {
            return null;
        }
        var target = bands[position];
        if (target && (target.controlType === 'GroupHeaderBand' || target.controlType === 'DetailBand')) {
            return target;
        }
        else if (target) {
            return this._findFistAvailableBand(bands, position - 1);
        }
        else {
            return null;
        }
    };
    return DrillDownEditor;
}(ExplorerEditor));
exports.DrillDownEditor = DrillDownEditor;
var xrBand_1 = __webpack_require__(15);
var xrDetailBand_1 = __webpack_require__(86);
var _reportExplorer_1 = __webpack_require__(235);


/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var reportExpressionEditorWrapper_1 = __webpack_require__(79);
var reportExpressionEditor_1 = __webpack_require__(241);
var ReportComplexExpressionEditor = (function (_super) {
    __extends(ReportComplexExpressionEditor, _super);
    function ReportComplexExpressionEditor(modelPropertyInfo, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, modelPropertyInfo, level, parentDisabled, textToSearch) || this;
        _this.editorTemplateName = 'dxrd-reportexpression-ellipsis';
        _this.wrapper = new reportExpressionEditorWrapper_1.ReportExpressionEditorWrapper(ko.observable(), _this.value);
        _this.popupVisible = _this.wrapper.popupVisible;
        _this._disposables.push(_this.wrapper);
        return _this;
    }
    ReportComplexExpressionEditor.prototype.showPopup = function (editableObject) {
        this.wrapper.control(editableObject);
        this.popupVisible(true);
    };
    return ReportComplexExpressionEditor;
}(reportExpressionEditor_1.ReportExpressionEditor));
exports.ReportComplexExpressionEditor = ReportComplexExpressionEditor;


/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _expressionableFontModel_1 = __webpack_require__(423);
var metadata_1 = __webpack_require__(6);
var ko = __webpack_require__(1);
var analytics_widgets_1 = __webpack_require__(4);
var ExpressionableFontEditor = (function (_super) {
    __extends(ExpressionableFontEditor, _super);
    function ExpressionableFontEditor(info, level, parentDisabled, textToSearch) {
        return _super.call(this, info, level, parentDisabled, textToSearch) || this;
    }
    ExpressionableFontEditor.prototype.createObjectProperties = function () {
        var model = new _expressionableFontModel_1.ExpressionableFontModel(this.value, this._model);
        this._disposables.push(model);
        return new analytics_widgets_1.ObjectProperties(ko.observable(model), {
            editors: metadata_1.expressionableFontInfo
        }, this.level + 1, this.disabled, undefined, this.textToSearch);
    };
    return ExpressionableFontEditor;
}(analytics_widgets_1.FontEditor));
exports.ExpressionableFontEditor = ExpressionableFontEditor;


/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_widgets_1 = __webpack_require__(4);
var FieldsComboboxEditor = (function (_super) {
    __extends(FieldsComboboxEditor, _super);
    function FieldsComboboxEditor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.wrappedValues = null;
        return _this;
    }
    FieldsComboboxEditor.prototype._createItem = function (displayNameProvider, item) {
        var deferred = $.Deferred();
        displayNameProvider.getDisplayNameByPath(this.path(), item).done(function (result) {
            deferred.resolve({ value: item, displayValue: result });
        }).fail(function () {
            deferred.resolve({ value: item, displayValue: item });
        });
        return deferred;
    };
    FieldsComboboxEditor.prototype._updateValues = function (values, displayNameProvider) {
        var _this = this;
        this.wrappedValues(values);
        $.when.apply($, values.map(function (x) { return _this._createItem(displayNameProvider, x.value); })).done(function () {
            var results = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                results[_i] = arguments[_i];
            }
            _this.wrappedValues(results);
        });
    };
    FieldsComboboxEditor.prototype.wrapValues = function (displayNameProvider) {
        var _this = this;
        if (!this.wrappedValues) {
            this.wrappedValues = ko.observableArray();
            this._disposables.push(this.values.subscribe(function (newVal) {
                _this._updateValues(newVal, displayNameProvider());
            }));
            this._updateValues(this.values(), displayNameProvider());
        }
        return this.wrappedValues;
    };
    return FieldsComboboxEditor;
}(analytics_widgets_1.FieldListEditor));
exports.FieldsComboboxEditor = FieldsComboboxEditor;


/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _formatStringService_1 = __webpack_require__(240);
var settings_1 = __webpack_require__(12);
var analytics_widgets_1 = __webpack_require__(4);
var FormatStringEditor = (function (_super) {
    __extends(FormatStringEditor, _super);
    function FormatStringEditor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FormatStringEditor.prototype, "actions", {
        get: function () { return _formatStringService_1.FormatStringService.actions; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormatStringEditor.prototype, "customPatterns", {
        get: function () { return settings_1.formatStringEditorCustomSet; },
        enumerable: true,
        configurable: true
    });
    return FormatStringEditor;
}(analytics_widgets_1.Editor));
exports.FormatStringEditor = FormatStringEditor;


/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var formattingrules_1 = __webpack_require__(45);
var ko = __webpack_require__(1);
var analytics_widgets_1 = __webpack_require__(4);
var FormattingRuleEditor = (function (_super) {
    __extends(FormattingRuleEditor, _super);
    function FormattingRuleEditor(info, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, info, level, parentDisabled, textToSearch) || this;
        var rules = ko.pureComputed(function () {
            var formattingRuleSheet = _this._model() && _this._model()['root'] && _this._model()['root'].formattingRuleSheet || ko.observableArray();
            formattingRuleSheet().forEach(function (rule) {
                _this._disposables.push(rule.selected = ko.pureComputed({
                    read: function () {
                        return _this.value()().filter(function (link) { return link.value() === rule; }).length > 0;
                    },
                    write: function (val) {
                        if (val) {
                            _this.value().push(formattingrules_1.FormattingRuleLink.createNew(rule));
                        }
                        else {
                            var link = _this.value()().filter(function (itemLink) { return itemLink.value() === rule; })[0];
                            _this.value().remove(link);
                        }
                    }
                }));
            });
            return formattingRuleSheet;
        });
        _this._disposables.push(rules);
        _this.options = {
            addHandler: function () { return formattingrules_1.FormattingRule.createNew(_this._model()['root']); },
            values: rules,
            displayName: _this.displayName(),
            level: _this.level,
            info: _this.info
        };
        return _this;
    }
    return FormattingRuleEditor;
}(analytics_widgets_1.Editor));
exports.FormattingRuleEditor = FormattingRuleEditor;


/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var xrGauge_1 = __webpack_require__(136);
var ko = __webpack_require__(1);
var analytics_widgets_1 = __webpack_require__(4);
var GaugeStyleEditor = (function (_super) {
    __extends(GaugeStyleEditor, _super);
    function GaugeStyleEditor(info, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, info, 0, parentDisabled, textToSearch) || this;
        _this._viewModel = ko.observable();
        _this.viewmodel = {
            items: ko.pureComputed(function () {
                if (_this._viewModel() && _this._viewModel().viewType) {
                    return _this._viewModel().viewType() === 'Circular' ? xrGauge_1.circularValues : xrGauge_1.linearValues;
                }
                else {
                    return [];
                }
            })
        };
        _this._disposables.push(_this.viewmodel.items);
        return _this;
    }
    GaugeStyleEditor.prototype.update = function (viewModel) {
        _super.prototype.update.call(this, viewModel);
        this._viewModel(viewModel);
    };
    return GaugeStyleEditor;
}(analytics_widgets_1.Editor));
exports.GaugeStyleEditor = GaugeStyleEditor;


/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_widgets_1 = __webpack_require__(4);
var NameEditor = (function (_super) {
    __extends(NameEditor, _super);
    function NameEditor(info, level, parentDisabled, textToSearch) {
        return _super.call(this, info, level, parentDisabled, textToSearch) || this;
    }
    NameEditor.prototype._getEditorValidationRules = function () {
        return (this.currentValidationRules || []).concat(_super.prototype._getEditorValidationRules.call(this));
    };
    NameEditor.prototype.generateRules = function (allControls) {
        var self = this;
        if (self.disabled())
            return [];
        if (!this.currentValidationRules) {
            this.currentValidationRules = [{
                    type: 'custom',
                    validationCallback: function (options) {
                        if (options.value == null)
                            return false;
                        return allControls().filter(function (x) {
                            if (ko.unwrap(x.name).toLowerCase() !== options.value.toLowerCase())
                                return false;
                            var model = self._model();
                            if (!model || x === model)
                                return false;
                            var same = model['isSame'];
                            if (same && $.isFunction(same) && same(x))
                                return false;
                            return true;
                        }).length === 0;
                    },
                    get message() { return analytics_utils_1.getLocalization('Name is not unique', 'ASPxReportsStringId.ReportDesigner_NameUniqueError'); }
                }];
        }
        return this._getEditorValidationRules();
    };
    return NameEditor;
}(analytics_widgets_1.Editor));
exports.NameEditor = NameEditor;


/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var parameter_1 = __webpack_require__(29);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_1 = __webpack_require__(4);
var PivotGridCriteriaEditor = (function (_super) {
    __extends(PivotGridCriteriaEditor, _super);
    function PivotGridCriteriaEditor(info, level, parentDisabled, textToSearch) {
        return _super.call(this, info, level, parentDisabled, textToSearch) || this;
    }
    PivotGridCriteriaEditor.prototype._createItemsProvider = function (fieldListProvider) {
        var _this = this;
        return {
            getItems: function (pathRequest) {
                var model = _this._model.peek();
                if (!model || pathRequest.fullPath.indexOf(parameter_1.Parameter.ParametersRefString) === 0)
                    return $.Deferred().resolve().promise();
                var pivot = model['parent'];
                var result = $.Deferred();
                var fullPath = new analytics_utils_1.PathRequest(analytics_internal_1.getFullPath(pivot.getPath(''), pivot.dataMember()));
                ko.unwrap(fieldListProvider).getItems(fullPath).done(function (dataSourceItems) {
                    var items = [], fields = pivot.fields();
                    for (var i = 0; i < fields.length; i++) {
                        var field = fields[i];
                        if (field.area() === 'DataArea') {
                            continue;
                        }
                        var dataMemberInfo = dataSourceItems.filter(function (item) { return item.name === field.fieldName(); })[0];
                        items.push({
                            displayName: field.getDisplayName(),
                            isList: false,
                            name: field.name(),
                            specifics: dataMemberInfo && dataMemberInfo.specifics.toLowerCase() || 'integer'
                        });
                    }
                    result.resolve(items);
                });
                return result.promise();
            }
        };
    };
    PivotGridCriteriaEditor.prototype._getFieldName = function (name, isRealName) {
        if (isRealName === void 0) { isRealName = false; }
        var model = this._model.peek();
        if (!model)
            return $.Deferred().resolve().promise();
        var pivot = model['parent'];
        var field = analytics_internal_1.find(pivot.fields.peek(), function (f) { return (isRealName ? (f.getDisplayName() || name) : f.name()) === name; });
        var def = $.Deferred();
        if (!field)
            def.reject();
        else
            def.resolve(isRealName ? field.name() : field.getDisplayName());
        return def.promise();
    };
    PivotGridCriteriaEditor.prototype._createDisplayNameProvider = function () {
        var _this = this;
        return {
            getDisplayNameByPath: function (path, name) {
                return _this._getFieldName(name);
            },
            getRealName: function (path, name) {
                return _this._getFieldName(name, true);
            }
        };
    };
    PivotGridCriteriaEditor.prototype.wrapModel = function (fieldListProvider) {
        if (!this.itemsProvider) {
            this.itemsProvider = this._createItemsProvider(fieldListProvider);
            this.displayNameProvider = this._createDisplayNameProvider();
        }
        return this;
    };
    return PivotGridCriteriaEditor;
}(analytics_widgets_1.Editor));
exports.PivotGridCriteriaEditor = PivotGridCriteriaEditor;


/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(9);
var _formatStringService_1 = __webpack_require__(240);
var settings_1 = __webpack_require__(12);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_widgets_internal_1 = __webpack_require__(8);
var analytics_widgets_1 = __webpack_require__(4);
var analytics_widgets_metadata_1 = __webpack_require__(450);
var dataBindings_1 = __webpack_require__(424);
var ContentByTypeEditor = (function (_super) {
    __extends(ContentByTypeEditor, _super);
    function ContentByTypeEditor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ContentByTypeEditor.prototype.createObjectProperties = function () {
        return new analytics_widgets_1.ObjectProperties(this.getViewModel(), undefined, this.level + 1, this.disabled, undefined, this.textToSearch);
    };
    ContentByTypeEditor.prototype.getViewModel = function () {
        var _this = this;
        var value = ko.computed(function () {
            return _this.value() && _this.value().content();
        });
        this._disposables.push(value);
        return value;
    };
    return ContentByTypeEditor;
}(analytics_widgets_1.PropertyGridEditor));
exports.ContentByTypeEditor = ContentByTypeEditor;
var DataBindingsEditor = (function (_super) {
    __extends(DataBindingsEditor, _super);
    function DataBindingsEditor(info, level, parentDisabled, textToSearch) {
        return _super.call(this, info, level, parentDisabled, textToSearch) || this;
    }
    DataBindingsEditor.prototype.createObjectProperties = function () {
        var _this = this;
        var model = ko.pureComputed(function () {
            var obj = {};
            obj.isPropertyModified = function (name) {
                return !obj[name].isEmpty();
            };
            obj.actions = [{
                    action: function (propertyName) { obj[propertyName].resetValue(); },
                    title: analytics_utils_1.getLocalization('Reset', 'AnalyticsCoreStringId.PropertyGrid_PopupMenu_Reset'),
                    visible: function () { return true; }
                }];
            var databindings = _this.value()();
            (databindings || []).map(function (value) { obj[value.propertyName()] = value; });
            return obj;
        });
        this._disposables.push(model);
        return new analytics_widgets_1.ObjectProperties(model, { editors: dataBindings_1.dataBindingsSerializationInfo }, this.level + 1, this.disabled, undefined, this.textToSearch);
    };
    return DataBindingsEditor;
}(analytics_widgets_1.PropertyGridEditor));
exports.DataBindingsEditor = DataBindingsEditor;
var DataBindingEditor = (function (_super) {
    __extends(DataBindingEditor, _super);
    function DataBindingEditor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DataBindingEditor.prototype, "actions", {
        get: function () { return _formatStringService_1.FormatStringService.actions; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataBindingEditor.prototype, "customPatterns", {
        get: function () { return settings_1.formatStringEditorCustomSet; },
        enumerable: true,
        configurable: true
    });
    return DataBindingEditor;
}(analytics_widgets_1.FieldListEditor));
exports.DataBindingEditor = DataBindingEditor;
var FontEditorUndo = (function (_super) {
    __extends(FontEditorUndo, _super);
    function FontEditorUndo(info, level, parentDisabled, textToSearch) {
        return _super.call(this, info, level, parentDisabled, textToSearch) || this;
    }
    FontEditorUndo.prototype.generateValue = function (undoEngine) {
        this.undoEngine = undoEngine;
        return this.viewmodel;
    };
    FontEditorUndo.prototype.createObjectProperties = function () {
        var _this = this;
        var undoValue = ko.computed({
            read: function () {
                return _this.value();
            },
            write: function (val) {
                _this.undoEngine && _this.undoEngine().start();
                _this.value(val);
                _this.undoEngine && _this.undoEngine().end();
            }
        });
        this._disposables.push(undoValue);
        var model = new analytics_widgets_internal_1.FontModel(undoValue);
        this._disposables.push(model);
        return new analytics_widgets_1.ObjectProperties(ko.observable(model), { editors: analytics_widgets_metadata_1.fontInfo }, this.level + 1, this.disabled, undefined, this.textToSearch);
    };
    return FontEditorUndo;
}(analytics_widgets_1.PropertyGridEditor));
exports.FontEditorUndo = FontEditorUndo;


/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _settings_1 = __webpack_require__(31);
var reportStorageWeb_1 = __webpack_require__(34);
var ko = __webpack_require__(1);
var analytics_widgets_1 = __webpack_require__(4);
var data_source_1 = __webpack_require__(387);
var ReportUrlEditor = (function (_super) {
    __extends(ReportUrlEditor, _super);
    function ReportUrlEditor(info, level, parentDisabled, textToSearch) {
        return _super.call(this, info, level, parentDisabled, textToSearch) || this;
    }
    ReportUrlEditor.prototype._initUrls = function (urls, tab) {
        if (!this.urls) {
            if (_settings_1.reportStorageWebIsRegister()) {
                this.urls = urls;
                this.updateUrls();
            }
            else {
                this.urls = ko.computed(function () {
                    return tab() ? (urls() || []).filter(function (x) { return x.Key !== tab().url(); }) : urls();
                });
                this._disposables.push(this.urls);
            }
        }
    };
    ReportUrlEditor.prototype.getValues = function (urls, tab) {
        var _this = this;
        if (!this.dataSource) {
            this._initUrls(urls, tab);
            this._disposables.push(this.dataSource = ko.computed(function () {
                var dataSource = new data_source_1.default({
                    store: _this.urls(),
                    paginate: true,
                    filter: function (url) { return url.Key !== tab().url(); },
                    pageSize: 100
                });
                return dataSource;
            }));
        }
        return this.dataSource;
    };
    ReportUrlEditor.prototype.updateUrls = function () {
        var _this = this;
        if (_settings_1.reportStorageWebIsRegister()) {
            reportStorageWeb_1.ReportStorageWeb.getUrls().done(function (result) { _this.urls(result); });
        }
    };
    return ReportUrlEditor;
}(analytics_widgets_1.Editor));
exports.ReportUrlEditor = ReportUrlEditor;


/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _summaryEditor_1 = __webpack_require__(440);
var _dataBindingMode_1 = __webpack_require__(33);
var analytics_widgets_1 = __webpack_require__(4);
var SummaryEditor = (function (_super) {
    __extends(SummaryEditor, _super);
    function SummaryEditor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.popup = new _summaryEditor_1.SummaryEditorPopup();
        return _this;
    }
    SummaryEditor.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.popup.dispose();
        this.summaryModel && this.summaryModel.dispose();
    };
    SummaryEditor.prototype.getPopupServiceActions = function () {
        var _this = this;
        var actions = _super.prototype.getPopupServiceActions.call(this);
        actions = actions && actions.length > 0 ? [].concat([{
                action: function () {
                    _this.summaryModel && _this.summaryModel.dispose();
                    _this.summaryModel = new _summaryEditor_1.SummaryEditorModel(_this._model()['getModel'] && _this._model()['getModel']() || _this._model());
                    _this.popup.model(_this.summaryModel);
                    _this.popup.visible(true);
                },
                title: 'Run Editor',
                visible: function (propertyName) {
                    var model = _this._model() && _this._model()['getModel'] && _this._model()['getModel']() || _this._model();
                    return _this.visible() && model && model['dataBindingMode'] !== _dataBindingMode_1.DataBindingMode.Bindings;
                }
            }], actions) : [];
        return actions;
    };
    return SummaryEditor;
}(analytics_widgets_1.PropertyGridEditor));
exports.SummaryEditor = SummaryEditor;


/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(6);
var editorTemplates_1 = __webpack_require__(9);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_internal_1 = __webpack_require__(8);
var analytics_widgets_1 = __webpack_require__(4);
var analytics_criteria_1 = __webpack_require__(270);
var _wrappedExpressionOptions_1 = __webpack_require__(84);
var SummaryEditorPopup = (function () {
    function SummaryEditorPopup() {
        var _this = this;
        this.model = ko.observable(null);
        this.grid = new analytics_widgets_1.ObjectProperties(this.model);
        this.visible = ko.observable(false);
        this.isValid = ko.computed(function () { return _this.model() && (!_this.model().calculate.isValid() || !_this.model().weight.isValid()); });
        this.container = function (element) { return analytics_internal_1.getParentContainer(element); };
        this.buttons = [
            {
                toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                    text: analytics_utils_1.getLocalization('Apply', ''), onClick: function () {
                        _this.model().applyChanges();
                        _this.visible(false);
                    },
                    disabled: this.isValid
                }
            },
            {
                toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                    text: analytics_utils_1.getLocalization('Cancel', 'AnalyticsCoreStringId.SearchDialog_Cancel'), onClick: function () {
                        _this.visible(false);
                    }
                }
            }
        ];
    }
    SummaryEditorPopup.prototype.dispose = function () {
        this.buttons = [];
        this.grid.dispose();
        this.model(null);
        this.isValid.dispose();
    };
    return SummaryEditorPopup;
}());
exports.SummaryEditorPopup = SummaryEditorPopup;
var SummaryEditorModel = (function (_super) {
    __extends(SummaryEditorModel, _super);
    function SummaryEditorModel(_control) {
        var _this = _super.call(this) || this;
        _this._control = _control;
        _this._order = ['Running', 'Func', 'calculate', 'weight', 'ignoreNullValues', 'treatStringsAsNumerics'];
        _this._summaryFunctionValues = metadata_1.getSummaryFunctionValues().map(function (x) {
            return {
                value: 'sum' + x.value,
                displayValue: x.displayValue,
                localizationId: x.localizationId
            };
        }).concat([{ value: 'sumWAvg', displayValue: 'Weighted average', localizationId: 'ReportStringId.WAvgDisplayName' }]);
        _this._info = metadata_1.createSummarySerializationInfo(_this._summaryFunctionValues).concat([
            { propertyName: 'calculate', editor: editorTemplates_1.designerEditorTemplates.getEditor('reportexpression'), displayName: 'Argument Expression', localizationId: 'ASPxReportsStringId.ReportDesigner_SummaryEditor_ArgumentExpression' },
            { propertyName: 'weight', editor: editorTemplates_1.designerEditorTemplates.getEditor('reportexpression'), displayName: 'Weight', localizationId: 'ASPxReportsStringId.ReportDesigner_SummaryEditor_Weight' }
        ]).sort(function (a, b) { return _this._order.indexOf(a.propertyName) - _this._order.indexOf(b.propertyName); });
        _this.Func = ko.observable('sumSum');
        _this._disposables.push(_this.calculate = new _wrappedExpressionOptions_1.WrappedExpressionOptions({ value: ko.observable('') }));
        _this._disposables.push(_this.weight = new _wrappedExpressionOptions_1.WrappedExpressionOptions({ value: ko.observable('') }));
        _this._summary = _this._control['Summary'];
        var ignoreNullValues = _this._info.filter(function (info) { return info.propertyName === 'ignoreNullValues'; })[0];
        _this.patchSerializationInfo(ignoreNullValues);
        ignoreNullValues.editorOptions.elementAttr = { class: 'dxrd-first-checkbox' };
        _this.patchSerializationInfo(_this._info.filter(function (info) { return info.propertyName === 'treatStringsAsNumerics'; })[0]);
        _this._initExpressionValues();
        _this.ignoreNullValues = ko.observable(_this._summary.ignoreNullValues());
        _this.treatStringsAsNumerics = ko.observable(_this._summary.treatStringsAsNumerics());
        _this.Running = ko.observable(_this._summary.Running());
        _this._disposables.push(_this.calculate.path = ko.computed(function () { return _this._control.getPath('expression'); }));
        _this._disposables.push(_this.weight.path = ko.computed(function () { return _this._control.getPath('expression'); }));
        return _this;
    }
    SummaryEditorModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._control = null;
        this._summary = null;
    };
    SummaryEditorModel.prototype._initExpressionValues = function () {
        var textBinding = this._control.getExpressionBinding('Text');
        if (!textBinding)
            return;
        var leftPart = textBinding;
        try {
            var expression = analytics_criteria_1.CriteriaOperator.parse(textBinding);
            if (expression instanceof analytics_criteria_1.FunctionOperator && this._summaryFunctionValues.some(function (x) { return x.value === expression.displayType; })) {
                var serializer = new analytics_widgets_internal_1.FilterEditorSerializer();
                this.Func(expression.displayType);
                leftPart = expression.leftPart && serializer.serialize(expression.leftPart);
                this.weight.value(this.Func() === 'sumWAvg' ? expression.rightPart[0] && serializer.serialize(expression.rightPart[0]) : '');
            }
        }
        catch (e) {
            analytics_internal_1.NotifyAboutWarning(e.message);
        }
        this.calculate.value(leftPart);
    };
    SummaryEditorModel.prototype.getInfo = function () {
        return this._info;
    };
    SummaryEditorModel.prototype.patchSerializationInfo = function (info) {
        var displayName = info.displayName;
        var localizationId = info.localizationId;
        info.editorOptions = {
            text: analytics_utils_1.getLocalization(displayName, localizationId)
        };
        info.displayName = undefined;
        info.localizationId = undefined;
    };
    SummaryEditorModel.prototype.applyChanges = function () {
        var undoEngine = analytics_utils_1.UndoEngine.tryGetUndoEngine(this._control);
        undoEngine && undoEngine.start();
        var result = '';
        this._summary.Running(this.Running());
        if (this.isDisabled()) {
            result = this.calculate.value();
        }
        else {
            this._summary.ignoreNullValues(this.ignoreNullValues());
            this._summary.treatStringsAsNumerics(this.treatStringsAsNumerics());
            result = this.Func() + '(' + this.calculate.value() + (this.weight.value() ? ', ' + this.weight.value() : '') + ')';
        }
        this._control.getDefaultBinding().value(result);
        undoEngine && undoEngine.end();
    };
    SummaryEditorModel.prototype.isPropertyDisabled = function (propertyName) {
        if (this.isDisabled()) {
            return propertyName !== 'Running';
        }
        return propertyName === 'weight' && this.Func() !== 'sumWAvg';
    };
    SummaryEditorModel.prototype.isDisabled = function () { return this.Running() === 'None'; };
    return SummaryEditorModel;
}(analytics_utils_1.Disposable));
exports.SummaryEditorModel = SummaryEditorModel;


/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var analytics_widgets_1 = __webpack_require__(4);
var ComboboxUndoEditor = (function (_super) {
    __extends(ComboboxUndoEditor, _super);
    function ComboboxUndoEditor(info, level, parentDisabled, textToSearch) {
        return _super.call(this, info, level, parentDisabled, textToSearch) || this;
    }
    ComboboxUndoEditor.prototype.generateValue = function (undoEngine) {
        var _this = this;
        if (!this.undoValue) {
            this._disposables.push(this.undoValue = ko.computed({
                read: function () {
                    return _this.value();
                },
                write: function (val) {
                    undoEngine().start();
                    _this.value(val);
                    undoEngine().end();
                }
            }));
        }
        return this.undoValue;
    };
    return ComboboxUndoEditor;
}(analytics_widgets_1.Editor));
exports.ComboboxUndoEditor = ComboboxUndoEditor;


/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var _model_1 = __webpack_require__(242);
var analytics_widgets_1 = __webpack_require__(4);
var RichEditVirtualScroll = (function (_super) {
    __extends(RichEditVirtualScroll, _super);
    function RichEditVirtualScroll() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.items = [];
        return _this;
    }
    RichEditVirtualScroll.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._viewPort = null;
        this.items = [];
    };
    RichEditVirtualScroll.prototype.registerViewPort = function (viewPort) {
        var _this = this;
        this._viewPort = viewPort;
        var updateRich = function () { return _this.updateRichPosition(); };
        this._viewPort.addEventListener('scroll', updateRich, true);
        this._disposables.push({
            dispose: function () { return _this._viewPort.removeEventListener('scroll', updateRich, true); }
        });
    };
    RichEditVirtualScroll.prototype.registerRichEditControl = function (element, model) {
        var _this = this;
        this.isDisposing = false;
        if (!this._viewPort) {
            this.registerViewPort($(element).closest('.dxrd-viewport')[0]);
        }
        var richItem = { element: element, model: model };
        this.updateRich(richItem, this._viewPort.getBoundingClientRect());
        this.items.push(richItem);
        this._disposables.push(model.visible.subscribe(function (newVal) { return _this.updateRich(richItem, _this._viewPort.getBoundingClientRect()); }));
    };
    RichEditVirtualScroll.prototype.unregisterRichEditControl = function (element) {
        var currentIndex = -1;
        this.items.some(function (x, index) {
            if (x.element === element) {
                currentIndex = index;
                return true;
            }
            return false;
        });
        if (currentIndex !== -1)
            this.items.splice(currentIndex, 1);
        if (this.items.length === 0)
            this.dispose();
    };
    RichEditVirtualScroll.prototype.updateRich = function (item, viewPortRect) {
        var currentHeight = Math.min(item.element.clientHeight, this._viewPort.clientHeight);
        if (!item.model.visible()) {
            var elementRect = item.element.getBoundingClientRect();
            var newVerticalScrollOffset = viewPortRect.top - elementRect.top;
            if (elementRect.bottom - viewPortRect.top < 0 || elementRect.top > viewPortRect.bottom) {
                currentHeight = 0;
                newVerticalScrollOffset = 0;
            }
            if (item.model._richHeight != currentHeight || item.model._verticalScrollOffset != newVerticalScrollOffset) {
                item.model.setRichHeight(currentHeight);
                item.model._verticalScrollOffset = newVerticalScrollOffset;
                item.model.updateCanvasScroll();
            }
        }
        else {
            item.model.setRichHeight(null);
            item.model._verticalScrollOffset = 0;
            item.model.updateCanvasScroll();
        }
    };
    RichEditVirtualScroll.prototype.updateRichPosition = function () {
        var _this = this;
        var viewPortRect = this._viewPort.getBoundingClientRect();
        this.items.forEach(function (x) { return _this.updateRich(x, viewPortRect); });
    };
    return RichEditVirtualScroll;
}(analytics_utils_1.Disposable));
exports.RichEditVirtualScroll = RichEditVirtualScroll;
var virtualScroll = new RichEditVirtualScroll();
ko.bindingHandlers['dxRichSurface'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        $(element).children().remove();
        var model = viewModel;
        if (model.controller && model.controller.richEdit) {
            var _richElement = model.controller.richEdit._element;
            if (ko.dataFor(_richElement) && document.getElementById(_richElement.id)) {
                $(element).closest('.dxrd-control').css('display', 'none');
            }
            else {
                $(element).append(_richElement);
                ko.applyBindings(model.controller.richEdit, _richElement);
                virtualScroll.registerRichEditControl(_richElement, model.controller.richEdit);
                analytics_internal_1.addDisposeCallback(element, function () {
                    virtualScroll.unregisterRichEditControl(_richElement);
                });
            }
        }
        else {
            var editorOptions = valueAccessor();
            var templateHtml = analytics_widgets_1.getTemplate('dxrd-rich-edit');
            var inlineControl = editorOptions.inlineEdit;
            var richElement = $(element).append(templateHtml).children()[0];
            var richEditModel = new _model_1.XRRichEditControlModel(richElement, inlineControl, model.selected);
            model.createController(richEditModel);
            ko.applyBindings(richEditModel, richElement);
            virtualScroll.registerRichEditControl(richElement, richEditModel);
            analytics_internal_1.addDisposeCallback(element, function () {
                virtualScroll.unregisterRichEditControl(richElement);
            });
        }
        return { controlsDescendantBindings: true };
    }
};


/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = __webpack_require__(243);
var analytics_utils_1 = __webpack_require__(0);
var RichEditLoadDispatcher = (function (_super) {
    __extends(RichEditLoadDispatcher, _super);
    function RichEditLoadDispatcher(richEdit) {
        var _this = _super.call(this) || this;
        _this.richEdit = richEdit;
        return _this;
    }
    RichEditLoadDispatcher.prototype.process = function (element) {
        if (element.queueAction === _utils_1.RichAction.OpenDocument) {
            this.richEdit.openDocumentNative(element.base64, element.documentFormat, function () {
                element.ready();
            }, function () {
                if (element.errorCallBack)
                    element.errorCallBack();
            });
        }
        if (element.queueAction == _utils_1.RichAction.NewDocument) {
            this.richEdit.newDocumentNative(function () {
                element.ready();
            });
        }
        if (element.queueAction == _utils_1.RichAction.SaveDocument) {
            this.richEdit.saveDocumentNative(element.documentFormat, function (result) {
                if (element.documentConverted)
                    element.documentConverted(result);
            });
        }
    };
    return RichEditLoadDispatcher;
}(analytics_utils_1.Disposable));
exports.RichEditLoadDispatcher = RichEditLoadDispatcher;


/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var customizeToolbarActions_1 = __webpack_require__(445);
var _locker_1 = __webpack_require__(32);
var _pictureEditorToolbarItem_1 = __webpack_require__(524);
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var instance_1 = __webpack_require__(106);
var ComponentCommon = (function (_super) {
    __extends(ComponentCommon, _super);
    function ComponentCommon(options, info) {
        var _this = _super.call(this) || this;
        _this.itemKey = 'value';
        _this.locker = new _locker_1.Locker();
        _this.options = options;
        _this.value = ko.observable();
        if (info.template)
            _this.template = info.template;
        _this.init(info);
        return _this;
    }
    ComponentCommon.prototype._updateStateInternal = function (commandIdMap) {
        var _this = this;
        if (!commandIdMap || this.needUpdateState(commandIdMap))
            this.locker.lock(function () { return _this.updateState(); });
    };
    ComponentCommon.prototype._executeCommand = function (value, command) {
        if (this.locker.isUpdate)
            return;
        if (this.action)
            this.action(this.options.richEditPublic, value);
        else
            this.options.executeCommand(command, this.hasCustomValue() ? this.getConverter().toModel(value) : undefined, true);
        this._updateStateInternal();
    };
    ComponentCommon.prototype.executeCommand = function (value, command) {
        this._executeCommand(value, command);
    };
    ComponentCommon.prototype.unwrapItem = function (item) {
        return $.extend({}, item, { command: item.command });
    };
    ComponentCommon.prototype.getConverter = function () {
        return {
            toModel: function (newValue) { return newValue; },
            fromModel: function (newValue) { return newValue; },
        };
    };
    ComponentCommon.prototype.init = function (info) {
        if (info) {
            this.id = info.id;
            this.text = info.text;
            this.visible = info.visible === false ? false : true;
            if (info.action)
                this.action = info.action;
        }
    };
    ComponentCommon.prototype.hasCustomValue = function () {
        return false;
    };
    return ComponentCommon;
}(analytics_utils_1.Disposable));
var CustomComponent = (function (_super) {
    __extends(CustomComponent, _super);
    function CustomComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CustomComponent.prototype.updateState = function () { };
    CustomComponent.prototype.needUpdateState = function (_commandIdMap) {
        return true;
    };
    return CustomComponent;
}(ComponentCommon));
exports.CustomComponent = CustomComponent;
var Component = (function (_super) {
    __extends(Component, _super);
    function Component() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Component.prototype.needUpdateState = function (commandIdMap) {
        return !!commandIdMap[this._command];
    };
    Component.prototype.init = function (info) {
        var _this = this;
        _super.prototype.init.call(this, info);
        this.item = this.unwrapItem(info);
        this._command = this.item.command;
        if (this._command && !this.options.richEditPublic.isDisposed) {
            var state = this.options.richEditPublic.getCommandState(this._command);
            if (state.enabled) {
                this.value(this.getConverter().fromModel(state.value));
                this.locker.lock(function () { return _this._updateStateInternal(); });
            }
        }
        this._disposables.push(this.value.subscribe(function (value) { return _this._executeCommand(value, _this.item.command); }));
    };
    Component.prototype.updateState = function () {
        if (this._command && this.hasCustomValue()) {
            var state = this.options.richEditPublic.getCommandState(this._command);
            if (state.enabled)
                this.value(this.getConverter().fromModel(state.value));
        }
    };
    return Component;
}(ComponentCommon));
exports.Component = Component;
var ComponentButtonGroup = (function (_super) {
    __extends(ComponentButtonGroup, _super);
    function ComponentButtonGroup(options, info) {
        var _this = _super.call(this, options, info) || this;
        _this.itemKey = 'command';
        _this.template = _this.template || 'dxrd-rich-edit-toolbar-button-group';
        return _this;
    }
    ComponentButtonGroup.prototype.needUpdateState = function (commandIdMap) {
        var _this = this;
        return this.items.some(function (item) { return !!commandIdMap[_this.getCommand(item)]; });
    };
    ComponentButtonGroup.prototype.init = function (info) {
        var _this = this;
        _super.prototype.init.call(this, info);
        this.selectionMode = info.selectionMode || 'single';
        this.selectedItems = ko.observableArray([]);
        this.items = info.items.map(function (item) { return _this.unwrapItem(item); });
        this._disposables.push(this.selectedItems.subscribe(function (changes) {
            _this.onSelectItems(changes);
        }, null, 'arrayChange'));
    };
    ComponentButtonGroup.prototype.onSelectItems = function (changes) {
        var _this = this;
        changes.forEach(function (change) {
            if (_this.selectionMode === 'multiple' && change.status === 'deleted' || change.status === 'added') {
                _this._executeCommand(change.value.value, change.value.command);
            }
        });
    };
    ComponentButtonGroup.prototype.getCommand = function (item) {
        return item.command;
    };
    ComponentButtonGroup.prototype.updateState = function () {
        var _this = this;
        var selected = [];
        this.items.forEach(function (item) {
            var command = _this.getCommand(item);
            if (item.command === command) {
                var commandState = _this.options.richEditPublic.getCommandState(command);
                if (commandState.enabled) {
                    var value = commandState.value;
                    if (!!value)
                        selected.push(item);
                }
            }
        });
        this.selectedItems(selected);
    };
    return ComponentButtonGroup;
}(ComponentCommon));
exports.ComponentButtonGroup = ComponentButtonGroup;
var ComponentButton = (function (_super) {
    __extends(ComponentButton, _super);
    function ComponentButton(options, info) {
        var _this = _super.call(this, options, info) || this;
        _this.icon = info.icon;
        _this.hint = info.hint;
        _this.template = _this.template || 'dxrd-button-with-template';
        return _this;
    }
    ComponentButton.prototype.clickAction = function () {
        this._executeCommand(undefined, this.item.command);
    };
    return ComponentButton;
}(Component));
exports.ComponentButton = ComponentButton;
var ComponentComboBox = (function (_super) {
    __extends(ComponentComboBox, _super);
    function ComponentComboBox(options, info) {
        var _this = _super.call(this, options, info) || this;
        _this.validationRules = [];
        _this.supportCustomValue = false;
        _this.items = info.items;
        _this.template = _this.template || 'dxrd-rich-toolbar-combobox';
        return _this;
    }
    ComponentComboBox.prototype.hasCustomValue = function () { return true; };
    return ComponentComboBox;
}(Component));
exports.ComponentComboBox = ComponentComboBox;
var ComponentFontSizeComboBox = (function (_super) {
    __extends(ComponentFontSizeComboBox, _super);
    function ComponentFontSizeComboBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.validationRules = [{ type: 'numeric' }];
        _this.supportCustomValue = true;
        return _this;
    }
    return ComponentFontSizeComboBox;
}(ComponentComboBox));
exports.ComponentFontSizeComboBox = ComponentFontSizeComboBox;
var ComponentColorPicker = (function (_super) {
    __extends(ComponentColorPicker, _super);
    function ComponentColorPicker(options, info) {
        var _this = _super.call(this, options, info) || this;
        _this.template = _this.template || 'dxrd-richEdit-toolbar-colorpicker';
        return _this;
    }
    ComponentColorPicker.prototype.getConverter = function () {
        var _this = this;
        return {
            fromModel: function (newValue) {
                switch (newValue) {
                    case 'Auto':
                    case 'NoColor':
                    case undefined:
                        return _this.item.defaultValue;
                    default: {
                        var color = newValue;
                        return "rgb(" + [
                            parseInt(color.substr(1, 2), 16),
                            parseInt(color.substr(3, 2), 16),
                            parseInt(color.substr(5, 2), 16)
                        ].join(', ') + ")";
                    }
                }
            },
            toModel: function (newValue) { return newValue; }
        };
    };
    ComponentColorPicker.prototype.hasCustomValue = function () { return true; };
    return ComponentColorPicker;
}(Component));
exports.ComponentColorPicker = ComponentColorPicker;
var ComponentCollection = (function () {
    function ComponentCollection(id, title, visible, template) {
        if (title === void 0) { title = ''; }
        if (visible === void 0) { visible = true; }
        if (template === void 0) { template = 'dxrd-rich-edit-toolbar-component-collection'; }
        var _this = this;
        this.id = id;
        this.title = title;
        this.visible = visible;
        this.template = template;
        this.showTitle = function () { return _this.title; };
    }
    return ComponentCollection;
}());
exports.ComponentCollection = ComponentCollection;
var ToolbarSurface = (function (_super) {
    __extends(ToolbarSurface, _super);
    function ToolbarSurface(options) {
        var _this = _super.call(this) || this;
        _this._popover = new _pictureEditorToolbarItem_1.PopupComponentBase();
        _this._getDefaultItems = function (fonts) {
            return [
                {
                    id: customizeToolbarActions_1.ToolbarGroupId.AlignmentAndFormatting,
                    items: [
                        {
                            id: customizeToolbarActions_1.ToolbarActionId.ParagraphAlignmentButtonGroup,
                            actionType: 'ButtonGroup',
                            selectionMode: 'single',
                            _customComponent: 'alignmentButtonGroup',
                            items: [
                                { actionType: 'Button', command: instance_1.getRichEditInstance().HomeTabCommandId.ToggleParagraphAlignmentLeft, icon: ' dxre-icon-AlignLeft', hint: analytics_utils_1.getLocalization('Align Text Left', 'XtraRichEditStringId.MenuCmd_ParagraphAlignmentLeft') },
                                { actionType: 'Button', command: instance_1.getRichEditInstance().HomeTabCommandId.ToggleParagraphAlignmentCenter, icon: ' dxre-icon-AlignCenter', hint: analytics_utils_1.getLocalization('Center', 'XtraRichEditStringId.MenuCmd_ParagraphAlignmentCenter') },
                                { actionType: 'Button', command: instance_1.getRichEditInstance().HomeTabCommandId.ToggleParagraphAlignmentRight, icon: ' dxre-icon-AlignRight', hint: analytics_utils_1.getLocalization('Align Text Right', 'XtraRichEditStringId.MenuCmd_ParagraphAlignmentRight') }
                            ]
                        },
                        {
                            id: customizeToolbarActions_1.ToolbarActionId.HyperlinkButton, actionType: 'Button', command: instance_1.getRichEditInstance().InsertTabCommandId.ShowHyperlinkDialog, icon: ' dxre-icon-Hyperlink', hint: analytics_utils_1.getLocalization('Hyperlink...', 'XtraRichEditStringId.MenuCmd_Hyperlink'),
                        },
                        {
                            id: customizeToolbarActions_1.ToolbarActionId.ClearFormattingButton, actionType: 'Button', command: instance_1.getRichEditInstance().HomeTabCommandId.ClearFormatting, icon: ' dxre-icon-ClearFormatting', hint: analytics_utils_1.getLocalization('Clear Formatting', 'XtraRichEditStringId.MenuCmd_ClearFormatting')
                        }
                    ],
                },
                {
                    id: customizeToolbarActions_1.ToolbarGroupId.FontStyleAndCase,
                    items: [
                        {
                            id: customizeToolbarActions_1.ToolbarActionId.FontStyleButtonGroup,
                            actionType: 'ButtonGroup',
                            selectionMode: 'multiple',
                            items: [
                                { actionType: 'Button', command: instance_1.getRichEditInstance().HomeTabCommandId.ToggleFontBold, icon: ' dxre-icon-Bold', hint: analytics_utils_1.getLocalization('Bold', 'System.Drawing.Font.Bold') },
                                { actionType: 'Button', command: instance_1.getRichEditInstance().HomeTabCommandId.ToggleFontItalic, icon: ' dxre-icon-Italic', hint: analytics_utils_1.getLocalization('Italic', 'System.Drawing.Font.Italic') },
                                { actionType: 'Button', command: instance_1.getRichEditInstance().HomeTabCommandId.ToggleFontUnderline, icon: ' dxre-icon-Underline', hint: analytics_utils_1.getLocalization('Underline', 'System.Drawing.Font.Underline') },
                                { actionType: 'Button', command: instance_1.getRichEditInstance().HomeTabCommandId.ToggleFontStrikeout, icon: ' dxre-icon-Strikeout', hint: analytics_utils_1.getLocalization('Strikeout', 'System.Drawing.Font.Strikeout') }
                            ]
                        },
                        { id: customizeToolbarActions_1.ToolbarActionId.ToggleCaseButton, actionType: 'Button', command: instance_1.getRichEditInstance().HomeTabCommandId.CapitalizationToggleCase, icon: ' dxre-icon-ChangeTextCase', hint: analytics_utils_1.getLocalization('tOGGLE cASE', 'XtraRichEditStringId.MenuCmd_ToggleTextCase') }
                    ]
                },
                {
                    id: customizeToolbarActions_1.ToolbarGroupId.FontSize,
                    title: analytics_utils_1.getLocalization('Font Size', 'XtraRichEditStringId.MenuCmd_ChangeFontSize'),
                    items: [{ id: customizeToolbarActions_1.ToolbarActionId.FontSizeComboBox, actionType: 'ComboBox', command: instance_1.getRichEditInstance().HomeTabCommandId.ChangeFontSize, items: [8, 9, 10, 11, 12, 14, 16, 18, 20, 24, 26, 28, 36, 48, 72] }],
                },
                {
                    id: customizeToolbarActions_1.ToolbarGroupId.Font,
                    title: analytics_utils_1.getLocalization('Font', 'XtraRichEditStringId.MenuCmd_ChangeFontName'),
                    items: [{ id: customizeToolbarActions_1.ToolbarActionId.FontComboBox, actionType: 'ComboBox', command: instance_1.getRichEditInstance().HomeTabCommandId.ChangeFontName, items: fonts }],
                },
                {
                    id: customizeToolbarActions_1.ToolbarGroupId.FontColor,
                    title: analytics_utils_1.getLocalization('Font Color', 'XtraRichEditStringId.MenuCmd_ChangeFontColor'),
                    items: [{ id: customizeToolbarActions_1.ToolbarActionId.FontColorBox, actionType: 'ColorBox', command: instance_1.getRichEditInstance().HomeTabCommandId.ChangeFontForeColor, defaultValue: 'rgb(0, 0, 0)' }],
                },
                {
                    id: customizeToolbarActions_1.ToolbarGroupId.BackgroundColor,
                    title: analytics_utils_1.getLocalization('Background Color', 'DevExpress.XtraReports.UI.XRRichTextBoxBase.BackColor'),
                    items: [{ id: customizeToolbarActions_1.ToolbarActionId.BackgroundColorBox, actionType: 'ColorBox', command: instance_1.getRichEditInstance().HomeTabCommandId.ChangeFontHighlightColor, defaultValue: 'rgb(255, 255, 255)' }]
                }
            ];
        };
        _this.onContentReady = _this._popover.onContentReady;
        _this.getPositionTarget = function (element) {
            return $(element).closest('.' + _this.parentClass).closest('.dxrd-control')[0];
        };
        _this.closeOnOutsideClick = function (e) {
            if (_this._popover.closeOnOutsideClick(e)) {
                _this.visible(false);
                return false;
            }
            return true;
        };
        _this.template = 'dxrd-richedit-toolbar';
        _this.parentClass = 'dxrd-rich-surface';
        _this.getPopupContainer = analytics_internal_1.getParentContainer;
        _this.componentCollection = [];
        _this.visible = options.visible;
        var toolbarItems = analytics_internal_1.extend(true, [], _this._getDefaultItems(options.fonts));
        var getById = function (itemId) {
            var matchedItem;
            var group = toolbarItems.filter(function (item) {
                if (matchedItem)
                    return false;
                if (item.id === itemId)
                    return true;
                matchedItem = item.items.filter(function (x) { return x.id === itemId; })[0];
            })[0];
            return matchedItem || group;
        };
        customizeToolbarActions_1.events().call('customizeToolbarActions', { actions: toolbarItems, getById: getById });
        _this.componentCollection = _this._initComponentCollection(toolbarItems, options);
        if ((_this.componentCollection || []).every(function (component) { return !component.visible; }))
            _this.visible = ko.observable(false);
        return _this;
    }
    ToolbarSurface.prototype._initComponentCollection = function (items, options) {
        var _this = this;
        return items.map(function (item) {
            var component = new ComponentCollection(item.id, item.title, item.visible, item.template);
            component.items = _this._initComponents(item.items, options);
            return _this._extendTemplateOptions(item, component);
        });
    };
    ToolbarSurface.prototype._initComponents = function (items, options) {
        var _this = this;
        return items.map(function (item) {
            var component;
            switch (item.actionType) {
                case 'ButtonGroup':
                    component = new ComponentButtonGroup(options, item);
                    break;
                case 'Button':
                    component = new ComponentButton(options, item);
                    break;
                case 'ComboBox':
                    component = item.id === customizeToolbarActions_1.ToolbarActionId.FontSizeComboBox ? new ComponentFontSizeComboBox(options, item) : new ComponentComboBox(options, item);
                    break;
                case 'ColorBox':
                    component = new ComponentColorPicker(options, item);
                    break;
                default:
                    component = new CustomComponent(options, item);
            }
            return _this._extendTemplateOptions(item, component);
        });
    };
    ToolbarSurface.prototype._extendTemplateOptions = function (item, el) {
        if (item.template)
            return analytics_internal_1.extend(true, {}, el, item);
        return el;
    };
    ToolbarSurface.prototype.onCommandStateChanged = function (sender, args) {
        if (args.commands) {
            var commandIdMap = {};
            args.commands.forEach(function (commandId) { return commandIdMap[commandId] = true; });
            for (var _i = 0, _a = this.componentCollection; _i < _a.length; _i++) {
                var group = _a[_i];
                if (group.items) {
                    for (var _b = 0, _c = group.items; _b < _c.length; _b++) {
                        var item = _c[_b];
                        if (item._updateStateInternal) {
                            item._updateStateInternal(commandIdMap);
                        }
                    }
                }
            }
        }
        else
            this.componentCollection.forEach(function (group) { return (group.items || []).forEach(function (item) { return item._updateStateInternal && item._updateStateInternal(); }); });
    };
    return ToolbarSurface;
}(analytics_utils_1.Disposable));
exports.ToolbarSurface = ToolbarSurface;


/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var analytics_internal_1 = __webpack_require__(2);
exports.ToolbarActionId = {
    ParagraphAlignmentButtonGroup: 'dxxrta-buttongroup-paragraph-alignment',
    HyperlinkButton: 'dxxrta-button-hyperlink',
    ClearFormattingButton: 'dxxrta-button-clear-formatting',
    FontStyleButtonGroup: 'dxxrta-buttongroup-toggle-font',
    ToggleCaseButton: 'dxxrta-button-text-case',
    FontSizeComboBox: 'dxxrta-combobox-text-size',
    FontComboBox: 'dxxrta-combobox-font',
    FontColorBox: 'dxxrta-colorbox-font',
    BackgroundColorBox: 'dxxrta-colorbox-background',
};
exports.ToolbarGroupId = {
    AlignmentAndFormatting: 'dxxrtg-buttons-first',
    FontStyleAndCase: 'dxxrtg-buttons-second',
    FontSize: 'dxxrtg-font-size',
    Font: 'dxxrtg-font-family',
    FontColor: 'dxxrtg-text-color',
    BackgroundColor: 'dxxrtg-back-color',
};
exports.events = analytics_internal_1.createGlobalModuleVariableFunc(new analytics_utils_1.EventManager());


/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var _controller_1 = __webpack_require__(447);
var utils_1 = __webpack_require__(156);
var xrControl_1 = __webpack_require__(10);
var XRRichModernSurface = (function (_super) {
    __extends(XRRichModernSurface, _super);
    function XRRichModernSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this.isValid = ko.observable(true);
        _this.serializedRtf = ko.observable('');
        _this.template = 'dxrd-richedit';
        _this.contenttemplate = 'dxrd-richedit-content';
        _this.selectiontemplate = 'dxrd-richedit-selection';
        _this._convertReady = $.Deferred();
        utils_1.base64UTF16LEtobase64UTF8(control.serializableRtfString(), function (val) {
            _this.serializedRtf(val);
            _this._convertReady.resolve(true);
        });
        _this._disposables.push(_this.serializedRtf.subscribe(function (newValue) {
            control.serializableRtfString(newValue);
        }));
        _this.defaultStyleunit = ko.computed(function () { return ({
            top: _this.contentSizes().top + (_this.isIntersect() ? 1 : 0),
            left: _this.contentSizes().left + (_this.isIntersect() ? 1 : 0),
            lineHeight: _this.contentSizes().height,
            height: _this.contentSizes().height,
            width: _this.contentSizes().width
        }); }).extend({ deferred: true });
        _this._disposables.push(_this.defaultStyleunit);
        return _this;
    }
    XRRichModernSurface.prototype.createController = function (richEdit) {
        var _this = this;
        this._convertReady.done(function () {
            _this.controller = new _controller_1.XRRichController(richEdit, _this);
            _this._disposables.push(_this.controller);
        });
    };
    return XRRichModernSurface;
}(xrControl_1.XRControlSurface));
exports.XRRichModernSurface = XRRichModernSurface;


/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var _locker_1 = __webpack_require__(32);
var _model_1 = __webpack_require__(242);
var $ = __webpack_require__(3);
var instance_1 = __webpack_require__(106);
var XRRichController = (function (_super) {
    __extends(XRRichController, _super);
    function XRRichController(richEdit, xrRichSurfaceModel) {
        var _this = _super.call(this) || this;
        _this.richEdit = richEdit;
        _this.surface = xrRichSurfaceModel;
        _this.init();
        return _this;
    }
    Object.defineProperty(XRRichController.prototype, "controlModel", {
        get: function () {
            return this.surface._control;
        },
        enumerable: true,
        configurable: true
    });
    XRRichController.prototype.createSubscribtions = function () {
        var _this = this;
        this._disposables.push(this.controlModel._newDocumentData.subscribe(function (newData) {
            _this.onDocumentDataChanged(newData && newData.content);
        }));
        this._disposables.push(this.controlModel.serializableRtfString.subscribe(function (value) { return _this.rtfStringChanged(value); }));
        this._disposables.push(this.richEdit.visible.subscribe(function (newValue) { return _this.onVisibilityChanged(newValue); }));
        this._disposables.push(this.surface._height.subscribe(function (val) {
            if (!_this.richEdit.visible() && _this.richEdit._richHeight != null) {
                _this.richEdit.setRichHeight(val);
                _this.richEdit.updateCanvasScroll();
                setTimeout(function () {
                    _this.richEdit.changeSize();
                }, 1);
            }
        }));
    };
    XRRichController.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.richEdit.dispose();
        this.fontModel.dispose();
        this.paddingModel.dispose();
        this.richLoader.dispose();
    };
    XRRichController.prototype.init = function () {
        var _this = this;
        this.locker = new _locker_1.Locker();
        this.fontModel = new _model_1.RichEditFontModel(this.controlModel.font, this.richEdit, this.controlModel.foreColor, this);
        this.paddingModel = new _model_1.RichEditPaddingModelWrapper(this.controlModel.padding, this.richEdit);
        this.richLoader = new _model_1.RichLoader(this.richEdit);
        this.createSubscribtions();
        if (this.surface.serializedRtf()) {
            this.richEdit.openDocument(this.surface.serializedRtf(), 2, $.noop, function () {
                _this.surface.isValid(false);
            });
        }
        else {
            this.rtfStringChanged(this.surface.serializedRtf());
        }
    };
    XRRichController.prototype.setRtfString = function (newRtf) {
        var _this = this;
        this.locker.lock(function () {
            _this.surface.serializedRtf(newRtf);
        });
    };
    XRRichController.prototype.rtfStringChanged = function (newRtfString) {
        var _this = this;
        if (newRtfString === undefined) {
            var openSaveAction = function () {
                _this.richEdit.openDocument(btoa(_this.surface._control.name()), instance_1.getRichEditInstance().DocumentFormat.PlainText, function () {
                    var fontName = _this.fontModel.family.peek();
                    var fontSize = _this.fontModel.size.peek();
                    var rich = _this.richEdit.getRealControl();
                    rich.document.setDefaultCharacterProperties({ fontName: fontName, size: fontSize });
                    rich.executeCommand(instance_1.getRichEditInstance().HomeTabCommandId.ChangeFontName, fontName);
                    rich.executeCommand(instance_1.getRichEditInstance().HomeTabCommandId.ChangeFontSize, fontSize);
                    rich.history.clear();
                    _this.richEdit.saveDocument(2, function (result) { return _this.setRtfString(result); });
                });
            };
            if (this.surface._control.name()) {
                openSaveAction();
            }
            else {
                var subcription = this.surface._control.name.subscribe(function (name) {
                    openSaveAction();
                    subcription.dispose();
                });
            }
        }
        else {
            if (this.locker.isUpdate)
                return;
            this.richEdit.openDocument(newRtfString, 2, $.noop, function () {
                _this.surface.isValid(false);
            });
        }
    };
    XRRichController.prototype.checkValidationState = function () {
        if (this.richEdit.documentIsEmpty() && this._oldValidState == false) {
            this.surface.isValid(false);
            return false;
        }
        return true;
    };
    XRRichController.prototype.onVisibilityChanged = function (newVisibility) {
        var _this = this;
        if (!newVisibility) {
            if (this.checkValidationState())
                this.richEdit.saveDocument(2, function (newRtfString) {
                    _this.setRtfString(newRtfString);
                });
        }
        else {
            this._oldValidState = this.surface.isValid();
            this.surface.isValid(true);
            this.richEdit.getRealControl().focus();
        }
        if (this.richEdit)
            this.richEdit.focusChanged(newVisibility);
    };
    XRRichController.prototype.onDocumentDataChanged = function (newDocument) {
        var _this = this;
        this.richLoader.textConverted = function (newText) {
            if (_this.checkValidationState()) {
                _this.surface.isValid(true);
                _this.setRtfString(newText);
            }
        };
        this.richLoader.load({ data: newDocument, dataFormat: this.controlModel.format(), oldText: this.surface.serializedRtf() });
    };
    return XRRichController;
}(analytics_utils_1.Disposable));
exports.XRRichController = XRRichController;


/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var InlineRichEditControl = (function (_super) {
    __extends(InlineRichEditControl, _super);
    function InlineRichEditControl() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return InlineRichEditControl;
}(analytics_internal_1.InlineTextEdit));
exports.InlineRichEditControl = InlineRichEditControl;


/***/ }),
/* 449 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.ui.dxSelectBox };

/***/ }),
/* 450 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Widgets.Metadata;

/***/ }),
/* 451 */
/***/ (function(module, exports) {

module.exports = DevExpress.Reporting.Editing;

/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.componentInfo = { propertyName: 'component', modelName: '@Component', link: true };
exports.cultureInfo = { propertyName: 'culture', modelName: '@Culture' };
exports.propertyNameInfo = { propertyName: 'propertyName', modelName: '@Path' };
exports.propertyValueInfo = { propertyName: 'propertyValue', modelName: '@Data' };


/***/ }),
/* 453 */
/***/ (function(module, exports) {

module.exports = DevExpress.Reporting.Export.Metadata;

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var ko = __webpack_require__(1);
var jsReportDesigner_1 = __webpack_require__(314);
var eventGenerator_1 = __webpack_require__(40);
var _initializer_1 = __webpack_require__(315);
var _settings_1 = __webpack_require__(31);
var analytics_internal_1 = __webpack_require__(2);
var analytics_utils_1 = __webpack_require__(0);
var _initializer_2 = __webpack_require__(171);
var JSReportDesignerBinding = (function (_super) {
    __extends(JSReportDesignerBinding, _super);
    function JSReportDesignerBinding(_options, customEventRaiser) {
        var _this = _super.call(this, _options, customEventRaiser) || this;
        _this._model = null;
        _this._deferreds = [];
        _settings_1.limitation(_options.limitation);
        _initializer_2._setChartLimitation(_settings_1.limitation());
        _options.designerModel = analytics_internal_1._wrapModelInObservable(_options.designerModel);
        _this.sender = new jsReportDesigner_1.JSReportDesigner(_options.designerModel);
        _this._initializationData = ko.isObservable(_options.initializationData)
            ? _options.initializationData
            : ko.observable(_options.initializationData);
        _options.callbacks && _options.callbacks._eventSenderCreated && _options.callbacks._eventSenderCreated(_this.sender);
        return _this;
    }
    JSReportDesignerBinding.prototype._applyBindings = function (model, $element) {
        this.sender.designerModel = model;
        this._disposables.push(model);
        var childTemplate = !model ? $('<div>') : this._templateHtml;
        $element.children().remove();
        var child = $element.append(childTemplate).children()[0];
        if (!child)
            return;
        ko.cleanNode(child);
        this._callbacks && this._callbacks.designer.beforeRender && this._callbacks.designer.beforeRender(model);
        ko.applyBindings(model, child);
        model.afterRender();
        this._fireEvent('Init');
        var updateSizeTimeout = setTimeout(function () {
            model && model.updateSurfaceSize();
        }, 1);
        this._disposables.push({ dispose: function () { return clearTimeout(updateSizeTimeout); } });
    };
    JSReportDesignerBinding.prototype._initializeCallbacks = function () {
        var _this = this;
        if (this._options.callbacks) {
            return {
                preview: this._getAvailableEvents(eventGenerator_1.EventGenerator.generatePreviewEvents(function (eventName, args) {
                    _this._fireEvent(eventName, args);
                }, 'Preview'), 'preview'),
                designer: this._getAvailableEvents(eventGenerator_1.EventGenerator.generateDesignerEvents(function (eventName, args) {
                    _this._fireEvent(eventName, args);
                }), 'designer')
            };
        }
    };
    JSReportDesignerBinding.prototype._createModel = function (initData, element) {
        this._callbacks = this._initializeCallbacks();
        return _initializer_1.createReportDesignerFromModel(initData, element, this._callbacks, false);
    };
    JSReportDesignerBinding.prototype._showErrorInfo = function (jqXHR, getRequestDetails, errorThrown) {
        var requestDetails = getRequestDetails();
        var reportUrl = requestDetails.data.reportUrl;
        var messages = [];
        if (jqXHR && jqXHR.status)
            messages.push(jqXHR.status);
        if (errorThrown)
            messages.push(errorThrown);
        var errorStatus = messages.length > 0 ? messages.join(' - ') + '. ' : '';
        var helpLink = 'https://go.devexpress.com/Web_Reporting_Diagnostics_Tips.aspx';
        var consoleMessage = "Review the following help topic to diagnose a problem: '" + helpLink + "'.";
        var clientMessage = analytics_internal_1.getLocalization("The page is blank because the Report Designer failed to load the report. Consult the developer for assistance.\n            Use development mode for detailed information.", 'ASPxReportsStringId.ReportDesigner_GetReportDesignerModel_Error');
        var developerMessage = errorStatus + "An attempt to load the '" + reportUrl + "' report failed.\n            Open the browser developer console to investigate the issue. Review the following help topic: ";
        if (this._options.developmentMode) {
            var message = $('<span>').text(developerMessage);
            var link = $('<a>')
                .attr('target', '_blank')
                .attr('rel', 'noopener noreferrer')
                .attr('href', helpLink)
                .text('Reporting Application Diagnostics');
            analytics_internal_1.ShowMessage('', 'error', undefined, undefined, function () {
                return $('<div>').append(message, link);
            });
            console.log(consoleMessage);
            if (jqXHR && jqXHR.responseText)
                console.log(jqXHR.responseText);
        }
        else {
            analytics_internal_1.ShowMessage(clientMessage);
        }
    };
    JSReportDesignerBinding.prototype._getDesignerModelRequest = function (reportUrl) {
        var self = this;
        var requestOptions = this._options.requestOptions;
        self._callbacks = this._initializeCallbacks();
        var getDesignerModelActionUrl = this._getServerActionUrl(requestOptions.host, requestOptions.getDesignerModelAction);
        var onError = function (data, textStatus, jqXHR, getRequestDetails, errorThrown) {
            self._showErrorInfo(jqXHR, getRequestDetails, errorThrown);
            if (self._callbacks && self._callbacks.designer && self._callbacks.designer.onServerError)
                self._callbacks.designer.onServerError({ jqXHR: jqXHR, textStatus: textStatus, data: data, getRequestDetails: getRequestDetails });
            if (errorThrown)
                throw errorThrown;
        };
        var getModel = analytics_utils_1.ajaxSetup.sendRequest({
            url: getDesignerModelActionUrl,
            type: 'POST',
            data: {
                reportUrl: reportUrl
            }
        });
        var _deferredModel = $.Deferred();
        this._deferreds.push(_deferredModel);
        getModel.done(_deferredModel.resolve).fail(_deferredModel.reject);
        _deferredModel.done(function (result, textStatus, jqXHR) {
            if (result.error) {
                return onError(result, textStatus, jqXHR, function () { return ({ url: getDesignerModelActionUrl, data: { reportUrl: reportUrl } }); }, result.error);
            }
            result.handlerUri = self._getServerActionUrl(requestOptions.host, result.handlerUri);
            result.viewerHandlerUri = self._getServerActionUrl(requestOptions.host, result.viewerHandlerUri);
            result.queryBuilderHandlerUri = self._getServerActionUrl(requestOptions.host, result.queryBuilderHandlerUri);
            self._initializationData(result);
        }).fail(function (jqXHR, textStatus, errorThrown) {
            var localizationPromises = [];
            self._callbacks && self._callbacks.designer && self._callbacks.designer.customizeLocalization && self._callbacks.designer.customizeLocalization(localizationPromises);
            analytics_internal_1.resolveFromPromises(localizationPromises, function () {
                onError({ error: errorThrown }, textStatus, jqXHR, function () { return ({ url: getDesignerModelActionUrl, data: { reportUrl: reportUrl } }); }, errorThrown);
            });
        });
    };
    JSReportDesignerBinding.prototype.dispose = function () {
        (this._deferreds || []).forEach(function (deferred) {
            deferred.reject();
        });
        _super.prototype.dispose.call(this);
    };
    JSReportDesignerBinding.prototype.applyBindings = function (element) {
        var _this = this;
        var self = this;
        var _$element = $(element);
        _$element.addClass('dx-designer');
        this._createDisposeFunction(element);
        if (self._options.undoEngine) {
            self._applyBindings(self._options, _$element);
            return;
        }
        var applyBindingsFunc = function (newData) {
            if (_this._model) {
                _this._disposables.splice(_this._disposables.indexOf(_this._model), 1);
                ko.cleanNode(element.firstChild);
                _this._model.dispose();
            }
            self._createModel(newData, element).done(function (model) {
                _this._model = model;
                self._applyBindings(model, _$element);
            });
        };
        this._disposables.push(self._initializationData.subscribe(function (newVal) {
            applyBindingsFunc(newVal);
        }));
        if (self._options.requestOptions) {
            self._getLocalizationRequest().done(function (localization) {
                localization && analytics_utils_1.addCultureInfo(localization);
            }).always(function () {
                if (self._options.requestOptions.getDesignerModelAction) {
                    if (ko.isSubscribable(self._options.reportUrl)) {
                        _this._disposables.push(self._options.reportUrl.subscribe(function (newVal) { return self._getDesignerModelRequest(newVal); }));
                    }
                    self._getDesignerModelRequest(ko.unwrap(self._options.reportUrl));
                }
                else {
                    applyBindingsFunc(self._initializationData());
                }
            });
        }
        else {
            applyBindingsFunc(self._initializationData());
        }
    };
    return JSReportDesignerBinding;
}(analytics_internal_1.JSDesignerBindingCommon));
exports.JSReportDesignerBinding = JSReportDesignerBinding;
ko.bindingHandlers['dxReportDesigner'] = {
    init: function (element, valueAccessor) {
        new JSReportDesignerBinding(ko.unwrap(valueAccessor()) || {}).applyBindings(element);
        return { controlsDescendantBindings: true };
    }
};


/***/ }),
/* 455 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Data;

/***/ }),
/* 456 */
/***/ (function(module, exports) {

module.exports = DevExpress.QueryBuilder.Widgets.Internal;

/***/ }),
/* 457 */
/***/ (function(module, exports) {

module.exports = DevExpress.QueryBuilder.Utils;

/***/ }),
/* 458 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Tools;

/***/ }),
/* 459 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.ui.dxScrollView };

/***/ }),
/* 460 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.ui.dxButtonGroup };

/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var _dataFilter_1 = __webpack_require__(160);
var editorTemplates_1 = __webpack_require__(9);
var dataFilterReportPropertiesSerializationsInfo = [{ propertyName: 'dataMember', modelName: '@DataMember' }, { propertyName: 'dataSource', modelName: '@DataSource', link: true }], valueDataBinding = { propertyName: 'value', displayName: 'Value Data Members', editor: editorTemplates_1.designerEditorTemplates.getEditor('chartValueBinding'), localizationId: 'DevExpress.XtraCharts.SeriesBase.ValueDataMembers' };
var dataFilterReportSerializationFakeInfo = [
    { propertyName: 'misc', displayName: 'Misc', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: _dataFilter_1.dataFilterSerializationsInfo, localizationId: 'ChartStringId.PropertyGridCategory_Misc' },
    { propertyName: 'report', displayName: 'Report Data', localizationId: 'ReportStringId.CatReportData', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: [valueDataBinding] }
];
var DataFilterModelReport = (function (_super) {
    __extends(DataFilterModelReport, _super);
    function DataFilterModelReport(model, serializer) {
        var _this = _super.call(this, model, serializer) || this;
        _this.misc = _this._mapObject(_dataFilter_1.dataFilterSerializationsInfo);
        _this.misc.isPropertyDisabled = function (propertyName) {
            return propertyName === 'value' && _this.dataMember() != null;
        };
        _this.report = _this._createReportDataProperty();
        return _this;
    }
    DataFilterModelReport.prototype.getInfo = function () {
        return [].concat([].concat(_dataFilter_1.dataFilterSerializationsInfo, dataFilterReportPropertiesSerializationsInfo)
            .map(function (x) { return { propertyName: x.propertyName, modelName: x.modelName, link: x.link }; }), dataFilterReportSerializationFakeInfo);
    };
    DataFilterModelReport.prototype._createReportDataProperty = function () {
        var _this = this;
        return {
            updateValue: function (pathRequest, parameters) {
                if (!!pathRequest.fullPath) {
                    if (pathRequest.fullPath.indexOf('Parameters') === 0) {
                        var parameterName = pathRequest.fullPath.split('.').pop();
                        _this.dataSource(parameters.filter(function (x) { return x.name === parameterName; })[0]);
                        _this.dataMember('Value');
                    }
                    else {
                        _this.dataMember(pathRequest.path);
                        _this.dataSource(null);
                    }
                }
                else {
                    _this.dataMember(null);
                    _this.dataSource(null);
                }
            },
            displayValue: function (reportDataSource) {
                if (_this.dataSource()) {
                    return ['Parameters', _this.dataSource().name].join(' - ');
                }
                else {
                    if (_this.dataMember()) {
                        return [reportDataSource.name, _this.dataMember()].join(' - ');
                    }
                    return '';
                }
            },
            calculatePath: function (reportDataSource) {
                if (_this.dataSource()) {
                    return ['Parameters', _this.dataSource().name].join('.');
                }
                else {
                    if (_this.dataMember()) {
                        return [reportDataSource.ref || reportDataSource.id, _this.dataMember()].join('.');
                    }
                    return '';
                }
            },
            getInfo: function () { return [valueDataBinding]; },
            value: this._mapObject(dataFilterReportPropertiesSerializationsInfo)
        };
    };
    DataFilterModelReport.prototype._mapObject = function (info) {
        var _this = this;
        var obj = { getInfo: function () { return info; } };
        for (var i = 0; i < info.length; i++) {
            var propertyName = info[i].propertyName;
            obj[propertyName] = this[propertyName];
        }
        obj['getPath'] = function (propertyName) {
            return _this['getPath'](propertyName);
        };
        return obj;
    };
    return DataFilterModelReport;
}(_dataFilter_1.DataFilterModel));
exports.DataFilterModelReport = DataFilterModelReport;
_dataFilter_1.DefaultDataFilterModel(DataFilterModelReport);


/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_internal_1 = __webpack_require__(8);
__webpack_require__(449);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var EDITOR_CLASS = 'dx-eventdropdowneditor dx-selectbox', EDITOR_ELLIPSIS_BUTTON_CLASS = 'dx-button-normal dx-dropdowneditor-button dxrd-ellipsis-button', EDITOR_ELLIPSIS_BUTTON_ICON_CLASS = 'dx-dropdowneditor-icon dxrd-ellipsis-image', EDITOR_ELLIPSIS_BUTTON_ICON_TEMPLATE = 'dxrd-svg-ellipsis';
var dxEventDropDownEditor = (function (_super) {
    __extends(dxEventDropDownEditor, _super);
    function dxEventDropDownEditor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    dxEventDropDownEditor.prototype.getComponentName = function () {
        return 'dxSelectBox';
    };
    dxEventDropDownEditor.prototype.ctor = function () {
        this._secondAction = null;
        this._$ellipsisButton = null;
        this._koContext = null;
    };
    dxEventDropDownEditor.prototype._getDefaultOptions = function () {
        return $.extend(analytics_internal_1._getSuper(this)['_getDefaultOptions'].apply(this), {
            openOnFieldClick: false,
            secondAction: null
        });
    };
    dxEventDropDownEditor.prototype._init = function () {
        analytics_internal_1._getSuper(this)['_init'].apply(this);
        this._initSecondAction();
        var $element = $(this['element']());
        this._koContext = ko.contextFor($element[0]);
    };
    dxEventDropDownEditor.prototype._initSecondAction = function () {
        this._secondAction = this['_createAction'](this.option('secondAction'));
    };
    dxEventDropDownEditor.prototype._render = function () {
        var $element = $(this['element']());
        $element.addClass(EDITOR_CLASS);
        analytics_internal_1._getSuper(this)['_render'].apply(this);
    };
    dxEventDropDownEditor.prototype._renderDropDownButton = function () {
        if (this._$ellipsisButton) {
            this._$ellipsisButton.remove();
            this._$ellipsisButton = null;
        }
        analytics_internal_1._getSuper(this)['_renderDropDownButton'].apply(this);
        this._$ellipsisButton = this._createEllipsisButton();
        this._$ellipsisButton.prependTo(this['_buttonsContainer']());
        this._attachEllipsisButtonClickHandler();
    };
    dxEventDropDownEditor.prototype._createEllipsisButton = function () {
        var $buttonIcon = $('<div>').addClass(EDITOR_ELLIPSIS_BUTTON_ICON_CLASS).append(analytics_widgets_internal_1.SvgTemplatesEngine.templates[EDITOR_ELLIPSIS_BUTTON_ICON_TEMPLATE]);
        ko.applyBindingsToDescendants(this._koContext, $buttonIcon[0]);
        var $button = $('<div>')['dxButton']({
            focusStateEnabled: false,
            disabled: this.option('readOnly')
        })['removeClass']('dx-button');
        $button.addClass(EDITOR_ELLIPSIS_BUTTON_CLASS);
        $button.append($buttonIcon);
        $button.find('.dx-button-content').remove();
        return $button;
    };
    dxEventDropDownEditor.prototype._attachEllipsisButtonClickHandler = function () {
        if (this._$ellipsisButton) {
            this._$ellipsisButton.dxButton('option', 'onClick', this._secondAction.bind(this));
        }
    };
    dxEventDropDownEditor.prototype._optionChanged = function (args) {
        switch (args.name) {
            case 'secondAction':
                this._initSecondAction();
                this._attachEllipsisButtonClickHandler();
                break;
            default:
                analytics_internal_1._getSuper(this)['_optionChanged'].apply(this, [args]);
        }
    };
    return dxEventDropDownEditor;
}(analytics_internal_1._dxtInherit));
exports.dxEventDropDownEditor = dxEventDropDownEditor;
analytics_internal_1._registerDxtComponent('dxEventDropDownEditor', dxEventDropDownEditor);


/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_1 = __webpack_require__(4);
var CoordinateGridViewModel = (function (_super) {
    __extends(CoordinateGridViewModel, _super);
    function CoordinateGridViewModel(options) {
        var _this = _super.call(this) || this;
        _this.width = ko.observable(0);
        _this.height = ko.observable(0);
        _this.verticalGridLines = ko.observableArray().extend({ deferred: true });
        _this.horizontalGridLines = ko.observableArray().extend({ deferred: true });
        _this.majorVerticalGridLines = ko.observableArray().extend({ deferred: true });
        _this.majorHorizontalGridLines = ko.observableArray().extend({ deferred: true });
        _this._disposables.push(ko.computed(function () {
            var flip = !!ko.unwrap(options.flip);
            var gridSize = analytics_internal_1.unitsToPixel(options.snapGridSize(), options.measureUnit(), options.zoom());
            var width = analytics_internal_1.unitsToPixel(options.width(), options.measureUnit(), options.zoom());
            _this.width(width + 0.5);
            _this._initGrid(width, gridSize, _this.verticalGridLines, flip);
            _this._initGrid(width, 4 * gridSize, _this.majorVerticalGridLines, flip);
        }));
        _this._disposables.push(ko.computed(function () {
            var gridSize = analytics_internal_1.unitsToPixel(options.snapGridSize(), options.measureUnit(), options.zoom());
            var height = analytics_internal_1.unitsToPixel(options.height(), options.measureUnit(), options.zoom());
            _this.height(height + 0.5);
            _this._initGrid(height, gridSize, _this.horizontalGridLines);
            _this._initGrid(height, 4 * gridSize, _this.majorHorizontalGridLines);
        }));
        return _this;
    }
    CoordinateGridViewModel.prototype._initGrid = function (length, gridSize, gridLines, flip) {
        if (flip === void 0) { flip = false; }
        var lines = gridLines.peek();
        var arrayLength = Math.ceil(length / gridSize), currentLength = lines.length, diff = arrayLength - currentLength;
        if (diff > 0) {
            for (var index = currentLength; index < arrayLength; index++) {
                gridLines.push({ coordVal: ko.observable((index + 1) * gridSize + 0.5), visible: ko.observable(true) });
            }
        }
        if (flip) {
            for (var index = 0, coordVal = length; index < gridLines.peek().length; index++, coordVal -= gridSize) {
                gridLines.peek()[index].coordVal(coordVal - 0.5);
                gridLines.peek()[index].visible(index < arrayLength);
            }
        }
        else {
            for (var index = 0, coordVal = 0; index < gridLines.peek().length; coordVal += gridSize, index++) {
                gridLines.peek()[index].coordVal(coordVal + 0.5);
                gridLines.peek()[index].visible(index < arrayLength);
            }
        }
    };
    ;
    CoordinateGridViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.horizontalGridLines([]);
        this.verticalGridLines([]);
        this.majorHorizontalGridLines([]);
        this.majorVerticalGridLines([]);
    };
    return CoordinateGridViewModel;
}(analytics_utils_1.Disposable));
exports.CoordinateGridViewModel = CoordinateGridViewModel;
ko.bindingHandlers['coordinateGrid'] = {
    init: function (element, valueAccessor) {
        $(element).children().remove();
        var values = valueAccessor(), gridViewModel = new CoordinateGridViewModel(values), templateHtml = analytics_widgets_1.getTemplate('dxrd-coordinategrid'), $element = $(element).append(templateHtml);
        ko.applyBindings(gridViewModel, $element.children()[0]);
        analytics_internal_1.addDisposeCallback($element.children()[0], function () {
            gridViewModel.dispose();
        });
        return { controlsDescendantBindings: true };
    }
};


/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = __webpack_require__(0);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_1 = __webpack_require__(4);
var RulerViewModel = (function (_super) {
    __extends(RulerViewModel, _super);
    function RulerViewModel(options) {
        var _this = _super.call(this) || this;
        _this.height = ko.observable(0);
        _this.width = ko.observable(0);
        _this.gridLines = ko.observableArray();
        _this.majorGridLines = ko.observableArray();
        _this.disable = null;
        _this.defaultGridLinesCoordinate = ko.observable();
        _this._disposables.push(ko.computed(function () {
            var gridSize = analytics_internal_1.unitsToPixel(25, options.units(), options.zoom());
            _this.defaultGridLinesCoordinate({ x: 4, x1: '80%', x2: '100%', majorX1: '70%', majorX2: '100%' });
            var flip = !!ko.unwrap(options.flip);
            if (options.direction === 'vertical') {
                _this.height(options.length() + 0.5);
                _this.width(20);
                if (flip) {
                    flip = false;
                    _this.defaultGridLinesCoordinate({ x: 11, x1: '20%', x2: '0%', majorX1: '30%', majorX2: '0%' });
                }
            }
            else {
                _this.width(options.length() + 0.5);
                _this.height(20);
            }
            _this._initGrid(options.length(), gridSize, _this.gridLines, flip);
            _this._initGrid(options.length(), 4 * gridSize, _this.majorGridLines, flip);
        }));
        _this.disable = options.disable;
        return _this;
    }
    RulerViewModel.prototype._initGrid = function (length, gridSize, gridLines, flip) {
        if (flip === void 0) { flip = false; }
        var arrayLength = Math.round(length / gridSize) + 1, currentLength = gridLines.peek().length, diff = arrayLength - currentLength;
        if (diff > 0) {
            for (var index = 0; index < diff; index++) {
                gridLines.push({ coordVal: ko.observable(0), text: ko.observable(0), visible: ko.observable(false) });
            }
        }
        if (flip) {
            for (var index = 0, coordVal = length; index < gridLines.peek().length; index++, coordVal -= gridSize) {
                gridLines.peek()[index].coordVal(coordVal - 0.5);
                gridLines.peek()[index].text(index);
                gridLines.peek()[index].visible(index < arrayLength);
            }
        }
        else {
            for (var index = 0, coordVal = 0; index < gridLines.peek().length; coordVal += gridSize, index++) {
                gridLines.peek()[index].coordVal(coordVal + 0.5);
                gridLines.peek()[index].text(index);
                gridLines.peek()[index].visible(index < arrayLength);
            }
        }
    };
    return RulerViewModel;
}(analytics_utils_1.Disposable));
exports.RulerViewModel = RulerViewModel;
ko.bindingHandlers['ruler'] = {
    init: function (element, valueAccessor) {
        $(element).children().remove();
        var values = valueAccessor(), options_ = $.extend({}, ko.unwrap(values), {}), zoom = options_.zoom, options = {
            length: options_.length,
            units: options_.units,
            direction: options_.direction || '',
            zoom: zoom,
            flip: options_.flip,
            disable: options_.disable
        }, rulerViewModel = new RulerViewModel(options), templateHtml = analytics_widgets_1.getTemplate('dxrd-ruler' + options.direction), $element = $(element).append(templateHtml);
        ko.applyBindings(rulerViewModel, $element.children()[0]);
        analytics_internal_1.addDisposeCallback($element.children()[0], function () {
            rulerViewModel.dispose();
            rulerViewModel.gridLines(null);
            rulerViewModel.majorGridLines(null);
        });
        return { controlsDescendantBindings: true };
    }
};


/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var imageSource_1 = __webpack_require__(40);
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_internal_1 = __webpack_require__(8);
var dxImageSourceEditor = (function (_super) {
    __extends(dxImageSourceEditor, _super);
    function dxImageSourceEditor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    dxImageSourceEditor.prototype.updateOptions = function (options) {
        options.placeholderId = options.placeholderId || 'Image';
        _super.prototype.updateOptions.call(this, options);
    };
    dxImageSourceEditor.prototype._toggleReadOnlyState = function () {
        analytics_internal_1._getSuper(this)['_toggleReadOnlyState'].apply(this);
        this['_input']().prop('readOnly', true);
    };
    dxImageSourceEditor.prototype._handleResult = function (result) {
        var format = result.format.toLowerCase();
        if (format !== 'svg' && format !== 'png' && format !== 'jpg' && format !== 'jpeg')
            format = 'img';
        this.option('value', new imageSource_1.ImageSource(format, result.content));
    };
    return dxImageSourceEditor;
}(analytics_widgets_internal_1.dxFileImagePicker));
exports.dxImageSourceEditor = dxImageSourceEditor;
analytics_internal_1._registerDxtComponent('dxImageSourceEditor', dxImageSourceEditor);


/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var analytics_widgets_internal_1 = __webpack_require__(8);
var dxRichTextFileEditor = (function (_super) {
    __extends(dxRichTextFileEditor, _super);
    function dxRichTextFileEditor(element, options) {
        return _super.call(this, element, options) || this;
    }
    dxRichTextFileEditor.prototype._handleResult = function (result) {
        this.option('value', result);
    };
    return dxRichTextFileEditor;
}(analytics_widgets_internal_1.dxFileImagePicker));
exports.dxRichTextFileEditor = dxRichTextFileEditor;
analytics_internal_1._registerDxtComponent('dxRichTextFileEditor', dxRichTextFileEditor);


/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _add_designer_to_bundle_1 = __webpack_require__(468);
var _add_rich_edit_to_bundle_1 = __webpack_require__(520);
var DevExpress = window.DevExpress || {};
_add_designer_to_bundle_1._addDesignerToBundle(DevExpress);
_add_rich_edit_to_bundle_1._addRichToBundle(DevExpress);
module.exports = DevExpress['Reporting'];


/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ChartInternal = __webpack_require__(469);
var ChartInternalAxis = __webpack_require__(471);
var ChartInternalDataMembers = __webpack_require__(472);
var ChartInternalSeriesMetadata = __webpack_require__(473);
var ChartInternalModels = __webpack_require__(474);
var ChartInternalSeries = __webpack_require__(475);
var ChartInternalWidgets = __webpack_require__(476);
var DesignerControls = __webpack_require__(478);
var DesignerBandsMetadata = __webpack_require__(483);
var DesignerControlsMetadata = __webpack_require__(484);
var DesignerDataMetadata = __webpack_require__(485);
var DesignerControlsPivotGridMetadata = __webpack_require__(486);
var DesignerControlsCrossTabMetadata = __webpack_require__(487);
var Designer = __webpack_require__(488);
var DesignerActions = __webpack_require__(497);
var DesignerBandsInternal = __webpack_require__(498);
var DesignerBands = __webpack_require__(499);
var DesignerControlsPivotGrid = __webpack_require__(501);
var DesignerControlsCrossTab = __webpack_require__(502);
var DesignerData = __webpack_require__(503);
var DesignerInternal = __webpack_require__(504);
var DesignerInternalHtmlMarkUp = __webpack_require__(510);
var DesignerLocalization = __webpack_require__(511);
var DesignerTools = __webpack_require__(512);
var DesignerUtils = __webpack_require__(513);
var DesignerWidgets = __webpack_require__(514);
var DesignerWidgetsInternal = __webpack_require__(516);
var DesignerWizard = __webpack_require__(517);
function _addDesignerToBundle(bundle) {
    bundle.Reporting = bundle.Reporting || {};
    bundle.Reporting.Designer = Designer;
    bundle.Reporting.Chart = {};
    bundle.Reporting.Chart.Internal = ChartInternal;
    bundle.Reporting.Chart.Internal.Axis = ChartInternalAxis;
    bundle.Reporting.Chart.Internal.DataMembers = ChartInternalDataMembers;
    bundle.Reporting.Chart.Internal.Models = ChartInternalModels;
    bundle.Reporting.Chart.Internal.Series = ChartInternalSeries;
    bundle.Reporting.Chart.Internal.Series.Metadata = ChartInternalSeriesMetadata;
    bundle.Reporting.Chart.Internal.Widgets = ChartInternalWidgets;
    bundle.Reporting.Designer.Actions = DesignerActions;
    bundle.Reporting.Designer.Bands = DesignerBands;
    bundle.Reporting.Designer.Bands.Internal = DesignerBandsInternal;
    bundle.Reporting.Designer.Bands.Metadata = DesignerBandsMetadata;
    bundle.Reporting.Designer.Controls = DesignerControls;
    bundle.Reporting.Designer.Controls.Metadata = DesignerControlsMetadata;
    bundle.Reporting.Designer.Controls.PivotGrid = DesignerControlsPivotGrid;
    bundle.Reporting.Designer.Controls.PivotGrid.Metadata = DesignerControlsPivotGridMetadata;
    bundle.Reporting.Designer.Controls.CrossTab = DesignerControlsCrossTab;
    bundle.Reporting.Designer.Controls.CrossTabMetaData = DesignerControlsCrossTabMetadata;
    bundle.Reporting.Designer.Data = DesignerData;
    bundle.Reporting.Designer.Data.Metadata = DesignerDataMetadata;
    bundle.Reporting.Designer.Internal = DesignerInternal;
    bundle.Reporting.Designer.Internal.HtmlMarkUp = DesignerInternalHtmlMarkUp;
    bundle.Reporting.Designer.Localization = DesignerLocalization;
    bundle.Reporting.Designer.Tools = DesignerTools;
    bundle.Reporting.Designer.Utils = DesignerUtils;
    bundle.Reporting.Designer.Widgets = DesignerWidgets;
    bundle.Reporting.Designer.Widgets.Internal = DesignerWidgetsInternal;
    bundle.Reporting.Designer.Wizard = DesignerWizard;
    return bundle;
}
exports._addDesignerToBundle = _addDesignerToBundle;


/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(107);
__webpack_require__(62);
__webpack_require__(244);
__webpack_require__(246);
__webpack_require__(245);
__webpack_require__(22);
__webpack_require__(30);
__webpack_require__(19);
__webpack_require__(35);
__webpack_require__(117);
__webpack_require__(77);
__webpack_require__(250);
__webpack_require__(116);
__webpack_require__(76);
__webpack_require__(165);
__webpack_require__(170);
__webpack_require__(171);
__webpack_require__(108);
__webpack_require__(109);
__webpack_require__(259);
__webpack_require__(50);
var _registerEditors_1 = __webpack_require__(470);
_registerEditors_1.registerEditorTemplates();
__export(__webpack_require__(107));
__export(__webpack_require__(62));
__export(__webpack_require__(244));
__export(__webpack_require__(246));
__export(__webpack_require__(245));
__export(__webpack_require__(22));
__export(__webpack_require__(30));
__export(__webpack_require__(19));
__export(__webpack_require__(35));
__export(__webpack_require__(117));
__export(__webpack_require__(77));
__export(__webpack_require__(250));
__export(__webpack_require__(116));
__export(__webpack_require__(76));
__export(__webpack_require__(165));
__export(__webpack_require__(170));
__export(__webpack_require__(109));
__export(__webpack_require__(108));
__export(__webpack_require__(109));
__export(__webpack_require__(259));
__export(__webpack_require__(50));


/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _chartDataSourceEditor_1 = __webpack_require__(260);
var _collectionLookupEditor_1 = __webpack_require__(261);
var _viewEditor_1 = __webpack_require__(262);
var _chartDataMemberEditor_1 = __webpack_require__(263);
var _summaryFunctionEditor_1 = __webpack_require__(161);
var _pointsEditor_1 = __webpack_require__(264);
var _chartDependencyEditor_1 = __webpack_require__(265);
var _undoColorPickerEditor_1 = __webpack_require__(266);
var analytics_widgets_1 = __webpack_require__(4);
var _editorTemplates_1 = __webpack_require__(22);
var _positionSeriesLabelEditor_1 = __webpack_require__(267);
function registerEditorTemplates() {
    _editorTemplates_1.editorTemplates.registerEditors({
        chartDataSource: { header: 'dxcd-datasource', editorType: _chartDataSourceEditor_1.ChartDataSourceEditor },
        collection: { header: 'dxcd-collection-lookup-header', content: 'dxcd-collection-item', editorType: _collectionLookupEditor_1.CollectionLookupEditorModel },
        views: { header: 'dxcd-viewHeader', content: 'dxcd-viewContent', editorType: _viewEditor_1.ViewEditor },
        fieldChart: { header: 'dxcd-field', editorType: analytics_widgets_1.FieldListEditor },
        dataMemberChart: { header: 'dxcd-field', editorType: analytics_widgets_1.DataMemberEditor },
        valueDataMember: { header: 'dxcd-field', editorType: _chartDataMemberEditor_1.ChartDataMemberEditor },
        comboboxPositionSeriesLabel: { header: 'dx-combobox', editorType: _positionSeriesLabelEditor_1.PositionSeriesLabelEditor },
        panes: { header: 'dxcd-panes-editor' },
        axisX: { header: 'dxcd-axisX-editor' },
        axisY: { header: 'dxcd-axisY-editor' },
        legends: { header: 'dxcd-legends-editor' },
        summaryFunction: { header: 'dx-emptyHeader', content: 'dxcd-summaryFunction-content', editorType: _summaryFunctionEditor_1.SummaryFunctionEditor },
        points: { custom: 'dxcd-pointscollection', editorType: _pointsEditor_1.PointsEditor },
        maxSize: { header: 'dxcd-maxSize', editorType: _chartDependencyEditor_1.ChartDependencyEditor },
        minSize: { header: 'dxcd-minSize', editorType: _chartDependencyEditor_1.ChartDependencyEditor },
        group: { header: 'dxcd-group' },
        undoCustomColorEditor: { header: 'dxcd-color-undo', editorType: _undoColorPickerEditor_1.UndoColorPickerEditor }
    });
}
exports.registerEditorTemplates = registerEditorTemplates;


/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(164);
__webpack_require__(166);
__webpack_require__(113);
__export(__webpack_require__(164));
__export(__webpack_require__(166));
__export(__webpack_require__(113));


/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(75);
__webpack_require__(114);
__webpack_require__(169);
__webpack_require__(168);
__webpack_require__(167);
__export(__webpack_require__(75));
__export(__webpack_require__(114));
__export(__webpack_require__(169));
__export(__webpack_require__(168));
__export(__webpack_require__(167));


/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(78);
__export(__webpack_require__(78));


/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(44);
__webpack_require__(112);
__webpack_require__(257);
__webpack_require__(251);
__webpack_require__(252);
__webpack_require__(249);
__webpack_require__(253);
__webpack_require__(256);
__webpack_require__(160);
__webpack_require__(254);
__webpack_require__(255);
__webpack_require__(118);
__export(__webpack_require__(44));
__export(__webpack_require__(112));
__export(__webpack_require__(257));
__export(__webpack_require__(251));
__export(__webpack_require__(252));
__export(__webpack_require__(249));
__export(__webpack_require__(253));
__export(__webpack_require__(256));
__export(__webpack_require__(160));
__export(__webpack_require__(254));
__export(__webpack_require__(255));
__export(__webpack_require__(118));


/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(111);
__webpack_require__(258);
__webpack_require__(247);
__webpack_require__(115);
__webpack_require__(163);
__webpack_require__(159);
__webpack_require__(110);
__webpack_require__(162);
__webpack_require__(248);
__webpack_require__(78);
__export(__webpack_require__(111));
__export(__webpack_require__(258));
__export(__webpack_require__(247));
__export(__webpack_require__(115));
__export(__webpack_require__(163));
__export(__webpack_require__(159));
__export(__webpack_require__(110));
__export(__webpack_require__(162));
__export(__webpack_require__(248));
__export(__webpack_require__(78));


/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(119);
__webpack_require__(477);
__webpack_require__(263);
__webpack_require__(260);
__webpack_require__(265);
__webpack_require__(261);
__webpack_require__(267);
__webpack_require__(264);
__webpack_require__(161);
__webpack_require__(266);
__webpack_require__(262);
__export(__webpack_require__(263));
__export(__webpack_require__(260));
__export(__webpack_require__(265));
__export(__webpack_require__(261));
__export(__webpack_require__(267));
__export(__webpack_require__(264));
__export(__webpack_require__(161));
__export(__webpack_require__(266));
__export(__webpack_require__(262));


/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_internal_1 = __webpack_require__(8);
var templates = analytics_widgets_internal_1.SvgTemplatesEngine.templates;
analytics_widgets_internal_1.SvgTemplatesEngine.addTemplates({
    'dxrd-svg-fieldlist-area': templates['dxrd-svg-series-area'],
    'dxrd-svg-fieldlist-area3d': templates['dxrd-svg-series-area3d'],
    'dxrd-svg-fieldlist-sidebysidebar': templates['dxrd-svg-series-side_by_side_bar'],
    'dxrd-svg-fieldlist-sidebysidebar3d': templates['dxrd-svg-series-side_by_side_bar3d'],
    'dxrd-svg-fieldlist-bubble': templates['dxrd-svg-series-bubbles'],
    'dxrd-svg-fieldlist-candlestick': templates['dxrd-svg-series-candle_stick'],
    'dxrd-svg-fieldlist-doughnut3d': templates['dxrd-svg-series-doughnut3d'],
    'dxrd-svg-fieldlist-doughnut': templates['dxrd-svg-series-doughnut'],
    'dxrd-svg-fieldlist-fullstackedarea': templates['dxrd-svg-series-full_stacked_area'],
    'dxrd-svg-fieldlist-fullstackedarea3d': templates['dxrd-svg-series-full_stacked_area3d'],
    'dxrd-svg-fieldlist-fullstackedbar': templates['dxrd-svg-series-full_stacked_bar'],
    'dxrd-svg-fieldlist-fullstackedbar3d': templates['dxrd-svg-series-full_stacked_bar3d'],
    'dxrd-svg-fieldlist-fullstackedline': templates['dxrd-svg-series-full_stacked_line'],
    'dxrd-svg-fieldlist-fullstackedline3d': templates['dxrd-svg-series-full_stacked_line3d'],
    'dxrd-svg-fieldlist-fullstackedsplinearea': templates['dxrd-svg-series-full_stacked_spline_area'],
    'dxrd-svg-fieldlist-fullstackedsplinearea3d': templates['dxrd-svg-series-full_stacked_spline_area3d'],
    'dxrd-svg-fieldlist-waterfall': templates['dxrd-svg-series-waterfall'],
    'dxrd-svg-fieldlist-funnel': templates['dxrd-svg-series-funnel'],
    'dxrd-svg-fieldlist-funnel3d': templates['dxrd-svg-series-funnel3d'],
    'dxrd-svg-fieldlist-overlappedgantt': templates['dxrd-svg-series-gantt'],
    'dxrd-svg-fieldlist-line': templates['dxrd-svg-series-line'],
    'dxrd-svg-fieldlist-line3d': templates['dxrd-svg-series-line3d'],
    'dxrd-svg-fieldlist-manhattanbar': templates['dxrd-svg-series-manhattan_bar3d'],
    'dxrd-svg-fieldlist-nesteddoughnut': templates['dxrd-svg-series-nested_doughnut'],
    'dxrd-svg-fieldlist-pie': templates['dxrd-svg-series-pie'],
    'dxrd-svg-fieldlist-pie3d': templates['dxrd-svg-series-pie3d'],
    'dxrd-svg-fieldlist-point': templates['dxrd-svg-series-point'],
    'dxrd-svg-fieldlist-polararea': templates['dxrd-svg-series-polar_area'],
    'dxrd-svg-fieldlist-polarline': templates['dxrd-svg-series-polar_line'],
    'dxrd-svg-fieldlist-polarpoint': templates['dxrd-svg-series-polar_point'],
    'dxrd-svg-fieldlist-radararea': templates['dxrd-svg-series-radar_area'],
    'dxrd-svg-fieldlist-radarline': templates['dxrd-svg-series-radar_line'],
    'dxrd-svg-fieldlist-radarpoint': templates['dxrd-svg-series-radar_point'],
    'dxrd-svg-fieldlist-rangearea': templates['dxrd-svg-series-range_area'],
    'dxrd-svg-fieldlist-rangearea3d': templates['dxrd-svg-series-range_area3d'],
    'dxrd-svg-fieldlist-overlappedrangebar': templates['dxrd-svg-series-range_bar'],
    'dxrd-svg-fieldlist-scatterline': templates['dxrd-svg-series-scatter_line'],
    'dxrd-svg-fieldlist-sidebysidefullstackedbar': templates['dxrd-svg-series-side_by_side_full_stacked_bar'],
    'dxrd-svg-fieldlist-sidebysidefullstackedbar3d': templates['dxrd-svg-series-side_by_side_full_stacked_bar3d'],
    'dxrd-svg-fieldlist-sidebysidegantt': templates['dxrd-svg-series-side_by_side_gantt'],
    'dxrd-svg-fieldlist-sidebysiderangebar': templates['dxrd-svg-series-side_by_side_range_bar'],
    'dxrd-svg-fieldlist-sidebysidestackedbar': templates['dxrd-svg-series-side_by_side_stacked_bar'],
    'dxrd-svg-fieldlist-sidebysidestackedbar3d': templates['dxrd-svg-series-side_by_side_stacked_bar3d'],
    'dxrd-svg-fieldlist-spline': templates['dxrd-svg-series-spline'],
    'dxrd-svg-fieldlist-splinearea': templates['dxrd-svg-series-spline_area'],
    'dxrd-svg-fieldlist-splinearea3d': templates['dxrd-svg-series-spline_area3d'],
    'dxrd-svg-fieldlist-spline3d': templates['dxrd-svg-series-spline3d'],
    'dxrd-svg-fieldlist-stackedarea': templates['dxrd-svg-series-stacked_area'],
    'dxrd-svg-fieldlist-stackedarea3d': templates['dxrd-svg-series-stacked_area3d'],
    'dxrd-svg-fieldlist-stackedbar': templates['dxrd-svg-series-stacked_bar'],
    'dxrd-svg-fieldlist-stackedbar3d': templates['dxrd-svg-series-stacked_bar3d'],
    'dxrd-svg-fieldlist-stackedline': templates['dxrd-svg-series-stacked_line'],
    'dxrd-svg-fieldlist-stackedline3d': templates['dxrd-svg-series-stacked_line'],
    'dxrd-svg-fieldlist-stackedsplinearea': templates['dxrd-svg-series-stacked_spline_area'],
    'dxrd-svg-fieldlist-stackedsplinearea3d': templates['dxrd-svg-series-stacked_spline_area3d'],
    'dxrd-svg-fieldlist-steparea': templates['dxrd-svg-series-step_area'],
    'dxrd-svg-fieldlist-steparea3d': templates['dxrd-svg-series-step_area3d'],
    'dxrd-svg-fieldlist-stepline': templates['dxrd-svg-series-step_line'],
    'dxrd-svg-fieldlist-stepline3d': templates['dxrd-svg-series-step_line3d'],
    'dxrd-svg-fieldlist-stock': templates['dxrd-svg-series-stock'],
    'dxrd-svg-fieldlist-swiftplot': templates['dxrd-svg-series-swift_plot'],
    'dxrd-svg-fieldlist-chart': templates['dxrd-svg-chartstructure-chart'],
    'dxrd-svg-fieldlist-diagram': templates['dxrd-svg-chartstructure-diagram'],
    'dxrd-svg-fieldlist-legend': templates['dxrd-svg-chartstructure-legend'],
    'dxrd-svg-fieldlist-legends': templates['dxrd-svg-chartstructure-legend'],
    'dxrd-svg-fieldlist-series': templates['dxrd-svg-chartstructure-seriescollection'],
    'dxrd-svg-fieldlist-seriestemplate': templates['dxrd-svg-chartstructure-seriescollection'],
    'dxrd-svg-fieldlist-titles': templates['dxrd-svg-chartstructure-titles'],
});


/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(27);
__webpack_require__(10);
__webpack_require__(127);
__webpack_require__(187);
__webpack_require__(128);
__webpack_require__(90);
__webpack_require__(482);
__webpack_require__(180);
__webpack_require__(45);
__webpack_require__(190);
__webpack_require__(284);
__webpack_require__(279);
__webpack_require__(37);
__webpack_require__(280);
__webpack_require__(286);
__webpack_require__(287);
__webpack_require__(288);
__webpack_require__(289);
__webpack_require__(130);
__webpack_require__(134);
__webpack_require__(54);
__webpack_require__(136);
__webpack_require__(295);
__webpack_require__(192);
__webpack_require__(193);
__webpack_require__(194);
__webpack_require__(297);
__webpack_require__(68);
__webpack_require__(97);
__webpack_require__(299);
__webpack_require__(300);
__webpack_require__(301);
__webpack_require__(56);
__webpack_require__(195);
__webpack_require__(43);
__webpack_require__(197);
__webpack_require__(199);
__webpack_require__(198);
__webpack_require__(48);
__webpack_require__(135);
__webpack_require__(303);
__webpack_require__(16);
__webpack_require__(304);
__webpack_require__(133);
__webpack_require__(69);
__webpack_require__(98);
__webpack_require__(71);
__export(__webpack_require__(27));
__export(__webpack_require__(10));
__export(__webpack_require__(127));
__export(__webpack_require__(187));
__export(__webpack_require__(128));
__export(__webpack_require__(90));
__export(__webpack_require__(180));
__export(__webpack_require__(45));
__export(__webpack_require__(190));
__export(__webpack_require__(284));
__export(__webpack_require__(279));
__export(__webpack_require__(37));
__export(__webpack_require__(280));
__export(__webpack_require__(286));
__export(__webpack_require__(287));
__export(__webpack_require__(288));
__export(__webpack_require__(289));
__export(__webpack_require__(130));
__export(__webpack_require__(134));
__export(__webpack_require__(54));
__export(__webpack_require__(136));
__export(__webpack_require__(295));
__export(__webpack_require__(192));
__export(__webpack_require__(193));
__export(__webpack_require__(194));
__export(__webpack_require__(297));
__export(__webpack_require__(68));
__export(__webpack_require__(97));
__export(__webpack_require__(299));
__export(__webpack_require__(300));
__export(__webpack_require__(301));
__export(__webpack_require__(56));
__export(__webpack_require__(195));
__export(__webpack_require__(43));
__export(__webpack_require__(197));
__export(__webpack_require__(199));
__export(__webpack_require__(198));
__export(__webpack_require__(48));
__export(__webpack_require__(135));
__export(__webpack_require__(303));
__export(__webpack_require__(133));
__export(__webpack_require__(16));
__export(__webpack_require__(69));
__export(__webpack_require__(98));
__export(__webpack_require__(71));
__export(__webpack_require__(304));


/***/ }),
/* 479 */
/***/ (function(module, exports) {

module.exports = DevExpress.Reporting.Viewer.Parameters;

/***/ }),
/* 480 */
/***/ (function(module, exports) {

module.exports = DevExpress.Reporting.Viewer.Widgets;

/***/ }),
/* 481 */
/***/ (function(module, exports) {

module.exports = DevExpress.Reporting.Export;

/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(26);
__webpack_require__(52);
__webpack_require__(185);
__webpack_require__(53);
__webpack_require__(124);
__webpack_require__(307);
__webpack_require__(201);
__webpack_require__(202);
__webpack_require__(203);
__webpack_require__(308);
__export(__webpack_require__(26));
__export(__webpack_require__(52));
__export(__webpack_require__(185));
__export(__webpack_require__(53));
__export(__webpack_require__(124));
__export(__webpack_require__(307));
__export(__webpack_require__(201));
__export(__webpack_require__(202));
__export(__webpack_require__(203));
__export(__webpack_require__(308));


/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(129);
__webpack_require__(204);
__webpack_require__(144);
__webpack_require__(205);
__webpack_require__(309);
__webpack_require__(206);
__webpack_require__(310);
__webpack_require__(208);
__webpack_require__(209);
__webpack_require__(311);
__webpack_require__(210);
__webpack_require__(137);
__webpack_require__(89);
__webpack_require__(211);
__webpack_require__(39);
__webpack_require__(212);
__webpack_require__(139);
__webpack_require__(140);
__webpack_require__(96);
__webpack_require__(213);
__webpack_require__(145);
__webpack_require__(141);
__webpack_require__(200);
__webpack_require__(312);
__webpack_require__(313);
__webpack_require__(214);
__webpack_require__(215);
__webpack_require__(20);
__webpack_require__(291);
__webpack_require__(47);
__webpack_require__(184);
__webpack_require__(36);
__webpack_require__(285);
__webpack_require__(6);
__webpack_require__(11);
__webpack_require__(13);
__webpack_require__(88);
__webpack_require__(21);
__webpack_require__(188);
__export(__webpack_require__(129));
__export(__webpack_require__(204));
__export(__webpack_require__(144));
__export(__webpack_require__(205));
__export(__webpack_require__(309));
__export(__webpack_require__(206));
__export(__webpack_require__(310));
__export(__webpack_require__(208));
__export(__webpack_require__(209));
__export(__webpack_require__(311));
__export(__webpack_require__(210));
__export(__webpack_require__(137));
__export(__webpack_require__(89));
__export(__webpack_require__(211));
__export(__webpack_require__(39));
__export(__webpack_require__(212));
__export(__webpack_require__(139));
__export(__webpack_require__(140));
__export(__webpack_require__(96));
__export(__webpack_require__(213));
__export(__webpack_require__(145));
__export(__webpack_require__(141));
__export(__webpack_require__(200));
__export(__webpack_require__(312));
__export(__webpack_require__(313));
__export(__webpack_require__(214));
__export(__webpack_require__(215));
__export(__webpack_require__(20));
__export(__webpack_require__(291));
__export(__webpack_require__(47));
__export(__webpack_require__(184));
__export(__webpack_require__(36));
__export(__webpack_require__(285));
__export(__webpack_require__(6));
__export(__webpack_require__(11));
__export(__webpack_require__(13));
__export(__webpack_require__(88));
__export(__webpack_require__(21));
__export(__webpack_require__(188));


/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(46);
__webpack_require__(181);
__webpack_require__(17);
__webpack_require__(283);
__webpack_require__(273);
__webpack_require__(272);
__webpack_require__(81);
__webpack_require__(121);
__webpack_require__(271);
__export(__webpack_require__(46));
__export(__webpack_require__(181));
__export(__webpack_require__(126));
__export(__webpack_require__(17));
__export(__webpack_require__(283));
__export(__webpack_require__(273));
__export(__webpack_require__(272));
__export(__webpack_require__(81));
__export(__webpack_require__(121));
__export(__webpack_require__(271));


/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(70);
__webpack_require__(94);
__export(__webpack_require__(70));
__export(__webpack_require__(94));


/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(99);
__webpack_require__(57);
__webpack_require__(142);
__webpack_require__(143);
__webpack_require__(207);
__export(__webpack_require__(99));
__export(__webpack_require__(57));
__export(__webpack_require__(142));
__export(__webpack_require__(143));
__export(__webpack_require__(207));


/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(314);
__webpack_require__(454);
__webpack_require__(174);
__webpack_require__(34);
__webpack_require__(318);
__export(__webpack_require__(314));
__export(__webpack_require__(454));
__export(__webpack_require__(174));
__export(__webpack_require__(34));
__export(__webpack_require__(318));


/***/ }),
/* 489 */
/***/ (function(module, exports) {

module.exports = { default: window["ace"] };

/***/ }),
/* 490 */
/***/ (function(module, exports) {

module.exports = { default: "/mode-csharp" };

/***/ }),
/* 491 */
/***/ (function(module, exports) {

module.exports = { default: "/mode-vbscript" };

/***/ }),
/* 492 */
/***/ (function(module, exports) {

module.exports = DevExpress.events;

/***/ }),
/* 493 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.data.ArrayStore };

/***/ }),
/* 494 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Criteria.Utils;

/***/ }),
/* 495 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.config };

/***/ }),
/* 496 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.ui.dxDataGrid };

/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(383);
__webpack_require__(391);
__webpack_require__(393);
__webpack_require__(294);
__webpack_require__(293);
__webpack_require__(392);
__webpack_require__(399);
__webpack_require__(417);
__webpack_require__(418);
__webpack_require__(395);
__webpack_require__(390);
__webpack_require__(396);
__webpack_require__(398);
__webpack_require__(238);
__webpack_require__(397);
__export(__webpack_require__(383));
__export(__webpack_require__(391));
__export(__webpack_require__(393));
__export(__webpack_require__(294));
__export(__webpack_require__(293));
__export(__webpack_require__(392));
__export(__webpack_require__(399));
__export(__webpack_require__(417));
__export(__webpack_require__(418));
__export(__webpack_require__(395));
__export(__webpack_require__(390));
__export(__webpack_require__(396));
__export(__webpack_require__(398));
__export(__webpack_require__(238));
__export(__webpack_require__(397));


/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(182);
__webpack_require__(65);
__webpack_require__(186);
__webpack_require__(277);
__webpack_require__(276);
__export(__webpack_require__(182));
__export(__webpack_require__(65));
__export(__webpack_require__(186));
__export(__webpack_require__(277));
__export(__webpack_require__(276));


/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(15);
__webpack_require__(51);
__webpack_require__(500);
__webpack_require__(86);
__webpack_require__(66);
__webpack_require__(87);
__webpack_require__(183);
__webpack_require__(407);
__webpack_require__(406);
__webpack_require__(408);
__webpack_require__(122);
__webpack_require__(25);
__webpack_require__(409);
__export(__webpack_require__(15));
__export(__webpack_require__(51));
__export(__webpack_require__(86));
__export(__webpack_require__(66));
__export(__webpack_require__(87));
__export(__webpack_require__(183));
__export(__webpack_require__(407));
__export(__webpack_require__(406));
__export(__webpack_require__(408));
__export(__webpack_require__(122));
__export(__webpack_require__(25));
__export(__webpack_require__(409));


/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(131);
__webpack_require__(132);
__export(__webpack_require__(131));
__export(__webpack_require__(132));


/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(58);
__webpack_require__(305);
__webpack_require__(306);
__export(__webpack_require__(58));
__export(__webpack_require__(305));
__export(__webpack_require__(306));


/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(64);
__webpack_require__(125);
__webpack_require__(55);
__webpack_require__(269);
__webpack_require__(38);
__webpack_require__(41);
__webpack_require__(179);
__webpack_require__(82);
__webpack_require__(282);
__webpack_require__(85);
__webpack_require__(178);
__webpack_require__(29);
__webpack_require__(321);
__webpack_require__(176);
__webpack_require__(175);
__webpack_require__(275);
__webpack_require__(83);
__webpack_require__(274);
__export(__webpack_require__(64));
__export(__webpack_require__(125));
__export(__webpack_require__(55));
__export(__webpack_require__(269));
__export(__webpack_require__(38));
__export(__webpack_require__(41));
__export(__webpack_require__(179));
__export(__webpack_require__(82));
__export(__webpack_require__(282));
__export(__webpack_require__(85));
__export(__webpack_require__(178));
__export(__webpack_require__(29));
__export(__webpack_require__(321));
__export(__webpack_require__(176));
__export(__webpack_require__(175));
__export(__webpack_require__(275));
__export(__webpack_require__(83));
__export(__webpack_require__(274));


/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(237);
__webpack_require__(337);
__webpack_require__(219);
__webpack_require__(223);
__webpack_require__(394);
__webpack_require__(147);
__webpack_require__(505);
__webpack_require__(290);
__webpack_require__(461);
__webpack_require__(327);
__webpack_require__(402);
__webpack_require__(189);
__webpack_require__(63);
__webpack_require__(23);
__webpack_require__(296);
__webpack_require__(302);
__webpack_require__(196);
__webpack_require__(67);
__webpack_require__(138);
__webpack_require__(191);
__webpack_require__(84);
__webpack_require__(146);
__webpack_require__(325);
__webpack_require__(380);
__webpack_require__(91);
__webpack_require__(93);
__webpack_require__(421);
__webpack_require__(416);
__webpack_require__(177);
__webpack_require__(415);
__webpack_require__(328);
__webpack_require__(329);
__webpack_require__(414);
__webpack_require__(377);
__webpack_require__(378);
__webpack_require__(382);
__webpack_require__(381);
__webpack_require__(374);
__webpack_require__(376);
__webpack_require__(375);
__webpack_require__(61);
__webpack_require__(319);
__webpack_require__(326);
__webpack_require__(100);
__webpack_require__(101);
__webpack_require__(218);
__webpack_require__(324);
__webpack_require__(235);
__webpack_require__(323);
__webpack_require__(333);
__webpack_require__(462);
__webpack_require__(334);
__webpack_require__(335);
__webpack_require__(222);
__webpack_require__(332);
__webpack_require__(120);
__webpack_require__(506);
__webpack_require__(463);
__webpack_require__(401);
__webpack_require__(331);
__webpack_require__(60);
__webpack_require__(220);
__webpack_require__(33);
__webpack_require__(157);
__webpack_require__(507);
__webpack_require__(322);
__webpack_require__(423);
__webpack_require__(315);
__webpack_require__(384);
__webpack_require__(404);
__webpack_require__(239);
__webpack_require__(158);
__webpack_require__(464);
__webpack_require__(31);
__webpack_require__(388);
__webpack_require__(42);
__webpack_require__(413);
__webpack_require__(123);
__webpack_require__(173);
__webpack_require__(508);
__webpack_require__(410);
__webpack_require__(281);
__webpack_require__(385);
__webpack_require__(411);
__webpack_require__(400);
__webpack_require__(240);
__webpack_require__(72);
__webpack_require__(389);
__webpack_require__(95);
__webpack_require__(221);
__webpack_require__(153);
__webpack_require__(316);
__webpack_require__(379);
__webpack_require__(73);
__webpack_require__(336);
__webpack_require__(405);
__webpack_require__(224);
__webpack_require__(228);
__webpack_require__(360);
__webpack_require__(149);
__webpack_require__(338);
__webpack_require__(358);
__webpack_require__(150);
__webpack_require__(340);
__webpack_require__(345);
__webpack_require__(365);
__webpack_require__(49);
__webpack_require__(104);
__webpack_require__(229);
__webpack_require__(74);
__webpack_require__(346);
__webpack_require__(509);
__export(__webpack_require__(237));
__export(__webpack_require__(337));
__export(__webpack_require__(219));
__export(__webpack_require__(223));
__export(__webpack_require__(394));
__export(__webpack_require__(147));
__export(__webpack_require__(290));
__export(__webpack_require__(461));
__export(__webpack_require__(327));
__export(__webpack_require__(402));
__export(__webpack_require__(189));
__export(__webpack_require__(63));
__export(__webpack_require__(23));
__export(__webpack_require__(296));
__export(__webpack_require__(302));
__export(__webpack_require__(196));
__export(__webpack_require__(67));
__export(__webpack_require__(138));
__export(__webpack_require__(191));
__export(__webpack_require__(84));
__export(__webpack_require__(146));
__export(__webpack_require__(325));
__export(__webpack_require__(380));
__export(__webpack_require__(91));
__export(__webpack_require__(93));
__export(__webpack_require__(421));
__export(__webpack_require__(416));
__export(__webpack_require__(177));
__export(__webpack_require__(415));
__export(__webpack_require__(328));
__export(__webpack_require__(329));
__export(__webpack_require__(414));
__export(__webpack_require__(377));
__export(__webpack_require__(378));
__export(__webpack_require__(382));
__export(__webpack_require__(381));
__export(__webpack_require__(374));
__export(__webpack_require__(376));
__export(__webpack_require__(375));
__export(__webpack_require__(61));
__export(__webpack_require__(319));
__export(__webpack_require__(326));
__export(__webpack_require__(100));
__export(__webpack_require__(101));
__export(__webpack_require__(218));
__export(__webpack_require__(324));
__export(__webpack_require__(235));
__export(__webpack_require__(323));
__export(__webpack_require__(333));
__export(__webpack_require__(462));
__export(__webpack_require__(334));
__export(__webpack_require__(222));
__export(__webpack_require__(335));
__export(__webpack_require__(332));
__export(__webpack_require__(120));
__export(__webpack_require__(463));
__export(__webpack_require__(401));
__export(__webpack_require__(331));
__export(__webpack_require__(60));
__export(__webpack_require__(220));
__export(__webpack_require__(33));
__export(__webpack_require__(157));
__export(__webpack_require__(322));
__export(__webpack_require__(423));
__export(__webpack_require__(315));
__export(__webpack_require__(384));
__export(__webpack_require__(404));
__export(__webpack_require__(239));
__export(__webpack_require__(158));
__export(__webpack_require__(464));
__export(__webpack_require__(31));
__export(__webpack_require__(388));
__export(__webpack_require__(42));
__export(__webpack_require__(413));
__export(__webpack_require__(123));
__export(__webpack_require__(173));
__export(__webpack_require__(410));
__export(__webpack_require__(281));
__export(__webpack_require__(385));
__export(__webpack_require__(411));
__export(__webpack_require__(400));
__export(__webpack_require__(240));
__export(__webpack_require__(72));
__export(__webpack_require__(389));
__export(__webpack_require__(95));
__export(__webpack_require__(221));
__export(__webpack_require__(153));
__export(__webpack_require__(316));
__export(__webpack_require__(379));
__export(__webpack_require__(73));
__export(__webpack_require__(336));
__export(__webpack_require__(405));
__export(__webpack_require__(224));
__export(__webpack_require__(228));
__export(__webpack_require__(360));
__export(__webpack_require__(149));
__export(__webpack_require__(338));
__export(__webpack_require__(358));
__export(__webpack_require__(150));
__export(__webpack_require__(340));
__export(__webpack_require__(345));
__export(__webpack_require__(365));
__export(__webpack_require__(49));
__export(__webpack_require__(104));
__export(__webpack_require__(229));
__export(__webpack_require__(74));
__export(__webpack_require__(346));


/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var xrCheckbox_1 = __webpack_require__(134);
var ko = __webpack_require__(1);
var svgAttrs = ko.bindingHandlers['svgAttrs'];
ko.bindingHandlers['svgAttrs'] = {
    update: function (element, valueAccessor, allBindingsAccessor, viewModel) {
        svgAttrs.update(element, valueAccessor, allBindingsAccessor, viewModel);
        if (viewModel instanceof xrCheckbox_1.XRCheckBoxSurface) {
            element.setAttribute('preserveAspectRatio', 'none');
        }
    }
};


/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var scroll_view_1 = __webpack_require__(459);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
ko.bindingHandlers['dxAutoScrolling'] = {
    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
        var $element = $(element);
        var rect = null;
        var values = valueAccessor();
        var scrollView = scroll_view_1.default['getInstance'](element);
        if (scrollView) {
            var timeout = null, interval = null, clearTimings = function () {
                timeout && clearTimeout(timeout);
                interval && clearInterval(interval);
                timeout = null;
                interval = null;
            }, scrolling = function (inc) {
                timeout = setTimeout(function () {
                    interval = setInterval(function () {
                        var newPosition = scrollView.scrollTop() + inc;
                        if (newPosition < 0) {
                            newPosition = 0;
                        }
                        scrollView['scrollTo'](newPosition);
                    }, 50);
                }, 500);
            }, move = function (event) {
                if (values.active()) {
                    if (!rect) {
                        rect = element.getBoundingClientRect();
                    }
                    if (event.clientY <= rect.top + 30) {
                        !timeout && scrolling(-30);
                    }
                    else if (event.clientY >= rect.bottom - 30) {
                        !timeout && scrolling(30);
                    }
                    else {
                        clearTimings();
                    }
                }
            }, subscription = values.active.subscribe(function (newVal) {
                rect = null;
                clearTimings();
            });
            element.addEventListener('mousemove', move);
            analytics_internal_1.addDisposeCallback(element, function () {
                element.removeEventListener('mousemove', move);
                subscription.dispose();
            });
        }
    }
};


/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _htmlMarkUpConverter_1 = __webpack_require__(422);
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
var $ = __webpack_require__(3);
ko.bindingHandlers['controlDisplayName'] = {
    update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var value = valueAccessor(), surface = ko.unwrap(value);
        var parameters = surface.displayNameParameters();
        var setElementText = function (value) { return $(element).text(value ? ('[' + value + ']') : ''); };
        if (parameters.isExpression) {
            $(element).text(parameters.text);
            var expressionConverter = new analytics_internal_1.DisplayExpressionConverter(bindingContext.$root.displayNameProvider());
            expressionConverter.toDisplayExpression(parameters.dataMember, parameters.text).done(function (result) {
                $(element).text(result);
            });
        }
        else if (parameters.dataMember) {
            setElementText(parameters.dataMember);
            bindingContext.$root.displayNameProvider()
                .getDisplayName(parameters.dataSource, parameters.dataMember, parameters.dataMemberOffset, false)
                .done(function (data) { return setElementText(data); })
                .fail(function () { return setElementText(parameters.dataMember); });
        }
        else {
            if (!parameters.allowMarkupText) {
                $(element).text(parameters.text || '');
            }
            else {
                new _htmlMarkUpConverter_1.ValueConverter(parameters).appendTo(element);
            }
        }
    }
};
ko.bindingHandlers['displayNameExtender'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var value = ko.unwrap(valueAccessor());
        var displayName = ko.observable('');
        var displayNameLoader = ko.computed(function () {
            if (value.dataMember()) {
                var displayNameProvider = bindingContext.$root.displayNameProvider.peek();
                var promise = value.path ? displayNameProvider.getDisplayNameByPath(value.path(), value.dataMember()) :
                    displayNameProvider.getDisplayName(value.dataSource(), value.dataMember(), value.dataMemberOffset, value.includeDataSourceName);
                promise.done(function (data) { return displayName(data); })
                    .fail(function () { return displayName(value.dataMember()); });
            }
            else {
                displayName('');
            }
        }).extend({ rateLimit: 0 });
        analytics_internal_1.addDisposeCallback(element, function () {
            displayNameLoader.dispose();
        });
        var innerBindingContext = bindingContext.extend({ $displayName: displayName });
        ko.applyBindingsToDescendants(innerBindingContext, element);
        return { controlsDescendantBindings: true };
    }
};
ko.virtualElements.allowedBindings['displayNameExtender'] = true;


/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = __webpack_require__(2);
var ko = __webpack_require__(1);
ko.bindingHandlers['dxWatermark'] = {
    update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var options = valueAccessor();
        var leftMargin = options.forLeftMargin;
        var band = options.band;
        var reportSurface = options.reportSurface;
        var backgroundRect = band.backgroundRect();
        var pxs = function (x) { return x === 0 ? '0' : (x + 'px'); };
        var url = function (s) { return s ? analytics_internal_1.formatUnicorn('url("{0}")', s) : s; };
        var size = function (w, h) { return pxs(w) + ' ' + pxs(h); };
        var getOffset = function (size, vertical) {
            var noOffsetKey = vertical ? 'Top' : 'Left', fullOffsetKey = vertical ? 'Bottom' : 'Right', pageSize = vertical ? reportSurface.pageHeight() : reportSurface.pageWidth(), align = options.align;
            return (pageSize - size) * (align.indexOf(noOffsetKey) >= 0 ? 0 : align.indexOf(fullOffsetKey) >= 0 ? 1 : 0.5);
        };
        element.style['height'] = pxs(backgroundRect.height);
        element.style['width'] = pxs(leftMargin ? reportSurface.margins.left() : band._width());
        element.style['background-image'] = url(options.image);
        element.style['opacity'] = (255 - options.transparency) / 255 + '';
        element.style['background-repeat'] = options.tiling ? 'repeat' : 'no-repeat';
        var xOffset = 0, yOffset = 0, _a = reportSurface._watermarkImageNaturalSize(), width = _a.width, height = _a.height;
        switch (options.viewMode) {
            case 'Clip':
                width *= reportSurface.zoom();
                height *= reportSurface.zoom();
                xOffset = getOffset(width, false);
                yOffset = getOffset(height, true);
                element.style['background-size'] = size(width, height);
                break;
            case 'Stretch':
                xOffset = yOffset = 0;
                element.style['background-size'] = size(reportSurface.pageWidth(), reportSurface.pageHeight());
                break;
            case 'Zoom':
                var xRatio = reportSurface.pageWidth() / width, yRatio = reportSurface.pageHeight() / height, ratio;
                if (xRatio < yRatio) {
                    ratio = xRatio;
                    xOffset = 0;
                    yOffset = getOffset(ratio * height, true);
                }
                else {
                    ratio = yRatio;
                    xOffset = getOffset(ratio * width, false);
                    yOffset = 0;
                }
                element.style['background-size'] = size(width * ratio, height * ratio);
                break;
        }
        element.style['background-position-y'] = pxs(yOffset - backgroundRect.top);
        element.style['background-position-x'] = pxs(xOffset - (backgroundRect.left || 0) - (leftMargin ? 0 : reportSurface.margins.left()));
    }
};


/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_internal_1 = __webpack_require__(8);
analytics_widgets_internal_1.SvgTemplatesEngine.addTemplates({
    'dx-chart-leftPanel': '<div class="dx-chart-left-panel dxd-border-primary dxd-properties-panel-group-header-back-color dxd-back-primary"> <div class="dxrd-right-panel dxd-border-primary dxd-properties-panel-group-header-back-color" data-bind="css: tabPanel.cssClasses()"> <div class="dxrd-right-panel-header dxd-text-primary"> <span data-bind="text: rightPanelHeader()"></span> </div> <!-- ko if: chartStructure --> <div class="dxrd-right-panel-body" data-bind="dxScrollView: { showScrollbar: \'onHover\', scrollByContent: false, bounceEnabled: false, useNative: false, scrollByThumb: true }"> <div class="dxcd-chart-structure dxd-back-primary" data-bind="treelist: chartStructure"></div> </div> <!-- /ko --> </div> </div>',
    'dxcd-indicators-list': '<div class="dxcd-indicators-list" data-bind="dxList: { dataSource: actions, searchExpr: \'display\', searchEnabled: true, onItemClick: function(e) { e.itemData.clickAction(); }}"> <div data-options="dxTemplate : { name: \'item\' }"> <div class="dx-text-content" data-bind="text: display, attr: { title: display }"></div> </div> </div>',
    'dxcd-toolbar': '<div class="dxrd-toolbar-wrapper"> <div class="dxrd-toolbar" data-bind="template: {name: \'dxrd-toolbar-tmplt\', data: actionLists.toolbarItems }"></div> </div>',
    'dx-chart-middlePart': '<!-- ko ifnot: isLoading --> <!-- ko with: surface --> <div class="dxrd-surface-wrapper" style="top: 0" data-bind="template: templateName"> </div> <!-- /ko --> <!-- /ko --> <!-- ko if: isLoading --> <div class="dxrd-surface-wrapper"> <div style="text-align: center; padding-top: 49%;"> <div data-bind="dxLoadIndicator: { visible: isLoading() }"></div> </div> </div> <!-- /ko -->',
    'dx-chart-surface': '<div class="dxrd-surface" data-bind="styleunit: { \'width\': Math.min(width(), $root.surfaceSize()) }, click: function(_, e) { e.stopPropagation(); }"> <div class="dxrd-viewport" data-bind="styleunit: { minWidth: Math.min(width() + 60, $root.surfaceSize()), maxWidth: width() + 60,  maxHeight: height() + 60 }"> <div class="dxrd-control" style="border:none; background: none;"> <div data-bind="zoom: zoom, styleunit: { \'height\': height() / zoom(), \'width\': width() / zoom() }"> <img data-bind="attr: {src: imageSrc }, styleunit: { \'height\': height() / zoom(), \'width\': width() / zoom() }" /> </div> </div> </div> </div>',
    'dxcd-collection-lookup-header': '<div data-bind="dxSelectBox: { items: array, displayExpr: \'name\', value: selectedItem, disabled: disabled,  placeholder: $root.dx._static.selectPlaceholder(), noDataText: $root.dx._static.noDataText(), dropDownOptions: { container: $root.getPopupContainer($element) , useItemTextAsTitle: true } }"></div>',
    'dxcd-collection-item': '<!-- ko if: selectedItem --> <div data-bind="dxPropertyGrid: { target: selectedItem, editorsInfo: { editors: editors }, level: 1 }"></div> <!--/ko -->',
    'dxcd-field': '<!-- ko if: visible --> <div data-bind="dxFieldListPicker: { path: path, value: value, acceptCustomValue: true, itemsProvider: $root.dataBindingsProvider(), treeListController: treeListController, disabled: disabled }"></div> <!--/ko -->',
    'dxrd-propertygridtab': '<div class="dxrd-right-panel-header dxd-text-primary"> <span data-bind="text: text"></span> </div> <div class="dxrd-right-panel-body" data-bind="dxScrollView: { showScrollbar: \'onHover\' }"> <!-- ko template: { name: \'dx-propertieseditor\', data: model }--> <!-- /ko --> </div>',
    'dxcd-panes-editor': '<div data-bind="dxSelectBox: { dataSource: $root.panes, value: value, disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"></div>',
    'dxcd-legends-editor': '<div data-bind="dxSelectBox: { dataSource: $root.legends, value: value, disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"></div>',
    'dxcd-axisX-editor': '<div data-bind="dxSelectBox: { dataSource: $root.axisX, value: value, disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"></div>',
    'dxcd-axisY-editor': '<div data-bind="dxSelectBox: { dataSource: $root.axisY, value: value, disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"></div>',
    'dxcd-datasource': '<!-- ko with: generateOptions($root.chartDataSources, $root.getPopupContainer($element)) --> <div data-bind="dxSelectBox: $data"></div> <!-- /ko -->',
    'dxcd-viewHeader': '<div data-bind="dxSelectBox: { dataSource: generateViewItems(), itemTemplate: \'stateItem\', valueExpr: \'value\', value: generateHeaderValue($root.undoEngine), displayExpr: \'displayValue\', disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"> <div class="lookupItem" data-options="dxTemplate:{ name:\'stateItem\' }"> <div style="display:inline-block; width: 24px; height: 24px;" data-bind="css: className, template: {name: templateName, if: !!templateName }"> </div> <div style="display:inline-block; vertical-align: super;" data-bind="text: displayValue"></div> </div> </div>',
    'dxcd-viewContent': '<div data-bind="dxPropertyGrid: { target: contentValue, level: level + 1, parentDisabled: disabled }"></div>',
    'dxcd-summaryfunction': '<div class="dx-editor" data-bind="visible: visible"> <div data-bind="dxCollectionEditor: options"> </div> </div>',
    'dxcd-summaryFunction-content': '<div class="dxcd-summary-function-content"> <!-- ko with: value --> <div class="dx-field dxd-back-primary"> <div class="dx-field-label dxd-text-primary" data-bind="styleunit: $parent.memberPadding"> <div class="propertygrid-editor-displayName" data-bind="text: $parent.getLocalization(\'Function\', \'DevExpress.XtraReports.UI.XRGroupSortingSummary.Function\'), attr: { \'title\': $parent.getLocalization(\'Function\', \'DevExpress.XtraReports.UI.XRGroupSortingSummary.Function\') }"></div> </div> <div class="dx-field-value"> <div data-bind="dxSelectBox: { value: functionName, dataSource: $parent.availableItems() ,acceptCustomValue: true, disabled: $parent.disabled(), placeholder: $root.dx._static.selectPlaceholder(), dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"></div> </div> </div> <!-- ko foreach: args --> <div class="dx-field dxd-back-primary" data-bind="css: $parents[1].actionsAreAvailable() ? \'dxcd-summaryfunction-arg\' : \'\'"> <div class="dx-field-label dxd-text-primary" data-bind="styleunit: $parents[1].memberPadding"> <!-- ko if: $parent.args().length === 1--> <div class="propertygrid-editor-displayName" data-bind="text: $parents[1].getLocalization(\'Argument\', \'DevExpress.XtraCharts.SeriesSelectionMode.Argument\'), attr: { \'title\': $parents[1].getLocalization(\'Argument\', \'DevExpress.XtraCharts.SeriesSelectionMode.Argument\') }"></div> <!-- /ko --> <!-- ko if: $parent.args().length > 1--> <div class="propertygrid-editor-displayName" data-bind="text: $parents[1].getLocalization(\'Argument\', \'DevExpress.XtraCharts.SeriesSelectionMode.Argument\') + ($index() + 1), attr: { \'title\': $parents[1].getLocalization(\'Argument\', \'DevExpress.XtraCharts.SeriesSelectionMode.Argument\') + ($index() + 1) }"></div> <!-- /ko --> </div> <div class="dx-field-value"> <!-- ko if: $parents[1].actionsAreAvailable() --> <div class="dxcd-summaryFunction-remove" data-bind="click: function(){ $parents[1].remove($index()) }"> <div class="dxcd-summaryFunction-remove-icon dx-icon-dxrd-image-recycle-bin"><!-- ko template: \'dxrd-svg-operations-recycle_bin\'--><!-- /ko --></div> </div> <!-- /ko --> <!-- ko template: { name: $parents[1].argumentTemplateName, data: { value: $data.value, path: $parents[1].path, treeListController: $parents[1].treeListController, disabled: $parents[1].disabled, visible: $parents[1].visible } } --> <!-- /ko --> </div> </div> <!-- /ko --> <!-- ko if: $parent.actionsAreAvailable() --> <div class="dx-field dxd-back-primary"> <div class="dx-field-label dxd-text-primary" style="width:auto" data-bind="styleunit: $parent.memberPadding"> <div class="propertygrid-editor-displayName dxrcd-summaryfunction-addnew dxd-hyperlink-color dxd-border-accented dxd-text-accented" data-bind="text: $parent.getLocalization(\'Add Argument\', \'ASPxReportsStringId.ReportDesigner_AddArgument\'), attr: { \'title\': $parent.getLocalization(\'Add New Item\', \'ASPxReportsStringId.ReportDesigner_AddNewItem\') }, click: function() { $parent.add(); }"></div> </div> </div> <!-- /ko --> <!-- /ko --> </div>',
    'dxcd-pointscollection': '<div class="dxrd-editor" data-bind="visible: visible"> <div data-bind="dxCollectionEditor: { values: value, displayName: displayName, level: level, info: info, addHandler: function() { return addPoint(_model()[\'owner\'] || _model()); } }"> <div data-bind="dxPropertyGrid: { target: value, level: editor.level + 1 }"></div> </div> </div>',
    'dxcd-maxSize': '<div data-bind="dxNumberBox: getDependencyOptions({ value:value, showSpinButtons:true, disabled:disabled }, \'min\', \'minSize\'), dxValidator: { validationRules: validationRules || [] }"></div>',
    'dxcd-minSize': '<div data-bind="dxNumberBox: getDependencyOptions({ value:value, showSpinButtons:true, disabled:disabled }, \'max\', \'maxSize\'), dxValidator: { validationRules: validationRules || [] }"></div>',
    'dxcd-group': '<div data-bind="dxSelectBox: { dataSource: $root.groups, value: value, acceptCustomValue:true, onFocusOut: function() { $root.applyGroup($data.value()); }, disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"></div>',
    'dxcd-color-undo': '<div data-bind="dxColorBox: { value: generateValue($root.undoEngine), editAlphaChannel: true, popupPosition: { collision: \'flipfit flipfit\' }, disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element) } }"></div>',
    'dx-selectbox-undo': '<div data-bind="dxLocalizedSelectBox: { dataSource: values, value: generateValue($root.undoEngine), valueExpr: \'value\', displayExpr: \'displayValue\', displayCustomValue: true, disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element) } }, dxValidator: { validationRules: $data.validationRules || [] }"></div>',
    'dxrd-band-coordinate-grid-selection': '<!-- ko with: surface --><div data-bind="styleunit: { \'height\': height, \'width\': $parent.width, top: absolutePosition.y }, css: { \'dxrd-band-content-selected dxd-border-accented dx-border-inheritor\': selected() }, resizable: { starting: function() { $root.resizeHandler.started = true; $root.resizeHandler.starting() }, stopped: function() { $data.stopResize(); $root.resizeHandler.stopped(); $root.resizeHandler.started = false;}, handles: \'s\', disabled: !canResize(), forceResize: resize, zoom: $root.surface().zoom, minimumHeight: minHeight() }, trackCursor: underCursor" style="position:absolute"></div><!-- ko ifnot: collapsed --><!-- ko template: { name: \'dxrd-band-holder\', data: { templateName: \'leftMarginSelectionTemplate\', holder: $data.bandsHolder, getData: function(item) { return { surface: item, width: $parent.width } } } }--><!-- /ko --><!-- /ko --><!-- /ko -->',
    'dxrd-band-coordinate-grid': '<!-- ko with: surface --> <!-- ko ifnot: collapsed --> <div class="dxrd-band-content dxd-selectable" data-bind="styleunit: { \'height\': height(), top: absolutePosition.y }"> <!-- ko if: $data._context.drawWatermark() --> <!-- ko template: { name: \'dxrd-watermark\', data: { forLeftMargin: true, band: $data, reportSurface: $data._context } } --> <!-- /ko --> <!-- /ko --> <div class="dxrd-band-subbands-wrapper" data-bind="styleunit: { \'top\': heightWithoutSubBands } "> <!-- ko template: { name: \'dxrd-band-holder\', data: { templateName: \'leftMarginTemplate\', holder: $data.bandsHolder, getData: function(item) { return { surface: item, width: $parent.width, \'snapGridSize\': $parent.snapGridSize }; } } }--> <!-- /ko --> </div> </div> <!-- /ko --> <!-- ko if: collapsed --> <div data-bind="styleunit: { \'height\': height, top: absolutePosition.y }" class="dxrd-band-collapsed"> <div data-bind="css: { \'dxrd-band-content-selected dxd-border-accented dx-border-inheritor\': selected() }" style="position:absolute; height: 100%; width: 100%"></div> </div> <!-- /ko --> <!-- /ko -->',
    'dxrd-detail-report-band-coordinate-grid': '<!-- ko with: surface --> <!-- ko ifnot: collapsed --> <!-- ko template: { name: \'dxrd-band-holder\', data: { templateName: \'leftMarginTemplate\', holder: $data.bandsHolder, getData: function(item) { return { surface: item, width: $parent.width, \'snapGridSize\': $parent.snapGridSize }; } } }--> <!-- /ko --> <!-- /ko --> <!-- ko if: collapsed --> <div data-bind="styleunit: { \'height\': height, top: absolutePosition.y }" class="dxrd-band-collapsed"> <div data-bind="css: { \'dxrd-band-content-selected dxd-border-accented dx-border-inheritor\': selected() }" style="position:absolute; height: 100%; width: 100%"></div> </div> <!-- /ko --> <!-- /ko -->',
    'dxrd-sub-band-coordinate-grid': '<!-- ko with: surface --> <!-- ko ifnot: collapsed --> <div class="dxrd-band-content dxd-selectable" data-bind="styleunit: { \'height\': height(), top: $data.absolutePosition.y() - $data.parent.heightWithoutSubBands() - $data.parent.absolutePosition.y() }"> <!-- ko if: $data._context.drawWatermark() --> <!-- ko template: { name: \'dxrd-watermark\', data: { forLeftMargin: true, band: $data, reportSurface: $data._context } } --> <!-- /ko --> <!-- /ko --> </div> <!-- /ko --> <!-- ko if: collapsed --> <div data-bind="styleunit: { \'height\': height, top: absolutePosition.y }" class="dxrd-band-collapsed"> <div data-bind="css: { \'dxrd-band-content-selected dxd-border-accented dx-border-inheritor\': selected() }" style="position:absolute; height: 100%; width: 100%"></div> </div> <!-- /ko --> <!-- /ko -->',
    'dxrd-band-selection': '<div data-bind="styleunit: { \'height\': height, \'width\': rect().width, top: absolutePosition.y }, css: { \'dxrd-band-content-selected dxd-border-accented dx-border-inheritor\': selected() }, resizable: { starting: function() { $root.resizeHandler.started = true; $root.resizeHandler.starting() }, stopped: function() { $data.stopResize(); $root.resizeHandler.stopped(); $root.resizeHandler.started = false;}, handles: \'s\', disabled: !canResize(), forceResize: resize, zoom: $root.surface().zoom, minimumHeight: minHeight() }, trackCursor: underCursor" style="position:absolute"> <!-- ko if: contentSelectionTemplate --> <!-- ko template: contentSelectionTemplate--> <!-- /ko --> <!-- /ko --> </div> <!-- ko ifnot: collapsed --> <!-- ko template: { name: \'dxrd-band-holder\', data: { templateName: \'selectionTemplate\', holder: $data.bandsHolder, getData: function(item) { return item; } } }--> <!-- /ko --> <!-- /ko -->',
    'dxrd-detailreportband-selection': '<!-- ko ifnot: collapsed --> <!-- ko template: { name: \'dxrd-band-holder\', data: { templateName: \'selectionTemplate\', holder: $data.bandsHolder, getData: function(item) { return item; } } }--> <!-- /ko --> <!-- /ko -->',
    'dxrd-bandselection-content': '<!-- ko ifnot: collapsed --> <!-- ko foreach: controls --> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> <!-- /ko --> <!-- /ko -->',
    'dxrd-band-vruler': '<!-- ko with: surface --><div class="dxrd-band-marker-wrapper" data-bind="attr: { title: name }, styleunit: { \'width\': $data.markerWidth() + 20, \'top\': absolutePosition.y, \'height\': height }" style="position:absolute"> <!--  ko if: hasOwnRuler --> <div class="dxrd-band-vruler" data-bind="styleunit: { \'height\': rulerHeight, top: 0 }, resizable: { starting: function() { $root.resizeHandler.started = true; $root.resizeHandler.starting(); $root.selection.initialize($data); $root.selection.expectClick = false; }, stopped: function() { $data.stopResize(); $root.resizeHandler.stopped(); $root.resizeHandler.started = false; }, handles: \'s\', disabled: !canResize(), forceResize: resizeTheBand, zoom: $root.surface().zoom, minimumHeight: $data.heightFromControls && $data.heightFromControls() || 1 }"> <div data-bind="ruler: { \'zoom\': zoom, \'length\': height, \'units\': $parent.measureUnit, \'direction\': \'vertical\', flip: $root.dx[\'config\']()[\'rtlEnabled\'] }"></div> </div> <!-- /ko --> <!-- ko if: showMarker --> <div class="dxrd-band-marker" data-bind="css: markerClass, styleunit: { \'height\': height(), \'width\': markerWidth }, click: function(_, e) { markerClick($root.selection); e.stopPropagation(); }, resizable: { starting: function() { $root.resizeHandler.started = true; $root.resizeHandler.starting(); $root.selection.initialize($data); }, stopped: function() { $data.stopResize(); $root.resizeHandler.stopped(); $root.resizeHandler.started = false; }, handles: \'s\', disabled: collapsed() || !hasOwnRuler() || locked, forceResize: resize, zoom: $root.surface().zoom, minimumHeight: minHeight() }"> <div class="dxrd-band-marker-content"> <div style="width: 1px; height: 1px; margin-left: 9px;"></div> <div class="dxrd-band-marker-rotation"> <div class="dxrd-band-marker-rotation-text" data-bind="text: collapsed() ? \'\' : name"></div> </div> </div> </div> <!-- /ko --></div><!-- ko ifnot: collapsed --><!-- ko template: { name: \'dxrd-band-holder\', data: { templateName: \'vrulerTemplate\', holder: $data.bandsHolder, getData: function(item) { return { surface: item, measureUnit: $parent.measureUnit }; } } }--><!-- /ko --><!-- /ko --><!-- /ko -->',
    'dxrd-band': '<!-- ko ifnot: collapsed --> <div class="dxrd-band-content dxd-selectable" data-bind="styleunit: { \'height\': heightWithoutSubBands, \'width\': _width(), \'top\': absolutePosition.y }" style="position:absolute;"> <!-- ko if: $data._context.drawWatermark() --> <!-- ko template: { name: \'dxrd-watermark\', data: { forLeftMargin: false, band: $data, reportSurface: $data._context } } --> <!-- /ko --> <!-- /ko --> <div data-bind="styleunit: { \'left\': coordinateGridOptions.left }, coordinateGrid: coordinateGridOptions" class="dxrd-band-content-grid"></div> <!-- ko if: $data.multiColumn() && $data.multiColumn().haveColumns() --> <!-- ko with: $data.multiColumn --> <div data-bind="styleunit: { \'left\': columnSpacingLeft, \'width\': columnSpacing }" class="dxrd-band-content-spasing"></div> <div data-bind="styleunit: { \'left\': grayAreaLeft, \'width\': grayAreaWidth }" class="dxrd-band-content-greyarea"></div> <!-- /ko --> <!-- /ko --> <!-- ko foreach: controls --> <!-- ko template: { name: $data.template } --> <!-- /ko --> <!-- /ko --> </div> <!-- ko template: { name: \'dxrd-band-holder\', data: { templateName: \'templateName\', holder: $data.bandsHolder, getData: function(item) { return item; } } }--> <!-- /ko --> <!-- /ko --> <!-- ko if: collapsed --> <!-- ko template: \'dxrd-band-collapsed\' --> <!-- /ko --> <!-- /ko --> <!-- ko if: $root.drawCrossbandContent() && $data._isHeaderBandTypeOrThemSubBands() --> <!-- ko with: $data.printAcrossBandsPlaceHolder --> <div class="dxrd-print-across-bands-placeholder" data-bind="visible: $data.isVisible, styleunit: { \'top\': $data.absolutePositionY, \'height\': $data.height }"> <!-- ko with: $data.band --> <div class="dxrd-band-content dxd-selectable" data-bind="styleunit: { \'height\': heightWithoutSubBands, \'width\': _width() }" style="position:absolute;"> <!-- ko foreach: controls --> <!-- ko template: { name: $data.template } --> <!-- /ko --> <!-- /ko --> </div> <!-- /ko --> </div> <!-- /ko --> <!-- /ko -->',
    'dxrd-detailreportband': '<!-- ko ifnot: collapsed --> <!-- ko template: { name: \'dxrd-band-holder\', data: { templateName: \'templateName\', holder: $data.bandsHolder, getData: function(item) { return item; } } }--> <!-- /ko --> <!-- /ko --> <!-- ko if: collapsed --> <!-- ko template: \'dxrd-band-collapsed\' --> <!-- /ko --> <!-- /ko -->',
    'dxrd-band-collapsed': '<!-- ko if: collapsed --> <div class="dxrd-band-collapsed dxd-selectable" data-bind="styleunit: { \'height\': height, \'line-height\': height, \'top\': absolutePosition.y, width: rect().width }" style="position:absolute"> <!-- ko if: $root.surface().rtl() --> <div style="position: absolute" data-bind="text: (name() || \'\').toUpperCase(), styleunit: { \'right\': leftMargin }"></div> <!-- /ko --> <!-- ko if: !$root.surface().rtl() --> <div style="position: absolute" data-bind="text: (name() || \'\').toUpperCase(), styleunit: { \'left\': leftMargin }"></div> <!-- /ko --> </div> <!-- /ko -->',
    'dxrd-band-holder': '<!-- ko foreach: holder.bands --> <!-- ko template: { name: $data[$parent.templateName], data: $parent.getData($data) } --> <!-- /ko --> <!-- /ko --> <!-- ko with: holder.verticalBandsContainer --> <!-- ko if: visible && !!$data[$parent.templateName] --> <!-- ko template: { name: $data[$parent.templateName], data: $parent.getData($data) } --> <!-- /ko --> <!-- /ko --> <!-- /ko -->',
    'dxrd-vertical-band-selection': '<div data-bind="styleunit: { \'height\': height, \'width\': _width, left: absolutePosition.x }, resizable: { starting: function() { $root.resizeHandler.started = true; $root.resizeHandler.starting() }, stopped: function() { $data.stopResize(); $root.resizeHandler.stopped(); $root.resizeHandler.started = false;}, handles: resizeHandles(), disabled: !canResize(), forceResize: resize, zoom: $root.surface().zoom, minimumWidth: minimumWidth(), minimumHeight: minimumHeight() },  css: { \'dxrd-band-content-selected dxd-border-accented dx-border-inheritor\': selected() }, trackCursor: underCursor" style="position:absolute"> <div class="dxrd-vertical-band-marker" data-bind="css: { \'dxrd-vertical-band-marker-focused\': focused }"> <div class="dxrd-banding-marker-text" data-bind="text: name"></div> </div> <div style="height: calc(100% - 29px); width: 100%; position: absolute"> <!-- ko foreach: controls --> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> <!-- /ko --> </div> </div>',
    'dxrd-vertical-band': '<div class="dxrd-band-content dxrd-vertical-band" data-bind="styleunit: { \'width\': _width(), \'left\': absolutePosition.x() }"> <!-- ko if: $data._context.drawWatermark() --> <!-- ko template: { name: \'dxrd-watermark\', data: { forLeftMargin: false, band: $data, reportSurface: $data._context } } --> <!-- /ko --> <!-- /ko --> <div data-bind="coordinateGrid: coordinateGridOptions" class="dxrd-band-content-grid"></div> <!-- ko foreach: controls --> <!-- ko template: { name: $data.template } --> <!-- /ko --> <!-- /ko --> </div>',
    'dxrd-vertical-bands-container': '<!-- ko ifnot: collapsed --> <div class="dxrd-band-content dxrd-vertical-bands-container" data-bind="styleunit: { \'height\': height, left: leftOffset, \'width\': width, top: topOffset }, resizable: { starting: function() { $root.resizeHandler.started = true; $root.resizeHandler.starting(); }, stopped: function() { $data.stopResize(); $root.resizeHandler.stopped(); $root.resizeHandler.started = false; }, handles: \'s\', disabled: !canResize(), forceResize: resize, zoom: $root.surface().zoom, minimumHeight: minHeight || 1 }"> <div data-bind="styleunit: { \'width\': width }" style="height: 100%; overflow:hidden;position: absolute;"> <div data-bind="style: { transform: \'translateX(-\' + $data.scrollOffset() + \'px)\' }"> <!-- ko foreach: verticalBands --> <!-- ko template: { name: templateName } --> <!-- /ko --> <!-- /ko --> <div data-bind="styleunit: { width: grayAreaWidth, height: height, left: !$root.surface().rtl() ? grayAreaLeft : 0  }" class="dxrd-band-content-greyarea"></div> </div> </div> </div> <!-- /ko --> <!-- ko if: collapsed --> <div class="dxrd-band-collapsed" data-bind="styleunit: { \'height\': height, \'line-height\': height, \'top\': topOffset, width: width }" style="position:absolute"> <div style="position: absolute" data-bind="text: (name || \'\').toUpperCase(), styleunit: { \'right\': $root.surface().rtl() ? leftMargin : \'auto\', \'left\': !$root.surface().rtl() ? leftMargin: \'auto\' }"></div> </div> <!-- /ko -->',
    'dxrd-vertical-bands-container-selection': '<!-- ko ifnot: collapsed --> <div data-bind="styleunit: { \'width\': width, top: topOffset, left: leftOffset, height: height() }" style="overflow:hidden;position: absolute;"> <div data-bind="dxScrollView: $data.createScrollViewOptions($data, $root.selection)"> <!-- ko foreach: verticalBands --> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> <!-- /ko --> </div> </div> <!-- /ko -->',
    'dxrd-vertical-bands-container-vruler': '<!-- ko with: surface --> <div class="dxrd-band-marker-wrapper" data-bind="styleunit: { \'width\': markerWidth() + 20, \'top\': topOffset, \'height\': height }" style="position:absolute"> <div class="dxrd-band-vruler" data-bind="styleunit: { \'height\': height, top: $data.bandOffset }, resizable: { starting: function() { $root.resizeHandler.started = true; $root.resizeHandler.starting(); }, stopped: function() { $data.stopResize(); $root.resizeHandler.stopped(); $root.resizeHandler.started = false; }, handles: \'s\', disabled: !canResize(), forceResize: resize, zoom: $root.surface().zoom, minimumHeight: minHeight || 1 }"> <div data-bind="ruler: { \'zoom\': zoom, \'length\': height, \'units\': $parent.measureUnit, \'direction\': \'vertical\', flip: $root.dx[\'config\']()[\'rtlEnabled\'] }"></div> </div> <div class="dxrd-band-marker dxrd-band-marker-body" data-bind=" css: { \'dxrd-band-marker-body\' : !$data.focused(), \'dxrd-band-marker-body-focused\' : $data.focused() }, styleunit: { \'height\': height(), \'width\': markerWidth }, click: function(_, e) { $data.markerClick($root.selection); e.stopPropagation(); }, resizable: { starting: function() { $root.resizeHandler.started = true; $root.resizeHandler.starting(); }, stopped: function() { $data.stopResize(); $root.resizeHandler.stopped(); $root.resizeHandler.started = false; }, handles: \'s\', disabled: collapsed, forceResize: resize, zoom: $root.surface().zoom, minimumHeight: minHeight() }"> <div class="dxrd-band-marker-content"> <div style="width: 1px; height: 1px; margin-left: 9px;"></div> <div class="dxrd-band-marker-rotation"> <div class="dxrd-band-marker-rotation-text" data-bind="text: collapsed() ? \'\' : name"></div> </div> </div> </div> </div> <!-- /ko -->',
    'dxrd-vertical-bands-leftMargin-selection': '<!-- ko with: surface --> <div data-bind="styleunit: { \'height\': height, \'width\': $parent.width, top: topOffset }, resizable: { starting: function() { $root.resizeHandler.started = true; $root.resizeHandler.starting() }, stopped: function() { $data.stopResize(); $root.resizeHandler.stopped(); $root.resizeHandler.started = false;}, handles: \'s\', disabled: !canResize(), forceResize: resize, zoom: $root.surface().zoom, minimumHeight: minHeight() }" style="position:absolute"> </div> <!-- /ko -->',
    'dxrd-vertical-bands-leftMargin': '<!-- ko with: surface --> <div data-bind="css: { \'dxrd-band-content\': !$data.collapsed(), \'dxrd-band-collapsed\': $data.collapsed() }, styleunit: { \'height\': height, top: topOffset }"> </div> <!-- /ko -->',
    'dxrd-barcode-content': '<div style="margin:auto; width: 150px; height: 37px;" class="dxrd-image-surface-barcode"></div><div data-bind="styleunit: { \'lineHeight\': (contentSizes().height - 37) / _context.zoom() }"> <div class="dxrd-control-content" data-bind="controlDisplayName: $data, style: contentCss"></div></div>',
    'dxrd-charactercomb-content': '<!-- ko foreach: cells --><div class="dxrd-charactercomb-cell" style="position:absolute" data-bind="styleunit: { width: size.width, height: size.height, top: top, left: left }"> <div style="position:absolute"> <div data-bind="style: $parent.css, text: text, styleunit: { lineHeight: size.height(), width: size.width, height: size.height }" style="position:absolute; letter-spacing:1px;"></div> <div data-bind="style: $parent.borderCss, styleunit: { width: size.width, height: size.height }" style="position:absolute; box-sizing:border-box"></div> </div></div><!-- /ko -->',
    'dxrd-charactercomb': '<div class="dxrd-control dxd-selectable" data-bind="styleunit: position, css: adorntemplate"> <div class="dxrd-control-content-main" style="border: 1px solid silver;left:0; top: 0;" data-bind="styleunit: { lineHeight: rect().height, height: rect().height, width: rect().width }"> <div style="position:relative; overflow:hidden; margin-top:-1px; margin-left:-1px;" data-bind="zoom: _context.zoom, template: contenttemplate, styleunit: { height: rect().height / _context.zoom(), width: rect().width / _context.zoom() }"> </div> </div></div>',
    'dxrd-chart-designer-popup': '<div data-bind="dxPopup: { showTitle: true, width: \'95%\', height: \'95%\', wrapperAttr: { class: \'dxrd-chartdesigner-popup\' }, title: $root.getLocalization(\'Chart Designer\', \'ChartDesignerStringIDs.ChartDesignerWindowTitle\'), visible: visible, toolbarItems: buttons, showCloseButton: true, container: container($element), position: { of: container($element) }}"> <div class="dxrd-chartdesigner-popup-content"> <div style="width:100%; height:100%" data-bind="visible: visible, dxChartDesigner: options"></div> </div></div>',
    'dxrd-chart-selection': '<div class="dxrd-control" data-bind="visible: selected() || focused(), css: {\'dxrd-selected\': selected, \'dxrd-focused\': focused, \'dxrd-intersect\': isIntersect, \'dxrd-locked\': locked }, resizable: $root.resizeHandler, draggable: $root.dragHandler, styleunit: position, trackCursor: underCursor"> <div class="dxd-border-accented dxrd-control-border-box"></div> <div class="dxrd-chart-panel"> <div class="dxrd-chart-panel-text" data-bind="dxclick: function() { $root.runChartDesigner($data); }, text: runDesignerButtonText(), attr: { title: runDesignerButtonText() }"></div> </div></div><div class="dxrd-control" data-bind="visible: !(selected() && focused()), styleunit: position, trackCursor: underCursor, style:{ overflow: isSelected() ? \'visible\' : \'hidden\'}"></div>',
    'dxrd-checkbox-content': '<div data-bind="style: { cssFloat: isGlyphAlignmentNear() ? \'left\': \'right\', width: checkStateWidthContainer() }, styleunit: { lineHeight: contentHeightWithoutZoom }" style="text-align:center "> <div class="dxrd-checkbox-checkstate" data-bind="styleunit:{ width: checkStateWidth, height: checkStateHeight }, css: checkStateClass, template: {name: $data.checkStateStyleIcon, if: !!ko.unwrap($data.checkStateStyleIcon)}"> </div></div><div style="display: inline-block; box-sizing: border-box; letter-spacing: normal; padding-left:3px" data-bind="styleunit: { width: textWidth, lineHeight: contentHeightWithoutZoom }, visible: visibleText, style: { cssFloat: isGlyphAlignmentNear() ? \'right\': \'left\' }"> <span class="dxrd-control-content dxrd-control-content-multiline" data-bind="controlDisplayName: $data, style: contentCss, cacheElement: { action: function(element) { $data.cacheElementContent(element); } }"></span></div>',
    'dxrd-control-content': '<div style="box-sizing: border-box; letter-spacing: normal; width:100%" data-bind="styleunit: { lineHeight: contentHeightWithoutZoom }"> <div class="dxrd-control-content" data-bind="controlDisplayName: $data, style: contentCss, css: {\'dxrd-control-content-multiline\' : multiline }"></div></div>',
    'dxrd-control-selection': '<div class="dxrd-control" data-bind="event: { dblclick: function() { $root.inlineTextEdit.show($element) } }, style: { visibility: (selected() || focused()) ? \'inherit\' : \'hidden\'}, css: {\'dxrd-selected\': selected, \'dxrd-focused\': focused, \'dxrd-intersect\': isIntersect, \'dxrd-locked\': locked }, resizable: $root.resizeHandler, draggable: $root.dragHandler, styleunit: position, trackCursor: underCursor"> <div class="dxd-border-accented dxrd-control-border-box"></div> <!-- ko if: $root.inlineTextEdit.visible() && selected() --> <!-- ko with: $root.inlineTextEdit--> <div class="inline-text-edit" data-bind="dxTextArea: { value: text, onKeyUp: keypressAction, valueChangeEvent: \'keyup\' }"></div> <!-- /ko --> <!-- /ko --> <!-- ko if: $data.controls--> <!-- ko foreach: controls --> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> <!-- /ko --> <!-- /ko --></div><div class="dxrd-control" data-bind="visible: !(selected() && focused()), styleunit: position, trackCursor: underCursor, style:{ overflow: isSelected() ? \'visible\' : \'hidden\'}"> <div class="dxrd-control-content-select-main" data-bind="styleunit: { \'top\': contentSizes().top + (isIntersect() ? 1 : 0), \'left\': contentSizes().left + (isIntersect()? 1 : 0), lineHeight: contentSizes().height, height: contentSizes().height, width: contentSizes().width}"> <!-- ko if: $data.controls--> <!-- ko foreach: controls --> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> <!-- /ko --> <!-- /ko --> </div></div>',
    'dxrd-control': '<div class="dxrd-control dxd-selectable" data-bind="styleunit: position, css: adorntemplate"> <div class="dxrd-control-content-main" data-bind="styleunit: { \'top\': contentSizes().top, \'left\': contentSizes().left, lineHeight: contentSizes().height, height: contentSizes().height, width: contentSizes().width }, style: css"> <div data-bind="zoom: _context.zoom, template: contenttemplate, styleunit: { \'height\': contentHeightWithoutZoom, \'width\': contentWidthWithoutZoom }"> </div> <!-- ko if: $data.controls --> <!-- ko foreach: controls --> <!-- ko template: { name: $data.template } --> <!-- /ko --> <!-- /ko --> <!-- /ko --> </div> <div data-bind="style: borderCss" style="width:100%; height: 100%; position:absolute; box-sizing:border-box"></div></div>',
    'dxrd-crossband-line': '<div class="dxrd-cross-band dxrd-control dxd-selectable" data-bind="css: {\'dxrd-uiselected\': selected }, styleunit: position"> <svg width="100%" height="100%"> <line data-bind="attr: { x1: \'50%\', x2: \'50%\', y1: 0, y2: \'100%\'} , style: lineCss" /> <!-- ko if: isIntersect --> <line class="dxrd-cross-band-intersect" data-bind="attr: { x1: \'50%\', x2: \'50%\', y1: 0, y2: \'100%\'}, style: lineWidthCss  " /> <!-- /ko --> </svg></div>',
    'dxrd-crossband': '<div class="dxrd-cross-band dxrd-control" data-bind="styleunit: position, css: {\'dxrd-intersect\': isIntersect, \'dxrd-locked\': locked, \'dxrd-uiselected\': selected }"> <div class="dxrd-control dxd-selectable" style="width: 100%; height: 5px; position: absolute;top:0" data-bind="trackCursor: edgeUnderCursor"></div> <div class="dxrd-control dxd-selectable" style="width: 5px; height: 100%; position: absolute;left:0" data-bind="trackCursor: edgeUnderCursor"></div> <div class="dxrd-control dxd-selectable" style="width: 5px; height: 100%; position: absolute;right:0" data-bind="trackCursor: edgeUnderCursor"></div> <div class="dxrd-control dxd-selectable" style="width: 100%; height: 5px; position: absolute;bottom:0" data-bind="trackCursor: edgeUnderCursor"></div> <svg width="100%" height="100%"> <line data-bind="attr: { x1: borderWidth()/2, x2: borderWidth()/2, y1: 0, y2: \'100%\' }, style: rightCss" /> <line data-bind="attr: { x1: 0, x2: \'100%\', y1: borderWidth()/2, y2: borderWidth()/2 }, style: topCss" /> <line data-bind="attr: { x1: rect().width-borderWidth()/2, x2: rect().width-borderWidth()/2, y1: 0, y2: \'100%\' }, style: leftCss" /> <line data-bind="attr: { x1: 0, x2: \'100%\', y1: rect().height-borderWidth()/2, y2: rect().height-borderWidth()/2 }, style: bottomCss" /> </svg></div>',
    'dxrd-crosstab-cell': '<div class="dxrd-crosstab-cell dxrd-control" data-bind="event: { dblclick: function() { isEditable() && $root.inlineTextEdit.show($element) } }, style: { visibility: (selected() || focused()) ? \'inherit\' : \'hidden\'}, css: {\'dxrd-selected\': selected, \'dxrd-focused\': focused, \'dxrd-intersect\': isIntersect, \'dxrd-locked\': locked }, resizable: $root.resizeHandler, styleunit: position, trackCursor: underCursor"> <!-- ko template: \'dxrd-crosstab-cell-selection\' --> <!-- /ko --> <div class="dxd-border-accented dxrd-control-border-box"></div> <!-- ko if: $root.inlineTextEdit.visible() && selected() --> <!-- ko with: $root.inlineTextEdit--> <div class="inline-text-edit" data-bind="dxTextArea: { value: text, onKeyUp: keypressAction, valueChangeEvent: \'keyup\' }"></div> <!-- /ko --> <!-- /ko --> <div id="dxrd-crosstab-cell-drop" data-bind="visible: showDropSurface, css: dragCss, styleunit: { left: dropRect.left, top: dropRect.top, width: dropRect.width, height: dropRect.height }"></div> </div> <div class="dxrd-crosstab-cell dxrd-control" data-bind="visible: !(selected() && focused()), styleunit: position, trackCursor: underCursor, style:{ overflow: \'visible\'}, event: { mousedown: function(e) { cellClick(); } }"> <!-- ko template: \'dxrd-crosstab-cell-selection\' --> <!-- /ko --> <div class="dxrd-control-content-select-main" data-bind="styleunit: { \'top\': contentSizes().top + (isIntersect() ? 1 : 0), \'left\': contentSizes().left + (isIntersect()? 1 : 0), lineHeight: contentSizes().height, height: contentSizes().height, width: contentSizes().width}"> <div id="dxrd-crosstab-cell-drop" data-bind="visible: showDropSurface, css: dragCss, styleunit: { left: dropRect.left, top: dropRect.top, width: dropRect.width, height: dropRect.height }"></div> </div> </div>',
    'dxrd-crosstab-cell-selection': '<!-- ko if: _control._rowIndex() === 0 --> <div class="dxrd-table-column-selection dxrd-table-column-selection-top" data-bind="click: function(_, e) { !$root.selection.disabled() && selectLine($root.selection, e); e.stopPropagation(); }, visible: !$root.dx._static.DragDropHandler.started(), styleunit: { \'width\': position.width }"></div> <!-- /ko --> <!-- ko if: _control._columnIndex() === 0 --> <div class="dxrd-table-row-selection dxrd-table-row-selection-left" data-bind="click: function(_, e) { !$root.selection.disabled() && selectLine($root.selection, e, true); e.stopPropagation(); }, visible: !$root.dx._static.DragDropHandler.started()"></div> <!-- /ko --> <!-- ko if: _control.parent._rowDefinitions().length - 1 ===  _control._rowIndex() --> <div class="dxrd-table-column-selection dxrd-table-column-selection-bottom" data-bind="click: function(_, e) { !$root.selection.disabled() && selectLine($root.selection, e); e.stopPropagation(); },visible: !$root.dx._static.DragDropHandler.started(), styleunit: { \'width\': position.width }"></div> <!-- /ko --> <!-- ko if: _control.parent._columnDefinitions().length - 1 ===  _control._columnIndex() --> <div class="dxrd-table-row-selection dxrd-table-row-selection-right" data-bind="click: function(_, e) { !$root.selection.disabled() && selectLine($root.selection, e, true); e.stopPropagation(); }, visible: !$root.dx._static.DragDropHandler.started()"></div> <!-- /ko -->',
    'dxrd-crosstab-control-content': '<div style="box-sizing: border-box; letter-spacing: normal; width:100%" data-bind="styleunit: { lineHeight: contentHeightWithoutZoom }"> <div class="dxrd-control-content" data-bind="controlDisplayName: $data, style: contentCss, css: {\'dxrd-control-content-multiline\' : multiline, \'dxrd-disabled\': $data.getControlModel().isBindable() && !$data.getControlModel().fieldName() }"></div></div>',
    'dxrd-crosstab': '<div class="dxrd-crosstab dxrd-control" data-bind="event: { dblclick: function() { $root.inlineTextEdit.show($element) } }, style: { visibility: (selected() || focused()) ? \'inherit\' : \'hidden\'}, css: {\'dxrd-selected\': selected, \'dxrd-focused\': focused, \'dxrd-intersect\': isIntersect, \'dxrd-locked\': locked }, resizable: $root.resizeHandler, draggable: $root.dragHandler, styleunit: position, trackCursor: underCursor"> <div class="dxd-border-accented dxrd-control-border-box"></div> <!-- ko if: $root.inlineTextEdit.visible() && selected() --> <!-- ko with: $root.inlineTextEdit--> <div class="inline-text-edit" data-bind="dxTextArea: { value: text, onKeyUp: keypressAction, valueChangeEvent: \'keyup\' }"></div> <!-- /ko --> <!-- /ko --> <!-- ko if: $data.controls--> <!-- ko foreach: controls --> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> <!-- /ko --> <!-- /ko --></div><div class="dxrd-crosstab dxrd-control" data-bind="visible: !(selected() && focused()), styleunit: position, trackCursor: underCursor, style:{ overflow: \'visible\'}"> <div class="dxrd-control-content-select-main" data-bind="styleunit: { \'top\': contentSizes().top + (isIntersect() ? 1 : 0), \'left\': contentSizes().left + (isIntersect()? 1 : 0), lineHeight: contentSizes().height, height: contentSizes().height, width: contentSizes().width}"> <!-- ko if: $data.controls--> <!-- ko foreach: controls --> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> <!-- /ko --> <!-- /ko --> </div></div>',
    'dxrd-line-content': '<svg style="position:absolute; left:0; width:100%; height: 100%"> <line data-bind="attr: { x1: linePosition().x1 / _context.zoom(), x2: linePosition().x2 / _context.zoom(), y1: linePosition().y1 / _context.zoom(), y2: linePosition().y2 / _context.zoom() }, style: contentCss" /></svg>',
    'dxrd-pagebreak-selection': '<div class="dxrd-control dxrd-pagebreak" data-bind="visible: isSelected(), trackCursor: underCursor, css: {\'dxrd-selected\': selected, \'dxrd-focused\': focused, \'dxrd-locked\': locked }, draggable: $root.dragHandler, styleunit: { \'width\': position.width(), \'height\': 3, \'top\': position.top() - 1, left: position.left() }"> <div class="dxd-border-accented dxrd-control-border-box"></div></div><div class="dxrd-control dxrd-pagebreak" data-bind="visible: !isSelected(), trackCursor: underCursor, styleunit: { \'width\': position.width(), \'height\': 3, \'top\': position.top() - 1, left: position.left() }"></div>',
    'dxrd-pagebreak': '<div class="dxrd-control dxd-selectable" style="border:none; background: none;" data-bind="styleunit: position"> <div data-bind="zoom: _context.zoom, template: contenttemplate, styleunit: { \'lineHeight\': lineHeight, \'height\': lineHeight, \'width\': position.width() / _context.zoom() }"> </div></div>',
    'dxrd-pdfcontent-control-content': '<div style="box-sizing: border-box; letter-spacing: normal; width:100%" data-bind="styleunit: { lineHeight: contentHeightWithoutZoom }"> <div class="dxrd-control-content" data-bind="style: contentCss, styleunit: { lineHeight: contentHeightWithoutZoom, height: contentHeightWithoutZoom, width: contentWidthWithoutZoom }"> <div data-bind="css: controlTypeClass, template: controlTypeIconTemplate" style="position: absolute; width: 24px; height: 24px; right: 5px; top: 5px;"> </div> <!-- ko if: generateOwnPages() --> <div class="dxrd-text-nowrap-ellipsis" data-bind="text: getControlModel().textContent"></div> <!-- /ko --> </div></div>',
    'dxrd-pdfcontent-selection': '<div class="dxrd-control" data-bind="style: { visibility: (selected() || focused()) ? \'inherit\' : \'hidden\'}, css: {\'dxrd-selected\': selected, \'dxrd-focused\': focused, \'dxrd-intersect\': isIntersect, \'dxrd-locked\': locked }, resizable: $data.getResizableOptions($root.resizeHandler), draggable: $root.dragHandler, styleunit: position, trackCursor: underCursor"> <div class="dxd-border-accented dxrd-control-border-box"></div></div><div class="dxrd-control" data-bind="visible: !(selected() && focused()), styleunit: position, trackCursor: underCursor, style:{ overflow: isSelected() ? \'visible\' : \'hidden\'}"> <div class="dxrd-control-content-select-main" data-bind="styleunit: { \'top\': contentSizes().top + (isIntersect() ? 1 : 0), \'left\': contentSizes().left + (isIntersect()? 1 : 0), lineHeight: contentSizes().height, height: contentSizes().height, width: contentSizes().width}"> </div></div>',
    'dxrd-pdfsignature-content': '<div class="dxrd-pdf-signature-skeleton" data-bind="styleunit: { lineHeight: contentHeightWithoutZoom }, visible: $data.showSkeleton"> <div class="dxrd-control-content" data-bind="controlDisplayName: $data, style: contentCss"> </div></div><div data-bind="visible: !$data.showSkeleton()"> <div data-bind="styleunit: { lineHeight: contentHeightWithoutZoom }, visible: $data.visibleImage" style="text-align:center;"> <div class="dxrd-pdf-signature-image" data-bind="template: \'dxrd-svg-todo-pdfsignature\', css: {\'dxrd-pdf-signature-image-fill-container\' : !$data.visibleText()}"> </div> </div> <div class="dxrd-pdf-signature-info-certificate-name" data-bind="styleunit: { lineHeight: contentHeightWithoutZoom }, visible: !$data.visibleImage() && !$data.hideImage(), css: {\'dxrd-pdf-signature-info-certificate-name-fill-container\': !$data.visibleText() }"> <div class="dxrd-control-content" data-bind="text: $data.certificateName, style: contentCss, css: { \'dxrd-control-content-multiline\' : multiline }"></div> </div> <div class="dxrd-pdf-signature-info" data-bind="styleunit: { lineHeight: contentHeightWithoutZoom }, visible: visibleText, css: {\'dxrd-pdf-signature-info-fill-container\': $data.hideImage }"> <div class="dxrd-control-content" data-bind="controlDisplayName: $data, style: contentCss, css: { \'dxrd-control-content-multiline\' : multiline }"></div> </div></div>',
    'dxrd-picturebox-selection': '<div class="dxrd-control" data-bind="visible: selected() || focused(), css: {\'dxrd-selected\': selected, \'dxrd-focused\': focused, \'dxrd-intersect\': isIntersect, \'dxrd-locked\': locked }, resizable: $data.getResizeOptions($root.resizeHandler), draggable: $root.dragHandler, styleunit: position, trackCursor: underCursor"> <div class="dxd-border-accented dxrd-control-border-box"></div></div><div class="dxrd-control" data-bind="visible: !(selected() && focused()), styleunit: position, trackCursor: underCursor, style:{ overflow: isSelected() ? \'visible\' : \'hidden\'}"> <div class="dxrd-control-content-select-main" data-bind="styleunit: { \'top\': contentSizes().top + (isIntersect() ? 1 : 0), \'left\': contentSizes().left + (isIntersect()? 1 : 0), lineHeight: contentSizes().height, height: contentSizes().height, width: contentSizes().width}"> </div></div>',
    'dxrd-pivotgrid-field-selection': '<div class="dxrd-pivot-field" data-bind="styleunit: { \'width\': Math.max(positionWidthWithoutZoom(), minWidth()), \'height\': position.height() / _context.zoom() }, trackCursor: underCursor"></div>',
    'dxrd-pivotgrid-field': '<div class="dxrd-pivot-field" data-bind="css: {\'dxrd-pivot-field-selected\': selected }, zoom: 1/_context.zoom(), styleunit: { \'width\': Math.max(position.width(), minWidth() * _context.zoom()), \'height\': position.height }"> <div class="dxrd-pivot-field-content" data-bind="text: displayName, zoom: _context.zoom"></div></div>',
    'dxrd-pivotGridFields': '<div class="dxrd-editor" data-bind="visible: visible"> <div data-bind="dxCollectionEditor: { values: value, addHandler: $root.dx._static.PivotGridFieldViewModel.createNew(_model), displayName: $root.getLocalization(displayName), level: level, info: info }"> </div> </div>',
    'dxrd-pivot-sortBySummaryInfo-conditions': '<div class="dx-editor" data-bind="visible: visible"> <div data-bind="dxCollectionEditor: { values: value, displayName: displayName, level: level, info: info, addHandler: function(){ return $root.dx._static.SortBySummaryInfoCondition.createNew($parents[1].value()) } }"> </div> </div>',
    'dxrd-pivotgrid-content': '<div style="box-sizing: border-box; letter-spacing: normal; width:100%; height:100%" data-bind="styleunit: { lineHeight: contentHeightWithoutZoom }"> <div class="dxrd-control-content" data-bind="style: contentCss" style="width: 100%; height: 100%"> <div class="dxrd-pivot-content" data-bind="css: { \'dxrd-pivot-content-rtl\': getControlModel().rtl() }"> <div class="dxrd-pivot-filter-area"> <!-- ko if: filterFields().length !== 0 --> <div class="dxrd-pivot-fields-wrapper"> <!-- ko foreach: filterFields --> <div class="dxrd-pivot-field-wrapper" data-bind="styleunit: { \'width\': positionWidthWithoutZoom  }"> <!-- ko template: { name: $data.template } --> <!-- /ko --> </div> <!-- /ko --> </div> <!-- /ko --> <!-- ko if: filterFields().length === 0 --> <div class="dxrd-pivot-text-wrapper"> <div class="dxrd-pivot-text" data-bind="text: $root.getLocalization(\'Add Filter Fields Here\', \'ASPxReportsStringId.ReportDesigner_Pivot_AddFilterFields\')"></div> </div> <!-- /ko --> </div> <div class="dxrd-pivot-grid-area"> <div class="dxrd-pivot-grid-area-left"> <div class="dxrd-pivot-rows-area"> <div class="dxrd-pivot-rows-header" data-bind="styleunit: { width: totalsRowFieldWidth, height: rowHeaderHeight }"> <!-- ko if: rowFields().length !== 0 --> <div class="dxrd-pivot-fields-wrapper"> <!-- ko foreach: rowFields --> <div class="dxrd-pivot-field-wrapper" data-bind="styleunit: { \'width\': positionWidthWithoutZoom }"> <!-- ko template: { name: $data.template } --> <!-- /ko --> </div> <!-- /ko --> </div> <!-- /ko --> <!-- ko if: rowFields().length === 0 --> <div class="dxrd-pivot-text-wrapper"> <div class="dxrd-pivot-text" data-bind="text: $root.getLocalization(\'Add Row Fields Here\', \'ASPxReportsStringId.ReportDesigner_Pivot_AddRowFields\')"></div> </div> <!-- /ko --> </div> <div class="dxrd-pivot-total" data-bind="text: $root.getLocalization(\'Grand Total\', \'PivotGridStringId.GrandTotal\')"></div> </div> </div> <div class="dxrd-pivot-grid-area-right"> <div class="dxrd-pivot-columns-header"> <!-- ko if: columnFields().length !== 0 --> <div class="dxrd-pivot-fields-wrapper"> <!-- ko foreach: columnFields --> <div class="dxrd-pivot-field-wrapper" data-bind="styleunit: { \'width\': positionWidthWithoutZoom  }"> <!-- ko template: { name: $data.template } --> <!-- /ko --> </div> <!-- /ko --> </div> <!-- /ko --> <!-- ko if: columnFields().length === 0 --> <div class="dxrd-pivot-text-wrapper"> <div class="dxrd-pivot-text" data-bind="text: $root.getLocalization(\'Add Column Fields Here\', \'ASPxReportsStringId.ReportDesigner_Pivot_AddColumnFields\')"></div> </div> <!-- /ko --> </div> <div class="dxrd-pivot-data-header" data-bind="styleunit: { width: totalsDataFieldWidth }"> <div class="dxrd-pivot-total-wrapper"> <div class="dxrd-pivot-total" data-bind="styleunit: { height: totalsHeight }, text: $root.getLocalization(\'Grand Total\', \'PivotGridStringId.GrandTotal\')"></div> </div> <div class="dxrd-pivot-data-area"> <!-- ko if: dataFields().length !== 0 --> <!-- ko foreach: dataFields --> <div class="dxrd-pivot-data-field" data-bind="styleunit: { \'width\': positionWidthWithoutZoom }"> <div class="dxrd-pivot-field-wrapper"> <!-- ko template: { name: $data.template } --> <!-- /ko --> </div> <div class="dxrd-pivot-field-empty"></div> </div> <!-- /ko --> <!-- /ko --> <!-- ko if: dataFields().length === 0 --> <div class="dxrd-pivot-field-empty"> <div class="dxrd-pivot-text" data-bind="text: $root.getLocalization(\'Add Data Items Here\', \'ASPxReportsStringId.ReportDesigner_Pivot_AddDataItems\')"></div> </div> <!-- /ko --> </div> </div> </div> </div> </div> </div></div>',
    'dxrd-pivotgrid-selection-context': '<div class="dxrd-control-content" style="width: 100%; height: 100%; line-height:normal; overflow:hidden"> <div class="dxrd-pivot-content" style="width:100%; height:100%; overflow:hidden;" data-bind="zoom: _context.zoom(), css: { \'dxrd-pivot-content-rtl\': getControlModel().rtl() }"> <div class="dxrd-pivot-filter-area"> <!-- ko if: filterFields().length !== 0 --> <div class="dxrd-pivot-fields-wrapper"> <!-- ko foreach: filterFields --> <div class="dxrd-pivot-field-wrapper" data-bind="styleunit: { \'width\': positionWidthWithoutZoom  }"> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> </div> <!-- /ko --> </div> <!-- /ko --> <!-- ko if: filterFields().length === 0 --> <div class="dxrd-pivot-text-wrapper"> <div class="dxrd-pivot-text" data-bind="text: $root.getLocalization(\'Add Filter Fields Here\', \'ASPxReportsStringId.ReportDesigner_Pivot_AddFilterFields\')"></div> </div> <!-- /ko --> </div> <div class="dxrd-pivot-grid-area"> <div class="dxrd-pivot-grid-area-left"> <div class="dxrd-pivot-rows-area"> <div class="dxrd-pivot-rows-header" data-bind="styleunit: { width: totalsRowFieldWidth, height: rowHeaderHeight }"> <!-- ko if: rowFields().length !== 0 --> <div class="dxrd-pivot-fields-wrapper"> <!-- ko foreach: rowFields --> <div class="dxrd-pivot-field-wrapper" data-bind="styleunit: { \'width\': positionWidthWithoutZoom }"> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> </div> <!-- /ko --> </div> <!-- /ko --> <!-- ko if: rowFields().length === 0 --> <div class="dxrd-pivot-text-wrapper"> <div class="dxrd-pivot-text" data-bind="text: $root.getLocalization(\'Add Row Fields Here\', \'ASPxReportsStringId.ReportDesigner_Pivot_AddRowFields\')"></div> </div> <!-- /ko --> </div> <div class="dxrd-pivot-total" data-bind="text: $root.getLocalization(\'Grand Total\', \'PivotGridStringId.GrandTotal\')"></div> </div> </div> <div class="dxrd-pivot-grid-area-right"> <div class="dxrd-pivot-columns-header"> <!-- ko if: columnFields().length !== 0 --> <div class="dxrd-pivot-fields-wrapper"> <!-- ko foreach: columnFields --> <div class="dxrd-pivot-field-wrapper" data-bind="styleunit: { \'width\': positionWidthWithoutZoom  }"> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> </div> <!-- /ko --> </div> <!-- /ko --> <!-- ko if: columnFields().length === 0 --> <div class="dxrd-pivot-text-wrapper"> <div class="dxrd-pivot-text" data-bind="text: $root.getLocalization(\'Add Column Fields Here\', \'ASPxReportsStringId.ReportDesigner_Pivot_AddColumnFields\')"></div> </div> <!-- /ko --> </div> <div class="dxrd-pivot-data-header" data-bind="styleunit: { width: totalsDataFieldWidth }"> <div class="dxrd-pivot-total-wrapper"> <div class="dxrd-pivot-total" data-bind="styleunit: { height: totalsHeight }, text: $root.getLocalization(\'Grand Total\', \'PivotGridStringId.GrandTotal\')"></div> </div> <div class="dxrd-pivot-data-area"> <!-- ko if: dataFields().length !== 0 --> <!-- ko foreach: dataFields --> <div class="dxrd-pivot-data-field" data-bind="styleunit: { \'width\': positionWidthWithoutZoom }"> <div class="dxrd-pivot-field-wrapper"> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> </div> <div class="dxrd-pivot-field-empty"></div> </div> <!-- /ko --> <!-- /ko --> <!-- ko if: dataFields().length === 0 --> <div class="dxrd-pivot-field-empty"> <div class="dxrd-pivot-text" data-bind="text: $root.getLocalization(\'Add Data Items Here\', \'ASPxReportsStringId.ReportDesigner_Pivot_AddDataItems\')"></div> </div> <!-- /ko --> </div> </div> </div> </div> </div> </div>',
    'dxrd-pivotgrid-selection': '<div class="dxrd-control" data-bind=" visible: !($data.selected() || $data.focused()), css: { \'dxrd-intersect\': isIntersect, \'dxrd-locked\': locked, \'dxrd-control-rtl\': getControlModel().rtl() }, styleunit: position, trackCursor: underCursor"> <!-- ko template: \'dxrd-pivotgrid-selection-context\' --> <!-- /ko --> </div> <div class="dxrd-control" data-bind="visible: $data.selected() || $data.focused(), css: {\'dxrd-selected\': selected, \'dxrd-focused\': focused, \'dxrd-intersect\': isIntersect, \'dxrd-locked\': locked, \'dxrd-control-rtl\': getControlModel().rtl() }, resizable: $root.resizeHandler, draggable: $root.dragHandler, styleunit: position, trackCursor: underCursor"> <div class="dxd-border-accented dxrd-control-border-box"></div> <!-- ko template: \'dxrd-pivotgrid-selection-context\' --> <!-- /ko --> </div>',
    'dxrd-report': '<div class="dxrd-surface" data-bind="styleunit: { \'width\': Math.min($data.pageWidth() + $data.maxMarkerWidth() + $root.verticalScrollOffset() , $root.surfaceSize()) }, css: { \'dxrd-surface-rtl\': rtl() }, click: function(surface, e) { !$root.selection.disabled() && $root.selection.clickHandler($root.selection.dropTarget ? null : surface, e); e.stopPropagation(); }, keyDownActions: $root.actionLists"> <div class="dxrd-content-panel-wrapper" data-bind="styleunit: $root.dx[\'config\']()[\'rtlEnabled\'] ?  { right: maxMarkerWidth() } : { left: maxMarkerWidth() }, style: { bottom: (20 - $root.horizontalScrollOffset()) + \'px\' }"> <div class="dxrd-content-panel"> <div class="dxrd-hruler-wrapper"> <div class="dxrd-hruler" data-bind="styleunit: { left: leftMarginOffset,\'width\': margins.left }"> <div data-bind="ruler: { \'zoom\': zoom, \'length\': margins.left, \'units\': measureUnit, flip: ko.computed(function(){ return !rtl(); }) }"></div> <div class="dxrd-ruler-shadow" data-bind="styleunit: { left: 0, \'width\': margins.left }"></div> </div> <div class="dxrd-hruler" data-bind="styleunit: { \'width\': (pageWidth() - margins.left()), left: ghostContainerOffset }"> <div class="dxrd-margin-resizable" data-bind="styleunit: { \'width\': pageWidthWithoutMargins, \'left\': leftMarginResizableOffset }, resizable: leftMarginResizeOptions($root.undoEngine, $element)"></div> <div data-bind="ruler: { \'zoom\': zoom, \'length\': function() { return pageWidth() - margins.left();}, \'units\': measureUnit, flip: rtl }"></div> <div class="dxrd-ruler-shadow" data-bind="styleunit: { left: rightMarginOffset, width: margins.right }, resizable: rightMarginResizeOptions($root.undoEngine, $element)"></div> </div> <div class="dxrd-vscroller-space" data-bind="styleunit: { \'left\': pageWidth() }"></div> </div> <div class="dxrd-viewport" data-bind="styleunit: { minWidth: Math.min($data.pageWidth() + $root.verticalScrollOffset(), $root.surfaceSize()) - $data.maxMarkerWidth(), maxWidth: $data.pageWidth() + $root.verticalScrollOffset(), maxHeight: $data.effectiveHeight() + $root.horizontalScrollOffset() }, event: { scroll: function() { $root.onViewPortScroll($element) } }, style: { \'overflow-x\': $root.horizontalScrollOffset() ? \'auto\' : \'hidden\', \'overflow-y\': $root.verticalScrollOffset() ? \'auto\' : \'hidden\' }"> <div data-bind="selectable: { selection: $root.selection, zoom: zoom }"> <div class="dxrd-leftMargin" data-bind="styleunit: { left: leftMarginOffset, width: margins.left() }"> <div class="dxrd-selection" style="position:absolute"> <!-- ko template: { name: \'dxrd-band-holder\', data: { templateName: \'leftMarginSelectionTemplate\', holder: $data.bandsHolder, getData: function(item) { return { surface: item, width: $data.margins.left }; } } }--> <!-- /ko --> </div> <div class="dxrd-flip"> <!-- ko template: { name: \'dxrd-band-holder\', data: { templateName: \'leftMarginTemplate\', holder: $data.bandsHolder, getData: function(item) { return { surface: item, width: $data.margins.left, snapGridSize: $data.snapGridSize  }; } } }--> <!-- /ko --> </div> </div> <div class="dxrd-ghost-containment" data-bind="styleunit: { left: ghostContainerOffset }"> <div class="dxrd-ghost-container" data-bind="styleunit: { \'width\': pageWidthWithoutMargins, \'height\': minHeight }"> <div class="dxrd-bands-content dxrd-main"> <!-- ko template: { name: \'dxrd-band-holder\', data: { templateName: \'templateName\', holder: $data.bandsHolder, getData: function(item) { return item; } } }--> <!-- /ko --> <!-- ko foreach: crossBandControls --> <!-- ko if: visible --> <!-- ko template: { name: template } --> <!-- /ko --> <!-- /ko --> <!-- /ko --> <svg style="height: 100%; position: absolute; top: 0; width: 1px; z-index:-1" data-bind="styleunit: { left: leftMarginOffset() }"> <line data-bind="attr: { x1: 0, x2: 0 }" y1="0" y2="100%" style="stroke: rgb(128, 128, 128); stroke-width: 0.5px; stroke-dasharray:5px,5px" /> </svg> <svg class="dxrd-rightMargin-border" data-bind="styleunit: { left: rtl() ? margins.right() : rightMarginOffset() }, visible: margins.right() > 0"> <line data-bind="attr: { x1: 0, x2: 0 }" y1="0" y2="100%" style="stroke: rgb(220, 220, 220); stroke-width: 3px; stroke-dasharray:5px,5px" /> </svg> <!-- ko template: { name: \'dxd-snap-lines-holder\', data: $root.snapHelper } --> <!-- /ko --> </div> <div class="dxrd-bands-content dxrd-selection" data-bind="styleunit: { \'width\': pageWidthWithoutMargins }"> <div class="dxrd-bands-content-offset"> <div class="dxrd-leftMargin-resizable" data-bind="styleunit: { \'width\': pageWidthWithoutMargins, \'left\': leftMarginResizableOffset }, resizable: leftMarginResizeOptions($root.undoEngine, $element)"></div> <!-- ko template: { name: \'dxrd-band-holder\', data: { templateName: \'selectionTemplate\', holder: $data.bandsHolder, getData: function(item) { return item; } } }--> <!-- /ko --> <!-- ko foreach: crossBandControls --> <!-- ko if: visible --> <div class="dxrd-cross-band" data-bind="visible: isSelected() && !$root.dx._static.DragDropHandler.started(), css: {\'dxrd-selected\': selected, \'dxrd-focused\': focused, \'dxrd-intersect\': isIntersect, \'dxrd-locked\': locked }, resizable: $root.resizeHandler, draggable: $root.dragHandler, styleunit: position, trackCursor: underCursor"> </div> <!-- /ko --> <!-- /ko --> <div class="dxrd-rightMargin-resizable" data-bind="styleunit: { left: rightMarginResizableOffset }, resizable: rightMarginResizeOptions($root.undoEngine, $element)"></div> </div> </div> </div> </div> </div> <!-- ko ifnot: focused --> <!-- ko template: { name: \'dxrd-smart-tags\', data: $root.smartTagModel, if: $root.smartTagModel.visible && $root.smartTagModel.smartTags().length > 0 } --> <!-- /ko --> <!-- /ko --> </div> <!-- ko if: focused --> <!-- ko template: { name: \'dxrd-smart-tags\', data: $root.smartTagModel, if: $root.smartTagModel.visible && $root.smartTagModel.smartTags().length > 0 } --> <!-- /ko --> <!-- /ko --> </div> </div> <div class="dxrd-bands-panel-wrapper" data-bind="styleunit: { width: maxMarkerWidth() }"> <div class="dxrd-bands-panel"> <div class="dxrd-band-headers"> <!-- ko template: { name: \'dxrd-band-holder\', data: { templateName: \'vrulerTemplate\', holder: $data.bandsHolder, getData: function(item) { return { surface: item, measureUnit: $data.measureUnit }; } } }--> <!-- /ko --> </div> </div> <div class="dxrd-hscroller-space"></div> </div></div>',
    'dxrd-richedit': '<div class="dxrd-control dxd-selectable" data-bind="styleunit: position, css: adorntemplate"> <div class="dxrd-control-content-main" data-bind="styleunit: { \'top\': contentSizes().top, \'left\': contentSizes().left, lineHeight: contentSizes().height, height: contentSizes().height, width: contentSizes().width }, style: css"> <div data-bind="zoom: _context.zoom, template: contenttemplate, styleunit: { height: contentHeightWithoutZoom, width: contentWidthWithoutZoom }" style="position:absolute;"> </div> </div> <div data-bind="style: borderCss" style="width:100%; height: 100%; position:absolute; box-sizing:border-box"></div></div>',
    'dxrd-shape-content': '<img data-bind="attr: { src: imageSrc }, styleunit: { \'height\': contentHeightWithoutZoom, \'width\': contentWidthWithoutZoom }" /><!-- ko if: $data.isLoading --><div class="dx-content-loading-panel"> <div data-bind="dxLoadIndicator: { visible: isLoading() }"></div></div><!-- /ko -->',
    'dxrd-shape': '<div class="dxrd-control dxd-selectable" data-bind="styleunit: position, css: adorntemplate"> <div class="dxrd-control-content-main" data-bind="styleunit: { \'top\': contentSizes().top, \'left\': contentSizes().left, lineHeight: contentSizes().height, height: contentSizes().height, width: contentSizes().width }, style: css"> <div data-bind="zoom: _context.zoom, template: contenttemplate, styleunit: { \'lineHeight\': contentHeightWithoutZoom }" style="position:absolute;"> </div> </div> <div data-bind="style: borderCss" style="width:100%; height: 100%; position:absolute; box-sizing:border-box"></div></div>',
    'dxrd-subreport-selection': '<div class="dxrd-control" data-bind="event: { dblclick:  function (control, e) { $root.navigateByReports.goToSubreport(control); } }, visible: isSelected, css: {\'dxrd-selected\': selected, \'dxrd-focused\': focused, \'dxrd-intersect\': isIntersect, \'dxrd-locked\': locked }, resizable: $data.getResizableOptions($root.resizeHandler), draggable: $root.dragHandler, styleunit: position, trackCursor: underCursor"> <div class="dxd-border-accented dxrd-control-border-box"></div></div><div class="dxrd-control" data-bind="visible: !isSelected(), styleunit: position, trackCursor: underCursor"></div>',
    'dxrd-subreport': '<div class="dxrd-control dxd-selectable" data-bind="styleunit: position, css: adorntemplate"> <div data-bind="style: borderCss" style="width:100%; height: 100%; position:absolute; box-sizing:border-box"></div> <div class="dxrd-control-content" data-bind="text: displayText(), style: contentCss"></div></div>',
    'dxrd-table-selection': '<div class="dxrd-table-control" data-bind="style: { visibility: !isSelected() ? \'visible\' : \'hidden\'}, styleunit: position"> <!-- ko if: rows().length > 0 --> <!-- ko foreach: rows --> <div class="dxrd-table-row-control" data-bind="styleunit: { \'top\': position.top, \'height\': position.height }"> <!-- ko foreach: cells --> <div class="dxrd-table-cell-control" data-bind="trackCursor: underCursor, styleunit: { \'left\': position.left, \'width\': position.width, \'height\': heightWithRowSpan  }, style:{ overflow: isSelected() ? \'visible\' : \'hidden\', \'z-index\': offsetZIndex() }"> <!-- ko foreach: controls --> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> <!-- /ko --> </div> <!-- /ko --> </div> <!-- /ko --> <!-- /ko --></div><div class="dxrd-table-control" data-bind="style: { visibility: (selected() || focused()) ? \'inherit\' : \'hidden\'}, css: { \'dxrd-selected\': selected, \'dxrd-focused\': focused, \'dxrd-intersect\': isIntersect, \'dxrd-locked\': locked }, resizable: $root.resizeHandler, draggable: $root.dragHandler, styleunit: position"> <div class="dxd-border-accented dxrd-control-border-box"></div> <!-- ko if: rows().length > 0 --> <!-- ko foreach: rows()[0].cells --> <div class="dxrd-table-column-selection dxrd-table-column-selection-top" data-bind="click: function(_, e) { !$root.selection.disabled() && selectColumn($root.selection); e.stopPropagation(); }, visible: !$root.dx._static.DragDropHandler.started(), styleunit: { \'left\': position.left, \'width\': position.width }"></div> <!-- /ko --> <!-- ko foreach: rows --> <div class="dxrd-table-row-control" data-bind="styleunit: { \'top\': position.top, \'height\': position.height }"> <div class="dxrd-table-row-selection dxrd-table-row-selection-left" data-bind="trackCursor: underCursor, visible: !$root.dx._static.DragDropHandler.started()"></div> <!-- ko foreach: cells --> <div class="dxrd-table-cell-control" data-bind="trackCursor: underCursor, styleunit: { \'left\': position.left, \'width\': position.width, \'height\': heightWithRowSpan  }, style: { \'z-index\': offsetZIndex() }"> <!-- ko foreach: controls --> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> <!-- /ko --> </div> <!-- /ko --> <div class="dxrd-table-row-selection dxrd-table-row-selection-right" style="visibility: visible" data-bind="trackCursor: underCursor, visible: !$root.dx._static.DragDropHandler.started()"></div> </div> <!-- /ko --> <!-- ko foreach: rows()[rows().length-1].cells --> <div class="dxrd-table-column-selection dxrd-table-column-selection-bottom" data-bind="click: function(_, e) { !$root.selection.disabled() && selectColumn($root.selection); e.stopPropagation(); },visible: !$root.dx._static.DragDropHandler.started(), styleunit: { \'left\': position.left, \'width\': position.width }"></div> <!-- /ko --> <!-- /ko --></div><div class="dxrd-table-control" data-bind="visible: isSelected() && !(selected() || focused()), styleunit: position"> <!-- ko if: rows().length > 0 --> <!-- ko foreach: rows()[0].cells --> <div class="dxrd-table-column-selection dxrd-table-column-selection-top" data-bind="click: function(_, e) { !$root.selection.disabled() && selectColumn($root.selection); e.stopPropagation(); }, visible: !$root.dx._static.DragDropHandler.started(), styleunit: { \'left\': position.left, \'width\': position.width }"></div> <!-- /ko --> <!-- ko foreach: rows --> <div class="dxrd-table-row-control" data-bind="visible: isSelected(), css: { \'dxrd-selected\': selected, \'dxrd-focused\': focused, \'dxrd-locked\': locked }, resizable: { starting: $root.resizeHandler.starting, stopped: $root.resizeHandler.stopped, handles: \'n,s\', disabled: !(selected() || focused()), zoom: $root.surface().zoom }, styleunit: { \'top\': position.top, \'height\': position.height }"> <div class="dxd-border-accented dxrd-control-border-box"></div> <div class="dxrd-table-row-selection dxrd-table-row-selection-left" data-bind="visible: !$root.dx._static.DragDropHandler.started(), trackCursor: underCursor"></div> <!-- ko foreach: cells --> <div class="dxrd-table-cell-control" data-bind="trackCursor: underCursor, event: { dblclick: function() { $root.inlineTextEdit.show($element) } }, visible: isSelected, css: { \'dxrd-selected\': selected, \'dxrd-focused\': focused, \'dxrd-intersect\': isIntersect, \'dxrd-locked\': locked, \'dxrd-table-cell-over-rowSpan\': rowSpan() === 0  }, resizable: { starting: $root.resizeHandler.starting, stopped: $root.resizeHandler.stopped, handles: \'e,w\', disabled: !(selected() || focused()), zoom: $root.surface().zoom, snapHelper: $root.resizeHandler.snapHelper }, styleunit: { \'left\': position.left, \'width\': position.width, \'height\': heightWithRowSpan }, style : { \'z-index\': offsetZIndex() }"> <div class="dxd-border-accented dxrd-control-border-box"></div> <!-- ko if: $root.inlineTextEdit.visible() && selected() --> <!-- ko with: $root.inlineTextEdit--> <div class="inline-text-edit" data-bind="dxTextArea: { value: text, onKeyUp: keypressAction, valueChangeEvent: \'keyup\' }"></div> <!-- /ko --> <!-- /ko --> <!-- ko foreach: controls --> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> <!-- /ko --> </div> <div class="dxrd-table-cell-control" data-bind="trackCursor: underCursor, visible: !isSelected(), styleunit: { \'left\': position.left, \'width\': position.width, \'height\': heightWithRowSpan  }, style : { \'z-index\': offsetZIndex() }"> <!-- ko foreach: controls --> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> <!-- /ko --> </div> <!-- /ko --> <div class="dxrd-table-row-selection dxrd-table-row-selection-right" data-bind="visible: !$root.dx._static.DragDropHandler.started(), trackCursor: underCursor"></div> </div> <div class="dxrd-table-row-control" data-bind="visible: !isSelected(), styleunit: { \'top\': position.top, \'height\': position.height }"> <div class="dxrd-table-row-selection dxrd-table-row-selection-left" data-bind="visible: !$root.dx._static.DragDropHandler.started(),trackCursor: underCursor"></div> <!-- ko foreach: cells --> <div class="dxrd-table-cell-control" data-bind="trackCursor: underCursor, styleunit: { \'left\': position.left, \'width\': position.width, \'height\': heightWithRowSpan  }, style : { \'z-index\': offsetZIndex() }"> <!-- ko foreach: controls --> <!-- ko template: { name: $data.selectiontemplate } --> <!-- /ko --> <!-- /ko --> </div> <!-- /ko --> <div class="dxrd-table-row-selection dxrd-table-row-selection-right" data-bind="visible: !$root.dx._static.DragDropHandler.started(),trackCursor: underCursor"></div> </div> <!-- /ko --> <!-- ko foreach: rows()[rows().length-1].cells --> <div class="dxrd-table-column-selection dxrd-table-column-selection-bottom" data-bind="visible: !$root.dx._static.DragDropHandler.started(),click: function(_, e) { !$root.selection.disabled() && selectColumn($root.selection); e.stopPropagation(); }, styleunit: { \'left\': position.left, \'width\': position.width }"></div> <!-- /ko --> <!-- /ko --></div>',
    'dxrd-table': '<div class="dxrd-table-control dxrd-control dxd-selectable" data-bind="styleunit: position, trackCursor: underCursor, css: adorntemplate"> <div data-bind="style: css" style="width: 100%; height: 100%;"> <!-- ko foreach: rows --> <div class="dxrd-table-row-control" data-bind="styleunit: { \'top\': position.top, \'height\': position.height}, style: css, css: adorntemplate"> <!-- ko foreach: cells --> <div class="dxrd-table-cell-control dxrd-control" data-bind="styleunit: { \'left\': position.left, \'width\': position.width, \'height\': heightWithRowSpan }, trackCursor: underCursor, css: adorntemplate"> <div data-bind="zoom: _context.zoom, template: contenttemplate, styleunit: { \'lineHeight\': position.lineHeight() / _context.zoom(), \'width\': contentWidthWithoutZoom, \'height\': contentHeightWithoutZoom }, style: css"> </div> <!-- ko foreach: controls --> <!-- ko template: { name: $data.template } --> <!-- /ko --> <!-- /ko --> </div> <!-- /ko --> </div> <!-- /ko --> </div></div>',
    'dxrd-table-of-contents': '<div class="dxrd-control dxd-selectable dxrd-control-table-of-content" data-bind="styleunit: position, trackCursor: underCursor, css: adorntemplate"> <div data-bind="style: css" style="width: 100%; height: 100%;"> <!-- ko template: { name: levelTitle.template, data: levelTitle } --> <!-- /ko --> <div class="dxrd-control-table-of-content-levelsElements"> <!-- ko foreach: $data.levels() --> <!-- ko template: { name: $data.template } --> <!-- /ko --> <!-- /ko --> <!-- ko template: { name: levelDefault.template, data: levelDefault, isDefault: true } --> <!-- /ko --> </div> </div> </div>',
    'dxrd-table-of-contents-level': '<div class="dxrd-control" data-bind="styleunit: { height: position.height, top: position.top, lineHeight: position.lineHeight}, css: adorntemplate" style="left: 0; width: 100%"> <div class="dxrd-tocLevel-border" data-bind="styleunit: { \'height\': _context.zoom()}"></div> <!-- ko if: getControlModel().rtl() --> <div data-bind="style: borderCss, styleunit: { left: position.left, width: contentSizes().width + (contentSizes().left + contentSizes().right)} " style="height: 100%; position:absolute; box-sizing:border-box"></div> <!-- /ko --> <!-- ko if: !getControlModel().rtl() --> <div data-bind="style: borderCss, styleunit: { left: position.left} " style="height: 100%; right: 0; position:absolute; box-sizing:border-box"></div> <!-- /ko --> <div class="dxrd-control-content-main" style="overflow:hidden" data-bind="styleunit: { \'top\': contentSizes().top, \'left\': contentSizes().left + position.left(), lineHeight: contentSizes().height, height: contentSizes().height, width: contentSizes().width}, style: css"> <div class="dxrd-tocLevel-zoomer" data-bind="zoom: _context.zoom, styleunit: { \'height\': contentHeightWithoutZoom, \'width\': contentWidthWithoutZoom }"> <div style="box-sizing: border-box; letter-spacing: normal; width:100%;height:100%;" data-bind="styleunit: { lineHeight: contentHeightWithoutZoom }"> <!-- ko if: getControlModel().isTitle --> <div class="dxrd-control-content dxrd-control-content-multiline" data-bind="controlDisplayName: $data, style: contentCss"></div> <!-- /ko --> <!-- ko ifnot: getControlModel().isTitle --> <div class="dxrd-control-content" data-bind="style: contentCss" style="width: 100%; height: 100%; line-height:inherit;"> <div class="dxrd-control-content-level-text"> <table border="0" cellspacing="0" cellpadding="0"> <tr> <td> <div class="dxrd-control-content-line-text"><span data-bind="text: $data.getControlModel().name"></span></div> </td> <td class="middle"> <table border="0" cellspacing="0" cellpadding="0" style="table-layout: fixed; width: 100%"> <tr> <td data-bind="text: leaderSymbols" style="word-wrap: break-word"></td> </tr> </table> </td> <td> <div class="dxrd-control-content-number">&nbsp;&nbsp;#&nbsp;&nbsp;</div> </td> </tr> </table> </div> </div> <!-- /ko --> </div> </div> </div> </div>',
    'dxrd-table-of-contents-selected': '<div class="dxrd-control dxrd-table-of-contents-selected" data-bind="event: { dblclick: function() { $root.inlineTextEdit.show($element) } }, visible: isSelected, css: {\'dxrd-intersect\': isIntersect, \'dxrd-locked\': locked }, draggable: $root.dragHandler, styleunit: position, trackCursor: underCursor"> <div class="dxd-border-accented dxrd-control-border-box"></div> <!-- ko with: levelTitle --> <div class="dxrd-control dxrd-control-line-ui-resizeble" data-bind="styleunit: position, resizable: resizable($root.resizeHandler, $element)"> <!-- ko with: $root.inlineTextEdit--> <!-- ko if: visible --> <div class="inline-text-edit" data-bind="dxTextArea: { value: text, onKeyUp: keypressAction, valueChangeEvent: \'keyup\' }"></div> <!-- /ko --> <!-- /ko --> </div> <!-- /ko --> <!-- ko foreach: $data.levels() --> <div class="dxrd-control dxrd-control-line-ui-resizeble" data-bind="styleunit: { height: position.height, top: position.top, lineHeight: position.lineHeight }, resizable: resizable($root.resizeHandler, $element)" style="left:0; width:100%"></div> <!-- /ko --> <!-- ko with: levelDefault --> <div class="dxrd-control" data-bind="styleunit: { height: position.height, top: position.top, lineHeight: position.lineHeight }, resizable: resizable($root.resizeHandler, $element)" style="left:0; width:100%"></div> <!-- /ko --> </div> <div class="dxrd-control" data-bind="visible: !isSelected(), styleunit: position, trackCursor: underCursor"> </div>',
    'dxrd-textcontrol-content': '<div style="box-sizing: border-box; letter-spacing: normal; width:100%" data-bind="styleunit: { lineHeight: contentHeightWithoutZoom }"> <div class="dxrd-control-content" data-bind="controlDisplayName: $data, style: contentCss, css: {\'dxrd-control-content-multiline\' : multiline }, cacheElement: { action: function(element) { $data.cacheElementContent(element); } } "></div></div>',
    'dxrd-todocontrol': '<div class="dxrd-control dxd-selectable" data-bind="styleunit: position, trackCursor: underCursor, style: css, css: adorntemplate"> <div data-bind="style: borderCss" class="dxrd-control-border-box"></div> <div data-bind="css: controlTypeClass, template: controlTypeIconTemplate" style="position: absolute; width: 24px; height: 24px; right: 5px; top: 5px;"> </div> <span class="dxrd-control-content" data-bind="text: displayName, style: contentCss"></span></div>',
    'dxrd-calculatedfield-content': '<div data-bind="with: propertyGrid"> <!-- ko foreach: getEditors() --> <!-- ko template: editorTemplate --> <!-- /ko --> <!-- /ko --></div>',
    'dxrd-datasource-item': '<div class="dx-fieldset"> <div data-bind="dxCollectionEditor: { values: ko.observable(tableInfoItems), displayName: $root.getLocalization(\'Filter Criteria\', \'ASPxReportsStringId.ReportDesigner_DataSource_FilterCriteriaTitle\'), hideButtons: true }"> <div class="dx-field dxd-back-primary"> <!-- ko with: value --> <div class="dx-field-label dxd-text-primary" data-bind="text: tableName"></div> <!-- ko if: $data.filterString() !== null --> <div class="dx-field-value" style="margin-right:5px" data-bind="dxFilterEditor: { options: filterString, fieldListProvider: $root.dataBindingsProvider, getDisplayNameByPath: $root.getDisplayNameByPath }"></div> <!-- /ko --> <!-- /ko --> </div> </div></div>',
    'dxrd-coordinategrid': '<svg data-bind="style: { \'height\': height() + \'px\',  \'width\': width() + \'px\' }, attr: { viewBox: \'0 0 \' + width() + \' \' + height() }"> <g transform="translate(0, 0)"> <!-- ko foreach: verticalGridLines --> <line y1="0" y2="100%" class="minor-graduation" data-bind="attr: { x1: coordVal, x2: coordVal }, visible: visible"></line> <!-- /ko --> </g> <g transform="translate(0, 0)"> <!-- ko foreach: horizontalGridLines --> <line x1="0" x2="100%" class="minor-graduation" data-bind="attr: { y1: coordVal, y2: coordVal }, visible: visible"></line> <!-- /ko --> </g> <g transform="translate(0, 0)"> <!-- ko foreach: majorVerticalGridLines --> <line y1="0" y2="100%" class="major-graduation" data-bind="attr: { x1: coordVal, x2: coordVal }, visible: visible"></line> <!-- /ko --> </g> <g transform="translate(0, 0)"> <!-- ko foreach: majorHorizontalGridLines --> <line x1="0" x2="100%" class="major-graduation" data-bind="attr: { y1: coordVal, y2: coordVal }, visible: visible"></line> <!-- /ko --> </g></svg>',
    'dxrd-expressions-tab': '<div class="dxrd-properties-wrapper dxrd-expressions-tab" data-bind="visible: active() && visible()"> <div style="height:100%"> <div class="dxrd-right-panel-header dxd-text-primary"> <span data-bind="text: text"></span> </div> <!-- ko with: model --> <!-- ko if: $root.controlsStore.visible() --> <div class="dx-property-grid-header"> <div class="dx-property-grid-header-content"> <div class="dx-property-grid-selected-component"> <div class="dxrd-properties-focused-item" style="margin:0" data-bind="dxSelectBox: { dataSource: $root.controlsStore.dataSource, value: $root.editableObject, displayExpr: function(value) { var showValue = value || $root.editableObject(); return $root.dx._static.getControlFullName(showValue) }, dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true }"> </div> </div> </div> </div> <!-- /ko --> <div class="dxrd-properties-grid dxd-border-primary" data-bind="dxScrollView: { showScrollbar: \'onHover\', useNative: false, scrollByThumb: true }" style="top: 80px"> <!-- ko template: \'dx-propertieseditor\' --> <!-- /ko --> </div> <!-- /ko --> </div> </div>',
    'dxrd-fieldlistwrapper': '<div class="dxrd-fieldslist-wrapper" data-bind="visible: active() && visible()" style="height: 100%; overflow:hidden"> <!-- ko with: model --> <div class="dxrd-right-panel-header dxd-text-primary"> <div class="dxrd-fieldslist-wrapper-header" data-bind="text: $root.getLocalization(\'Field List\', \'ReportStringId.UD_Title_FieldList\')"></div> <div id="btn-add-dataSource" class="dxrd-collectioneditor-action" style="line-height: 20px; margin-top: 8px" data-bind="dxButtonWithTemplate: { onClick: showPopover, icon: \'dxrd-svg-operations-add_datasource\', iconClass: \'dxrd-image-add-datasource\', visible: addDataSourceBtnVisible }, attr: { title: $root.getLocalization(\'Add Data Source\', \'ReportStringId.UD_Title_FieldList_AddNewDataSourceText\') }"> </div> <div class="dxrd-add-dataSource-popup-content" data-bind="dxPopover: { wrapperAttr: { class: \'dxrd-add-dataSource-popup-content\' }, width: 200, visible: popoverVisible, target: \'#btn-add-dataSource\', container: $root.getPopupContainer($element), title:$root.getLocalization(\'Add Data Source\', \'ReportStringId.UD_Title_FieldList_AddNewDataSourceText\') + \':\' }"> <div data-bind="dxList: { dataSource: dataSourceListItems(), onItemClick: itemClickAction }"> <div data-options="dxTemplate : { name: \'item\' }"> <div class="dxrd-list-item-ellipsis-text" data-bind="text: name, attr: { title: name }"></div> </div> </div> </div> </div> <div data-bind="treeListSearchPanel: {controllers:treeListOptions.treeListController}"></div> <div class="dxrd-right-panel-body" data-bind="dxScrollView: { showScrollbar: \'onHover\', scrollByContent: false, bounceEnabled: false, useNative: false, scrollByThumb: true }"> <div class="dx-editors"> <div id="tree" data-bind="treelist: treeListOptions" style="width:100%; height: 100%;"></div> </div> </div> <!-- /ko --></div>',
    'dxrd-localization-editor-item': '<div class="dx-fieldset"> <div class="dx-field"> <div class="dx-field-value"> <!-- ko if: !ko.unwrap($data.multiline) --> <div class="dxrd-localization-panel-default" data-bind="dxTextBox: { value: defaultText, readOnly: $data.readOnly() || !$data.isDefaultLanguage() }, css: { \'dxrd-localization-panel-textbox-full\': $data.isDefaultLanguage() }"></div> <div class="dxrd-localization-panel-current" data-bind="dxTextBox: { value: localizedText, readOnly: $data.readOnly(), onFocusIn: function(e, s) { $parent.onItemGotFocus(e) }, visible: !$data.isDefaultLanguage()}"></div> <!-- /ko --> <!-- ko if: ko.unwrap($data.multiline)--> <div class="dxrd-multi-area-container"> <div class="dxrd-localization-panel-default" data-bind="dxTextArea: { value: defaultText, readOnly: $data.readOnly() || !$data.isDefaultLanguage(), autoResizeEnabled: true, minHeight: \'26px\', maxHeight: \'58px\' }, css: { \'dxrd-localization-panel-textbox-full\': $data.isDefaultLanguage() }"> </div> <!-- ko if: !$data.isDefaultLanguage() --> <div class="dxrd-localization-panel-current" data-bind="dxTextArea: { value: localizedText, readOnly: $data.readOnly(), onFocusIn: function(e, s) { $parent.onItemGotFocus(e) }, autoResizeEnabled: true, minHeight: \'26px\', maxHeight: \'58px\' }"> </div> <!-- /ko --> </div> <!-- /ko --> </div> </div> </div>',
    'dxrd-localization-editor': '<!-- ko if: $data && $data.isVisible() --> <div class="dxrd-localization-editor dx-editors" data-bind="css: { \'dx-rtl\': $root.rtl, \'dx-ltr\': !$root.rtl }, styleunit: { width: width }"> <div class="dxrd-left-localization-panel dx-editors dxd-text-primary dxd-back-primary" data-bind="resizable: getResizableOptions($element, 0, 500, $root.rtl ? \'Left\': \'Right\', \'Right\', width)"> <div class="dxrd-localization-panel-header dxd-back-primary2 dxd-border-secondary"> <div class="dxrd-localization-panel-title" data-bind="text: $root.getLocalization(\'Localization\', \'ASPxReportsStringId.ReportDesigner_LocalizationEditor_Title\')"></div> <div class="dx-fieldset"> <div class="dx-field"> <div class="dxrd-localization-language" data-bind="css: { \'dx-property-gread-search-uncollapsed \': isSearching() }"> <div class="dx-field-label dxd-text-primary" data-bind="text: $root.getLocalization(\'Language\', \'DevExpress.XtraReports.UI.XtraReport.XRLanguage\')"></div> <div class="dx-field-value" data-bind="css: { \'dx-field-value-shortened\': getRegisteredService() }"> <!-- ko template: { name: \'dxrd-localization-combobox\', data: { getValues: function() { return $data.availableCultures; }, value: language, disabled: false } } --> <!-- /ko --> </div> <!-- ko if: getRegisteredService() --> <div class="dxrd-localization-panel-button" data-bind="dxButtonWithTemplate: { onClick: function() { $data.applyLocalization($data.getRegisteredService()) }, disabled: isDefaultLanguage(), icon: \'dxrd-svg-actions-apply_localization_service\', iconClass: \'apply-localization-service\' }, attr: { title: $root.getLocalization(\'Translate\', \'ASPxReportsStringId.ReportDesigner_LocalizationEditorTranslate\') }"></div> <!-- /ko --> <div class="dxrd-localization-panel-button" data-bind="dxButtonWithTemplate: { onClick: clearLocalization, icon: \'dxrd-svg-actions-reset\', iconClass: \'reset-localization\', disabled: isDefaultLanguage() }, attr: { title: $root.getLocalization(\'Reset\', \'ASPxReportsStringId.ParametersPanel_Reset\') }"></div> </div> <!-- ko template: \'dx-propertygrid-searchbox\'--> <!-- /ko --> </div> </div> </div> <div class="dxrd-localization-panel-content"> <div class="dxrd-localization-panel-content-header"> <div class="dx-fieldset"> <div class="dx-field"> <div class="dx-field-value"> <div class="dxrd-localization-language dxrd-localization-panel-default dxd-text-secondary" data-bind="text: $data.defaultLanguageText()"></div> <div class="dxrd-localization-language dxrd-localization-panel-current dxd-text-secondary" data-bind="text: $data.currentLanguageText(), visible: !$data.isDefaultLanguage()"></div> </div> </div> </div> </div> <div data-bind="dxList: { dataSource: localizationItems, selectionMode: \'single\', height: \'calc(100% - 59px)\', onSelectionChanged: onSelectionChanged, focusStateEnabled: false, activeStateEnabled: false, pageLoadMode: \'scrollBottom\', noDataText: $root.dx._static.noDataText() }"> <!-- ko lazy: { template: \'dxrd-localization-editor-item\' } --> <!-- /ko --> </div> </div> <div data-bind="dxLoadPanel:{ visible: showLoadIndicator, shading: true, position: { of: getLoadPanelPosition($element) }, showIndicator: true, closeOnOutsideClick: false, showPane: true, shadingColor: \'rgba(0,0,0,0.4)\'}"></div> </div> </div> <!-- /ko -->',
    'dxrd-reportexplorerwrapper': '<div class="dxrd-fieldslist-wrapper" data-bind="visible: active() && visible()" style="height: 100%; overflow:hidden"> <div class="dxrd-right-panel-header dxd-text-primary"> <div class="dxrd-fieldslist-wrapper-header" data-bind="text: $root.getLocalization(\'Report Explorer\', \'ReportStringId.UD_Title_ReportExplorer\')"></div> </div> <!-- ko with: model--> <div data-bind="treeListSearchPanel: {controllers:treeListController}"></div> <div class="dxrd-right-panel-body" data-bind="dxScrollView: { showScrollbar: \'onHover\', scrollByContent: false, bounceEnabled: false, useNative: false, scrollByThumb: true }, dxAutoScrolling: { active: $root.dx._static.DragDropHandler.started }"> <div id="tree" data-bind="treelist: { selectedPath: itemsProvider.selectedPath, itemsProvider: itemsProvider, treeListController: treeListController }" style="width:100%; height: 100%;"></div> </div> <!-- /ko --> </div>',
    'dxrd-ruler': '<svg data-bind="attr: { \'width\': width() + \'px\', \'height\': height() + \'px\' }"> <rect width="100%" height="100%" stroke-width="1px" stroke="gray" class="ruler"></rect> <!-- ko if: disable --> <rect data-bind="attr: { x: disable.start, width: disable.width }" height="100%" fill="grey" fill-opacity="0.5"></rect> <!-- /ko --> <!-- ko foreach: gridLines --> <line y1="80%" y2="100%" class="ruler-graduation" data-bind="attr: { x1: coordVal, x2: coordVal }"></line> <!-- /ko --> <!-- ko foreach: majorGridLines --> <line y1="70%" y2="100%" class="ruler-graduation" data-bind="attr: { x1: coordVal, x2: coordVal }"></line> <!-- /ko --> <g transform="translate(-3, 0)"> <!-- ko foreach: majorGridLines --> <text class="ruler-mark" data-bind="text: text, attr: {x: coordVal, y: 12 }"></text> <!-- /ko --> </g> <!--<text class="ruler-mark" transform="translate(4, 14)">0</text>--></svg>',
    'dxrd-rulervertical': '<svg data-bind="attr: { \'width\': width() + \'px\', \'height\': height() + \'px\' }"> <rect width="100%" height="100%" stroke-width="1px" stroke="gray" class="ruler"></rect> <!-- ko foreach: gridLines --> <line class="ruler-graduation" data-bind="attr: { x1: $parent.defaultGridLinesCoordinate().x1, x2: $parent.defaultGridLinesCoordinate().x2, y1: coordVal, y2: coordVal }"></line> <!-- /ko --> <!-- ko foreach: majorGridLines --> <line class="ruler-graduation" data-bind="attr: {x1: $parent.defaultGridLinesCoordinate().majorX1, x2: $parent.defaultGridLinesCoordinate().majorX2, y1: coordVal, y2: coordVal }"></line> <!-- /ko --> <g transform="translate(0, 3)"> <!-- ko foreach: majorGridLines --> <text class="ruler-mark" data-bind="text: text, attr: {x: $parent.defaultGridLinesCoordinate().x, y: coordVal }"></text> <!-- /ko --> </g> <!--<text class="ruler-mark" transform="translate(4, 14)">0</text>--></svg>',
    'dxrd-watermark': '<!-- ko if: $data.reportSurface.watermark.shouldDrawWatermarkImage() --><div class="dxrd-band-content-watermark" data-bind="css: {\'dxrd-flip\': forLeftMargin }, dxWatermark: { band: band, reportSurface: reportSurface, forLeftMargin: forLeftMargin, image: reportSurface.watermark.imageSource().getDataUrl(), transparency: reportSurface.watermark.imageTransparency(), viewMode: reportSurface.watermark.imageViewMode(), align: reportSurface.watermark.imageAlign(), tiling: reportSurface.watermark.imageTiling() }"></div><!-- /ko --><!-- ko if: $data.reportSurface.watermark.text() --><div class="dxrd-band-content-watermark" data-bind="css: {\'dxrd-flip\': forLeftMargin }, dxWatermark: { band: band, reportSurface: reportSurface, forLeftMargin: forLeftMargin, image: reportSurface._watermarkTextRenderingResult(), transparency: reportSurface.watermark.textTransparency(), viewMode: \'Stretch\', align: \'MiddleCenter\', tiling: false }"></div><!-- /ko -->',
    'dxrd-scripts-addon': '<!-- ko if: editorVisible --> <div class="dxrd-designer-wrapper dx-editors dxd-surface-back-color dxd-back-primary" data-bind="css: { \'dx-rtl\' : $root.rtl, \'dx-ltr\': !$root.rtl }"> <div class="dxrd-toolbar-wrapper"> <div class="dxrd-toolbar" data-bind="template: { name: \'dxrd-toolbar-tmplt\', data: toolbarItems }"></div> </div> <div class="dxrd-scripts-wrapper"> <div class="dxrd-scripts-editor dxd-back-primary2" data-bind="dxAceEditor: { value: scriptsText, editorContainer: editorContainer, options: aceOptions }"> </div> </div> </div> <!-- /ko -->',
    'dxrd-scripting-controlchooser': '<div class="dxrd-toolbar-item dxrd-toolbar-selectbox"> <div data-bind="dxSelectBox: { dataSource: controls, value: control, displayExpr: displayExpr, placeholder: $root.getLocalization(\'Select control...\', \'ASPxReportsStringId.ReportDesigner_ScriptEditor_Toolbar_SelectControl\'), width: \'300px\', dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"></div> <div class="dxrd-toolbar-item-separator dxd-toolbar-separator-color dxd-border-secondary" data-bind="visible: $data.hasSeparator"></div> </div>',
    'dxrd-scripting-eventchooser': '<div class="dxrd-toolbar-item dxrd-toolbar-selectbox"> <div data-bind="dxSelectBox: { items: events, value: event, placeholder: $root.getLocalization(\'Select event...\', \'ASPxReportsStringId.ReportDesigner_ScriptEditor_Toolbar_SelectEvent\'), width: \'200px\', dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"></div> <div class="dxrd-toolbar-item-separator dxd-toolbar-separator-color dxd-border-secondary" data-bind="visible: $data.hasSeparator"></div> </div>',
    'dxrd-scripts': '<div class="dxrd-scripts" data-bind="visible: editorVisible, template: \'dxrd-scripts-addon\'"></div>',
    'dxrd-error-panel': '<div class="dxrd-error-panel dxd-text-primary dxd-back-primary2" data-bind="style: _position, css: { \'collapsed\': collapsed }, resizable: _resizableOptions"> <!-- ko ifnot: collapsed --> <div class="dxrd-error-panel-header dxd-border-primary dxd-back-primary2"> <div class="dxrd-error-panel-header-title">Report Design Analyzer</div> <div class="dxrd-error-panel-header-collapse dx-accordion-item-title"  data-bind="click: function() { $data.toggleCollapsed() }"></div> </div> <div class="dxrd-error-panel-content"> <div class="dxrd-error-grid" data-bind="dxDataGrid: _dataGridOptions"> <div data-options="dxTemplate: { name: \'dx-type-button\'}"> <div class="dxd-back-highlighted" data-bind="css: { \'dxd-state-active\': data.pressed }, dxButton: { text: data.text, onClick: data.onClick }"> </div> </div> <div data-options="dxTemplate: { name:\'dxrd-errorType-column\' }"> <div class="dxrd-errorType-column" data-bind="template: { name: $parent.getIconTemplateName($data.value) }, attr: { title: $data.value }"> </div> </div> <div data-options="dxTemplate:{ name:\'dxrd-source-column\' }"> <a class="dx-link" href="javascript:void(0)" data-bind="text: value, click: function() { $parent.navigateToItem($data.value); }"></a> </div> <div data-options="dxTemplate: { name: \'detail\' }"> <div class="dxrd-error-panel-description" data-bind="text: data.description"></div> </div> <div data-options="dxTemplate: { name: \'dxrd-error-type-filter\' }"> <div data-bind="dxButtonGroup: $data.data"> <div data-options="dxTemplate: { name: \'dxrd-error-type-filter-item\' }"> <div class="dxrd-errorType-column" data-bind="template: { name: $parents[1].getIconTemplateName(icon) } "> </div> <div class="dxrd-errorType-text" data-bind="text: $data.text()"></div> </div> </div> </div> </div> </div> <!-- /ko --> <!-- ko if: collapsed --> <div class="dxrd-error-panel-notification" data-bind="click: function() { $data.toggleCollapsed() }, template: { name: $data.getNotificationTemplate() }, attr: { title: $data.getTitleMessage() }"></div> <!-- /ko --></div>',
    'dxrd-navigation-panel-template': '<!-- ko ifnot: $root.isLoading() && tabs().length === 1--> <!-- ko if: allowMDI --> <!-- ko if: tabs().length > 0 --> <!-- ko template: \'dxrd-navigation-panel-template-content\' --> <!-- /ko --> <!-- /ko --> <!-- /ko --> <!-- ko ifnot: allowMDI --> <!-- ko if: tabs().length > 1 --> <!-- ko template: \'dxrd-navigation-panel-template-content\' --> <!-- /ko --> <!-- /ko --> <!-- /ko --> <!-- /ko -->',
    'dxrd-navigation-panel-template-content': '<div class="dxrd-navigation-panel-wrapper" data-bind="style: { width: $root.surfaceSize() ? $root.surfaceSize() + \'px\' : \'auto\' }"> <div data-bind="dxTabs: { dataSource: tabs, selectedIndex: selectedIndex, showNavButtons: false }"> <div data-options="dxTemplate: { name: \'item\' }"> <!-- ko if: icon --> <div class="dx-icon" data-bind="css: icon, event: { mousedown: function(e) { $parent.removeTab(e); } }"></div> <!-- /ko --> <div class="dx-tab-title-wrapper"> <div class="dx-tab-title" data-bind="text: isDirty() ? displayName() + \'*\' : displayName(), title: displayName, style: { \'font-weight\': isDirty() ? \'bold\' : \'normal\' }"></div> </div> </div> </div> </div>',
    'dxrd-parameters-dialog': '<div data-bind="css: \'dxrd-reportdialog dxrd-parameters-dialog dx-editors dx-widget \' + popupCss, dxPopup: { wrapperAttr: { class: \'dxrd-reportdialog dxrd-parameters-dialog dx-editors dx-widget \' + popupCss }, showTitle: true, width: width, height: height, title: $root.getLocalization(title), visible: visible, toolbarItems: buttons, showCloseButton: true, container: container($element), position: { of: container($element) }}"> <div class="dxrd-parameters-popup-content"> <!-- ko template: contentTemplate --> <!-- /ko --> </div> </div>',
    'dxrd-report-parameters-dialogs': '<!-- ko if: $data --> <!-- ko template: { name: \'dxrd-parameters-dialog\', data: _addParametersDialog } --> <!-- /ko --> <!-- ko template: { name: \'dxrd-parameters-dialog\', data: _editParametersDialog } --> <!-- /ko --> <!-- /ko -->',
    'dxrd-parameter-edit': '<div class="dxrd-parameter-edit-content"> <div data-bind="dxScrollView: { showScrollbar: \'onHover\', height: 466 }"> <div class="dxrd-parameter-edit-content-grid dxrd-parameters-properties" data-bind="template: { name: \'dx-propertieseditor\', data: _propertiesGrid }"></div> <div class="dxrd-parameter-edit-content-grid dxrd-parameters-settings" data-bind="template: { name: \'dx-propertieseditor\', data: _settingsGrid }"></div> </div> </div>',
    'dxrd-parameters-content': '<div class="dxrd-parameters-content"> <div class="dxrd-parameters-content-list dxd-border-primary" data-bind="dxCollectionEditor: _parametersListOptions"> </div> <!-- ko if: $data.contentVisible() --> <!-- ko template: \'dxrd-parameter-edit\' --> <!-- /ko --> <!-- /ko --> <!-- ko if: !$data.contentVisible() --> <div class="dxrd-parameter-edit-content dx-empty"> <div class="dxrd-parameters-content-empty" data-bind="text: contentEmptyAreaPlaceHolder"></div> </div> <!-- /ko --> </div>',
    'dxrd-parameter-editing-collection-item': '<div class="dxrd-parameter-editing-collection-item" data-bind="text: $data.value().name"></div>',
    'dxrd-parameters-checkbox': '<!-- ko if: $data.visible --> <div class="dx-field dxrd-parameters-checkbox"> <div class="dx-field-value"> <div class="propertygrid-editor-checkbox" data-bind="dxCheckBox: getOptions({ value: value, text: displayName, disabled: disabled })"></div> </div> </div> <!-- /ko -->',
    'dxrd-parameters-range-grid': '<div class="dx-editor dxrd-parameter-group-editor dxrd-parameters-group-offset" data-bind="visible: visible"> <div class="dx-group"> <div class="dx-editor-header"> <div class="dx-field"> <div class="dx-field-label dx-accordion-header dxd-text-primary" data-bind="styleunit: padding, css: { \'dx-accordion-empty\': templateName === \'dx-emptyHeader\' }"> <div class="dx-group-header-font" data-bind="text: displayName, attr: { \'title\': displayName }"></div> </div> <div class="dx-field-value" data-bind="css: { \'dxd-border-accented\': $data.isPropertyHighlighted }"> <div data-bind="service: { name: \'createEditorAddOn\' }"></div> </div> </div> </div> <div class="dx-editor-content dx-accordion-content"> <!-- ko if: (!$data.editorCreated || editorCreated) --> <!-- ko if: visible --> <div data-bind="template: { name: \'dx-propertieseditor\', data: viewmodel }"></div> <!-- /ko --> <!-- /ko --> </div> </div> </div>',
    'dxrd-multivalue-editing': '<!-- ko if: ko.unwrap($data.value) && ko.unwrap($data.visible) --> <div class="dxrd-editor dxrd-parameter-group-editor"> <div class="dxrd-parameter-values-collectioneditor" data-bind="dxCollectionEditor: { values: value, info: info, level: level, displayName: $root.getLocalization(displayName) , showScroll: true, collapsed: false, alwaysShow: true }"> <div data-bind="dxPropertyGrid: { target: value, level: editor.level }"></div> </div> </div> <!-- /ko -->',
    'dxrd-lookUpValues-editing': '<div class="dxrd-editor dxrd-parameter-group-editor dxrd-parameters-group-offset" data-bind="visible: visible"> <div class="dxrd-lookup-values-collectioneditor" data-bind="dxCollectionEditor: { values: value, addHandler: $root.dx._static.LookUpValue.createNew, level: level, displayName: $root.getLocalization(displayName), info: info, collapsed: false, showScroll: true, alwaysShow: true }"> <div data-bind="dxPropertyGrid: { target: $data.value, level: editor.level }"></div> </div> </div>',
    'dxrd-report-dialog-template': '<div data-bind="dxPopup: { showTitle: true, width: width, height: height, title: $root.getLocalization(title), visible: visible, disabled: disabled, toolbarItems: buttons, showCloseButton: true, container: container($element), wrapperAttr: { class: \'dxrd-reportdialog dx-editors dx-widget\' }, position: { of: container($element) }}"> <!-- ko template: { name: template, data: model } --> <!-- /ko --> <!-- ko if: disabled --> <div data-bind="dxLoadPanel: { visible:true, container: container($element), position: { of: container($element) } }"></div> <!-- /ko --> </div>',
    'dxrd-report-dialog-converter-template': '<div data-bind="dxPopup: { showTitle: true, minWidth: 530, height: popupOptions.height, width: \'auto\', title: popupOptions.title, visible: popupOptions.visible, toolbarItems: popupOptions.buttons, showCloseButton: true, wrapperAttr: { class: \'dxrd-reportdialog dxrd-reportdialog-converter dx-editors dx-widget\' }, container: popupOptions.container($element), position: { of: popupOptions.container($element) }}"> <div class="dxrd-reportdialog-converter-content"> <div class="dxrd-image-exlamation-icons" data-bind="template: \'dxrd-svg-wizard-warning\'"></div> <div class="dxrd-reportdialog-content-text"> <div class="dxrd-reportdialog-content-confirm-message" data-bind="text: popupOptions.confirmMessage"></div> <!-- ko if: popupOptions.infoMessage --> <div class="dxrd-reportdialog-content-info-message" data-bind="text: popupOptions.infoMessage"></div> <!-- /ko --> <!-- ko if: popupOptions.linkText --> <a class="dxrd-reportdialog-toggle-link dxd-hyperlink-color dxd-text-accented" data-bind="text: popupOptions.linkText, attr: {href: popupOptions.linkUrl, target: \'_blank\' }"></a> <!-- /ko --> </div> </div> </div>',
    'dxrd-savereport-dialog-content': '<div class="dxrd-reportdialog-content"> <div class="dx-fieldset"> <div class="dx-field dxd-back-primary"> <div data-bind="dxTextBox: { value: $data.reportName, height: 36, placeholder: reportNamePlaceholder(), valueChangeEvent: \'keyup\' }"></div> </div> </div> <div class="dx-default-border-style dxd-border-secondary"> <div class="dxrd-reportdialog-urls" data-bind="dxList: { dataSource: urls, selectedItems: [], editEnabled: true, height: 200, editConfig: { selectionEnabled: true }, selectionMode: \'single\', onItemClick: function(e) { this.reportName(e.itemData.Value); }, activeStateEnabled: false, noDataText: $data.noDataText, nextButtonText: $root.getLocalization(\'More\', \'ASPxReportsStringId.List_More\') }"> <div data-options="dxTemplate : { name: \'item\' }" data-bind="event: { dblclick: function(e){ $parent.onDblClick(e.Key); } }"> <div data-bind="text: $data.Value"></div> </div> </div> </div> </div>',
    'dxrd-savereport-dialog-content-light': '<div class="dxrd-reportdialog-easy-content" data-bind="text: saveText"></div>',
    'dxrd-openreport-dialog-content': '<div class="dxrd-reportdialog-content"> <div class="dx-fieldset"> <div class="dx-field dxd-back-primary"> <div class="dx-property-grid-search-box" data-bind="dxTextBox: { mode: \'search\', height: 36, value: searchValue, valueChangeEvent: \'keyup\', placeholder: searchPlaceholder(), showClearButton: true }"></div> </div> </div> <div class="dx-default-border-style dxd-border-secondary"> <div class="dxrd-reportdialog-urls" data-bind="dxList: { dataSource: urls, selectedItems: [], searchExpr: [\'Value\'], searchValue: searchValue, editEnabled: true, height: 200, editConfig: { selectionEnabled: true }, selectionMode: \'single\', onItemClick: function(e) { this.reportUrl(e.itemData.Key); }, activeStateEnabled: false, nextButtonText: $root.getLocalization(\'More\', \'ASPxReportsStringId.List_More\'), noDataText: $data.noDataText }"> <div data-options="dxTemplate : { name: \'item\' }" data-bind="event: { dblclick: function(e){ $parent.onDblClick(e.Key); } }"> <div data-bind="text: $data.Value"></div> </div> </div> </div> </div>',
    'dxrd-menubutton-template': '<div class="dxrd-menubutton-part" tabindex="1" style="outline:inherit" data-bind="cacheElement: { action: function(element){ $data.setMenuElement(element) } }"> <div class="dxrd-menu-container dxrd-menu-fullscreen-nav" data-bind="css: { \'dxrd-menu-fullscreen-nav-collapsed\': isMenuCollapsed()}"> <div class="dx-overlay-wrapper dxd-menu-back-color dxd-back-contrast" style="z-index:1002" data-bind="styleunit: { width: $data.isMenuCollapsed() ? 50 : 300 }, visible: appMenuVisible"> <div class="dx-overlay-content"> <div class="dxrd-report-menu-title dxd-border-primary"> <!-- ko if: !isMenuCollapsed()--> <div class="dxrd-report-menu-button dxrd-report-menu-close-button" data-bind="template: \'dxrd-svg-toolbar-delete\', dxclick: function(e) { toggleAppMenu() }, dxpointerenter: function(_, e) {  e.target.classList &&  e.target.classList.add(\'dxd-state-active\') }, dxpointerleave: function(_, e) {  e.target.classList &&  e.target.classList.remove(\'dxd-state-active\') }"></div> <div class="dxrd-report-menu-title-text dxd-text-primary" data-bind="text: $root.getLocalization(\'Menu\', \'ASPxReportsStringId.ReportDesigner_Menu_Text\')"></div> <!-- /ko --> <!-- ko if: isMenuCollapsed--> <div class="dxrd-report-menu-button dxd-back-highlighted dxrd-report-menu-back-button" data-bind="template: \'dxrd-svg-menu-back\', dxclick: function(e) { isMenuCollapsed(false); }"></div> <!-- /ko --> </div> <!-- ko foreach: actionLists.menuItems --> <div class="dxrd-menu-item dxd-text-primary dxd-list-item-back-color dxd-back-highlighted" data-bind="dxclick: function(e) { if(disabled && !disabled() || !disabled) { $root.toggleAppMenu(); clickAction($root.model(), e); }}, css: { \'dxrd-disabled-button\': disabled, \'dxd-state-active\': $data.selected }, visible: visible"> <div class="dxrd-menu-item-image" data-bind="css: ko.unwrap($data.imageClassName), template: {name: ko.unwrap($data.imageTemplateName), if: !!ko.unwrap($data.imageTemplateName)}, attr: { title: $data.displayText && $data.displayText() || text }"> </div> <!-- ko if: !$root.isMenuCollapsed() --> <div class="dxrd-menu-item-text" data-bind="text: $data.displayText && $data.displayText() || text, attr: { title: $data.displayText && $data.displayText() || text}"></div> <div class="dxrd-menu-item-separator" data-bind="visible: $data.hasSeparator"></div> <!-- /ko --> </div> <!-- /ko --> </div> </div> </div> <div class="dxrd-menu-button dxd-toolbox-back-color dxd-border-primary dxd-back-secondary-invariant"> <div class="dxrd-menu-button-image dxd-button-back-color dxd-state-normal dxd-back-highlighted" data-bind="dxclick: function(e) { if(stopPropagation) { stopPropagation = false; } else { toggleAppMenu() } }, template: \'dxrd-svg-menu-menu\', css: {\'dxd-state-active\': appMenuVisible }"></div> <div class="dxrd-menu-place" style="width:54px;"></div> </div> </div>',
    'dxrd-smart-tags': '<div class="dxrd-control-smart-tags" data-bind="styleunit: { \'left\': $data.position.x, \'top\': $data.position.y }, style: $root.rtl ? { \'margin-right\': margin } : { \'margin-left\': margin }, visible: visible"> <!-- ko foreach: $data.smartTags --> <div class="dxrd-control-smart-tag dxd-icon-accented" data-bind="dxButtonWithTemplate: { icon: $data.imageTemplateName, iconClass: $data.imageTemplateName }, event: { dblclick: function(_, event){ event.stopPropagation(); } }, click: function(_, event){ $data.onClick(); event.stopPropagation(); }"> </div> <!--ko if: $data.templateName --> <!--ko template: $data.templateName --> <!--/ko--> <!--/ko--> <!-- /ko --> </div>',
    'dxrd-smart-tag-exressions': '<!--ko with: $data.expressionEditor --> <!--ko template: { name: \'dxrd-expressioneditor-popup\' } --> <!--/ko--> <!--/ko-->',
    'dxrd-reportRtlProperty': '<!-- ko if: !!$root.surface() --> <!-- ko template: { name: $root.dx._static.editorTemplates.getEditor("combobox").header, data: $root.surface().wrapRtlProperty($data, $root.undoEngine, $element) } --> <!-- /ko --> <!-- /ko -->',
    'dxrd-drag-helper-source-reorder-treelist': '<div class="dxrd-drag-helper-source-reorder-treelist dxd-back-primary dxd-text-primary dxd-ghost-border-color dxd-border-accented"> <div class="dxrd-drag-helper-treelist-image" data-bind="css: $data.imageClassName, template: {name: $data.imageTemplateName, if: !!ko.unwrap($data.imageTemplateName)}"> </div> <div class="dxrd-drag-helper-treelist-text-wrapper"> <div class="dxrd-drag-helper-treelist-text" data-bind="text: text, attr: { title: text }"></div> </div> </div>',
    'dxrd-wizard-report-tree': '<div class="dxrd-wizard-report-tree"> <div class="dxrd-wizard-report-tree-title" data-bind="text: $root.getLocalization(\'Select the report\', \'ASPxReportsStringId.ReportDesigner_MasterDetailWizard_SelectReport\')"></div> <div class="dxrd-wizard-report-tree-selectbox" data-bind="dxSelectBox: { dataSource: $data.items, itemTemplate: \'stateItem\', valueExpr: \'path\', displayExpr: \'name\', value: $data.value, dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"> <div data-options="dxTemplate:{ name:\'stateItem\' }" style="text-align: left;"> <div data-bind="text: name, styleunit: {marginLeft: 30 * level}"></div> </div> </div> </div>',
    'dxrd-toolbar-two-way-switch': '<div class="dxrd-toolbar-item dxrd-toolbar-two-way-switch dxd-back-contrast" data-bind="visible: $parent.visible"> <!-- ko foreach: $data.items --> <!-- ko template: { name: \'dxrd-toolbar-two-way-switch-active\', if: $data.active } --> <!-- /ko --> <!-- ko template: { name: \'dxrd-toolbar-two-way-switch-clickable\', if: !$data.active, data: $data.itemData } --> <!-- /ko --> <!-- /ko --> </div>',
    'dxrd-toolbar-two-way-switch-active': '<div class="dxd-text-primary dxd-back-highlighted dxd-state-active dxd-state-no-hover" data-bind="text: $data.getDisplayText()"></div>',
    'dxrd-toolbar-two-way-switch-clickable': '<div role="button" class="dx-accessibility-toolbar-item dx-accessibility-focus-border-accented" data-bind="attr: { \'aria-label\': $data.displayText && $data.displayText() || $data.text, \'aria-hidden\': ko.unwrap($data.visible) ? \'false\' : \'true\', \'aria-disabled\': ko.unwrap($data.disabled) ? \'true\' : \'false\', \'aria-checked\': $data.selected ? ($data.selected() ? \'true\' : \'false\') : null }" > <div data-bind="text: $data.displayText && $data.displayText() || $data.text, attr: { title: $data.displayText && $data.displayText() || $data.text, class: \'dxd-text-primary dxd-back-highlighted \' + (ko.unwrap($data.imageClassName) || \'\') }, dxclick: function() { if((typeof $data.disabled === \'function\') && !$data.disabled() || !$data.disabled) { $data.clickAction($root.model && $root.model()); } }, css: {\'dxrd-disabled-button\': $data.disabled }"></div> </div>',
    'dxrd-expressioneditor-popup': '<div data-bind="dxPopup: { showTitle: true, wrapperAttr: { class: \'dx-expressioneditor dxrd-expressioneditor-complex dx-popup-general\' }, title: title, visible: popupVisible, toolbarItems: buttonItems, showCloseButton: true, fullScreen: false, height: \'630px\', maxHeight: \'630px\', width: \'862px\', maxWidth: \'862px\', container: getPopupContainer($element), position: { of: getPopupContainer($element)}, onShowing: function(e) { onShowing(e); }, onHiding: function(e) { onHiding(e); }, onShown: function(e) { editor().onShown(e) } }"> <div class="dxrd-expressioneditor-popup-content"> <!-- ko if: popupVisible --> <div class="dxrd-expressioneditor-properties dx-expressioneditor-properties dxd-back-primary2"> <div class="dxrd-expressioneditor-properties-content-wrapper dxd-border-secondary " data-bind="dxScrollView: { showScrollbar: \'onHover\' }"> <!-- ko foreach: properties --> <!-- ko if: $data.templateName --> <!-- ko template: $data.templateName--> <!-- /ko --> <!-- /ko --> <!-- ko ifnot: $data.templateName --> <div class="dxrd-expressioneditor-property dxd-text-primary dxd-list-item-back-color dxd-back-highlighted" data-bind="css: {\'dxd-state-selected\': isSelected }, dxclick: function() { $data.click($data.content); }" style="padding-left: 17px"> <div class="dxrd-expressioneditor-property-text" data-bind="text: displayName, style: { fontWeight: isBinded() ? \'Bold\' : \'\'}"></div> <div class="dxrd-expression-image dxd-icon-accented" data-bind="template: \'dxrd-svg-properties-propertyexpression\', visible: isBinded()"></div> </div> <!-- /ko --> <!-- /ko --> </div> </div> <!-- ko with: $data.adapter --> <!-- ko if: $data.patchOptions($root.reportExplorerProvider, $root.editableObject && $root.editableObject()) --> <div data-bind="dxExpressionEditor: { options: value, fieldListProvider: $root.reportItemsProvider, displayNameProvider: $root.expressionDisplayNameProvider && $root.expressionDisplayNameProvider(), editorTemplateName: \'dx-expressioneditor-main\', popupVisible: $data.popupVisible, wrapper: $parent }"></div> <!-- /ko --> <!-- /ko --> <!-- /ko --> </div> </div>',
    'dxrd-expressioneditor-property-accordion': '<div class="dx-fieldset" style="margin: 0;"> <div data-bind="dxdAccordion: { collapsed: collapsed }"> <div class="dx-accordion-header dx-expressioneditor-property-accordion-header dxd-list-item-back-color dxd-back-highlighted" data-bind="css: {\'dxd-state-selected\': $data.isSelected }"> <div class=" dx-collapsing-image" data-bind="template: \'dxrd-svg-collapsed\', css: { \'dx-image-expanded\': !collapsed() }" style="display:inline-block;"></div> <span class="dxrd-expressioneditor-property-header" data-bind="text: displayName, style: { fontWeight: isBinded() ? \'Bold\' : \'\'}"></span> </div> <div class="dx-accordion-content"> <!-- ko foreach: items--> <!-- ko if: $data.templateName --> <!-- ko template: $data.templateName--> <!-- /ko --> <!-- /ko --> <!-- ko ifnot: $data.templateName --> <div class="dxrd-expressioneditor-property dxd-text-primary dxd-list-item-back-color dxd-back-highlighted" data-bind="css: {\'dxd-state-selected\': isSelected }, dxclick: function() { $data.click($data.content); }"> <div class="dxrd-expressioneditor-property-text" data-bind="text: displayName, style: { fontWeight: isBinded() ? \'Bold\' : \'\'}"></div> <div class="dxrd-expression-image dxd-icon-accented" data-bind="template: \'dxrd-svg-properties-propertyexpression\', visible: isBinded()"></div> </div> <!-- /ko --> <!-- /ko --> </div> </div> </div>',
    'dxrd-viewStyle': '<div data-bind="dxLocalizedSelectBox: { items: viewmodel.items, value: value, valueExpr: \'value\', displayExpr: \'displayValue\', displayCustomValue: true, disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element) } }"></div>',
    'dxrd-reportSourceUrl': '<div data-bind="dxSelectBox: { dataSource: $data.getValues($root.reportUrls, $root.navigateByReports.currentTab), onOpened: function() { $data.updateUrls(); }, searchEnabled: true, value: value, disabled: disabled, valueExpr: \'Key\', displayExpr: \'Value\', dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"></div>',
    'dxrd-content-type': '<!-- ko if: value --> <!-- ko with: value --> <div data-bind="dxLocalizedSelectBox: { items: $parent.values, value: type, valueExpr: \'value\', displayExpr: \'displayValue\', displayCustomValue: true, disabled: $parent.disabled, dropDownOptions: { container: $root.getPopupContainer($element) } }"></div> <!-- /ko --> <!-- /ko -->',
    'dxrd-checkbox-style-combobox': '<div data-bind="dxLocalizedSelectBox: { dataSource: values, value: value, valueExpr: \'value\', displayExpr: \'displayValue\', displayCustomValue: true, disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element) } }, dxValidator: { validationRules: $data.validationRules || [] }"> <div class="dxrd-checkbox-style-combobox-item" data-options="dxTemplate: { name: \'item\' }"> <div class="dxrd-checkbox-style-combobox-item-icons" data-bind="foreach: [\'Unchecked\',\'Checked\',\'Indeterminate\']"> <!-- ko template: $parent.templateBinding(\'dxrd-svg-checkboxglyphs-\' + $parent.value + \'_\' + $data) --> <!-- /ko --> </div> <span data-bind="text: $root.getLocalization(displayValue, localizationId), attr: { title: $root.getLocalization(displayValue, localizationId) }"></span> </div> </div>',
    'dxrd-datasource': '<div data-bind="dxSelectBox: getEditorOptions($root.dataSourceHelper, $root.undoEngine, $root.getPopupContainer($element))"></div>',
    'dxrd-bands': '<div data-bind="dxSelectBox: { items: generateValue($root.bands), value: value, displayExpr: \'displayName\', valueExpr: \'value\', displayCustomValue: true, disabled: disabled, placeholder: $root.getLocalization(\'(none)\', \'ChartStringId.WizNoBackImage\'), dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"></div>',
    'dxrd-formattingRuleCollection': '<div class="dxrd-editor dxrd-formatting-rule-collection-editor" data-bind="visible: visible, styleunit: { \'marginLeft\' : padding }"> <div data-bind="dxCollectionEditor: options"> <div data-bind="dxdAccordion: { collapsed: collapsed }"> <div class="dxrd-group-header dx-accordion-header dxd-text-primary"> <div class="dxrd-formatting-rule-checkbox" data-bind="dxCheckBox: { value: value().selected, disabled: editor.disabled }, dxclick: function(_, event) { event.stopPropagation(); }"></div> <div class="dxrd-formatting-rule-collapsed dx-collapsing-image" data-bind="template: \'dxrd-svg-collapsed\', css: { \'dx-image-expanded\': !collapsed() }"></div> <div class="dxrd-formatting-rule-displayName"> <div class="propertygrid-editor-displayName" data-bind="text: value().name, attr: { title: value().name }"></div> </div> </div> <div class="dx-accordion-content dxd-back-primary"> <div data-bind="dxPropertyGrid: { target: value, editorsInfo: { editors: $root.dx._static.formattingRuleSerializationsInfo }, level: editor.level + 1, parentDisabled: editor.disabled }"></div> </div> </div> </div> </div>',
    'dxrd-fields-combobox': '<div data-bind="dxSelectBox: { dataSource: wrapValues($root.displayNameProvider), value: value, valueExpr: \'value\', displayExpr: \'displayValue\', displayCustomValue: true, disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }, dxValidator: { validationRules: $data.validationRules || [] }"></div>',
    'dxrd-style': '<div data-bind="dxSelectBox: new $root.dx._static.StylesEditorHeaderModel(value, $root.styles(), disabled, $root.getPopupContainer($element))"></div>',
    'dxrd-styleContent': '<!-- ko if: value--> <div data-bind="dxStylesEditor: { styleName: value, styles: $root.styles() }"></div> <!--/ko -->',
    'dxrd-dataBindings': ' ',
    'dxrd-dataBinding': '<!-- ko with: value --> <!-- ko if: visible --> <!-- ko displayNameExtender: { dataSource: dataSource, dataMember: displayExpr } --> <div data-bind="dxFieldListPicker: { acceptCustomValue: true, displayValue: $displayName, itemsProvider: $root.dataBindingsProvider(), treeListController: $parent.treeListController, value: $data.generateValue($root.undoEngine(), $root.dataSourceHelper(), $root.fieldListDataSources(), $root.dataBindingsProvider()), disabled: $parent.disabled }"></div> <!--/ko --> <!--/ko --> <!--/ko -->',
    'dxrd-chartValueBinding': '<div data-bind="dxFieldListPicker: { acceptCustomValue: true, displayValue: generateDisplayValue($root.reportDataSource), itemsProvider: $root.reportDataBindingsProvider, treeListController: treeListController, value: generateValue($root.undoEngine(), $root.reportParameters, $root.reportDataSource), disabled: disabled }"></div>',
    'dxrd-reportexplorer-editor': '<div data-bind="dxFieldListPicker: { acceptCustomValue: true, value: itemsProvider.selectedPath, displayValue: displayExpr, itemsProvider: itemsProvider, path: itemsProvider.path, disabled: disabled, treeListController: treeListController }"></div>',
    'dxrd-dataBindingsContent': '<div data-bind="template: { name: \'dx-propertieseditor\', data: viewmodel }"></div>',
    'dxrd-dataBindingContent': '<div class="dx-field dxd-back-primary"> <div class="dx-field-label dx-accordion-header dxd-text-primary" data-bind="styleunit: padding"> <div class="propertygrid-editor-displayName" data-bind="text: $root.getLocalization(\'Format String\', \'DevExpress.XtraReports.UI.XRBinding.FormatString\')"></div> </div> <div class="dx-field-value"> <!-- ko if: value() --> <!-- ko with: value() --> <!-- ko template: { name: \'dxrd-formatstring\', data: { value: $data.formatString, disabled: $data.disabled, actions: $parent.actions, customPatterns: $parent.customPatterns } } --> <!-- /ko --> <!-- /ko --> <!-- /ko --> </div> </div>',
    'dxrd-scriptsbox': '<div data-bind="dxEventDropDownEditor: { items: $root.events, value: value, editEnabled: true, disabled: disabled, secondAction: function() { $root.gotoEvent && $root.gotoEvent($data.value(), name, $parents[1]._model && $parents[1]._model()); }, placeholder: $root.dx._static.selectPlaceholder(), noDataText: $root.dx._static.noDataText(), dropDownOptions: { container: $root.getPopupContainer($element) } }"></div>',
    'dxrd-collection-item-group': '<div class="dx-field dxd-back-primary" data-bind="styleunit: { \'marginLeft\' : $parents[1].padding }"> <div class="dx-field-label dxd-text-primary"> <div class="propertygrid-editor-displayName" data-bind="text: $parents[1].options.info().getChildCaption(index()) + \':\'"></div> </div> <div class="dx-field-value"> <div class="dxrd-collectioneditor-action" data-bind="dxButtonWithTemplate: { onClick: value().changeSortOrder, icon: value().sortOrderClass().template, iconClass: value().sortOrderClass().class, disabled: editor.disabled }"></div> <!-- ko displayNameExtender: { path: function() { return $data.editor._model() && $data.editor._model().getPath(\'groupFields\') || \'\' }, dataMember: value().fieldName } --> <div class="dxrd-collectioneditor-picker" data-bind="dxFieldListPicker: { displayValue: $displayName, value: value().fieldName, acceptCustomValue: true, path: editor._model() && editor._model().getPath(\'groupFields\') || \'\', itemsProvider: $root.dataBindingsProvider(), treeListController: new $root.dx._static.TreeListController(), disabled: editor.disabled}"></div> <!--/ko --> </div> </div>',
    'dxrd-lookUpValues': '<div class="dxrd-editor" data-bind="visible: visible"> <div data-bind="dxCollectionEditor: { values: value, addHandler: $root.dx._static.LookUpValue.createNew, undoEngine: $root.undoEngine, level: level, displayName: $root.getLocalization(displayName), info: info }"> <div data-bind="dxPropertyGrid: { target: $data.value, level: editor.level + 1 }"></div> </div> </div>',
    'dxrd-parameterContent': '<div data-bind="template: { name: \'dx-propertieseditor\', data: viewmodel }"></div>',
    'dxrd-calculatedFields': '<div class="dxrd-editor" data-bind="visible: visible"> <div data-bind="dxCollectionEditor: { values: value, displayName: $root.getLocalization(displayName), level: level, info: info, addHandler: function() { return $root.calculatedFieldsSource().createCalculatedField(\'\'); } }"> </div> </div>',
    'dxrd-parameters': '<div class="dxrd-editor" data-bind="visible: visible"> <div data-bind="dxCollectionEditor: { values: value, displayName: displayName, level: level, info: info, addHandler: function() { return $root.parameters().add(); } }"> </div> </div>',
    'dxrd-levelCollection': '<div class="dxrd-editor" data-bind="visible: visible"> <div data-bind="dxCollectionEditor: { values: value, displayName: $root.getLocalization(displayName), level: level, info: info, addHandler: function() { return $root.dx._static.TableOfContentsLevel.createNew(_model()); } }"> </div> </div>',
    'dxrd-collectionItemWithAccordion': '<div class="dxrd-accordion-collection-item" data-bind="dxdAccordion: { collapsed: collapsed }"> <div class="dxrd-group-header dx-accordion-header dxd-text-primary"> <div data-bind="styleunit: {\'paddingLeft\': $parents[1].padding + $root.dx._static.propertiesGridEditorsPaddingLeft }"> <div class="propertygrid-editor-collapsed dx-collapsing-image" data-bind="template: \'dxrd-svg-collapsed\', css: { \'dx-image-expanded\': !collapsed() }"></div> <div class="dx-group-header-font dxd-text-primary" data-bind="text: $root.getLocalization($parent.name), attr: { title: $root.getLocalization($parent.name) }"></div> </div> </div> <div class="dx-accordion-content dxd-back-primary"> <div data-bind="dxPropertyGrid: { target: value, level: editor.level + 2, parentDisabled: editor.disabled }"></div> </div> </div>',
    'dx-numeric-undo': '<div data-bind="dxNumberBox: getOptions({ value:generateValue($root.undoEngine), showSpinButtons:true, disabled:disabled, min:min, max:max }), dxValidator: { validationRules: validationRules || [] }"></div>',
    'dx-modificators-highlightable': '<div class="dx-font-content"> <div class="dx-field"> <div class="dx-field-label dxd-text-primary" data-bind="styleunit: { \'paddingLeft\': padding }"></div> <!-- ko with: value --> <div class="dx-field-value"> <div class="dx-font-styles-content"> <div class="dx-font-style-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dx-image-fontstyle-bold" data-bind="css: { \'dxd-state-active\': bold(), \'dx-disabled-button\': $parent.disabled, \'dxd-border-accented\': $data.boldHasExpression }, click: function() { if(!$parent.disabled()) { bold(!bold()); } }"><!-- ko template: \'dxrd-svg-fontstyle-bold\'--><!-- /ko --></div> <div class="dx-font-style-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dx-image-fontstyle-italic" data-bind="css: { \'dxd-state-active\': italic(), \'dx-disabled-button\': $parent.disabled, \'dxd-border-accented\': $data.italicHasExpression }, click: function() { if(!$parent.disabled()) { italic(!italic()); } }"><!-- ko template: \'dxrd-svg-fontstyle-italic\'--><!-- /ko --></div> <div class="dx-font-style-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dx-image-fontstyle-underline" data-bind="css: { \'dxd-state-active\': underline(), \'dx-disabled-button\': $parent.disabled, \'dxd-border-accented\': $data.underlineHasExpression }, click: function() { if(!$parent.disabled()) { underline(!underline()); } }"><!-- ko template: \'dxrd-svg-fontstyle-underline\'--><!-- /ko --></div> <div class="dx-font-style-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dx-image-fontstyle-strikeout" data-bind="css: { \'dxd-state-active\': strikeout(), \'dx-disabled-button\': $parent.disabled, \'dxd-border-accented\': $data.strikeoutHasExpression }, click: function() { if(!$parent.disabled()) { strikeout(!strikeout()); } }"><!-- ko template: \'dxrd-svg-fontstyle-strikeout\'--><!-- /ko --></div> </div> </div> <!-- /ko --> </div> </div>',
    'dx-objectEditorContentUndo': '<!-- ko if: visible --> <div data-bind="template: { name: \'dx-propertieseditor\', data: generateValue($root.undoEngine) }"></div> <!-- /ko -->',
    'dxrd-editOptionsEditorName': '<div data-bind="dxFieldListPicker: $data"></div>',
    'dxrd-editingField-editor-treelist-item': '<div class="dx-treelist-item dxd-list-item-back-color dxd-back-highlighted" data-bind="styleunit: padding, css: { \'dx-treelist-item-selected dxd-state-selected\': isSelected }"> <div class="dx-treelist-caption"> <div class="dx-treelist-selectedcontent" data-bind="click: toggleSelected"> <div class="dx-treelist-image" data-bind="css: $data.imageClassName, template: {name: $data.imageTemplateName, if: !!ko.unwrap($data.imageTemplateName)}, attr: { title: text }"> </div> <div class="dx-treelist-text-wrapper"> <div class="dx-treelist-text" data-bind="text: text, attr: { title: data.title }"></div> </div> </div> </div> </div>',
    'dxrd-name': '<div data-bind="dxTextBox: getOptions({ value: value, disabled: disabled }), dxValidator: { validationRules: generateRules($root.controlsHelper.allControls) || [] }"></div>',
    'dxrd-reportexpression-ellipsis': '<div class="no-margin-right" data-bind="dxEllipsisEditor: { value: displayValue, buttonAction: function() { $parent.showPopup($root.editableObject && $root.editableObject()); }, disabled: disabled, isValid: modelValueValid, warningMessage: modelValueWarning }"></div>',
    'dxrd-reportexpression-complex': '<!-- ko if: visible --> <div> <!-- ko template: { name: \'dxrd-reportexpression\' }--> <!-- /ko --> <!-- ko if: $data.popupVisible --> <!-- ko template: { name: \'dxrd-expressioneditor-popup\', data: $data.wrapper }--> <!-- /ko --> <!-- /ko --> </div> <!-- /ko -->',
    'dxrd-reportexpression': '<!-- ko if: visible --> <!-- ko if: $data.patchOptions($root.reportExplorerProvider, $root.editableObject && $root.editableObject()) --> <div data-bind="dxExpressionEditor: getOptions({ options: value, fieldListProvider: $root.reportItemsProvider, displayNameProvider: $root.expressionDisplayNameProvider && $root.expressionDisplayNameProvider(), editorTemplateName: $data.editorTemplateName })"></div> <!-- /ko --> <!-- /ko -->',
    'dxrd-pivotcriteria': '<!-- ko with: $data.wrapModel($root.fieldListProvider) --> <div data-bind="dxFilterEditor: { options: value, fieldListProvider: itemsProvider, getDisplayNameByPath: $root.getDisplayNameByPath, displayNameProvider: displayNameProvider }"></div> <!-- /ko -->',
    'dxrd-richtext-loadfile': '<div data-bind="dxRichTextFileEditor: { value: value, placeholderId: \'File\', disabled: disabled, accept:\'.rtf,.docx,.txt,.htm,.html\' }"></div>',
    'dxrd-image-loadfile': '<div data-bind="dxImageSourceEditor: { value: value, accept: \'image/*\', type: \'img\', disabled: disabled }"></div>',
    'dxrd-pdfcontent-loadfile': '<div data-bind="dxFileImagePicker: { value: value, placeholderId: \'File\', disabled: disabled, accept:\'.pdf\' }"></div>',
    'dxrd-summaryeditor-header': '<!-- ko template: \'dx-emptyHeader\' --> <!-- /ko --> <div data-bind="dxPopup: { showTitle: true, width: \'550px\', height: \'400px\', wrapperAttr: { class: \'dxrd-summaryeditor-popup\' }, title: $root.getLocalization(\'Summary Editor\'), visible: $data.popup.visible, toolbarItems: $data.popup.buttons, showCloseButton: true, container: $data.popup.container($element), position: { of: $data.popup.container($element) }}"> <!-- ko template: { name: \'dx-propertieseditor\', data: $data.popup.grid } --> <!-- /ko --> </div>',
    'dxrd-datasource-combobox': '<div data-bind="dxSelectBox: { dataSource: $data.getValues(), searchEnabled: true, value: value, valueExpr: \'value\', displayExpr: \'displayValue\', disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element)  }, popupPosition: { boundary: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"> <div data-options="dxTemplate: { name: \'item\' }" data-bind="text: displayValue, style: { \'fontWeight\': $root.isLocalized($data.value) ? \'bold\' : \'normal\' }, attr: { title: displayValue }"> </div> </div>',
    'dxrd-localization-combobox': '<div data-bind="dxSelectBox: { dataSource: $data.getValues(), searchEnabled: true, value: value, valueExpr: \'value\', displayExpr: \'displayValue\', disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element), width:  $root.calculateWithZoomFactor(357)  }, popupPosition: { boundary: $root.getPopupContainer($element) }, useItemTextAsTitle: true }"> <div class="dx-localization-combobox-content" data-options="dxTemplate: { name: \'item\' }"> <div class="dx-culture dx-culture-code dxd-text-info" data-bind="text: value === \'Default\' ? \'\' : value, style: { \'fontWeight\': $root.isLocalized($data.value) ? \'bold\' : \'normal\' }, attr: { title: value }"></div> <div class="dx-culture" data-bind="text: displayValue, style: { \'fontWeight\': $root.isLocalized($data.value) ? \'bold\' : \'normal\' }, attr: { title: displayValue }"></div> </div> </div>',
    'dxrd-page-crosstab-dataMembers': '<div class="dxrd-wizard-page dxrd-wizard-crosstab-select-dataMembers-page dxrd-wizard-page-treelist-accordion-style"> <div class="dxrd-wizard-list-container"> <div class="dxrd-wizard-list dx-default-border-style dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\', height: \'100%\' }"> <div class="dxrd-wizard-field-infos dxrd-wizard-field-infos-title dxd-border-secondary dxd-back-contrast"> <div class="dxrd-wizard-field-infos-title-image" data-bind="template: _icon"></div> <div class="dxrd-wizard-field-infos-title-content dxd-text-primary" data-bind="text: _title"></div> </div> <div data-bind="dxScrollView: { showScrollbar: \'onHover\', height: \'auto\' }"> <div data-bind="treelist: _signleFieldMemberFieldListModel" style="width:100%; height: 100%;"></div> </div> </div> </div> </div>',
    'dxrd-page-crosstab-setlayout': '<div class="dxrd-wizard-page dxrd-wizard-crosstab-setlayout-page" data-bind="trackCursor: underCursor, css: {\'dxrd-wizard-crosstab-droppable-page\': isDroppable}"> <div class="dxrd-wizard-list-container"> <div class="dxrd-wizard-list dx-default-border-style dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\', height: \'100%\' }"> <div class="dxrd-wizard-field-infos dxrd-wizard-field-infos-title dxd-border-secondary dxd-back-contrast"> <div class="dxrd-wizard-field-infos-title-image" data-bind="template: _icon"></div> <div class="dxrd-wizard-field-infos-title-content dxd-text-primary" data-bind="text: _title"></div> </div> <div class="dxrd-wizard-field-infos dxrd-wizard-field-infos-paragraf dxd-border-secondary"> <div class="dxrd-wizard-field-infos-fields dxd-wizard-title-back-color dxd-back-secondary dxd-border-secondary" data-bind="text: _fieldName"></div> <div class="dxrd-wizard-field-infos-values dxd-wizard-title-back-color dxd-back-secondary dxd-border-secondary" data-bind="text: _valueName"></div> <div class="dxrd-wizard-field-infos-removebtn dxd-wizard-title-back-color dxd-back-secondary"></div> </div> <div data-bind="foreach: fieldInfos"> <div class="dxrd-wizard-field-infos dxd-border-secondary"> <div class="dxrd-wizard-field-infos-fields dxd-wizard-title-back-color dxd-back-secondary dxd-border-secondary"> <div data-bind="dxSelectBox: { dataSource: $parent._crossTabFields, displayExpr: \'displayName\', value: field, placeholder: $root.dx._static.selectPlaceholder(), dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"></div> </div> <div class="dxrd-wizard-field-infos-values dxd-wizard-title-back-color dxd-back-secondary dxd-border-secondary"> <div data-bind="dxSelectBox: value"></div> </div> <div class="dxrd-wizard-field-infos-removebtn dxd-wizard-title-back-color dxd-back-secondary"> <div data-bind="dxButton: { icon: \'close\', onClick: function () { return $parent._removeInfo($data);  }}"></div> </div> </div> </div> </div> </div> </div>',
    'dxrd-page-colorScheme-content': '<div class="dxrd-page-color-scheme"> <!-- ko foreach: _lookupData.scheme --> <div class="dxrd-page-color-scheme-tile" data-bind="click: function () { $parent._applyScheme($data); }, style: { backgroundColor: color }"> <div class="dxrd-page-color-scheme-tile-content"> <div class="dxrd-page-color-scheme-tile-selected dxd-border-accented" data-bind="visible: $data.selected()"></div> <!-- ko ifnot: $data.name === \'Custom\' --> <div class="dxrd-page-color-scheme-tile-content-title" data-bind="text: displayName"></div> <!-- /ko --> <!-- ko if: $data.name === \'Custom\' --> <div class="dxrd-page-color-scheme-tile-content-custom"> <div class="dxrd-page-color-scheme-tile-content-title" data-bind="text: displayName"></div> <div class="dxrd-page-color-scheme-tile-content-edit" data-bind="css: { \'dxrd-page-color-scheme-tile-content-edit-active\': $data.popoverVisible() }, click: function() { $data.popoverVisible(!$data.popoverVisible()) }"> <div class="dxrd-page-color-scheme-tile-content-edit-icon" data-bind="template:\'dxrd-svg-color_gear\'"></div> </div> </div> <div class="dxrd-page-color-scheme-colorpicker" data-bind="dxPopover: { visible: $data.popoverVisible, width: \'auto\', height: \'auto\', wrapperAttr: { class: \'dxrd-page-color-scheme-colorpicker\' }, container: $root.getPopupContainer($element), target: \'.dxrd-page-color-scheme-tile-content-edit-icon\', position: { my: \'left center\', at: \'right center\', collision: \'fit\', of: \'.dxrd-page-color-scheme-tile-content-edit\', boundary: $root.getPopupContainer($element) } }"> <div class="dxrd-page-color-scheme-colorpicker-editor-container dxd-border-secondary"> <div data-bind="dxColorView: { value: editorColor, editAlphaChannel: true }"></div> </div> <div class="dxrd-page-color-scheme-colorpicker-buttons"> <div class="dxrd-page-color-scheme-colorpicker-button" data-bind="dxButton: { text: \'Cancel\', onClick: function() { $data.resetColor() }}"></div> <div class="dxrd-page-color-scheme-colorpicker-button" data-bind="dxButton: { text: \'Ok\', onClick: function() { $data.applyColor() }}"></div> </div> </div> <!-- /ko --> </div> </div> <!-- /ko --> </div>',
    'dxrd-page-colorScheme': '<div class="dxrd-wizard-page"> <!-- ko template: \'dxrd-page-colorScheme-content\' --> <!-- /ko --> </div>',
    'dxrd-page-columns': '<div class="dxrd-wizard-page dxrd-wizard-columns-page"> <div class="dxrd-wizard-left-panel"> <div class="dxrd-wizard-list-title" data-bind="text: availableFields.caption"></div> <div class="dx-default-border-style dxd-border-secondary"> <div class="dxrd-wizard-list" data-bind="dxList: { items: availableFields.items, selectedItems: availableFields.activeItemArray, height: 257, selectionMode: \'single\', activeStateEnabled: false, onItemClick: availableFieldClick }"> <div data-options="dxTemplate : { name: \'item\' }" data-bind="event: { dblclick: $parent.availableFieldDblClick }"> <div data-bind="text: displayName"></div> </div> </div> </div> </div> <div class="dxrd-wizard-splitter"> <div class="dxrd-wizard-splitter-action" data-bind="dxButtonWithTemplate: { onClick: select, disabled: !isSelectEnable(), icon: \'dxrd-svg-operations-moveright\', iconClass: \'dxrd-image-moveright\' }" style="margin-top: 40px"></div> <div class="dxrd-wizard-splitter-action" data-bind="dxButtonWithTemplate: { onClick: selectAll, disabled: !isSelectEnable(), icon: \'dxrd-svg-operations-moveright_all\', iconClass: \'dxrd-image-moveright-all\' }"></div> <div class="dxrd-wizard-splitter-action" data-bind="dxButtonWithTemplate: { onClick: unselect, disabled: !isUnselectEnable(), icon: \'dxrd-svg-operations-moveleft\', iconClass: \'dxrd-image-moveleft\' }" style="margin-top: 44px"></div> <div class="dxrd-wizard-splitter-action" data-bind="dxButtonWithTemplate: { onClick: unselectAll, disabled: !isUnselectEnable(), icon: \'dxrd-svg-operations-moveleft_all\', iconClass: \'dxrd-image-moveleft-all\' }"></div> </div> <div class="dxrd-wizard-right-panel"> <div class="dxrd-wizard-list-title" data-bind="text: selectedFields.caption"></div> <div class="dx-default-border-style dxd-border-secondary"> <div class="dxrd-wizard-list" data-bind="dxList: { items: selectedFields.items, selectedItems: selectedFields.activeItemArray, height: 257, selectionMode: \'single\', activeStateEnabled: false, onItemClick: selectedFieldClick }"> <div data-options="dxTemplate : { name: \'item\' }" data-bind="event: { dblclick: $parent.selectedFieldDblClick }"> <div data-bind="text: displayName"></div> </div> </div> </div> </div></div>',
    'dxrd-page-customizeLabel': '<div class="dxrd-wizard-page"> <div class="dxrd-wizard-customizelabel-page dxd-border-secondary"> <div class="dxrd-wizard-customizelabel-list"> <div class="dxrd-wizard-customizelabel-head-props"> <div class="dxrd-wizard-customizelabel-select-papersize"> <span data-bind="text: $root.getLocalization(\'Page Size:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSize\'), attr: { title: $root.getLocalization(\'Page Size:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSize\') }"></span> <div data-bind="dxSelectBox: { items: _labelData.paperKinds, displayExpr: \'name\', value: _selectedPaperSize, itemTemplate: \'PaperSizeText\', dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true , onOpened: function (e) { e.component._popup.option(\'width\', 300); }}, attr: { title: _selectedPaperSize().name + \' - \' + $root.dx._static.CustomizeLabelPage._getPageSizeText(_selectedPaperSize().width, _selectedPaperSize().height, _selectedPaperSize().unit)}"> <div data-options="dxTemplate: { name: \'PaperSizeText\' }" class="dxrd-wizard-customizelabel-select-customtemplate"> <p class="dxrd-wizard-customizelabel-select-template"> <span data-bind="text: name"></span> <span data-bind="text: $root.dx._static.CustomizeLabelPage._getPageSizeText(width, height, unit)"></span> </p> </div> </div> </div> <div class="dxrd-wizard-customizelabel-radiounit"> <div data-bind=\'dxRadioGroup:{items: _units, valueExpr: "value", value: unit, layout: "horizontal" }\'></div> </div> <div class="dxrd-wizard-customizelabel-pagesizetext"><span data-bind="text: _pageSizeText"></span></div> </div> <div class="dxrd-wizard-customizelabel-props-container"> <div class="dxrd-wizard-customizelabel-props"> <div class="dxrd-wizard-customizelabel-pagesizetext-inline"> <span data-bind="text: $root.getLocalization(\'Measure Units\', \'DevExpress.XtraReports.UI.XtraReport.ReportUnit\') + \':\', attr: { title: $root.getLocalization(\'Measure Units\', \'DevExpress.XtraReports.UI.XtraReport.ReportUnit\') + \':\' }"></span> <div data-bind="dxLocalizedSelectBox: { items: _units, valueExpr: \'value\', displayExpr: \'text\', value: unit, dropDownOptions: { container: $root.getPopupContainer($element) } }"></div> </div> <div> <span data-bind="text: $root.getLocalization(\'Label Width:\', \'ASPxReportsStringId.ReportDesigner_Wizard_LabelWidth\'), attr: { title: $root.getLocalization(\'Label Width:\', \'ASPxReportsStringId.ReportDesigner_Wizard_LabelWidth\') }"></span> <div data-bind="dxNumberBox: { min: 0.0, max: 999.9, showSpinButtons: true, step: _stepUnit, value: labelWidth }"></div> </div> <div> <span data-bind="text: $root.getLocalization(\'Label Height:\', \'ASPxReportsStringId.ReportDesigner_Wizard_LabelHeight\'), attr: { title: $root.getLocalization(\'Label Height:\', \'ASPxReportsStringId.ReportDesigner_Wizard_LabelHeight\') }"></span> <div data-bind="dxNumberBox: { min: 0.0, max: 999.9, showSpinButtons: true, step: _stepUnit, value: labelHeight }"></div> </div> <div class="dxrd-wizard-customizelabel-prop-whis-top-margin"> <span data-bind="text: $root.getLocalization(\'Horizontal Pitch:\', \'ASPxReportsStringId.ReportDesigner_Wizard_HorizontalPitch\'), attr: { title: $root.getLocalization(\'Horizontal Pitch:\', \'ASPxReportsStringId.ReportDesigner_Wizard_HorizontalPitch\') }"></span> <div data-bind="dxNumberBox: { min: 0.0, max: 999.9, showSpinButtons: true, step: _stepUnit, value: horizontalPitch }"></div> </div> <div> <span data-bind="text: $root.getLocalization(\'Vertical Pitch:\', \'ASPxReportsStringId.ReportDesigner_Wizard_VerticalPitch\'), attr: { title: $root.getLocalization(\'Vertical Pitch:\', \'ASPxReportsStringId.ReportDesigner_Wizard_VerticalPitch\') }"></span> <div data-bind="dxNumberBox: { min: 0.0, max: 999.9, showSpinButtons: true, step: _stepUnit, value: verticalPitch }"></div> </div> <div class="dxrd-wizard-customizelabel-prop-whis-top-margin"> <span data-bind="text: $root.getLocalization(\'Top Margin:\', \'ASPxReportsStringId.ReportDesigner_Wizard_TopMargin\'), attr: { title: $root.getLocalization(\'Top Margin:\', \'ASPxReportsStringId.ReportDesigner_Wizard_TopMargin\') }"></span> <div data-bind="dxNumberBox: { min: 0.0, max: 999.9, showSpinButtons: true, step: _stepUnit, value: topMargin }"></div> </div> <div> <span data-bind="text: $root.getLocalization(\'Left Margin:\', \'ASPxReportsStringId.ReportDesigner_Wizard_LeftMargin\'), attr: { title: $root.getLocalization(\'Left Margin:\', \'ASPxReportsStringId.ReportDesigner_Wizard_LeftMargin\') }"></span> <div data-bind="dxNumberBox: { min: 0.0, max: 999.9, showSpinButtons: true, step: _stepUnit, value: leftMargin }"></div> </div> <div> <span data-bind="text: $root.getLocalization(\'Right Margin:\', \'ASPxReportsStringId.ReportDesigner_Wizard_RightMargin\'), attr: { title: $root.getLocalization(\'Right Margin:\', \'ASPxReportsStringId.ReportDesigner_Wizard_RightMargin\') }"></span> <div data-bind="dxNumberBox: { min: 0.0, max: 999.9, showSpinButtons: true, step: _stepUnit, value: rightMargin }"></div> </div> <div> <span data-bind="text: $root.getLocalization(\'Bottom Margin:\', \'ASPxReportsStringId.ReportDesigner_Wizard_BottomMargin\'), attr: { title: $root.getLocalization(\'Bottom Margin:\', \'ASPxReportsStringId.ReportDesigner_Wizard_BottomMargin\') }"></span> <div data-bind="dxNumberBox: { min: 0.0, max: 999.9, showSpinButtons: true, step: _stepUnit, value: bottomMargin }"></div> </div> </div> <div class="dxrd-wizard-customizelabel-pic dxd-border-secondary"> <div class="dxrd-wizard-customizelabel-pic-element"></div> </div> <div class="dxrd-wizard-customizelabel-labelscounttext"><span data-bind="text: _labelsCountText"></span></div> </div> </div> </div></div>',
    'dxrd-page-dataMember': '<div class="dxrd-wizard-page"> <div class="dxrd-wizard-dataMember dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\', height: scrollViewHeight }"> <div data-bind="treelist: fieldListModel" style="width:100%; height: 100%;"></div> </div></div>',
    'dxrd-page-groups': '<div class="dxrd-wizard-page dxrd-wizard-groups-page"> <div class="dxrd-wizard-left-panel"> <div class="dxrd-wizard-list-title" data-bind="text: fields.caption"></div> <div class="dx-default-border-style dxd-border-secondary"> <div class="dxrd-wizard-list" data-bind="dxList: { dataSource: fields.items, selectedItems: fields.activeItemArray, height: 257, selectionMode: \'single\', activeStateEnabled: false, onItemClick: fieldClick, noDataText: $root.dx._static.noDataText() }"> <div data-options="dxTemplate : { name: \'item\' }" data-bind="event: { dblclick: $parent.fieldDblClick }"> <div data-bind="text: $data"></div> </div> </div> </div> </div> <div class="dxrd-wizard-splitter"> <div class="dxrd-wizard-splitter-action" data-bind="dxButtonWithTemplate: { onClick: addNewGroup, disabled: !isCreateGroupEnabled(), icon: \'dxrd-svg-operations-moveright\', iconClass: \'dxrd-image-moveright\'  }"></div> <div class="dxrd-wizard-splitter-action" data-bind="dxButtonWithTemplate: { onClick: appendFieldsToGroup, disabled: !isAppendToGroupEnabled(), icon: \'dxrd-svg-operations-add\', iconClass: \'dxrd-image-add\' }"></div> <div class="dxrd-wizard-splitter-action" data-bind="dxButtonWithTemplate: { onClick: removeGroup, disabled: !isRemoveGroupEnabled(), icon: \'dxrd-svg-operations-moveleft\', iconClass: \'dxrd-image-moveleft\' }"></div> <div class="dxrd-wizard-splitter-action" style="margin-top: 95px;" data-bind="dxButtonWithTemplate: { onClick: moveUp, disabled: !isMoveUpEnabled(), icon: \'dxrd-svg-operations-moveup\', iconClass: \'dxrd-image-moveup\' }"></div> <div class="dxrd-wizard-splitter-action" data-bind="dxButtonWithTemplate: { onClick: moveDown, disabled: !isMoveDownEnabled(), icon: \'dxrd-svg-operations-movedown\', iconClass: \'dxrd-image-movedown\' }"></div> </div> <div class="dxrd-wizard-right-panel"> <div class="dxrd-wizard-list-title" data-bind="text: groups.caption"></div> <div class="dx-default-border-style dxd-border-secondary"> <div class="dxrd-wizard-list" data-bind="dxList: { items: groups.items, height: 257, selectionMode: \'single\', selectedItems: groups.activeItemArray, activeStateEnabled: false, onItemClick: groupClick, noDataText: $root.dx._static.noDataText() }"> <div data-options="dxTemplate : { name: \'item\' }" data-bind="event: { dblclick: $parent.groupDblClick }"> <div data-bind="text: fields().join(\', \')"></div> </div> </div> </div> </div></div>',
    'dxrd-page-masterdetail-groups-section': '<div class="dxrd-wizard-page dxrd-wizard-masterdetail-groups-page dxd-border-secondary"> <div class="dxrd-wizard-masterdetail-groups-page-section-content" data-bind="dxScrollView: { showScrollbar: \'onHover\', height: \'100%\' }"> <div class="dx-fieldset" data-bind="foreach: _groupInfos"> <div class="dx-field dxd-back-primary"> <div class="dx-field-label" data-bind="text: displayName, attr: { \'title\': displayName}"></div> </div> <!-- ko foreach: groups --> <div class="dxrd-wizard-groups-item dx-field"> <div class="dxrd-wizard-groups-actions"> <div class="dxd-back-highlighted" data-bind="css: { \'dxrd-disabled-button\': $parent.moveUpDisabled($index()) }, click: function(){ $parent.moveup($index()) }"> <!-- ko template: \'dxrd-svg-operations-moveup\'--><!-- /ko --> </div> <div class="dxd-back-highlighted" data-bind="css: { \'dxrd-disabled-button\': $parent.moveDownDisabled($index()) }, click: function(){ $parent.movedown($index()) }"> <!-- ko template: \'dxrd-svg-operations-movedown\'--><!-- /ko --> </div> <div class="dxd-back-highlighted" data-bind="click: function(){ $parent.remove($index()) }"> <!-- ko template: \'dxrd-svg-operations-recycle_bin\'--><!-- /ko --> </div> </div> <div class="dxrd-wizard-groups-choozer"> <!-- ko template: { name: "dxrd-multivalue", data: $data } --> <!--/ko--> </div> </div> <!-- /ko --> <!-- ko if: isCreateGroupEnabled() --> <div class="dxrd-wizard-groups-item dx-field"> <div class="dx-field-label dxd-text-primary" style="width:auto"> <div class="dxrd-wizard-groups-addgroup dxd-hyperlink-color dxd-border-accented dxd-text-accented" data-bind="text: $data.addGroupText(), attr: { \'title\': $data.addGroupText() }, click: function() { $data.add() }"></div> </div> </div> <!-- /ko --> </div> </div> </div>',
    'dxrd-page-masterdetail-groups': '<div class="dxrd-wizard-page dxrd-wizard-masterdetail-groups-page"> <div class="dxrd-wizard-masterdetail-groups-page-title"> <!-- ko template: { name: \'dxrd-wizard-report-tree\', data: { items: $data._reportTree, value: $data._currentPath } }--> <!-- /ko --> </div> <div class="dxrd-wizard-masterdetail-groups-page-content"> <div class="dxrd-wizard-left-panel"> <div class="dxrd-wizard-list-title" data-bind="text: _fieldCaption"></div> <div class="dx-default-border-style dxd-border-secondary dxrd-wizard-panel-content"> <!-- ko if: $data._currentFields() --> <div class="dxrd-wizard-list" data-bind="dxList: { items: _currentFields().items, selectedItems: _currentFields().activeItemArray, height: \'100%\', selectionMode: \'single\', activeStateEnabled: false, onItemClick: _fieldClick, noDataText: $root.dx._static.noDataText() }"> <div data-options="dxTemplate : { name: \'item\' }" data-bind="event: { dblclick: $parent._fieldDblClick }"> <div data-bind="text: $data"></div> </div> </div> <!-- /ko --> </div> </div> <div class="dxrd-wizard-splitter"> <div class="dxrd-wizard-splitter-action" data-bind="dxButtonWithTemplate: { onClick: _addNewGroup, disabled: !_isCreateGroupEnabled(), icon: \'dxrd-svg-operations-moveright\', iconClass: \'dxrd-image-moveright\' }"></div> <div class="dxrd-wizard-splitter-action" data-bind="dxButtonWithTemplate: { onClick: _appendFieldsToGroup, disabled: !_isAppendToGroupEnabled(), icon: \'dxrd-svg-operations-add\', iconClass: \'dxrd-image-add\' }"></div> <div class="dxrd-wizard-splitter-action" data-bind="dxButtonWithTemplate: { onClick: _removeGroup, disabled: !_isRemoveGroupEnabled(), icon: \'dxrd-svg-operations-moveleft\', iconClass: \'dxrd-image-moveleft\' }"></div> <div class="dxrd-wizard-splitter-action" style="margin-top: 83px;" data-bind="dxButtonWithTemplate: { onClick: _moveUp, disabled: !_isMoveUpEnabled(), icon: \'dxrd-svg-operations-moveup\', iconClass: \'dxrd-image-moveup\' }"></div> <div class="dxrd-wizard-splitter-action" data-bind="dxButtonWithTemplate: { onClick: _moveDown, disabled: !_isMoveDownEnabled(), icon: \'dxrd-svg-operations-movedown\', iconClass: \'dxrd-image-movedown\' }"></div> </div> <div class="dxrd-wizard-right-panel"> <div class="dxrd-wizard-list-title" data-bind="text: _groupCaption"></div> <div class="dx-default-border-style dxd-border-secondary dxrd-wizard-panel-content"> <!-- ko if: $data._currentGroups() --> <div class="dxrd-wizard-list" data-bind="dxList: { items: _currentGroups().items, height: \'100%\', selectionMode: \'single\', selectedItems: _currentGroups().activeItemArray, activeStateEnabled: false, onItemClick: _groupClick, noDataText: $root.dx._static.noDataText() }"> <div data-options="dxTemplate : { name: \'item\' }" data-bind="event: { dblclick: $parent._groupDblClick }"> <div data-bind="text: fields().join(\', \')"></div> </div> </div> <!-- /ko --> </div> </div> </div></div>',
    'dxrd-page-masterdetail-select-reportdata': '<div class="dxrd-wizard-page dxrd-wizard-masterdetail-select-reportdata-page"> <!-- ko template: {name: \'dxrd-page-masterdetail-select-reportdata-dataMembers\', data: $data } --> <!-- /ko --> <!-- ko template: {name: \'dxrd-page-masterdetail-select-reportdata-fieldMembers\', data: $data } --> <!-- /ko --> </div>',
    'dxrd-page-masterdetail-select-reportdata-dataMembers': '<div class="dxrd-wizard-reportdata-column dx-first-column"> <div class="dxrd-wizard-reportdata-title" data-bind="text: _selectDataMembersCaption"></div> <div class="dxrd-wizard-add-queries-page dxrd-wizard-masterdetail-dataMember dxrd-wizard-page-treelist-accordion-style dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\', height: \'auto\' }"> <div data-bind="treelist: _dataMemberFieldListModel" style="width:100%; height: 100%;"></div> </div> </div>',
    'dxrd-page-masterdetail-select-reportdata-fieldMembers': '<div class="dxrd-wizard-reportdata-column"> <div class="dxrd-wizard-reportdata-title" data-bind="text: _selectDataFieldsCaption"></div> <div class="dxrd-wizard-add-queries-page dxrd-wizard-masterdetail-fields dxrd-wizard-page-treelist-accordion-style dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\', height: \'auto\' }"> <div data-bind="treelist: _fieldMemberFieldListModel" style="width:100%; height: 100%;"></div> </div> </div>',
    'dxrd-page-masterdetail-select-dataMembers': '<div class="dxrd-wizard-page dxrd-wizard-masterdetail-select-reportdata-page"> <!-- ko template: { name: "dxrd-page-masterdetail-select-reportdata-dataMembers", data: $data }--> <!-- /ko --> </div>',
    'dxrd-page-masterdetail-select-fieldMembers': '<div class="dxrd-wizard-page dxrd-wizard-masterdetail-select-reportdata-page"> <!-- ko template: { name: "dxrd-page-masterdetail-select-reportdata-fieldMembers", data: $data }--> <!-- /ko --> </div>',
    'dxrd-page-masterdetail-summary-section': '<div class="dxrd-wizard-page dxrd-wizard-masterdetail-summary-options-page"> <div class="dxrd-wizard-masterdetail-summary-options-content"> <div class="dxrd-wizard-list-container"> <div class="dxrd-wizard-list dx-default-border-style dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\', height: \'100%\' }"> <div class="dxrd-wizard-field-infos dxrd-wizard-field-infos-paragraf dxd-border-secondary"> <div class="dxrd-wizard-field-infos-fields dxd-wizard-title-back-color dxd-back-secondary dxd-border-secondary" data-bind="text: _fieldsCaption, attr:{\'title\': _fieldsCaption }"></div> <div class="dxrd-wizard-field-infos-values dxd-wizard-title-back-color dxd-back-secondary dxd-border-secondary" data-bind="text: _summaryFunctionCaption, attr:{\'title\': _summaryFunctionCaption }"></div> <div class="dxrd-wizard-field-infos-removebtn dxd-wizard-title-back-color dxd-back-secondary"></div> </div> <div data-bind="foreach: _summaryInfos"> <div class="dxrd-wizard-field-infos dxd-border-secondary"> <div class="dxrd-wizard-field-infos-fields dxd-wizard-title-back-color dxd-back-secondary dxd-border-secondary"> <div data-bind="dxFieldListPicker: { itemsProvider: $parent._fieldListProvider, acceptCustomValue: false, value: selectedPath, displayValue: displayName, placeholder: $root.dx._static.selectPlaceholder() }"> </div> </div> <div class="dxrd-wizard-field-infos-values dxd-wizard-title-back-color dxd-back-secondary dxd-border-secondary"> <!-- ko template: { name: "dxrd-multivalue", data: $data } --> <!--/ko--> </div> <div class="dxrd-wizard-field-infos-removebtn dxd-wizard-title-back-color dxd-back-secondary"> <div data-bind="dxButton: { icon: \'close\', onClick: function () { return $parent._removeSummaryInfo($data);  }}"></div> </div> </div> </div> </div> </div> </div> <div class="dxrd-wizard-ignore-null-values" data-bind="dxCheckBox: { value: ignoreNullValues, text: _ignoreNullValuesCaption }"></div> </div>',
    'dxrd-page-masterdetail-summary': '<div class="dxrd-wizard-page dxrd-wizard-masterdetail-summary-options-page"> <div class="dxrd-wizard-masterdetail-summary-options-title"> <!-- ko template: { name: \'dxrd-wizard-report-tree\', data: { items: $data._reportTree, value: $data._currentPath  } }--> <!-- /ko --> </div> <div class="dxrd-wizard-masterdetail-summary-options-content"> <div class="dxrd-wizard-list-title" data-bind="text: _selectFieldToSummaryCaption"></div> <div class="dxrd-wizard-list-container"> <div class="dxrd-wizard-list dx-default-border-style dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\', height: \'100%\' }"> <div class="dxrd-wizard-field-infos dxrd-wizard-field-infos-paragraf dxd-border-secondary"> <div class="dxrd-wizard-field-infos-fields dxd-wizard-title-back-color dxd-back-secondary dxd-border-secondary" data-bind="text: _fieldsCaption"></div> <div class="dxrd-wizard-field-infos-values dxd-wizard-title-back-color dxd-back-secondary dxd-border-secondary" data-bind="text: _summaryFunctionCaption"></div> <div class="dxrd-wizard-field-infos-removebtn dxd-wizard-title-back-color dxd-back-secondary"></div> </div> <div data-bind="foreach: _summaryInfos"> <div class="dxrd-wizard-field-infos dxd-border-secondary"> <div class="dxrd-wizard-field-infos-fields dxd-wizard-title-back-color dxd-back-secondary dxd-border-secondary"> <div data-bind="dxSelectBox: { dataSource: $parent._displayedFields[$parent._currentPath()], itemTemplate: \'visibleItems\', displayExpr: \'displayName\', value: field, placeholder: $root.dx._static.selectPlaceholder(), dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"> <div data-options="dxTemplate:{ name:\'visibleItems\' }" style="text-align: left;"> <!-- ko if: visible--> <div data-bind="text: name"></div> <!--/ko--> </div> </div> </div> <div class="dxrd-wizard-field-infos-values dxd-wizard-title-back-color dxd-back-secondary dxd-border-secondary"> <!-- ko template: { name: "dxrd-multivalue", data: $data } --> <!--/ko--> </div> <div class="dxrd-wizard-field-infos-removebtn dxd-wizard-title-back-color dxd-back-secondary"> <div data-bind="dxButton: { icon: \'close\', onClick: function () { return $parent._removeSummaryInfo($data);  }}"></div> </div> </div> </div> </div> </div> </div> <div class="dxrd-wizard-ignore-null-values" data-bind="dxCheckBox: { value: ignoreNullValues, text: _ignoreNullValuesCaption }"></div></div>',
    'dxrd-page-pageSetup': '<div class="dxrd-wizard-page dxrd-page-setup-page"> <!-- ko template: { name: \'dxrd-page-setup-page-preview\', data: $data }--> <!-- /ko --> <!-- ko template: { name: \'dxrd-page-setup-page-settings\', data: $data }--> <!-- /ko --> </div>',
    'dxrd-page-setup-page-preview': '<div class="dxrd-wizard-preview dxd-back-secondary"> <!-- ko with: $data.previewPageHelper --> <div style="width:100%; height:100%; position:relative" data-bind="cacheElement: { action: function(element) { $data.cachePagePreviewElement(element); } }"> <div class="dxrd-wizard-preview-page" data-bind="styleunit: { width: $data.previewPageWidth(), height: $data.previewPageHeight() }"> <div class="dxrd-wizard-preview-margin-top" data-bind="styleunit: { top: $data.previewTopMargin() }"></div> <div class="dxrd-wizard-preview-margin-right" data-bind="styleunit: { right: $data.previewRightMargin() }"></div> <div class="dxrd-wizard-preview-margin-bottom" data-bind="styleunit: { bottom: $data.previewBottomMargin() }"></div> <div class="dxrd-wizard-preview-margin-left" data-bind="styleunit: { left: $data.previewLeftMargin() }"></div> </div> </div> <!-- /ko --> </div>',
    'dxrd-page-setup-groups': '<div class="dxrd-page-setup-group"> <div class="dxrd-page-setup-group-caption dxd-back-primary" data-bind="text: $root.getLocalization(\'Paper\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_Paper\')"></div> <div class="dx-fieldset dxrd-page-setup-long-group"> <div class="dx-field"> <div class="dx-field-label dxd-text-primary" data-bind="text: $root.getLocalization(\'Size:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_Size\'), attr: { \'title\': $root.getLocalization(\'Size:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_Size\') }"></div> <div class="dx-field-value" data-bind="dxSelectBox: { items: lookupData.paperKind, valueExpr: \'value\', displayExpr: \'displayName\', value: paperKind, dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"></div> </div> </div> <div class="dxrd-page-setup-setting"> <div class="dx-fieldset dxrd-group-fieldset dxrd-page-setup-short-group"> <div class="dx-field"> <div class="dx-field-label dxd-text-primary" data-bind="text: $root.getLocalization(\'Unit:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_Unit\'), attr: { \'title\': $root.getLocalization(\'Unit:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_Unit\') }"></div> <div class="dx-field-value" data-bind="dxSelectBox: { items: lookupData.unit, valueExpr: \'value\', displayExpr: \'displayName\', value: unit, dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"></div> </div> <div class="dx-field dxrd-page-setup-pagemode-compact"> <div class="dx-field-label dxd-text-primary" data-bind="text: $root.getLocalization(\'Orientation:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_Orientation\'), attr: { \'title\': $root.getLocalization(\'Orientation:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_Orientation\') }"></div> <div class="dx-field-value" data-bind="dxLocalizedSelectBox: { items: [ { value: true, displayName: \'Landscape\', localizationId: \'ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Landscape\'}, { value: false, displayName: \'Portrait\', localizationId:\'ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Portrait\' }], valueExpr: \'value\', displayExpr: \'displayName\', value: $data.landscape, dropDownOptions: { container: $root.getPopupContainer($element) } }"></div> </div> <div class="dx-field"> <div class="dx-field-label dxd-text-primary" data-bind="text: $root.getLocalization(\'Width:\', \'ASPxReportsStringId.ReportDesigner_Wizard_Width\'), attr: { \'title\': $root.getLocalization(\'Width:\', \'ASPxReportsStringId.ReportDesigner_Wizard_Width\') }"></div> <div class="dx-field-value" data-bind="dxNumberBox: { value: width, disabled: fixedSize, format: valueFormat, min: 0 }"></div> </div> <div class="dx-field"> <div class="dx-field-label dxd-text-primary" data-bind="text: $root.getLocalization(\'Height:\', \'ASPxReportsStringId.ReportDesigner_Wizard_Height\'), attr: { \'title\': $root.getLocalization(\'Height:\', \'ASPxReportsStringId.ReportDesigner_Wizard_Height\') }"></div> <div class="dx-field-value" data-bind="dxNumberBox: { value: height, disabled: fixedSize, format: valueFormat, min: 0 }"></div> </div> </div> <div class="dxrd-group-fieldset dxrd-page-setup-pagemode"> <div class="dxrd-page-setup-landscape-item dxd-back-primary dxd-state-normal dxd-back-highlighted" style="margin-left: 0px" data-bind="css: { \'dxd-state-no-hover dxd-state-active\': !$data.landscape() }, click: function() { $data.landscape(false); }"> <div class="dxrd-page-setup-landscape-item-icon" data-bind="template:\'dxrd-svg-portrait\'"></div> </div> <div class="dxrd-page-setup-landscape-item dxd-back-primary dxd-state-normal dxd-back-highlighted" data-bind="css: { \'dxd-state-no-hover dxd-state-active\': $data.landscape() }, click: function() { $data.landscape(true); }"> <div class="dxrd-page-setup-landscape-item-icon" data-bind="template:\'dxrd-svg-landscape\'"></div> </div> </div> </div> </div> <div class="dxrd-page-setup-group" style="margin-top: 16px;"> <div class="dxrd-page-setup-group-caption dxd-back-primary" data-bind="text: $root.getLocalization(\'Page Margins\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_PageMargins\')"></div> <div class="dxrd-page-setup-setting dxrd-page-setup-setting-page-margins"> <div class="dx-fieldset dxrd-group-fieldset dxrd-group-fieldset-left"> <div class="dx-field"> <div class="dx-field-label dxd-text-primary" data-bind="text: $root.getLocalization(\'Left:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_LeftMargin\'), attr: { \'title\': $root.getLocalization(\'Left:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_LeftMargin\') }"></div> <div class="dx-field-value" data-bind="dxNumberBox: { value: marginLeft, format: valueFormat, min: 0, max: width() - marginRight() }"></div> </div> <div class="dx-field"> <div class="dx-field-label dxd-text-primary" data-bind="text: $root.getLocalization(\'Top:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_TopMargin\'), attr: { \'title\': $root.getLocalization(\'Top:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_TopMargin\') }"></div> <div class="dx-field-value" data-bind="dxNumberBox: { value: marginTop, format: valueFormat, min: 0, max: height() - marginBottom() }"></div> </div> </div> <div class="dx-fieldset dxrd-group-fieldset dxrd-group-fieldset-right"> <div class="dx-field"> <div class="dx-field-label dxd-text-primary" data-bind="text: $root.getLocalization(\'Right:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_RightMargin\'), attr: { \'title\': $root.getLocalization(\'Right:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_RightMargin\') }"></div> <div class="dx-field-value" data-bind="dxNumberBox: { value: marginRight, format: valueFormat, min: 0, max: width() - marginLeft() }"></div> </div> <div class="dx-field"> <div class="dx-field-label dxd-text-primary" data-bind="text: $root.getLocalization(\'Bottom:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_BottomMargin\'), attr: { \'title\': $root.getLocalization(\'Bottom:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PageSetup_BottomMargin\') }"></div> <div class="dx-field-value" data-bind="dxNumberBox: { value: marginBottom, format: valueFormat, min: 0, max: height() - marginTop()  }"></div> </div> </div> </div> </div>',
    'dxrd-page-setup-page-settings': '<div class="dxrd-page-setup-content"> <!-- ko template: { name: \'dxrd-page-setup-groups\', data: $data }--> <!-- /ko --> </div>',
    'dxrd-page-pageSetupAndColorScheme': '<div class="dxrd-wizard-page dxrd-page-setup-page"> <div class="dxrd-page-setup-content"> <!-- ko template: { name: \'dxrd-page-setup-groups\', data: $data._configureReportPageSettingsPage }--> <!-- /ko --> <!-- ko if: $data._colorSchemePageVisible --> <div class="dxrd-page-setup-group dxrd-page-color-setup-group"> <div class="dxrd-page-setup-group-caption dxd-back-primary" data-bind="text: $root.getLocalization(\'Color Scheme\', \'ASPxReportsStringId.ReportDesigner_Wizard_ColorScheme\')"></div> <div class="dxrd-page-setup-setting"> <!-- ko template: { name: \'dxrd-page-colorScheme-content\', data: $data._colorSchemePage } --> <!-- /ko --> </div> </div> <!-- /ko --> </div> </div>',
    'dxrd-page-pageSetup-settings': '<div class="dxrd-wizard-page dxrd-page-setup-page"> <!-- ko template: { name: "dxrd-page-setup-page-settings", data: $data }--> <!-- /ko --> </div>',
    'dxrd-page-pageSetup-preview': '<div class="dxrd-wizard-page dxrd-page-setup-page"> <!-- ko template: { name: "dxrd-page-setup-page-colored-preview", data: $data }--> <!-- /ko --> </div>',
    'dxrd-page-setup-page-colored-preview': '<div class="dxrd-wizard-preview dxd-back-secondary"> <!-- ko if: $data._reportTitleVisible --> <div class="dxrd-wizard-preview-reporttitle" data-bind="dxTextBox: { value: reportTitle, placeholder: _reportTitlePlaceholder() }, styleunit: { width: $data._previewPageHelper.previewPageWidth() }"></div> <!-- /ko --> <div class="dxrd-wizard-preview-pagecontainer" data-bind="cacheElement: { action: function(element) { $data._previewPageHelper.cachePagePreviewElement(element); } }"> <div class="dxrd-wizard-preview-page" data-bind="styleunit: { width: $data._previewPageHelper.previewPageWidth(), height: $data._previewPageHelper.previewPageHeight() }"> <div class="dxrd-wizard-preview-margin-top" data-bind="styleunit: { top: $data._previewPageHelper.previewTopMargin() }"></div> <div class="dxrd-wizard-preview-margin-right" data-bind="styleunit: { right: $data._previewPageHelper.previewRightMargin() }"></div> <div class="dxrd-wizard-preview-margin-bottom" data-bind="styleunit: { bottom: $data._previewPageHelper.previewBottomMargin() }"></div> <div class="dxrd-wizard-preview-margin-left" data-bind="styleunit: { left: $data._previewPageHelper.previewLeftMargin() }"></div> <div data-bind="styleunit: { top: $data._previewPageHelper.previewTopMargin(),  right: $data._previewPageHelper.previewRightMargin(),  bottom: $data._previewPageHelper.previewBottomMargin(),  left: $data._previewPageHelper.previewLeftMargin() }"> <div class="dxrd-wizard-rows-container"> <!-- ko foreach: _masterDetailInfo --> <div class="dxrd-wizard-preview-row"> <!-- ko foreach: fields --> <div class="dxrd-wizard-preview-column" data-bind="style: {  backgroundColor: $parents[1]._color, width: 100/$parent.fields.length + \'%\', color: $parents[1]._foreColor }, text: displayName"></div> <!-- /ko --> </div> <div class="dxrd-wizard-preview-row"> <!-- ko foreach: fields --> <div class="dxrd-wizard-preview-column" data-bind="style: { width: 100/$parent.fields.length + \'%\' }, text: \'[\' + name + \']\'"></div> <!-- /ko --> </div> <!-- /ko --> </div> </div> </div> </div> </div>',
    'dxrd-page-reportLayoutType': '<div class="dxrd-wizard-page dxrd-report-layout-type-page"> <div style="text-align: center"> <div class="dxrd-report-layout-type-items" data-bind="css: { \'dxrd-report-layout-type-five-items\': layoutTypeItems()[0].margin == 1 }"> <div> <div data-bind="dxRadioGroup: { value: selectedPageOrientation, items: pageOrientationItems, layout: \'horizontal\' }"> <div data-options="dxTemplate : { name: \'text\' }"> <div data-bind="text: $data"></div> </div> </div> </div> <!-- ko foreach: layoutTypeItems --> <div class="dx-background-inheritor dxd-back-highlighted dxd-state-selected"> <div class="dxrd-report-layout-type-item dx-fontsize-reestablished dxd-list-item-back-color" data-bind="event: { click: $parent.layoutTypeItemClick }, css: { \'dxd-state-selected dxd-border-secondary dxd-back-secondary\': $parent.isSelected($data) }, style: { margin: \'0 \' + margin + \'px\' }"> <div data-bind="attr: { class: imageClassName }"></div> <div data-bind="text: text" class="dxrd-report-layout-type-text"></div> </div> </div> <!-- /ko --> <div style="clear:both"></div> <div data-bind="dxCheckBox: { value: fitFieldsToPage, text: $root.getLocalization(\'Adjust the field width so all fields fit onto a page\', \'ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_AdjustFieldWidth\') }"></div> </div> </div></div>',
    'dxrd-page-reportStyle': '<div class="dxrd-wizard-page dxrd-wizard-report-style-page"> <div class="dxrd-wizard-report-style-image-container"> <div data-bind="attr: { class: selectedReportStyle().className }"> <div class="title" style="margin-bottom: 18px;" data-bind="text: $root.getLocalization(\'Title\', \'ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Title\')"></div> <div class="caption" style="margin-bottom: 4px;" data-bind="text: $root.getLocalization(\'Caption\', \'ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Caption\')"></div> <div class="data" data-bind="text: $root.getLocalization(\'Data\', \'ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Data\')"></div> </div> </div> <div class="dxrd-wizard-report-style-items" data-bind="dxRadioGroup: { value: selectedReportStyle, items: reportStyleItems }"> <div data-options="dxTemplate : { name: \'item\' }"> <div data-bind="text: text"></div> </div> </div></div>',
    'dxrd-page-reportTitle': '<div style="width: 272px; position: relative; top: 38%; margin: 0 auto;"> <div style="margin-bottom: 5px;" data-bind="text: $root.getLocalization(\'Specify the report\\\'s title\', \'ASPxReportsStringId.ReportDesigner_Wizard_SpecifyReportTitle\')"></div> <div data-bind="dxTextBox: { value: reportTitle, width: 270 }"></div></div>',
    'dxrd-page-selectPredefinedLabels': '<div class="dxrd-wizard-page"> <div class="dxrd-wizard-selectlabelproduct-page dxd-border-secondary"> <div class="dxrd-wizard-selectlabelproduct-list"> <div class="dxrd-wizard-selectlabelproduct-list-label" data-bind="text: $root.getLocalization(\'Label Product:\', \'ASPxReportsStringId.ReportDesigner_Wizard_LabelProduct\')"></div> <div data-bind="dxSelectBox: { items: _labelData.labelProducts, displayExpr: \'name\', value: _selectedLabelProduct, dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"></div> <div class="dxrd-wizard-selectlabelproduct-list-label" data-bind="text: $root.getLocalization(\'Product Number:\', \'ASPxReportsStringId.ReportDesigner_Wizard_ProductNumber\')"></div> <div data-bind="dxSelectBox: { dataSource: _labelDetails, displayExpr: \'name\', value: _selectedLabelDetails, dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true  }"></div> </div> <div class="dxrd-wizard-selectproduct-props"> <div> <span data-bind="text: $root.getLocalization(\'Width:\', \'ASPxReportsStringId.ReportDesigner_Wizard_Width\')"></span> <span data-bind="text: _width"></span> </div> <div> <span data-bind="text: $root.getLocalization(\'Height:\', \'ASPxReportsStringId.ReportDesigner_Wizard_Height\')"></span> <span data-bind="text: _height"></span> </div> <div> <span data-bind="text: $root.getLocalization(\'Paper Type:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PaperType\')"></span> <span data-bind="text: _paperType"></span> </div> <div> <span data-bind="text: $root.getLocalization(\'Paper Size:\', \'ASPxReportsStringId.ReportDesigner_Wizard_PaperSize\')"></span> <span data-bind="text: _pageSizeText"></span> </div> </div> </div></div>',
    'dxrd-page-summaryOptions': '<div class="dxrd-wizard-summary-options-page"> <div class="dxrd-wizard-summary-options-titles dxrd-wizard-dataMember dxd-wizard-title-back-color dxd-back-secondary dxd-border-secondary"> <div data-bind="text: $root.getLocalization(\'Average\', \'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Average\')"></div> <div data-bind="text: $root.getLocalization(\'Count\', \'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Count\')"></div> <div data-bind="text: $root.getLocalization(\'Max\', \'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Max\')"></div> <div data-bind="text: $root.getLocalization(\'Min\', \'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Min\')"></div> <div data-bind="text: $root.getLocalization(\'Sum\', \'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Sum\')"></div> </div> <div class="dxrd-wizard-summary-content dxrd-wizard-dataMember dxd-border-secondary" data-bind="dxScrollView: { }"> <div class="dxrd-wizard-summary-columns dxd-border-secondary"> <!-- ko foreach: summaryOptions --> <div class="dxrd-wizard-summary-column-name" data-bind="text: columnName, attr: { title: columnName }"></div> <!-- /ko --> </div> <div class="dxrd-wizard-summary-options"> <!-- ko foreach: summaryOptions --> <div class="dxrd-wizard-summary-options-values"> <div data-bind="dxCheckBox: { value: avg }"></div> <div data-bind="dxCheckBox: { value: count }"></div> <div data-bind="dxCheckBox: { value: max }"></div> <div data-bind="dxCheckBox: { value: min }"></div> <div data-bind="dxCheckBox: { value: sum }"></div> </div> <!-- /ko --> </div> </div> <div class="dxrd-wizard-ignore-null-values" data-bind="dxCheckBox: { value: ignoreNullValues, text: $root.getLocalization(\'Ignore null values\', \'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_IgnoreNullValues\') }"></div></div>',
});


/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(422);
__export(__webpack_require__(422));


/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(386);
__export(__webpack_require__(386));


/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(373);
__webpack_require__(320);
__webpack_require__(155);
__webpack_require__(371);
__webpack_require__(372);
__webpack_require__(317);
__webpack_require__(330);
__webpack_require__(419);
__webpack_require__(420);
__export(__webpack_require__(373));
__export(__webpack_require__(320));
__export(__webpack_require__(155));
__export(__webpack_require__(371));
__export(__webpack_require__(372));
__export(__webpack_require__(317));
__export(__webpack_require__(330));
__export(__webpack_require__(419));
__export(__webpack_require__(420));


/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(298);
__webpack_require__(217);
__webpack_require__(225);
__webpack_require__(403);
__webpack_require__(12);
__webpack_require__(156);
__export(__webpack_require__(298));
__export(__webpack_require__(217));
__export(__webpack_require__(225));
__export(__webpack_require__(403));
__export(__webpack_require__(12));
__export(__webpack_require__(156));


/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(424);
__webpack_require__(425);
__webpack_require__(426);
__webpack_require__(80);
__webpack_require__(427);
__webpack_require__(236);
__webpack_require__(278);
__webpack_require__(9);
__webpack_require__(428);
__webpack_require__(172);
__webpack_require__(241);
__webpack_require__(429);
__webpack_require__(430);
__webpack_require__(431);
__webpack_require__(432);
__webpack_require__(433);
__webpack_require__(434);
__webpack_require__(216);
__webpack_require__(465);
__webpack_require__(268);
__webpack_require__(435);
__webpack_require__(436);
__webpack_require__(437);
__webpack_require__(79);
__webpack_require__(292);
__webpack_require__(438);
__webpack_require__(466);
__webpack_require__(412);
__webpack_require__(439);
__webpack_require__(441);
var registerEditors_1 = __webpack_require__(515);
registerEditors_1.registerEditors();
__export(__webpack_require__(424));
__export(__webpack_require__(425));
__export(__webpack_require__(426));
__export(__webpack_require__(80));
__export(__webpack_require__(427));
__export(__webpack_require__(236));
__export(__webpack_require__(278));
__export(__webpack_require__(9));
__export(__webpack_require__(428));
__export(__webpack_require__(172));
__export(__webpack_require__(241));
__export(__webpack_require__(429));
__export(__webpack_require__(430));
__export(__webpack_require__(431));
__export(__webpack_require__(432));
__export(__webpack_require__(433));
__export(__webpack_require__(434));
__export(__webpack_require__(216));
__export(__webpack_require__(465));
__export(__webpack_require__(268));
__export(__webpack_require__(435));
__export(__webpack_require__(436));
__export(__webpack_require__(437));
__export(__webpack_require__(79));
__export(__webpack_require__(292));
__export(__webpack_require__(438));
__export(__webpack_require__(466));
__export(__webpack_require__(412));
__export(__webpack_require__(439));
__export(__webpack_require__(441));


/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_1 = __webpack_require__(4);
var nameEditor_1 = __webpack_require__(435);
var formatStringEditor_1 = __webpack_require__(432);
var dataSourceEditor_1 = __webpack_require__(427);
var propertyGridEditors_1 = __webpack_require__(437);
var explorerEditors_1 = __webpack_require__(428);
var reportComplexExpressionEditor_1 = __webpack_require__(429);
var reportExpressionEditor_1 = __webpack_require__(241);
var reportUrlEditor_1 = __webpack_require__(438);
var bandEditors_1 = __webpack_require__(425);
var formattingRuleEditor_1 = __webpack_require__(433);
var undoEditors_1 = __webpack_require__(441);
var chartValueBindingEditor_1 = __webpack_require__(426);
var pivotGridCriteriaEditor_1 = __webpack_require__(436);
var fieldsComboboxEditor_1 = __webpack_require__(431);
var expressionableFontEditor_1 = __webpack_require__(430);
var dataSourceSelectBox_1 = __webpack_require__(236);
var editorTemplates_1 = __webpack_require__(9);
var gaugeStyleEditor_1 = __webpack_require__(434);
var summaryEditor_1 = __webpack_require__(439);
var _bandLevelEditor_1 = __webpack_require__(421);
var _editorTemplates_1 = __webpack_require__(22);
var analytics_widgets_2 = __webpack_require__(4);
function registerEditors() {
    editorTemplates_1.designerEditorTemplates.registerEditors({
        formatEditor: { header: 'dxrd-formatstring', editorType: formatStringEditor_1.FormatStringEditor },
        dataSource: { header: 'dxrd-datasource', editorType: dataSourceEditor_1.DataSourceEditor },
        dataBindings: { header: 'dxrd-dataBindings', content: 'dxrd-dataBindingsContent', editorType: propertyGridEditors_1.DataBindingsEditor },
        dataBinding: { header: 'dxrd-dataBinding', content: 'dxrd-dataBindingContent', editorType: propertyGridEditors_1.DataBindingEditor },
        reportExplorer: { header: 'dxrd-reportexplorer-editor', editorType: explorerEditors_1.ExplorerEditor },
        reportSourceUrl: { header: 'dxrd-reportSourceUrl', editorType: reportUrlEditor_1.ReportUrlEditor },
        bands: { header: 'dxrd-bands', editorType: bandEditors_1.BandsEditor },
        runningBand: { header: 'dxrd-bands', editorType: bandEditors_1.RunningBandEditor },
        sortingBand: { header: 'dxrd-bands', content: 'dx-objectEditorContent', editorType: bandEditors_1.SortingBandEditor },
        style: { header: 'dxrd-style', content: 'dxrd-styleContent' },
        stylePriority: { header: 'dxrd-stylePriority' },
        contentByType: { header: 'dxrd-content-type', content: 'dx-objectEditorContent', editorType: propertyGridEditors_1.ContentByTypeEditor },
        lookUpValues: { custom: 'dxrd-lookUpValues' },
        reportexpression: { header: 'dxrd-reportexpression', editorType: reportExpressionEditor_1.ReportExpressionEditor },
        reportexpressionComplex: { header: 'dxrd-reportexpression-complex', editorType: reportComplexExpressionEditor_1.ReportComplexExpressionEditor },
        drillDownControls: { header: 'dxrd-reportexplorer-editor', editorType: explorerEditors_1.DrillDownEditor },
        pivotGridFields: { custom: 'dxrd-pivotGridFields' },
        scriptsBox: { header: 'dxrd-scriptsbox' },
        formattingRule: { custom: 'dxrd-formattingRuleCollection', editorType: formattingRuleEditor_1.FormattingRuleEditor },
        toclevel: { custom: 'dxrd-levelCollection' },
        calculatedFields: { custom: 'dxrd-calculatedFields' },
        parameters: { custom: 'dxrd-parameters' },
        reportRtlProperty: { header: 'dxrd-reportRtlProperty' },
        comboboxUndo: { header: 'dx-combobox-undo', editorType: undoEditors_1.ComboboxUndoEditor },
        comboboxPageBreak: { header: 'dx-combobox', editorType: bandEditors_1.PageBreakBandEditor },
        fontUndo: { header: 'dx-emptyHeader', content: 'dx-objectEditorContentUndo', editorType: propertyGridEditors_1.FontEditorUndo },
        chartValueBinding: { header: 'dxrd-chartValueBinding', editorType: chartValueBindingEditor_1.ChartValueBindingEditor },
        name: { header: 'dxrd-name', editorType: nameEditor_1.NameEditor },
        bandLevel: { header: 'dx-numeric-undo', editorType: _bandLevelEditor_1.BandLevelEditor },
        pivotCriteria: { header: 'dxrd-pivotcriteria', editorType: pivotGridCriteriaEditor_1.PivotGridCriteriaEditor },
        fieldsCombobox: { header: 'dxrd-fields-combobox', editorType: fieldsComboboxEditor_1.FieldsComboboxEditor },
        richTextLoad: { header: 'dxrd-richtext-loadfile', editorType: analytics_widgets_1.Editor },
        summaryEditor: { header: 'dxrd-summaryeditor-header', content: 'dxrd-objectEditorContent', editorType: summaryEditor_1.SummaryEditor },
        expressionableFont: { header: 'dx-emptyHeader', content: 'dx-objectEditorContent', editorType: expressionableFontEditor_1.ExpressionableFontEditor },
        fontModificatorsHighlightable: { custom: 'dx-modificators-highlightable' },
        parametersCheckbox: { custom: 'dxrd-parameters-checkbox' },
        dataSourceSelectBox: { header: 'dxrd-datasource-combobox', editorType: dataSourceSelectBox_1.DataSourceSelectBox },
        localizationSelectBox: { header: 'dxrd-localization-combobox', editorType: dataSourceSelectBox_1.DataSourceSelectBox },
        pdfContentLoad: { header: 'dxrd-pdfcontent-loadfile', editorType: analytics_widgets_1.Editor },
        viewStyle: { header: 'dxrd-viewStyle', editorType: gaugeStyleEditor_1.GaugeStyleEditor }
    });
    _editorTemplates_1.editorTemplates.getEditor('dataMemberChart').header = analytics_widgets_2.editorTemplates.getEditor('dataMember').header;
    _editorTemplates_1.editorTemplates.getEditor('fieldChart').header = analytics_widgets_2.editorTemplates.getEditor('field').header;
    _editorTemplates_1.editorTemplates.getEditor('valueDataMember').header = analytics_widgets_2.editorTemplates.getEditor('field').header;
}
exports.registerEditors = registerEditors;


/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(440);
__export(__webpack_require__(440));


/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(232);
__webpack_require__(359);
__webpack_require__(14);
__webpack_require__(148);
__webpack_require__(18);
__webpack_require__(105);
__webpack_require__(518);
__webpack_require__(339);
__webpack_require__(519);
__webpack_require__(367);
__webpack_require__(369);
__webpack_require__(370);
__webpack_require__(102);
__webpack_require__(351);
__webpack_require__(24);
__webpack_require__(103);
__webpack_require__(226);
__webpack_require__(352);
__webpack_require__(227);
__webpack_require__(355);
__webpack_require__(151);
__webpack_require__(152);
__webpack_require__(154);
__webpack_require__(231);
__webpack_require__(344);
__webpack_require__(230);
__webpack_require__(341);
__webpack_require__(342);
__webpack_require__(343);
__webpack_require__(233);
__webpack_require__(356);
__webpack_require__(347);
__webpack_require__(349);
__webpack_require__(353);
__webpack_require__(350);
__webpack_require__(354);
__webpack_require__(348);
__webpack_require__(357);
__webpack_require__(363);
__webpack_require__(366);
__webpack_require__(368);
__webpack_require__(364);
__webpack_require__(362);
__webpack_require__(361);
__export(__webpack_require__(232));
__export(__webpack_require__(359));
__export(__webpack_require__(14));
__export(__webpack_require__(148));
__export(__webpack_require__(18));
__export(__webpack_require__(105));
__export(__webpack_require__(339));
__export(__webpack_require__(367));
__export(__webpack_require__(369));
__export(__webpack_require__(370));
__export(__webpack_require__(102));
__export(__webpack_require__(351));
__export(__webpack_require__(24));
__export(__webpack_require__(103));
__export(__webpack_require__(226));
__export(__webpack_require__(352));
__export(__webpack_require__(227));
__export(__webpack_require__(355));
__export(__webpack_require__(151));
__export(__webpack_require__(152));
__export(__webpack_require__(154));
__export(__webpack_require__(231));
__export(__webpack_require__(344));
__export(__webpack_require__(230));
__export(__webpack_require__(341));
__export(__webpack_require__(342));
__export(__webpack_require__(343));
__export(__webpack_require__(233));
__export(__webpack_require__(356));
__export(__webpack_require__(347));
__export(__webpack_require__(349));
__export(__webpack_require__(353));
__export(__webpack_require__(350));
__export(__webpack_require__(354));
__export(__webpack_require__(348));
__export(__webpack_require__(357));
__export(__webpack_require__(363));
__export(__webpack_require__(366));
__export(__webpack_require__(368));
__export(__webpack_require__(364));
__export(__webpack_require__(362));
__export(__webpack_require__(361));


/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DesignerControlsRichEdit = __webpack_require__(521);
var DesignerControlsRichEditInternal = __webpack_require__(526);
var DesignerControlsRichEditInternalToolbar = __webpack_require__(527);
function _addRichToBundle(bundle) {
    bundle.Reporting.Designer.Controls.RichEdit = DesignerControlsRichEdit;
    bundle.Reporting.Designer.Controls.RichEdit.Internal = DesignerControlsRichEditInternal;
    bundle.Reporting.Designer.Controls.RichEdit.Internal.Toolbar = DesignerControlsRichEditInternalToolbar;
    return bundle;
}
exports._addRichToBundle = _addRichToBundle;


/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(522);
__webpack_require__(460);
__webpack_require__(106);
__webpack_require__(69);
__webpack_require__(442);
__webpack_require__(525);
__webpack_require__(445);
__webpack_require__(446);
__export(__webpack_require__(106));
__export(__webpack_require__(446));
__export(__webpack_require__(445));


/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_widgets_internal_1 = __webpack_require__(8);
analytics_widgets_internal_1.SvgTemplatesEngine.addTemplates({
    'dxrd-rich-edit': '<div style="width:100%; height: 100%" data-bind="css: className"> <div data-bind="visible: visible"> <!-- ko with: getToolbar() --> <!-- ko template: { name: template, data: $data }--> <!-- /ko --> <!-- /ko --> </div> </div>',
    'dxrd-richedit-toolbar': '<div style="z-index: 0; position: absolute;" data-bind="dxPopover: { width: \'auto\', height: \'auto\', position: { my: \'right center\', at: \'left center\', boundary: \'.dxrd-designer-wrapper\', of: getPositionTarget($element), collision: \'flip fit\', offset: \'-10 0\' }, container: getPopupContainer($element), onContentReady: onContentReady, closeOnOutsideClick: closeOnOutsideClick, closeOnTargetScroll: false, showTitle: false, target: getPositionTarget($element), showCloseButton: false, shading: false, visible: visible, animation: {} }"> <div class="dxrd-rich-toolbar-popover-content"> <!-- ko foreach: componentCollection --> <!-- ko if: $data.visible --> <!-- ko template: { name: $data.template, data: $data } --> <!-- /ko --> <!-- /ko --> <!-- /ko --> </div> </div>',
    'dxrd-rich-edit-toolbar-component-collection': '<div class="dxrd-toolbar-elements-line"> <!-- ko if: $index() !== 0 --> <div class="dxrd-toolbar-elements-line-bottom dxd-border-secondary"></div> <!-- /ko --> <!-- ko if: $data.showTitle() --> <div class="dxrd-rich-toolbar-header" data-bind="text: $data.showTitle();"></div> <!-- /ko --> <div class="dxrd-rich-toolbar-value"> <!-- ko foreach: { data: $data.items } --> <!-- ko if: $data.visible --> <!-- ko template: { name: $data.template, data: $data } --> <!-- /ko --> <!-- /ko --> <!-- /ko --> </div> </div>',
    'dxrd-rich-edit-toolbar-button-group': '<div data-bind="dxButtonGroup:{ items: items, keyExpr: itemKey, selectedItems: selectedItems, selectionMode: selectionMode, stylingMode: \'text\', focusStateEnabled: false}"></div>',
    'dxrd-button-with-template': '<div data-bind="dxButton: { onClick: $data.clickAction, icon: $data.icon, hint: $data.hint, stylingMode: \'text\', focusStateEnabled: false }"></div>',
    'dxrd-richEdit-toolbar-colorpicker': '<div data-bind="dxColorBox: { value: value, popupPosition: { collision: \'flipfit flipfit\' }, focusStateEnabled: false }"></div>',
    'dxrd-rich-toolbar-combobox': '<div data-bind="dxLocalizedSelectBox: { dataSource: items, value: value, focusStateEnabled: false, searchEnabled: !supportCustomValue, displayCustomValue: true,  acceptCustomValue: supportCustomValue, openOnFieldClick: !supportCustomValue }, dxValidator: { validationRules: validationRules }"></div>',
    'dxrd-richedit-content': '<div data-bind="css:{ \'dxrd-intersect\': !isValid() }" style="box-sizing: border-box; letter-spacing: normal; width:100%; height: 100%"> <div data-bind="style: { display: isValid()? \'inline\' : \'none\' }"> <div style="width:100%; height: 100%; vertical-align: top;" class="dxrd-control-content dxrd-richedit-readonly" data-bind="style: contentCss"></div> </div> <!-- ko if: !isValid() --> <div data-bind="text: \'Document is not valid\'"></div> <!-- /ko --></div>',
    'dxrd-richedit-selection': '<div class="dxrd-control" data-bind="event: { dblclick: function() { $root.richInlineControl.show($element) } }, visible: selected() || focused(), css: {\'dxrd-selected\': selected, \'dxrd-focused\': focused, \'dxrd-intersect\': isIntersect, \'dxrd-locked\': locked }, resizable: $root.resizeHandler, draggable: $root.dragHandler, styleunit: position, trackCursor: underCursor"> <!-- ko if: selected() --> <div class="dxd-border-accented dxrd-control-border-box" data-bind="style: { \'backgroundColor\': $root.richInlineControl.visible() && selected() ? \'#FFF\' : \'transparent\' }"></div> <!-- /ko --></div><div class="dxrd-control" data-bind="visible: !(selected() && focused()), styleunit: position, trackCursor: underCursor, style:{ overflow: isSelected() ? \'visible\' : \'hidden\'}"> <div class="dxrd-control-content-select-main" data-bind="styleunit: { \'top\': contentSizes().top + (isIntersect() ? 1 : 0), \'left\': contentSizes().left + (isIntersect()? 1 : 0), lineHeight: contentSizes().height, height: contentSizes().height, width: contentSizes().width}"> </div></div><div class="dxrd-control dxrd-richedit-selected" data-bind="styleunit: position, trackCursor: underCursor, style:{ pointerEvents: $root.richInlineControl.visible() && selected() ? \'auto\' : \'none\'  }"> <div class="dxrd-control-content-main" data-bind="styleunit: defaultStyleunit"> <div class="dxrd-richedit-selected-content" data-bind="zoom: _context.zoom(), styleunit: { \'height\': contentHeightWithoutZoom, \'width\': contentWidthWithoutZoom }, dxRichSurface: { inlineEdit: $root.richInlineControl }"> </div> </div></div>',
});


/***/ }),
/* 523 */
/***/ (function(module, exports) {

module.exports = DevExpress.RichEdit;

/***/ }),
/* 524 */
/***/ (function(module, exports) {

module.exports = DevExpress.Reporting.Viewer.Widgets.Internal;

/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var surface_1 = __webpack_require__(446);
var richEdit_1 = __webpack_require__(69);
var _inlineControl_1 = __webpack_require__(448);
var xrRichText_1 = __webpack_require__(97);
var instance_1 = __webpack_require__(106);
richEdit_1.getRichEditSurface(function () {
    var RichEdit = instance_1.getRichEditInstance();
    return !!RichEdit ? surface_1.XRRichModernSurface : xrRichText_1.XRRichSurface;
});
richEdit_1.registerRichEditInline(function (selection) {
    var RichEdit = instance_1.getRichEditInstance();
    return !!RichEdit && new _inlineControl_1.InlineRichEditControl(selection);
});


/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(442);
__webpack_require__(447);
__webpack_require__(448);
__webpack_require__(443);
__webpack_require__(242);
__webpack_require__(243);
__export(__webpack_require__(442));
__export(__webpack_require__(447));
__export(__webpack_require__(448));
__export(__webpack_require__(443));
__export(__webpack_require__(242));
__export(__webpack_require__(243));


/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(444);
__export(__webpack_require__(444));


/***/ })
/******/ ]);