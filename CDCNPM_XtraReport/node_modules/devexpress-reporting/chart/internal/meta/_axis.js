/**
* DevExpress HTML/JS Reporting (chart\internal\meta\_axis.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _common_1 = require("./_common");
var _stripLimit_1 = require("../../components/models/_stripLimit");
var _fillStyle_1 = require("../../components/series/_fillStyle");
var _view_1 = require("./_view");
var _axisXYViewModel_1 = require("../../components/axis/_axisXYViewModel");
var analytics_utils_1 = require("@devexpress/analytics-core/analytics-utils");
var analytics_widgets_1 = require("@devexpress/analytics-core/analytics-widgets");
var _editorTemplates_1 = require("../_editorTemplates");
var minValue = { propertyName: 'minValue', modelName: '@MinValueSerializable', displayName: 'Min Value', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.AxisRange.MinValue' }, maxValue = { propertyName: 'maxValue', modelName: '@MaxValueSerializable', displayName: 'Max Value', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.Range.MaxValue' }, auto = { propertyName: 'auto', modelName: '@Auto', displayName: 'Auto', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraReports.UI.DocumentExportMode.Auto' }, autoSideMargins = { propertyName: 'autoSideMargins', modelName: '@AutoSideMargins', displayName: 'Auto Side Margins', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.Range.AutoSideMargins' }, sideMarginsValue = { propertyName: 'sideMarginsValue', modelName: '@SideMarginsValue', displayName: 'Side Margins Value', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.Range.SideMarginsValue' };
var visualRangeSerializationsInfo = [auto, autoSideMargins, minValue, maxValue, sideMarginsValue], visualRange = { propertyName: 'visualRange', modelName: 'VisualRange', displayName: 'Visual Range', info: visualRangeSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.AxisBase.VisualRange' };
var alwaysShowZeroLevel = { propertyName: 'alwaysShowZeroLevel', modelName: '@AlwaysShowZeroLevel', displayName: 'Always Show Zero Level', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.WholeRange.AlwaysShowZeroLevel' };
var wholeRangeSerializationsInfo = visualRangeSerializationsInfo.concat(alwaysShowZeroLevel), wholeRange = { propertyName: 'wholeRange', modelName: 'WholeRange', displayName: 'Whole Range', info: wholeRangeSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.AxisBase.WholeRange' };
var radarWholeRange = { propertyName: 'radarWholeRange', modelName: 'WholeRange', displayName: 'Whole Range', info: visualRangeSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.AxisBase.WholeRange' };
var dashStyle = {
    propertyName: 'dashStyle', modelName: '@DashStyle', displayName: 'Dash Style', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [{ value: 'Empty', displayValue: 'Empty', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAppearances.Empty' }, { value: 'Solid', displayValue: 'Solid', localizationId: 'DevExpress.XtraCharts.FillMode3D.Solid' }, { value: 'Dash', displayValue: 'Dash', localizationId: 'DevExpress.XtraCharts.DashStyle.Dash' }, { value: 'Dot', displayValue: 'Dot', localizationId: 'DevExpress.XtraCharts.DashStyle.Dot' }, { value: 'DashDot', displayValue: 'DashDot' }, { value: 'DashDotDot', displayValue: 'DashDotDot' }],
    localizationId: 'DevExpress.XtraCharts.LineStyle.DashStyle'
};
var lineStyleSerializationsInfo = [_common_1.thickness, dashStyle], lineStyle = { propertyName: 'lineStyle', modelName: 'LineStyle', displayName: 'Line Style', info: lineStyleSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraReports.UI.XRShape.LineStyle' }, minorLineStyle = { propertyName: 'minorLineStyle', modelName: 'MinorLineStyle', displayName: 'Minor Line Style', info: lineStyleSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.GridLines.MinorLineStyle' };
var scaleMode = {
    propertyName: 'scaleName', modelName: '@ScaleMode', displayName: 'Scale Mode', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [{ value: 'Automatic', displayValue: 'Automatic', localizationId: 'DevExpress.XtraCharts.ScaleMode.Automatic' }, { value: 'Manual', displayValue: 'Manual', localizationId: 'DevExpress.XtraCharts.ChartRangeControlClientSnapMode.Manual' }, { value: 'Continuous', displayValue: 'Continuous', localizationId: 'DevExpress.XtraCharts.ScaleMode.Continuous' }],
    localizationId: 'DevExpress.XtraCharts.ScaleOptionsBase.ScaleMode'
}, aggregateFunction = {
    propertyName: 'aggregateFunction', modelName: '@AggregateFunction', displayName: 'Aggregate Function',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'None', displayValue: 'None', localizationId: 'DevExpress.XtraReports.UI.MultiColumnMode.None' }, { value: 'Average', displayValue: 'Average', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Average' }, { value: 'Sum', displayValue: 'Sum', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Sum' }, { value: 'Minimum', displayValue: 'Minimum', localizationId: 'DevExpress.XtraReports.UI.XRGauge.Minimum' }, { value: 'Maximum', displayValue: 'Maximum', localizationId: 'DevExpress.XtraReports.UI.XRGauge.Maximum' }, { value: 'Count', displayValue: 'Count', localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Count' }, { value: 'Financial', displayValue: 'Financial', localizationId: 'DevExpress.XtraCharts.SeriesAggregateFunction.Financial' }],
    localizationId: 'DevExpress.XtraCharts.XYDiagram3DSeriesViewBase.AggregateFunction'
}, gridSpacing = { propertyName: 'gridSpacing', modelName: '@GridSpacing', displayName: 'Grid Spacing', localizationId: 'DevExpress.XtraCharts.ScaleGridOptionsBase.GridSpacing', defaultVal: 1.0, editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, autoGrid = { propertyName: 'autoGrid', modelName: '@AutoGrid', displayName: 'Auto Grid', localizationId: 'DevExpress.XtraCharts.ScaleGridOptionsBase.AutoGrid', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool }, gridOffset = { propertyName: 'gridOffset', modelName: '@GridOffset', displayName: 'Grid Offset', localizationId: 'DevExpress.XtraCharts.ScaleGridOptionsBase.GridOffset', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
var scaleOptionsBaseSerializationsInfo = [autoGrid, aggregateFunction, gridOffset, gridSpacing, scaleMode];
var numericMeasureUnit = {
    propertyName: 'measureUnit', modelName: '@MeasureUnit', displayName: 'Measure Unit',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Ones', displayValue: 'Ones', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Ones' }, { value: 'Tens', displayValue: 'Tens', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Tens' }, { value: 'Hundreds', displayValue: 'Hundreds', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Hundreds' }, { value: 'Thousands', displayValue: 'Thousands', localizationId: 'DevExpress.XtraCharts.NumericGridAlignment.Thousands' }, { value: 'Millions', displayValue: 'Millions', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Millions' }, { value: 'Billions', displayValue: 'Billions', localizationId: 'DevExpress.XtraCharts.NumericGridAlignment.Billions' }, { value: 'Custom', displayValue: 'Custom', localizationId: 'DevExpress.XtraReports.UI.SortingSummaryFunction.Custom' }],
    localizationId: 'DevExpress.XtraCharts.DateTimeScaleOptions.MeasureUnit'
}, numericGridAlignment = {
    propertyName: 'gridAlignment', modelName: '@GridAlignment', displayName: 'Grid Alignment',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Ones', displayValue: 'Ones', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Ones' }, { value: 'Tens', displayValue: 'Tens', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Tens' }, { value: 'Hundreds', displayValue: 'Hundreds', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Hundreds' }, { value: 'Thousands', displayValue: 'Thousands', localizationId: 'DevExpress.XtraCharts.NumericGridAlignment.Thousands' }, { value: 'Millions', displayValue: 'Millions', localizationId: 'DevExpress.XtraCharts.NumericMeasureUnit.Millions' }, { value: 'Billions', displayValue: 'Billions', localizationId: 'DevExpress.XtraCharts.NumericGridAlignment.Billions' }, { value: 'Custom', displayValue: 'Custom', localizationId: 'DevExpress.XtraReports.UI.SortingSummaryFunction.Custom' }],
    localizationId: 'DevExpress.XtraCharts.ChartRangeControlClientDateTimeGridOptions.GridAlignment'
}, customGridAlignment = { propertyName: 'customGridAlignment', modelName: '@CustomGridAlignment', defaultVal: null, displayName: 'Custom Grid Alignment', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.NumericScaleOptions.CustomGridAlignment' }, customMeasureUnit = { propertyName: 'customMeasureUnit', modelName: '@CustomMeasureUnit', defaultVal: null, displayName: 'Custom Measure Unit', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.NumericScaleOptions.CustomMeasureUnit' };
var numericScaleOptionsSerializationsInfo = [numericMeasureUnit, numericGridAlignment, customGridAlignment, customMeasureUnit].concat(scaleOptionsBaseSerializationsInfo), numericScaleOptions = { propertyName: 'numericScaleOptions', modelName: 'NumericScaleOptions', displayName: 'Numeric Scale Options', info: numericScaleOptionsSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.NumericScaleOptions' };
var radarAxisYNumericScaleOptionsSerializationsInfo = [autoGrid, numericGridAlignment, gridOffset, gridSpacing], radarAxisYNumericScaleOptions = { propertyName: 'radarAxisYNumericScaleOptions', modelName: 'NumericScaleOptions', displayName: 'Numeric Scale Options', info: radarAxisYNumericScaleOptionsSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.NumericScaleOptions' };
var radarAxisXNumericScaleOptionsSerializationsInfo = radarAxisYNumericScaleOptionsSerializationsInfo.concat(scaleMode), radarAxisXNumericScaleOptions = { propertyName: 'radarAxisXNumericScaleOptions', modelName: 'NumericScaleOptions', displayName: 'Numeric Scale Options', info: radarAxisXNumericScaleOptionsSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.NumericScaleOptions' };
var dateMeasureUnit = {
    propertyName: 'measureUnit', modelName: '@MeasureUnit', displayName: 'Measure Unit',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Millisecond', displayValue: 'Millisecond', localizationId: 'DevExpress.XtraCharts.DateTimeMeasureUnit.Millisecond' }, { value: 'Second ', displayValue: 'Second', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Second' }, { value: 'Minute', displayValue: 'Minute', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Minute' }, { value: 'Hour', displayValue: 'Hour', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Hour' }, { value: 'Day', displayValue: 'Day', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateDay' }, { value: 'Week', displayValue: 'Week', localizationId: 'DevExpress.XtraCharts.DateTimeGridAlignment.Week' }, { value: 'Month', displayValue: 'Month', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateMonth' }, { value: 'Quarter', displayValue: 'Quarter', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateQuarter' }, { value: 'Year', displayValue: 'Year', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateYear' }],
    localizationId: 'DevExpress.XtraCharts.DateTimeScaleOptions.MeasureUnit'
}, dateGridAlignment = {
    propertyName: 'gridAlignment', modelName: '@GridAlignment', displayName: 'Grid Alignment',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Millisecond', displayValue: 'Millisecond', localizationId: 'DevExpress.XtraCharts.DateTimeMeasureUnit.Millisecond' }, { value: 'Second ', displayValue: 'Second', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Second' }, { value: 'Minute', displayValue: 'Minute', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Minute' }, { value: 'Hour', displayValue: 'Hour', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.Hour' }, { value: 'Day', displayValue: 'Day', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateDay' }, { value: 'Week', displayValue: 'Week', localizationId: 'DevExpress.XtraCharts.DateTimeGridAlignment.Week' }, { value: 'Month', displayValue: 'Month', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateMonth' }, { value: 'Quarter', displayValue: 'Quarter', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateQuarter' }, { value: 'Year', displayValue: 'Year', localizationId: 'DevExpress.XtraPivotGrid.PivotGroupInterval.DateYear' }],
    localizationId: 'DevExpress.XtraCharts.ChartRangeControlClientDateTimeGridOptions.GridAlignment'
}, workdaysOnly = { propertyName: 'workdaysOnly', modelName: '@WorkdaysOnly', displayName: 'Workdays Only', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false, from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.DateTimeScaleOptions.WorkdaysOnly' };
var dateTimeScaleOptionsSerializationsInfo = [dateGridAlignment, dateMeasureUnit, workdaysOnly].concat(scaleOptionsBaseSerializationsInfo), dateTimeScaleOptions = { propertyName: 'dateTimeScaleOptions', modelName: 'DateTimeScaleOptions', displayName: 'Date-Time Scale Options', info: dateTimeScaleOptionsSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.DateTimeScaleOptions' };
var qualitativeScaleOptionsSerializationInfo = [autoGrid, gridOffset, gridSpacing], qualitativeScaleOptions = { propertyName: 'qualitativeScaleOptions', modelName: 'QualitativeScaleOptions', displayName: 'Qualitative Scale Options', localizationId: 'DevExpress.XtraCharts.AxisX3D.QualitativeScaleOptions', info: qualitativeScaleOptionsSerializationInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
var visibleInPanesSerializable = { propertyName: 'visibleInPanesSerializable', modelName: '@VisibleInPanesSerializable', displayName: 'Visible In Panes Serializable', editor: analytics_widgets_1.editorTemplates.getEditor('text') }, minorVisible = { propertyName: 'minorVisible', modelName: '@MinorVisible', displayName: 'Minor Visible', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.TickmarksBase.MinorVisible' }, minorColor = { propertyName: 'minorColor', modelName: '@MinorColor', displayName: 'Minor Color', from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), localizationId: 'DevExpress.XtraCharts.GridLines.MinorColor' };
var gridLinesAxisBaseSerializationsInfo = [_common_1.visible, minorVisible, _common_1.color, minorColor, lineStyle, minorLineStyle];
var gridLinesAxisX = { propertyName: 'gridLinesAxisX', modelName: 'GridLines', displayName: 'Grid Lines', info: gridLinesAxisBaseSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.AxisBase.GridLines' }, gridLinesAxisY = { propertyName: 'gridLinesAxisY', modelName: 'GridLines', displayName: 'Grid Lines', info: gridLinesAxisBaseSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.AxisBase.GridLines' };
var straggered = { propertyName: 'straggered', modelName: '@Staggered', displayName: 'Staggered', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false, from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.AxisLabel.Staggered' }, allowStagger = { propertyName: 'allowStagger', modelName: '@AllowStagger', displayName: 'Allow Stagger', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.AxisLabelResolveOverlappingOptions.AllowStagger' }, allowRotate = { propertyName: 'allowRotate', modelName: '@AllowRotate', displayName: 'Allow Rotate', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.AxisLabelResolveOverlappingOptions.AllowRotate' }, allowHide = { propertyName: 'allowHide', modelName: '@AllowHide', displayName: 'Allow Hide', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: true, from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.AxisLabelResolveOverlappingOptions.AllowHide' }, minIndent = { propertyName: 'minIndent', modelName: '@MinIndent', displayName: 'Min Indent', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.AxisLabelResolveOverlappingOptions.MinIndent' }, axisLabelResolveOverlappingOptionsSerializationsInfo = [allowStagger, allowRotate, allowHide, minIndent], axisLabelResolveOverlappingOptions = { propertyName: 'resolveOverlappingOptions', modelName: 'ResolveOverlappingOptions', displayName: 'Resolve Overlapping Options', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: axisLabelResolveOverlappingOptionsSerializationsInfo, localizationId: 'DevExpress.XtraCharts.AxisLabel.ResolveOverlappingOptions' }, enableAntialiasing = { propertyName: 'enableAntialiasing', modelName: '@EnableAntialiasing', displayName: 'Enable Antialiasing', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: _common_1.defaultBooleanValues, localizationId: 'DevExpress.XtraCharts.TitleBase.EnableAntialiasing' };
var axisLabelBaseSerializationsInfo = [enableAntialiasing, _common_1.font, _common_1.maxLineCount, _common_1.maxWidth, axisLabelResolveOverlappingOptions, _common_1.textAlignment, _common_1.textColor, _common_1.textPattern];
var axisLabelSerializationsInfo = [_common_1.angle, straggered, _common_1.visibility].concat(axisLabelBaseSerializationsInfo), axisLabel = { propertyName: 'axisLabel', modelName: 'Label', displayName: 'Label', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: axisLabelSerializationsInfo, localizationId: 'DevExpress.XtraReports.UI.XRLabel' };
var minorCount = { propertyName: 'minorCount', modelName: '@MinorCount', displayName: 'Minor Count', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.AxisBase.MinorCount' }, interlaced = { propertyName: 'interlaced', modelName: '@Interlaced', displayName: 'Interlaced', from: analytics_utils_1.parseBool, defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), localizationId: 'DevExpress.XtraCharts.AxisBase.Interlaced' }, interlacedColor = { propertyName: 'interlacedColor', modelName: '@InterlacedColor', displayName: 'Interlaced Color', editor: analytics_widgets_1.editorTemplates.getEditor('customColorEditor'), from: analytics_utils_1.colorFromString, toJsonObject: analytics_utils_1.colorToString, localizationId: 'DevExpress.XtraCharts.AxisBase.InterlacedColor' };
var axisBaseSerializationsInfo = [visualRange, wholeRange, numericScaleOptions, dateTimeScaleOptions, minorCount, interlacedColor];
var axisFillMode = {
    propertyName: 'fillMode', modelName: '@FillMode', displayName: 'Fill Mode',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Empty', displayValue: 'Empty', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAppearances.Empty' }, { value: 'Solid', displayValue: 'Solid', localizationId: 'DevExpress.XtraCharts.FillMode3D.Solid' }, { value: 'Gradient', displayValue: 'Gradient', localizationId: 'DevExpress.XtraCharts.FillMode3D.Gradient' }, { value: 'Hatch', displayValue: 'Hatch', localizationId: 'DevExpress.XtraCharts.FillMode.Hatch' }],
    localizationId: 'DevExpress.XtraCharts.FillStyle3D.FillMode'
}, fillStyle2D = [axisFillMode];
var rectangleFillStyleSerializationsInfo = [].concat(fillStyle2D), interlacedFillStyle = { propertyName: 'InterlacedFillStyle', modelName: 'InterlacedFillStyle', displayName: 'Interlaced Fill Style', info: rectangleFillStyleSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.RadarAxis.InterlacedFillStyle' };
var crossAxis = { propertyName: 'crossAxis', modelName: '@CrossAxis', displayName: 'Cross Axis', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), defaultVal: false, from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.TickmarksBase.CrossAxis' }, minorThickness = { propertyName: 'minorThickness', modelName: '@MinorThickness', displayName: 'Minor Thickness', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 1, localizationId: 'DevExpress.XtraCharts.TickmarksBase.MinorThickness' }, minorLength = { propertyName: 'minorLength', modelName: '@MinorLength', displayName: 'Minor Length', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 2, localizationId: 'DevExpress.XtraCharts.TickmarksBase.MinorLength' }, lengthinfo = { propertyName: 'length', modelName: '@Length', displayName: 'Length', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), defaultVal: 5, localizationId: 'DevExpress.XtraCharts.TickmarksBase.Length' }, tickmarksMinorVisible = { propertyName: 'minorVisible', modelName: '@MinorVisible', displayName: 'Minor Visible', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.TickmarksBase.MinorVisible' }, tickmarksBaseSerializationsInfo = [_common_1.visible, tickmarksMinorVisible, crossAxis, _common_1.thickness, minorThickness, lengthinfo, minorLength], tickmarksSerializationsInfo = [].concat(tickmarksBaseSerializationsInfo);
var tickmarks = { propertyName: 'tickmarks', modelName: 'Tickmarks', displayName: 'Tickmarks', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: tickmarksSerializationsInfo, localizationId: 'DevExpress.XtraCharts.RadarAxisY.Tickmarks' };
var axisAlignment = {
    propertyName: 'axisAlignment', modelName: '@Alignment',
    displayName: 'Alignment', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [{ value: 'Near', displayValue: 'Near', localizationId: 'DevExpress.XtraCharts.ConstantLineTitleAlignment.Near' }, { value: 'Zero', displayValue: 'Zero', localizationId: 'DevExpress.XtraCharts.AxisAlignment.Zero' }, { value: 'Far', displayValue: 'Far', localizationId: 'DevExpress.XtraCharts.ConstantLineTitleAlignment.Far' }],
    localizationId: 'DevExpress.XtraReports.UI.XRBarCode.Alignment'
};
var pattern = { propertyName: 'pattern', modelName: '@Pattern', displayName: 'Pattern', editor: analytics_widgets_1.editorTemplates.getEditor('text'), localizationId: 'DevExpress.XtraCharts.CrosshairAxisLabelOptions.Pattern' }, crosshairAxisLabelOptionsSerializationsInfo = [_common_1.visibility, pattern, _common_1.backColor, _common_1.textColor, _common_1.font];
var crosshairAxisLabelOptions = { propertyName: 'crosshairAxisLabelOptions', modelName: 'CrosshairAxisLabelOptions', displayName: 'Crosshair Axis Label Options', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: crosshairAxisLabelOptionsSerializationsInfo, localizationId: 'DevExpress.XtraCharts.Axis2D.CrosshairAxisLabelOptions' };
var axisTitleVisibility = { propertyName: 'axisTitleVisibility', modelName: '@Visibility', displayName: 'Visibility', defaultVal: 'False', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: _common_1.defaultBooleanValues, localizationId: 'DevExpress.XtraCharts.BorderBase.Visibility' };
var axisTitleSerializationsInfo = [_common_1.text, _common_1.titleAlignment, _common_1.antialiasing, axisTitleVisibility, _common_1.textColor, _common_1.font12], axisTitle = { propertyName: 'axisTitle', modelName: 'Title', displayName: 'Title', defaultVal: {}, info: axisTitleSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Title' };
var crosshairLabelVisibility = { propertyName: 'crosshairLabelVisibility', modelName: '@CrosshairLabelVisibility', displayName: 'Crosshair Label Visibility', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: _common_1.defaultBooleanValues, localizationId: 'DevExpress.XtraCharts.SeriesBase.CrosshairLabelVisibility' };
var axis2DSerializationsInfo = [interlaced, interlacedFillStyle, tickmarks, axisTitle, _common_1.visibility, axisAlignment, axisLabel, _common_1.thickness,
    _common_1.color, crosshairLabelVisibility, visibleInPanesSerializable, crosshairAxisLabelOptions].concat(axisBaseSerializationsInfo);
var axisY3DInterlaced = { propertyName: 'axisY3DInterlaced', modelName: '@Interlaced', displayName: 'Interlaced', from: analytics_utils_1.parseBool, defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), localizationId: 'DevExpress.XtraCharts.AxisBase.Interlaced' };
var axisFillMode3D = {
    propertyName: 'fillMode', modelName: '@FillMode', displayName: 'Fill Mode',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Empty', displayValue: 'Empty', localizationId: 'DevExpress.XtraPivotGrid.PivotGridAppearances.Empty' }, { value: 'Solid', displayValue: 'Solid', localizationId: 'DevExpress.XtraCharts.FillMode3D.Solid' }, { value: 'Gradient', displayValue: 'Gradient', localizationId: 'DevExpress.XtraCharts.FillMode3D.Gradient' }],
    localizationId: 'DevExpress.XtraCharts.FillStyle3D.FillMode'
}, fillStyle3D = [axisFillMode];
var rectangleFillStyle3DSerializationsInfo = [].concat(fillStyle3D), rectangleFillStyle3D = { propertyName: 'interlacedFillStyle', modelName: 'InterlacedFillStyle', displayName: 'Interlaced Fill Style', info: rectangleFillStyle3DSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.RadarAxis.InterlacedFillStyle' }, axisLabel3DPosition = {
    propertyName: 'axisLabel3DPosition', modelName: '@AxisLabel3DPosition', displayName: 'Axis Label 3D Position',
    editor: analytics_widgets_1.editorTemplates.getEditor('combobox'), valuesArray: [{ value: 'Bottom', displayValue: 'Bottom', localizationId: 'DevExpress.XtraReports.UI.XRDockStyle.Bottom' }, { value: 'Left', displayValue: 'Left', localizationId: 'DevExpress.XtraReports.UI.XRControl.Left' }, { value: 'Right', displayValue: 'Right', localizationId: 'DevExpress.XtraCharts.RectangleIndents.Right' }, { value: 'Top', displayValue: 'Top', localizationId: 'DevExpress.XtraReports.UI.XRDockStyle.Top' }, { value: 'Auto', displayValue: 'Auto', localizationId: 'DevExpress.XtraReports.UI.DocumentExportMode.Auto' }]
};
var axisLabel3DSerializationsInfo = [axisLabel3DPosition].concat(axisLabelSerializationsInfo), axisLabel3D = { propertyName: 'axisLabel3D', modelName: 'Label', displayName: 'Label', info: axisLabel3DSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraReports.UI.XRLabel' };
var axis3DSerializationsInfo = [rectangleFillStyle3D, axisLabel3D].concat(axisBaseSerializationsInfo);
var sizeInPixels = { propertyName: 'sizeInPixels', modelName: '@SizeInPixels', displayName: 'Size In Pixels', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.XYDiagramPaneBase.SizeInPixels' }, scaleBreakStyle = {
    propertyName: 'style', modelName: '@Style', displayName: 'Style', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [{ value: 'Straight', displayValue: 'Straight', localizationId: 'DevExpress.XtraCharts.ScaleBreakStyle.Straight' }, { value: 'Ragged', displayValue: 'Ragged', localizationId: 'DevExpress.XtraCharts.ScaleBreakStyle.Ragged' }, { value: 'Waved', displayValue: 'Waved', localizationId: 'DevExpress.XtraCharts.ScaleBreakStyle.Waved' }],
    localizationId: 'DevExpress.XtraReports.UI.ConditionFormatting.Style'
}, scaleBreaksOptionsSerializationsInfo = [sizeInPixels, _common_1.color, scaleBreakStyle];
var scaleBreaksOptions = { propertyName: 'scaleBreakOptions', modelName: 'ScaleBreakOptions', displayName: 'Scale Break Options', info: scaleBreaksOptionsSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.Axis.ScaleBreakOptions' };
var enabled = { propertyName: 'enabled', modelName: '@Enabled', displayName: 'Enabled', defaultVal: false, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraReports.UI.EditOptions.Enabled' }, maxCount = { propertyName: 'maxCount', modelName: '@MaxCount', displayName: 'Max Count', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.AutoScaleBreaks.MaxCount' }, autoScaleBreaksSerializationsInfo = [enabled, maxCount];
var edge1 = { propertyName: 'edge1', modelName: '@Edge1Serializable', displayName: 'Edge1', localizationId: 'DevExpress.XtraCharts.ScaleBreak.Edge1', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') }, edge2 = { propertyName: 'edge2', modelName: '@Edge2Serializable', displayName: 'Edge2', localizationId: 'DevExpress.XtraCharts.ScaleBreak.Edge2', editor: analytics_widgets_1.editorTemplates.getEditor('numeric') };
var scaleBreaks = { propertyName: 'scaleBreaks', modelName: 'ScaleBreaks', displayName: 'Scale Breaks', localizationId: 'DevExpress.XtraCharts.Axis.ScaleBreaks', array: true, editor: _editorTemplates_1.editorTemplates.getEditor('collection') };
exports.scaleBreakSerializationsInfo = [edge1, edge2, _common_1.visible, _common_1.name, _common_1.tag];
var autoScaleBreaks = { propertyName: 'autoScaleBreaks', modelName: 'AutoScaleBreaks', displayName: 'Auto Scale Breaks', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), info: autoScaleBreaksSerializationsInfo, localizationId: 'DevExpress.XtraCharts.Axis.AutoScaleBreaks' }, reverse = { propertyName: 'axisReverse', modelName: '@Reverse', displayName: 'Reverse', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.Axis.Reverse' };
var axisValueSerializable = { propertyName: '_axisValue', modelName: '@AxisValueSerializable' }, axisValue = { propertyName: 'axisValue', displayName: 'Axis Value', localizationId: 'DevExpress.XtraCharts.AxisCoordinate.AxisValue', editor: analytics_widgets_1.editorTemplates.getEditor('text') }, showBehind = { propertyName: 'showBehind', modelName: '@ShowBehind', from: analytics_utils_1.parseBool, displayName: 'Show Behind', localizationId: 'DevExpress.XtraCharts.ConstantLine.ShowBehind', editor: analytics_widgets_1.editorTemplates.getEditor('bool') };
exports.legendName = { propertyName: 'legendName', modelName: '@LegendName', displayName: 'Legend', localizationId: 'DevExpress.XtraCharts.ConstantLine.Legend', defaultVal: analytics_utils_1.getLocalization('Default Legend', 'ChartStringId.DefaultLegend'), editor: _editorTemplates_1.editorTemplates.getEditor('legends') };
var stripLimitEnable = { propertyName: 'enabled', modelName: '@Enabled', displayName: 'Enabled', defaultVal: true, editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool, localizationId: 'DevExpress.XtraCharts.StripLimit.Enabled' };
exports.stripLimitSerializationsInfo = [axisValueSerializable, axisValue, stripLimitEnable, _common_1.tag];
var stripMinLimitInfo = { propertyName: 'minLimit', modelName: 'MinLimit', displayName: 'Min Limit', from: _stripLimit_1.StripLimitViewModel.from, toJsonObject: _stripLimit_1.StripLimitViewModel.toJson, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.Strip.MinLimit' }, stripMaxLimitInfo = { propertyName: 'maxLimit', modelName: 'MaxLimit', displayName: 'Max Limit', from: _stripLimit_1.StripLimitViewModel.from, toJsonObject: _stripLimit_1.StripLimitViewModel.toJson, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.Strip.MaxLimit' };
var showAxisLabel = { propertyName: 'showAxisLabel', modelName: '@ShowAxisLabel', displayName: 'Show Axis Label', localizationId: 'DevExpress.XtraCharts.Strip.ShowAxisLabel', editor: analytics_widgets_1.editorTemplates.getEditor('bool'), from: analytics_utils_1.parseBool }, axisLabelText = { propertyName: 'axisLabelText', modelName: '@AxisLabelText', displayName: 'Axis Label Text', localizationId: 'DevExpress.XtraCharts.Strip.AxisLabelText', editor: analytics_widgets_1.editorTemplates.getEditor('text') }, stripFillStyle = { propertyName: 'fillStyle', modelName: 'FillStyle', displayName: 'Fill Style', localizationId: 'DevExpress.XtraCharts.Strip.FillStyle', editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), from: _fillStyle_1.FillStyle.from(_view_1.fillStyleInfo, 'RectangleGradientFillOptions'), toJsonObject: _fillStyle_1.FillStyle.toJson };
var strips = { propertyName: 'strips', modelName: 'Strips', displayName: 'Strips', localizationId: 'DevExpress.XtraCharts.Axis2D.Strips', array: true, editor: _editorTemplates_1.editorTemplates.getEditor('collection') };
exports.stripSerializationsInfo = [_common_1.visible, _common_1.color, _common_1.showInLegend, exports.legendName, _common_1.legendText, showAxisLabel, axisLabelText, _common_1.name, _common_1.tag, stripFillStyle, stripMinLimitInfo, stripMaxLimitInfo];
exports.constantLineSerializationsInfo = [axisValueSerializable, axisValue, _common_1.name, _common_1.visible, _common_1.color, _common_1.showInLegend, exports.legendName, _common_1.legendText, showBehind, _common_1.tag];
var constantLines = { propertyName: 'constantLines', modelName: 'ConstantLines', displayName: 'Constant Lines', localizationId: 'DevExpress.XtraCharts.Axis2D.ConstantLines', array: true, editor: _editorTemplates_1.editorTemplates.getEditor('collection') };
var axisSerializationsInfo = [reverse, scaleBreaksOptions, autoScaleBreaks].concat(axis2DSerializationsInfo);
exports.axisXYSerializationsInfo = [constantLines, scaleBreaks, strips].concat(axisSerializationsInfo);
var axisID = { propertyName: 'axisID', modelName: '@AxisID' };
exports.secondaryAxisXYSerializationsInfo = [_common_1.name, axisID].concat(exports.axisXYSerializationsInfo);
var topLevel = { propertyName: 'topLevel', modelName: '@TopLevel', displayName: 'Top Level', editor: analytics_widgets_1.editorTemplates.getEditor('numeric'), localizationId: 'DevExpress.XtraCharts.RadarAxisY.TopLevel' }, radarAxisXLabelTextDirection = {
    propertyName: 'textDirection', modelName: 'TextDirection', displayName: 'Text Direction', editor: analytics_widgets_1.editorTemplates.getEditor('combobox'),
    valuesArray: [{ value: 'LeftToRight', displayValue: 'LeftToRight', localizationId: 'ChartStringId.WizGradientLeftToRight' }, { value: 'TopToBottom', displayValue: 'TopToBottom', localizationId: 'ChartStringId.WizSeriesLabelTextOrientationTopToBottom' }, { value: 'BottomToTop', displayValue: 'BottomToTop', localizationId: 'ChartStringId.WizSeriesLabelTextOrientationBottomToTop' }, { value: 'Radial', displayValue: 'Radial', localizationId: 'DevExpress.XtraCharts.PieSeriesLabelPosition.Radial' }, { value: 'Tangent', displayValue: 'Tangent', localizationId: 'DevExpress.XtraCharts.PieSeriesLabelPosition.Tangent' }],
    localizationId: 'DevExpress.XtraCharts.RadarAxisXLabel.TextDirection'
};
var radarAxisXLabelSerializationsInfo = axisLabelBaseSerializationsInfo.concat(radarAxisXLabelTextDirection), radarAxisXLabel = { propertyName: 'radarAxisXLabel', modelName: 'Label', displayName: 'Label', info: radarAxisXLabelSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraReports.UI.XRLabel' }, radarAxisYLabel = { propertyName: 'radarAxisYLabel', modelName: 'Label', displayName: 'Label', info: axisLabelBaseSerializationsInfo.concat([_common_1.angle, _common_1.visible]), editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraReports.UI.XRLabel' };
var radarAxisSerializationsInfo = [interlaced, interlacedColor, interlacedFillStyle, visualRange, minorCount], radarAxisXSerializationsInfo = [radarAxisXNumericScaleOptions, radarWholeRange, gridLinesAxisX, radarAxisXLabel, qualitativeScaleOptions].concat(radarAxisSerializationsInfo), radarAxisYSerializationsInfo = [_common_1.color, _common_1.thickness, _common_1.visible, radarAxisYNumericScaleOptions, topLevel, wholeRange, gridLinesAxisY, radarAxisYLabel, tickmarks].concat(radarAxisSerializationsInfo);
exports.radarAxisX = { propertyName: 'axisX', modelName: 'AxisX', displayName: 'Axis X', info: radarAxisXSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.GanttAxisX' };
exports.radarAxisY = { propertyName: 'axisY', modelName: 'AxisY', displayName: 'Axis Y', info: radarAxisYSerializationsInfo, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.SeparatePaneIndicator.AxisY' };
exports.axisX3D = { propertyName: 'axisX', modelName: 'AxisX', displayName: 'Axis X', info: [gridLinesAxisX, interlaced, qualitativeScaleOptions].concat(axis3DSerializationsInfo), editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.GanttAxisX' };
exports.axisY3D = { propertyName: 'axisY', modelName: 'AxisY', displayName: 'Axis Y', info: [gridLinesAxisY, axisY3DInterlaced].concat(axis3DSerializationsInfo), editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor'), localizationId: 'DevExpress.XtraCharts.SeparatePaneIndicator.AxisY' };
exports.axisX = { propertyName: 'axisX', modelName: 'AxisX', displayName: 'Primary Axis X', localizationId: 'DevExpress.XtraCharts.AxisX', defaultVal: {}, from: _axisXYViewModel_1.AxisXYViewModel.from([gridLinesAxisX, qualitativeScaleOptions].concat(exports.axisXYSerializationsInfo)), toJsonObject: _axisXYViewModel_1.AxisXYViewModel.toJson, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
exports.axisY = { propertyName: 'axisY', modelName: 'AxisY', displayName: 'Primary Axis Y', localizationId: 'DevExpress.XtraCharts.AxisY', defaultVal: {}, from: _axisXYViewModel_1.AxisXYViewModel.from([gridLinesAxisY].concat(exports.axisXYSerializationsInfo)), toJsonObject: _axisXYViewModel_1.AxisXYViewModel.toJson, editor: analytics_widgets_1.editorTemplates.getEditor('objecteditor') };
