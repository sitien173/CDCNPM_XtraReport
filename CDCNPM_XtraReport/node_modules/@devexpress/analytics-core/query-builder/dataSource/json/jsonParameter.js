/**
* DevExpress Analytics (query-builder\dataSource\json\jsonParameter.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var utils_1 = require("../../../serializer/utils");
var serializer_1 = require("../../../serializer/serializer");
var editorsInfo_1 = require("../../../property-grid/widgets/editorsInfo");
var localization_utils_1 = require("../../../property-grid/localization/localization_utils");
var JsonParameterType;
(function (JsonParameterType) {
    JsonParameterType[JsonParameterType["PathParameter"] = 0] = "PathParameter";
    JsonParameterType[JsonParameterType["QueryParameter"] = 1] = "QueryParameter";
    JsonParameterType[JsonParameterType["Header"] = 2] = "Header";
})(JsonParameterType = exports.JsonParameterType || (exports.JsonParameterType = {}));
var JsonParameter = (function (_super) {
    __extends(JsonParameter, _super);
    function JsonParameter(model, serializer) {
        var _this = _super.call(this) || this;
        _this.expression_Prefix = 'expression:';
        _this.namePlaceholder = function () { return localization_utils_1.getLocalization('Name', 'AnalyticsCoreStringId.CollectionEditor_Name_Placeholder'); };
        _this.valuePlaceholder = function () { return localization_utils_1.getLocalization('Value', 'AnalyticsCoreStringId.CollectionEditor_Value_Placeholder'); };
        _this._editingValue = ko.observable('');
        _this._expression = { value: ko.observable('') };
        _this.isExpression = ko.observable(false);
        _this.itemsProvider = null;
        _this._parameterTypes = parameterTypes;
        serializer = serializer || new serializer_1.ModelSerializer();
        serializer.deserialize(_this, model);
        _this._initEditingProperties();
        _this._disposables.push(_this.value = ko.computed(function () {
            var expressionValue = (_this.expression_Prefix + _this._expression.value());
            var editingValue = _this._editingValue();
            return _this.isExpression.peek() ? expressionValue : editingValue;
        }));
        return _this;
    }
    JsonParameter.from = function (model, serializer) {
        return new JsonParameter(model || {}, serializer);
    };
    JsonParameter.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, value.getInfo(), refs);
    };
    JsonParameter.prototype._initEditingProperties = function () {
        var currentValue = this.value() || '';
        if (currentValue.indexOf(this.expression_Prefix) === 0) {
            this.isExpression(true);
            this._expression.value(currentValue.substring(this.expression_Prefix.length));
        }
        else {
            this._editingValue(currentValue);
        }
    };
    JsonParameter.prototype.switchEditors = function () {
        var newIsExpression = !this.isExpression();
        this.isExpression(newIsExpression);
        if (newIsExpression) {
            this._expression.value(this._editingValue() ? "'" + this._editingValue() + "'" : '');
        }
        else {
            this._editingValue('');
        }
    };
    JsonParameter.prototype.getInfo = function () {
        return [
            { propertyName: 'name', modelName: '@Name', displayName: 'Name', editor: editorsInfo_1.editorTemplates.getEditor('text') },
            { propertyName: 'value', modelName: '@Value', displayName: 'Value', editor: editorsInfo_1.editorTemplates.getEditor('text') },
            { propertyName: 'itemType', modelName: '@ItemType', defaultVal: JsonParameterType[JsonParameterType.PathParameter], alwaysSerialize: true }
        ];
    };
    return JsonParameter;
}(utils_1.Disposable));
exports.JsonParameter = JsonParameter;
var parameterTypes = [
    { value: JsonParameterType[JsonParameterType.PathParameter], displayValue: 'Path Parameter', localizationId: 'AnalyticsCoreStringId.JsonDSWizard_ChooseJsonSourcePage_PathParameter' },
    { value: JsonParameterType[JsonParameterType.QueryParameter], displayValue: 'Query Parameter', localizationId: 'AnalyticsCoreStringId.JsonDSWizard_ChooseJsonSourcePage_QueryParameter' },
    { value: JsonParameterType[JsonParameterType.Header], displayValue: 'Header', localizationId: 'AnalyticsCoreStringId.JsonDSWizard_ChooseJsonSourcePage_Header' }
];
