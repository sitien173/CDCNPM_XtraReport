/**
* DevExpress Analytics (query-builder\dataSource\dataSourceParameter.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { Disposable } from '../../serializer/utils';
import { ISerializableModel, ISerializationInfoArray } from '../../serializer/serializationInfo';
import { IModelSerializer } from '../../serializer/serializer';
export declare class DataSourceParameter extends Disposable implements ISerializableModel {
    private _serializationsInfo;
    private _name;
    static _typeValues: any[];
    static _getTypeValue(typeName: string, resultType?: string): any;
    private _getTypeValue;
    private _tryConvertValue;
    private static _isValueValid;
    getEditorType(type: any): {
        header?: any;
        content?: any;
        custom?: any;
    };
    private _updateValueInfo;
    private _valueInfo;
    private _value;
    private _expressionValue;
    private _previousResultType;
    private _parametersFunctions;
    constructor(model: any, serializer?: IModelSerializer, _serializationsInfo?: ISerializationInfoArray);
    readonly specifics: any;
    static validateName(nameCandidate: string): boolean;
    isValid: ko.Observable<boolean> | ko.Computed<boolean>;
    name: ko.Computed<string>;
    value: ko.Observable | ko.Computed;
    type: ko.Observable<string> | ko.Computed<string>;
    resultType: ko.Observable<string> | ko.Computed<string>;
    getInfo(): ISerializationInfoArray;
    isPropertyVisible(propName: string): boolean;
}
