/**
* DevExpress Analytics (query-builder\dataSource\sql\masterDetailRelation.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var utils_1 = require("../../../serializer/utils");
var serializer_1 = require("../../../serializer/serializer");
var masterDetailRelationMeta_1 = require("./masterDetailRelationMeta");
var _utils_1 = require("../../../serializer/_utils");
var MasterDetailRelation = (function (_super) {
    __extends(MasterDetailRelation, _super);
    function MasterDetailRelation(model, serializer) {
        var _this = _super.call(this) || this;
        _this.name = ko.pureComputed({
            read: function () {
                return _this._customName() || _this.masterQuery() + _this.detailQuery();
            },
            write: function (value) {
                _this._customName(value);
            },
            deferEvaluation: true
        });
        (serializer || new serializer_1.ModelSerializer()).deserialize(_this, _utils_1.extend(model, { '@ItemType': 'Relation' }));
        _this._disposables.push(_this.name);
        return _this;
    }
    MasterDetailRelation.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.keyColumns);
    };
    MasterDetailRelation.prototype.createKeyColumn = function () {
        var newKeyColumn = {
            masterColumn: ko.observable(),
            detailColumn: ko.observable(),
            itemType: 'KeyColumn'
        };
        this.keyColumns.push(newKeyColumn);
    };
    MasterDetailRelation.prototype.getInfo = function () {
        return masterDetailRelationMeta_1.masterDetailRelationSerializationsInfo;
    };
    return MasterDetailRelation;
}(utils_1.Disposable));
exports.MasterDetailRelation = MasterDetailRelation;
