/**
* DevExpress Analytics (query-builder\dataSource\sql\storedProcQuery.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var utils_1 = require("../utils");
var serializer_1 = require("../../../serializer/serializer");
var utils_2 = require("../../../serializer/utils");
var dataSourceParameter_1 = require("../dataSourceParameter");
var _editorTypeMapper_1 = require("../../../core/internal/_editorTypeMapper");
var dataSourceParameterMeta_1 = require("../dataSourceParameterMeta");
var storedProcQueryMeta_1 = require("./storedProcQueryMeta");
var _utils_1 = require("../../../serializer/_utils");
var StoredProcQuery = (function () {
    function StoredProcQuery(model, parent, serializer) {
        this.parent = parent;
        (serializer || new serializer_1.ModelSerializer()).deserialize(this, _utils_1.extend(model, { '@ItemType': 'Query' }));
        this.type = ko.pureComputed(function () { return utils_1.SqlQueryType.storedProcQuery; });
        this.parameters = utils_2.deserializeArray(model['Parameters'], function (item) {
            var parameterValueType = item['@Type'];
            if (_editorTypeMapper_1.IsDataAccessExpression(parameterValueType))
                parameterValueType = item['@ResultType'] || parameterValueType;
            return new dataSourceParameter_1.DataSourceParameter(item, serializer, dataSourceParameterMeta_1.storedProcParameterSerializationsInfo(parameterValueType));
        });
    }
    StoredProcQuery.prototype.getInfo = function () {
        return storedProcQueryMeta_1.storedProcQuerySerializationsInfo;
    };
    StoredProcQuery.prototype.generateName = function () {
        return this.procName() || 'Query';
    };
    return StoredProcQuery;
}());
exports.StoredProcQuery = StoredProcQuery;
