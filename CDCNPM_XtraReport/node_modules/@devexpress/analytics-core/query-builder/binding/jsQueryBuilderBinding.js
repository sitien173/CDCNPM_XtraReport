/**
* DevExpress Analytics (query-builder\binding\jsQueryBuilderBinding.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var $ = require("jquery");
var jsQueryBuilder_1 = require("./jsQueryBuilder");
var _jsDesignerBindingCommon_1 = require("../../core/binding/_jsDesignerBindingCommon");
var _initializer_1 = require("../_initializer");
var localization_utils_1 = require("../../property-grid/localization/localization_utils");
var eventGenerator_1 = require("./eventGenerator");
var _utils_1 = require("../../core/utils/_utils");
var templateUtils_1 = require("../../property-grid/widgets/templateUtils");
var JSQueryBuilderBinding = (function (_super) {
    __extends(JSQueryBuilderBinding, _super);
    function JSQueryBuilderBinding(options, customEventRaiser) {
        var _this = _super.call(this, ko.unwrap(options), customEventRaiser) || this;
        _this.options = options;
        _this._deferreds = [];
        _this._templateHtml = templateUtils_1.getTemplate('dxrd-querybuilder');
        options.queryBuilderModel = _utils_1._wrapModelInObservable(options.queryBuilderModel);
        _this.sender = new jsQueryBuilder_1.JSQueryBuilder(options.queryBuilderModel);
        options.callbacks && options.callbacks._eventSenderCreated && options.callbacks._eventSenderCreated(_this.sender);
        return _this;
    }
    JSQueryBuilderBinding.prototype._applyBindings = function (model, _$element) {
        this._disposables.push(model);
        _$element.children().remove();
        var child = _$element.append(this._templateHtml).children()[0];
        if (!child)
            return;
        ko.cleanNode(child);
        this._callbacks && this._callbacks.beforeRender && this._callbacks.beforeRender(model);
        ko.applyBindings(model, child);
        var updateSizeTimeout = setTimeout(function () {
            model && model.updateSurfaceSize();
        }, 1);
        this._disposables.push({ dispose: function () { return clearTimeout(updateSizeTimeout); } });
    };
    JSQueryBuilderBinding.prototype._initializeEvents = function () {
        var _this = this;
        return this._getAvailableEvents(eventGenerator_1.EventGenerator.generateQueryBuilderEvents(function (eventName, args) {
            _this._fireEvent(eventName, args);
        }));
    };
    JSQueryBuilderBinding.prototype._initializeCallbacks = function () {
        if (this._options.callbacks) {
            return this._initializeEvents();
        }
    };
    JSQueryBuilderBinding.prototype._createModel = function (element) {
        this._callbacks = this._initializeCallbacks();
        return _initializer_1.createQueryBuilder(element, this._options, this._callbacks, false);
    };
    JSQueryBuilderBinding.prototype.dispose = function () {
        (this._deferreds || []).forEach(function (deferred) {
            deferred.reject();
        });
    };
    JSQueryBuilderBinding.prototype.applyBindings = function (element) {
        var _this = this;
        var _$element = $(element);
        var requestOptions = this._options.requestOptions;
        var applyModel = function () {
            if (requestOptions && requestOptions.invokeAction) {
                _this._options.handlerUri = _this._getServerActionUrl(requestOptions.host, requestOptions.invokeAction);
            }
            _this._deferreds.push(_this._createModel(element)
                .done(function (queryBuilderModel) {
                _this.options.queryBuilderModel(queryBuilderModel);
                _this.sender.queryBuilderModel = queryBuilderModel;
                _this._createDisposeFunction(element);
                _this._applyBindings(_this.sender.queryBuilderModel, _$element);
            }));
        };
        if (requestOptions) {
            this._getLocalizationRequest().done(function (localization) {
                localization && localization_utils_1.addCultureInfo(localization);
            }).always(function () {
                applyModel();
            });
        }
        else {
            applyModel();
        }
    };
    return JSQueryBuilderBinding;
}(_jsDesignerBindingCommon_1.JSDesignerBindingCommon));
exports.JSQueryBuilderBinding = JSQueryBuilderBinding;
ko.bindingHandlers['dxQueryBuilder'] = {
    init: function (element, valueAccessor) {
        var values = ko.unwrap(valueAccessor());
        new JSQueryBuilderBinding(values || {}).applyBindings(element);
        return { controlsDescendantBindings: true };
    }
};
