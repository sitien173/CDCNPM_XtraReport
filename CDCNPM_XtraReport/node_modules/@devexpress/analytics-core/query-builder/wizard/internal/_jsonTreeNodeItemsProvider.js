/**
* DevExpress Analytics (query-builder\wizard\internal\_jsonTreeNodeItemsProvider.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _treeNodeItemsProvider_1 = require("./_treeNodeItemsProvider");
var JsonTreeNodeItemsProvider = (function (_super) {
    __extends(JsonTreeNodeItemsProvider, _super);
    function JsonTreeNodeItemsProvider(fieldListProvider, rootItems, generateTreeNode, generateTreeLeafNode) {
        return _super.call(this, fieldListProvider, rootItems, generateTreeNode, generateTreeLeafNode) || this;
    }
    JsonTreeNodeItemsProvider.prototype._getDefaultTreeNodeCheckState = function (item) {
        return item.isSelected;
    };
    JsonTreeNodeItemsProvider.prototype.getNodeByPath = function (pathRequest) {
        var listNode = this._rootItems().filter(function (item) { return item.path === (pathRequest.pathParts || [])[0]; })[0];
        if (!listNode)
            return;
        var childPath = listNode.path;
        for (var index = 1; index < pathRequest.pathParts.length; index++) {
            if (!listNode)
                return;
            childPath += '.' + pathRequest.pathParts[index];
            listNode = listNode.children().filter(function (item) { return item.path == childPath; })[0];
        }
        return listNode;
    };
    return JsonTreeNodeItemsProvider;
}(_treeNodeItemsProvider_1.TreeNodeItemsProvider));
exports.JsonTreeNodeItemsProvider = JsonTreeNodeItemsProvider;
