/**
* DevExpress Analytics (query-builder\wizard\internal\_wizardPageSectionFactory.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var pageFactory_1 = require("../pageFactory");
var WizardPageSectionFactory = (function (_super) {
    __extends(WizardPageSectionFactory, _super);
    function WizardPageSectionFactory() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WizardPageSectionFactory.prototype.registerMetadata = function (pageId, metadata) {
        _super.prototype.registerMetadata.call(this, pageId, metadata);
        if (metadata.position === undefined)
            metadata.position = Object.keys(this.metadata).length - 1;
        if (metadata.recreate === undefined)
            metadata.recreate = false;
        if (metadata.disabledText === undefined)
            metadata.disabledText = '';
    };
    return WizardPageSectionFactory;
}(pageFactory_1.PageFactory));
exports.WizardPageSectionFactory = WizardPageSectionFactory;
