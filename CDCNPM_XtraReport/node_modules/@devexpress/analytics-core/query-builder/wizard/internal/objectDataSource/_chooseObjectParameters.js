/**
* DevExpress Analytics (query-builder\wizard\internal\objectDataSource\_chooseObjectParameters.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var utils_1 = require("../../../../serializer/utils");
var _editorTypeMapper_1 = require("../../../../core/internal/_editorTypeMapper");
var _utils_1 = require("../../../../serializer/_utils");
var dataSourceParameter_1 = require("../../../dataSource/dataSourceParameter");
var serializer_1 = require("../../../../serializer/serializer");
var propertygrid_1 = require("../../../../property-grid/propertygrid");
var ObjectDataSourceParameterProperty = (function (_super) {
    __extends(ObjectDataSourceParameterProperty, _super);
    function ObjectDataSourceParameterProperty(_parameter, _itemsProvider) {
        var _this = _super.call(this) || this;
        _this._parameter = _parameter;
        _this._itemsProvider = _itemsProvider;
        _this.type = ko.observable('');
        _this.type(_this._parameter.type);
        var typeValue = dataSourceParameter_1.DataSourceParameter._getTypeValue(_this._parameter.resultType);
        _this._initGetInfo(typeValue);
        new serializer_1.ModelSerializer().deserialize(_this, {});
        _this._subscribeProperties();
        return _this;
    }
    ObjectDataSourceParameterProperty.prototype.switchPropertyType = function () {
        if (this.isExpression()) {
            this.type(this._parameter.resultType);
            this._parameter.value = this.value();
        }
        else {
            this.type(_editorTypeMapper_1.ExpressionType);
            this._parameter.value = this.expression.value();
        }
    };
    ObjectDataSourceParameterProperty.prototype.isExpression = function () {
        return _editorTypeMapper_1.IsDataAccessExpression(this.type());
    };
    ObjectDataSourceParameterProperty.prototype._generateInfo = function (info, propertyName) {
        if (propertyName === void 0) { propertyName = 'value'; }
        return _utils_1.extend({}, {
            displayName: this._parameter.displayName,
            propertyName: propertyName,
            modelName: propertyName,
            editorOptions: {}
        }, info);
    };
    ObjectDataSourceParameterProperty.prototype._initGetInfo = function (typeValue) {
        var _this = this;
        var info = [
            this._generateInfo({
                editor: _editorTypeMapper_1.getEditorType(this._parameter.resultType),
                from: function (val) { return ko.observable((typeValue.valueConverter || (function (val) { return val; }))(val)); },
                defaultVal: !this.isExpression() && this._parameter.value || typeValue.defaultValue
            }),
            this._generateInfo({
                editor: { header: 'dx-objectdatasource-expression-popup' },
                from: function (val) {
                    return { value: ko.observable(val), itemsProvider: _this._itemsProvider };
                },
                defaultVal: this.isExpression() && this._parameter.value || ''
            }, 'expression')
        ];
        this._disposables.push({ dispose: function () { return _this.getInfo = undefined; } });
        this.getInfo = function () { return info; };
    };
    ObjectDataSourceParameterProperty.prototype._subscribeProperties = function () {
        var _this = this;
        this._disposables.push(this.type.subscribe(function (newVal) {
            _this._parameter.type = newVal;
        }), this.expression.value.subscribe(function (newVal) {
            _this.isExpression() && (_this._parameter.value = newVal);
        }), this.value.subscribe(function (newVal) {
            !_this.isExpression() && (_this._parameter.value = newVal);
        }));
    };
    ObjectDataSourceParameterProperty.prototype.isPropertyVisible = function (propertyName) {
        return this.isExpression() ? propertyName === 'expression' : propertyName === 'value';
    };
    return ObjectDataSourceParameterProperty;
}(utils_1.Disposable));
exports.ObjectDataSourceParameterProperty = ObjectDataSourceParameterProperty;
var ObjectDataSourceParameterEditorAddon = (function () {
    function ObjectDataSourceParameterEditorAddon(_editor) {
        this._editor = _editor;
        this.imageTemplateName = 'dx-objectdatasource-expression';
    }
    ObjectDataSourceParameterEditorAddon.prototype._doWithModel = function (action) {
        var model = this._editor._model();
        if (model instanceof ObjectDataSourceParameterProperty) {
            return action(model);
        }
    };
    ObjectDataSourceParameterEditorAddon.prototype.switchEditors = function () {
        this._doWithModel(function (model) { return model.switchPropertyType(); });
    };
    ObjectDataSourceParameterEditorAddon.prototype.isExpression = function () {
        return this._doWithModel(function (model) { return model.isExpression(); });
    };
    return ObjectDataSourceParameterEditorAddon;
}());
var ObjectDataSourceParameterGrid = (function (_super) {
    __extends(ObjectDataSourceParameterGrid, _super);
    function ObjectDataSourceParameterGrid(x) {
        var _this = _super.call(this, ko.observable(x)) || this;
        _this.createEditorAddOn = function (editor) {
            var addon = new ObjectDataSourceParameterEditorAddon(editor);
            return {
                data: addon,
                templateName: 'dx-wizard-menu-box-editorswitch'
            };
        };
        return _this;
    }
    return ObjectDataSourceParameterGrid;
}(propertygrid_1.ObjectProperties));
var ObjectDataSourceParametersModel = (function (_super) {
    __extends(ObjectDataSourceParametersModel, _super);
    function ObjectDataSourceParametersModel(parametersMethod, itemsProvider) {
        var _this = _super.call(this) || this;
        _this.displayName = parametersMethod.displayName;
        _this._grids = parametersMethod.parameters.map(function (x) {
            var param = new ObjectDataSourceParameterProperty(x, itemsProvider);
            var grid = new ObjectDataSourceParameterGrid(param);
            _this._disposables.push(param);
            _this._disposables.push(grid);
            return grid;
        });
        return _this;
    }
    return ObjectDataSourceParametersModel;
}(utils_1.Disposable));
exports.ObjectDataSourceParametersModel = ObjectDataSourceParametersModel;
var ChooseObjectMemberParameters = (function (_super) {
    __extends(ChooseObjectMemberParameters, _super);
    function ChooseObjectMemberParameters(_itemsProvider) {
        var _this = _super.call(this) || this;
        _this._itemsProvider = _itemsProvider;
        _this._ctorParametersObject = ko.observable();
        _this._dataMemberParametersObject = ko.observable();
        _this.hasParameters = function () {
            return _this._dataMemberParametersObject() || _this._ctorParametersObject();
        };
        return _this;
    }
    ChooseObjectMemberParameters.prototype._updateParameters = function (propertyName, method) {
        this[propertyName]() && this[propertyName]().dispose();
        if (method && method.parameters.length > 0)
            this[propertyName](new ObjectDataSourceParametersModel(method, this._itemsProvider));
        else
            this[propertyName](null);
    };
    ChooseObjectMemberParameters.prototype.updateCtorParameters = function (method) {
        this._updateParameters('_ctorParametersObject', method);
    };
    ChooseObjectMemberParameters.prototype.updateMethodParameters = function (method) {
        this._updateParameters('_dataMemberParametersObject', method);
    };
    return ChooseObjectMemberParameters;
}(utils_1.Disposable));
exports.ChooseObjectMemberParameters = ChooseObjectMemberParameters;
var ChooseObjectParameters = (function (_super) {
    __extends(ChooseObjectParameters, _super);
    function ChooseObjectParameters(selectedCtor, selectedDataMembers, itemsProvider) {
        var _this = _super.call(this, itemsProvider) || this;
        _this._disposables.push(selectedCtor.subscribe(function (ctor) {
            _this.updateCtorParameters(ctor);
        }));
        _this._disposables.push(selectedDataMembers.subscribe(function (a) {
            _this.updateMethodParameters(a[0]);
        }));
        return _this;
    }
    return ChooseObjectParameters;
}(ChooseObjectMemberParameters));
exports.ChooseObjectParameters = ChooseObjectParameters;
