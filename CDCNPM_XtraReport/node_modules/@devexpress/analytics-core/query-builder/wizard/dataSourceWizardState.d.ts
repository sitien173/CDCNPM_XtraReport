/**
* DevExpress Analytics (query-builder\wizard\dataSourceWizardState.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ObjectDataMember, ObjectCtor, ObjectType } from '../dataSource/object/objectSchema';
import { DataSourceType } from './pages/chooseDataSourceTypePage';
import { RequestWrapper } from '../utils/requestwrapper';
import { _SqlDataSourceWrapper } from './pages/sqlDataSourceWizard/configureQueryPage';
import { JsonDataSource } from '../dataSource/json/jsonDataSource';
import { ObjectDataSource } from '../dataSource/object/objectDataSource';
export interface ISqlDataSourceWizardState {
    name?: string;
    queryName?: string;
    sqlDataSourceJSON?: string;
    relations?: string[];
    customQueries?: string[];
}
export interface IJsonDataSourceWizardState {
    dataSourceName?: string;
    jsonScheme?: string;
    rootElement?: string;
    jsonSource?: string;
    newConnectionName?: string;
    connectionName?: string;
}
export interface IObjectDataSourceWizardState {
    dataSourceName?: string;
    selectedType?: string;
    dataMember?: ObjectDataMember;
    ctor?: ObjectCtor;
    context?: string;
    selectedObjectType?: ObjectType;
}
export interface IDataSourceWizardState {
    dataSourceType?: DataSourceType;
    sqlDataSourceWizard?: ISqlDataSourceWizardState;
    jsonDataSourceWizard?: IJsonDataSourceWizardState;
    objectDataSourceWizard?: IObjectDataSourceWizardState;
    dataSourceId?: string;
}
export declare var _restoreSqlDataSourceFromState: (state?: ISqlDataSourceWizardState, requestWrapper?: RequestWrapper, dataSourceId?: string) => _SqlDataSourceWrapper;
export declare var _setRestoreSqlDataSourceFromState: (func: any) => any;
export declare var _resetRestoreSqlDataSourceFromState: () => (state?: ISqlDataSourceWizardState, requestWrapper?: RequestWrapper, dataSourceId?: string) => _SqlDataSourceWrapper;
export declare var _restoreJsonDataSourceFromState: (state: IJsonDataSourceWizardState, requestWrapper?: RequestWrapper, dataSourceId?: string) => JsonDataSource;
export declare function _setRestoreJsonDataSourceFromState(func: any): void;
export declare function _resetRestoreJsonDataSourceFromState(): void;
export declare function _restoreObjectDataSourceFromState(state: IObjectDataSourceWizardState, requestWrapper?: RequestWrapper, dataSourceId?: string): ObjectDataSource;
export declare function _createDefaultDataSourceWizardState(sqlDataSourceWizardState?: ISqlDataSourceWizardState, jsonDataSourceWizardState?: IJsonDataSourceWizardState, objectDataSourceWizardState?: IObjectDataSourceWizardState): IDataSourceWizardState;
