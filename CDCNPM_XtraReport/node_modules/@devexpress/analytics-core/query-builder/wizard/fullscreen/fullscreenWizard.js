/**
* DevExpress Analytics (query-builder\wizard\fullscreen\fullscreenWizard.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var popupWizard_1 = require("../popupWizard");
var fullscreenWizardNavigation_1 = require("./fullscreenWizardNavigation");
var FullscreenWizard = (function (_super) {
    __extends(FullscreenWizard, _super);
    function FullscreenWizard(pageFactory, finishCallback) {
        var _this = _super.call(this, pageFactory, finishCallback) || this;
        _this._extendCssClass = 'dx-wizard-fullscreen';
        _this.navigationPanel = ko.observable(null);
        _this.isVisible.subscribe(function (newValue) {
            if (!newValue) {
                _this.navigationPanel() && _this.navigationPanel().resetAll();
                _this.navigationPanel() && _this.navigationPanel().dispose();
                _this._onCloseCallback && _this._onCloseCallback();
            }
        });
        return _this;
    }
    FullscreenWizard.prototype._onClose = function (callback) {
        this._onCloseCallback = callback;
    };
    FullscreenWizard.prototype.onFinish = function () {
        _super.prototype.onFinish.call(this);
        this.navigationPanel().dispose();
    };
    FullscreenWizard.prototype._initPage = function (page) {
        var _this = this;
        if (page.onChange)
            page.onChange(function () { return _this.navigationPanel()._resetNextPages(page.pageId); });
        return _super.prototype._initPage.call(this, page);
    };
    FullscreenWizard.prototype._onResetPage = function (page) {
        this.navigationPanel()._reset(page.pageId);
    };
    FullscreenWizard.prototype.start = function (finishCallback) {
        if (finishCallback)
            this['_finishCallback'] = finishCallback;
        this.navigationPanel() && this.navigationPanel().resetAll();
        this.navigationPanel() && this.navigationPanel().dispose();
        this.navigationPanel(new fullscreenWizardNavigation_1.WizardNavigationPanel(this));
        _super.prototype.start.call(this);
    };
    FullscreenWizard.prototype._pageDescription = function () {
        var currentStep = this.navigationPanel()._steps.filter(function (x) { return x.isActive(); })[0];
        if (currentStep) {
            return currentStep.text;
        }
        else {
            return this.pageFactory.getMetadata(this._currentPage().pageId).description;
        }
    };
    FullscreenWizard.prototype._description = function () {
        return '';
    };
    return FullscreenWizard;
}(popupWizard_1.PopupWizard));
exports.FullscreenWizard = FullscreenWizard;
