/**
* DevExpress Analytics (query-builder\wizard\pages\multiQueryWizard\configureMasterDetailRelationshipsPage.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { WizardPageBase } from '../wizardPage';
import { ISqlDataSourceWizardState } from '../../dataSourceWizardState';
import { ResultSet } from '../../../dataSource/resultSet';
import { SqlDataSource } from '../../../dataSource/sql/sqlDataSource';
import { MasterDetailEditor } from '../../../widgets/masterdetaileditor/_masterDetailEditor';
import { PageFactory } from '../../pageFactory';
export declare class ConfigureMasterDetailRelationshipsPage extends WizardPageBase<ISqlDataSourceWizardState, ISqlDataSourceWizardState> {
    private _sqlDataSourceResultSchema;
    dispose(): void;
    private _relations;
    private _resultSet;
    private relationsSubscription;
    private _sqlDataSourceWrapper;
    private _updateRelations;
    constructor(_sqlDataSourceResultSchema: (dataSource: SqlDataSource, queryName?: string, relationsEditing?: boolean) => JQueryPromise<{
        resultSchemaJSON: string;
        connectionParameters?: string;
    }>);
    canNext(): boolean;
    canFinish(): boolean;
    private _getResultSet;
    initialize(state: ISqlDataSourceWizardState): JQueryPromise<ResultSet>;
    commit(): JQuery.Promise<ISqlDataSourceWizardState, any, any>;
    _customResetOptions: () => undefined;
    _relationsEditor: ko.Observable<MasterDetailEditor>;
}
export declare function _registerConfigureMasterDetailRelationshipsPage(factory: PageFactory, sqlDataSourceResultSchema: (dataSource: SqlDataSource, queryName?: string, relationsEditing?: boolean) => JQueryPromise<{
    resultSchemaJSON: string;
    connectionParameters?: string;
}>): void;
