/**
* DevExpress Analytics (query-builder\wizard\pages\chooseDataSourceTypePage.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { WizardPageBase } from './wizardPage';
import { IDataSourceWizardState } from '../dataSourceWizardState';
import { _DataSourceWizardOptions } from '../dataSourceWizard';
import { PageFactory } from '../pageFactory';
export interface ITypeItem {
    text: string;
    imageClassName: string;
    imageTemplateName: string;
    type: number;
}
export declare enum DataSourceType {
    NoData = 0,
    Sql = 1,
    Json = 2,
    Object = 3
}
export declare class TypeItem implements ITypeItem {
    constructor(textDefault: string, textID: string, imageClassName: string, imageTemplateName: string, type: number);
    text: string;
    imageClassName: string;
    imageTemplateName: string;
    type: number;
}
export declare class ChooseDataSourceTypePage extends WizardPageBase<IDataSourceWizardState, IDataSourceWizardState> {
    protected _dataSourceTypeOptions: _DataSourceWizardOptions;
    constructor(_dataSourceTypeOptions: _DataSourceWizardOptions);
    canNext(): boolean;
    canFinish(): boolean;
    _itemClick: (item: ITypeItem) => void;
    _IsSelected: (item: ITypeItem) => boolean;
    _goToNextPage(): void;
    commit(): JQuery.Promise<IDataSourceWizardState, any, any>;
    protected _createTypeItems(): ITypeItem[];
    initialize(state: IDataSourceWizardState): JQuery.Promise<any, any, any>;
    typeItems: ITypeItem[];
    selectedItem: ko.Observable<ITypeItem>;
    _extendCssClass: (rightPath: string) => string;
}
export declare function _registerChooseDataSourceTypePage(factory: PageFactory, dataSourceTypeOptions: _DataSourceWizardOptions): void;
