/**
* DevExpress Analytics (query-builder\elements\columnModel.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { QueryElementBaseViewModel } from './queryElementModel';
import { ISerializationInfoArray } from '../../serializer/serializationInfo';
import { DBColumn, DBColumnType } from '../dataSource/dbColumn';
import { TableViewModel } from './tableModel';
import { IModelSerializer } from '../../serializer/serializer';
import { IConnectingPoint } from '../../diagram/elements/connectingPointModel';
export declare class ColumnViewModel extends QueryElementBaseViewModel {
    private _isAliasAutoGenerated;
    getInfo(): ISerializationInfoArray;
    constructor(model: any, dbColumn: DBColumn, parent: TableViewModel, serializer?: IModelSerializer);
    isPropertyDisabled(name: string): boolean;
    isNotAvailable: ko.Observable<boolean>;
    name: ko.Observable<string> | ko.Computed<string>;
    alias: ko.Observable<string> | ko.Computed<string>;
    selected: ko.Observable<boolean> | ko.Computed<boolean>;
    actualName: ko.Computed<string>;
    displayType: ko.Computed<string>;
    _type: ko.Observable<DBColumnType>;
    _size: ko.Observable<string>;
    dataType: ko.Computed<string>;
    rightConnectionPoint: IConnectingPoint;
    leftConnectionPoint: IConnectingPoint;
    sortingType: ko.Computed<string>;
    sortOrder: ko.Computed<number>;
    groupBy: ko.Computed<boolean>;
    aggregate: ko.Observable<string> | ko.Computed<string>;
    toggleSelected: (val: boolean, lazy?: boolean) => void;
    readonly specifics: "String" | "Date" | "Bool" | "Integer" | "Float";
}
