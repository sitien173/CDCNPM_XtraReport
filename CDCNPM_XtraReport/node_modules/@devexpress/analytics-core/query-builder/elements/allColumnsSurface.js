/**
* DevExpress Analytics (query-builder\elements\allColumnsSurface.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var baseSurface_1 = require("../../core/elements/baseSurface");
var _dragDropHandler_1 = require("../../core/dragDrop/_dragDropHandler");
var AllColumnsSurface = (function (_super) {
    __extends(AllColumnsSurface, _super);
    function AllColumnsSurface(control, context) {
        var _this = _super.call(this, control, context, null) || this;
        _this.template = 'dxqb-table-asterisk-field';
        _this.toggleSelected = function () {
            _this.getControlModel().selected(!_this.getControlModel().selected());
        };
        _this.selectedWrapper = ko.pureComputed(function () {
            return _this.getControlModel().selected();
        });
        _this.isOverAsterisk = ko.pureComputed(function () {
            return _this.underCursor().isOver && !_dragDropHandler_1.DragDropHandler.started();
        });
        _this.cssClasses = function () {
            return {
                'dxd-state-active': _this.selected,
                'dxd-state-hovered': _this.isOverAsterisk()
            };
        };
        return _this;
    }
    return AllColumnsSurface;
}(baseSurface_1.SurfaceElementBase));
exports.AllColumnsSurface = AllColumnsSurface;
