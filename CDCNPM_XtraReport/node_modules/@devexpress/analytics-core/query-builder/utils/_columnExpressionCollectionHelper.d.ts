/**
* DevExpress Analytics (query-builder\utils\_columnExpressionCollectionHelper.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { ColumnExpression } from '../elements/columnExpression';
import { QueryViewModel } from '../elements/queryModel';
export declare class ColumnExpressionCollectionHelper {
    static find(collection: ko.ObservableArray<ColumnExpression>, tableName: string, columnName: string): ColumnExpression;
    static findByName(collection: ko.ObservableArray<ColumnExpression>, actualName: string): ColumnExpression;
    static removeDependend(collection: ko.ObservableArray<ColumnExpression>, tableName: string): void;
    static setUniqueAlias(collection: any, alias: any): any;
    static addNew(query: QueryViewModel, collection: ko.ObservableArray<ColumnExpression>, table: string, column: string, lazy?: boolean): ColumnExpression;
    static remove(collection: ko.ObservableArray<ColumnExpression>, tableName: string, columnName: string, lazy?: boolean): void;
}
