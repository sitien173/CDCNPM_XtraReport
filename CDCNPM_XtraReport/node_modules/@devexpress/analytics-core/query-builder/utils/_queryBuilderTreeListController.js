/**
* DevExpress Analytics (query-builder\utils\_queryBuilderTreeListController.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _treelistController_1 = require("../../widgets/treelist/_treelistController");
var _dbObjectDragDropHandler_1 = require("../dragDrop/_dbObjectDragDropHandler");
var QueryBuilderTreeListController = (function (_super) {
    __extends(QueryBuilderTreeListController, _super);
    function QueryBuilderTreeListController(undoEngine, query) {
        var _this = _super.call(this) || this;
        var dropCallback = _dbObjectDragDropHandler_1.DbObjectDragDropHandler.getDropCallback(undoEngine, true);
        _this.dblClickHandler = function (item) {
            undoEngine().start();
            dropCallback(item.data, query());
            undoEngine().end();
        };
        return _this;
    }
    return QueryBuilderTreeListController;
}(_treelistController_1.TreeListController));
exports.QueryBuilderTreeListController = QueryBuilderTreeListController;
