/**
* DevExpress Analytics (query-builder\_initializer.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { QueryViewModel } from './elements/queryModel';
import { QuerySurface } from './elements/querySurface';
import { IDBSchemaProvider } from './dataSource/dbSchemaProvider';
import { IQueryBuilderModel } from './_queryBuilderModel';
import { IQueryBuilderOptions } from './binding/jsQueryBuilderBindingOptions';
import { IQueryBuilderCustomizationHandler } from './utils/_callbacks';
export declare function updateQueryBuilderSurfaceContentSize(getRoot: () => JQuery<HTMLElement>, surfaceSize: ko.Observable<number> | ko.Computed<number>, surface: ko.Observable<QuerySurface>, updateLayoutCallbacks?: Array<() => void>): () => void;
export declare function createIsLoadingFlag(model: ko.Observable<QueryViewModel> | ko.Computed<QueryViewModel>, dbSchemaProvider: ko.Observable<IDBSchemaProvider> | ko.Computed<IDBSchemaProvider>): ko.PureComputed<boolean>;
export declare var isJoinsResolvingDisabled: boolean;
export declare function createQueryBuilder(element: Element, options: IQueryBuilderOptions, callbacks: IQueryBuilderCustomizationHandler, applyBindings?: boolean): JQueryDeferred<IQueryBuilderModel>;
