/**
* DevExpress Analytics (core\internal\_processError.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _infoMessageHelpers_1 = require("../utils/_infoMessageHelpers");
exports._addErrorPrefix = true;
function _processError(errorThrown, deferred, jqXHR, textStatus, processErrorCallback) {
    var message = errorThrown;
    var error = _infoMessageHelpers_1.getErrorMessage(jqXHR);
    if (error && error !== message) {
        if (!exports._addErrorPrefix)
            message = error;
        else
            message += ': ' + error;
    }
    try {
        processErrorCallback ? processErrorCallback(message, jqXHR, textStatus) : _infoMessageHelpers_1.NotifyAboutWarning(message);
    }
    finally {
        deferred.reject(jqXHR, textStatus, errorThrown);
    }
}
exports._processError = _processError;
exports._errorProcessor = {
    handlers: [],
    call: function (e) {
        for (var i = 0; i < exports._errorProcessor.handlers.length; i++) {
            exports._errorProcessor.handlers[i](e);
        }
    }
};
function processErrorEvent(func) {
    if (func) {
        exports._errorProcessor.handlers.push(func);
    }
    return {
        dispose: function () {
            func && _removeErrorEvent(func);
        }
    };
}
exports.processErrorEvent = processErrorEvent;
function _removeErrorEvent(func) {
    exports._errorProcessor.handlers.splice(exports._errorProcessor.handlers.indexOf(func), 1);
}
