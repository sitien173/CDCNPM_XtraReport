/**
* DevExpress Analytics (core\widgets\colorPickerEditor.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var editor_1 = require("../../property-grid/widgets/editor");
var ColorPickerEditor = (function (_super) {
    __extends(ColorPickerEditor, _super);
    function ColorPickerEditor(info, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, info, level, parentDisabled, textToSearch) || this;
        _this._disposables.push(_this.displayValue = ko.pureComputed({
            read: function () {
                var value = ko.unwrap(_this.value);
                if (value && value.toLowerCase() === 'transparent') {
                    return 'rgba(0,0,0,0)';
                }
                if ((/^rgba\s*\((\s*[a-f\d]+\s*,){3}\s*[a-f\d]+\s*\)$/i).test(value))
                    return value;
                var div = document.createElement('div');
                div.style.backgroundColor = value;
                return div.style.backgroundColor || 'rgba(0,0,0,1)';
            },
            write: function (val) {
                _this.value(val);
            }
        }));
        return _this;
    }
    return ColorPickerEditor;
}(editor_1.Editor));
exports.ColorPickerEditor = ColorPickerEditor;
