/**
* DevExpress Analytics (core\widgets\propertygrid\_controlProperties.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var propertygrid_1 = require("../../../property-grid/propertygrid");
var _group_1 = require("./_group");
var _popupService_1 = require("../../../property-grid/internal/_popupService");
var _getNameHelpers_1 = require("../../internal/_getNameHelpers");
var _localization_1 = require("../../../property-grid/localization/_localization");
var text_box_1 = require("devextreme/ui/text_box");
var ControlProperties = (function (_super) {
    __extends(ControlProperties, _super);
    function ControlProperties(target, editorsInfo, level, useAddons) {
        if (level === void 0) { level = 0; }
        if (useAddons === void 0) { useAddons = true; }
        var _this = _super.call(this, target, editorsInfo, level, undefined, undefined, ko.observable(''), useAddons && new _popupService_1.PopupService()) || this;
        _this.focusedItem = ko.observable();
        _this.editorsRendered = ko.observable(false);
        _this.isSortingByGroups = ko.observable(true);
        _this.isSearching = ko.observable(false);
        _this.allEditorsCreated = ko.observable(false);
        _this.textToSearch = ko.observable('');
        _this._searchBox = null;
        _this.searchPlaceholder = function () { return _localization_1.searchPlaceholder(); };
        _this.switchSearchBox = function () {
            if (_this.isSearching()) {
                _this.isSearching(false);
                _this.textToSearch('');
            }
            else {
                _this.isSearching(true);
                _this._searchBox && _this._searchBox.focus();
            }
        };
        _this.createGroups(editorsInfo.groups);
        _this.update(target());
        _this._disposables.push(_this.focusedImageClassName = ko.pureComputed(function () {
            return _getNameHelpers_1.getImageClassName(target() && target().controlType);
        }));
        var subscription = _this.isSortingByGroups.subscribe(function (newVal) {
            if (!newVal) {
                _this.editorsRendered(true);
                subscription.dispose();
            }
        });
        _this._disposables.push(subscription);
        _this.focusedItem = target;
        _this._disposables.push(target.subscribe(function (newValue) {
            if (_this.isSearching() && !_this.textToSearch())
                _this.switchSearchBox();
        }));
        _this.displayExpr = function (value) { return _getNameHelpers_1.getControlFullName(value); };
        var timeout = null;
        _this._disposables.push(_this.textToSearch.subscribe(function (newValue) {
            timeout && clearTimeout(timeout);
            timeout = setTimeout(function () {
                _this._textToSearch(newValue);
                newValue && _this.groups.forEach(function (group) { return group.collapsed() && group.editors().some(function (editor) { return editor.isSearchedProperty(); }) && group.collapsed(false); });
            }, 200);
        }));
        return _this;
    }
    ControlProperties.prototype.getEditors = function () {
        var editors = _super.prototype.getEditors.call(this);
        var editorNames = editors.map(function (editor) { return editor.displayName(); }).sort();
        editors.sort(function (a, b) {
            return editorNames.indexOf(a.displayName()) - editorNames.indexOf(b.displayName());
        });
        return editors;
    };
    ControlProperties.prototype._update = function (target, editorsInfo, recreateEditors) {
        this.groups && this.groups.forEach(function (group) {
            if (group.editors().length === 0)
                group.recreate();
        });
        return _super.prototype._update.call(this, target, editorsInfo, recreateEditors);
    };
    ControlProperties.prototype.cleanEditors = function () {
        _super.prototype.cleanEditors.call(this);
        this.groups.forEach(function (x) { return x.resetEditors(); });
    };
    ControlProperties.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeArray(this.groups);
        this.disposeObservableArray(this._editors);
        this.resetObservableArray(this._editors);
        this.cleanSubscriptions();
        this._searchBox = null;
        this.focusedItem = null;
    };
    ControlProperties.prototype.createGroups = function (groups) {
        var _this = this;
        this.groups = Object.keys(groups).map(function (name) {
            return new _group_1.Group(name, groups[name].info, function (serializationInfo) {
                return serializationInfo
                    .filter(function (info) { return !!info.editor; })
                    .map(function (info) {
                    var editor = _this.findEditorByInfo(info);
                    if (editor)
                        return editor;
                    editor = _this.createEditor(info);
                    _this._editors.push(editor);
                    return editor;
                });
            }, true, groups[name].displayName);
        });
        this._disposables.push.apply(this._disposables, this.groups);
    };
    ControlProperties.prototype.registerAccessibilityProvider = function (accessibilityProvider) {
        _super.prototype.registerAccessibilityProvider.call(this, accessibilityProvider);
        this.groups.forEach(function (group) {
            group.registerAccessibilityProvider(accessibilityProvider);
        });
    };
    ControlProperties.prototype.searchBox = function ($element) {
        this._searchBox = text_box_1.default.getInstance($element.get(0));
    };
    return ControlProperties;
}(propertygrid_1.ObjectProperties));
exports.ControlProperties = ControlProperties;
