/**
* DevExpress Analytics (core\widgets\textAlignmentEditor\_textAlignmentEditor.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var _localization_1 = require("../../../property-grid/localization/_localization");
var utils_1 = require("../../../serializer/utils");
var TextAlignmentModel = (function (_super) {
    __extends(TextAlignmentModel, _super);
    function TextAlignmentModel(object) {
        var _this = _super.call(this) || this;
        _this.top = ko.observable(false);
        _this.middle = ko.observable(false);
        _this.bottom = ko.observable(false);
        _this.left = ko.observable(false);
        _this.right = ko.observable(false);
        _this.center = ko.observable(false);
        _this.justify = ko.observable(false);
        _this.horizontalString = ko.observable(_localization_1.getLocalization('Horizontal', 'ASPxReportsStringId.ReportDesigner_TextAlignment_Horizontal'));
        _this.verticalString = ko.observable(_localization_1.getLocalization('Vertical', 'ASPxReportsStringId.ReportDesigner_TextAlignment_Vertical'));
        _this.disabled = object.disabled || ko.observable(false);
        _this.value = object.value;
        _this.updateModel(object.value());
        _this._disposables.push(object.value.subscribe(function (newVal) {
            _this.updateModel(newVal);
        }));
        return _this;
    }
    TextAlignmentModel.prototype._resetHorizontalValues = function () {
        this.left(false), this.right(false), this.center(false), this.justify(false);
    };
    TextAlignmentModel.prototype._resetVerticalValues = function () {
        this.top(false), this.middle(false), this.bottom(false);
    };
    TextAlignmentModel.prototype.setValue = function (name, type) {
        if (this.disabled() || this[name]())
            return;
        if (type == 'Horizontal')
            this._resetHorizontalValues();
        else
            this._resetVerticalValues();
        this[name](true);
        this.updateValue();
    };
    TextAlignmentModel.prototype.updateModel = function (value) {
        var val = value || 'TopLeft';
        this.top(val.indexOf('Top') !== -1);
        this.middle(val.indexOf('Middle') !== -1);
        this.bottom(val.indexOf('Bottom') !== -1);
        this.left(val.indexOf('Left') !== -1);
        this.right(val.indexOf('Right') !== -1);
        this.center(val.indexOf('Center') !== -1);
        this.justify(val.indexOf('Justify') !== -1);
    };
    TextAlignmentModel.prototype.updateValue = function () {
        var result = [];
        this.top() ? result.push('Top') : null;
        this.middle() ? result.push('Middle') : null;
        this.bottom() ? result.push('Bottom') : null;
        this.left() ? result.push('Left') : null;
        this.right() ? result.push('Right') : null;
        this.center() ? result.push('Center') : null;
        this.justify() ? result.push('Justify') : null;
        this.value(result.join(''));
    };
    return TextAlignmentModel;
}(utils_1.Disposable));
exports.TextAlignmentModel = TextAlignmentModel;
