/**
* DevExpress Analytics (core\widgets\bordereditor\_bordereditor.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var utils_1 = require("../../../serializer/utils");
var BordersModel = (function (_super) {
    __extends(BordersModel, _super);
    function BordersModel(object) {
        var _this = _super.call(this) || this;
        _this.left = ko.observable(false);
        _this.right = ko.observable(false);
        _this.top = ko.observable(false);
        _this.bottom = ko.observable(false);
        _this.disabled = object.disabled || ko.observable(false);
        _this.value = object.value;
        _this.updateModel(object.value());
        _this._disposables.push(object.value.subscribe(function (newVal) {
            _this.updateModel(newVal);
        }));
        return _this;
    }
    BordersModel.prototype._setAllValues = function (value) {
        this.left(value), this.bottom(value), this.right(value), this.top(value);
    };
    BordersModel.prototype.setValue = function (name) {
        if (this.disabled())
            return;
        this[name](!this[name]());
        this.updateValue();
    };
    BordersModel.prototype.setAll = function () {
        if (this.disabled())
            return;
        this._setAllValues(true);
        this.updateValue();
    };
    BordersModel.prototype.setNone = function () {
        if (this.disabled())
            return;
        this._setAllValues(false);
        this.updateValue();
    };
    BordersModel.prototype.updateModel = function (value) {
        var val = value || 'None';
        if (val.indexOf('All') !== -1) {
            this._setAllValues(true);
        }
        else if (val.indexOf('None') !== -1) {
            this._setAllValues(false);
        }
        else {
            this.left(val.indexOf('Left') !== -1);
            this.top(val.indexOf('Top') !== -1);
            this.right(val.indexOf('Right') !== -1);
            this.bottom(val.indexOf('Bottom') !== -1);
        }
    };
    BordersModel.prototype.updateValue = function () {
        var result = [];
        if (this.left() && this.right() && this.top() && this.bottom()) {
            result.push('All');
        }
        else if (!this.left() && !this.right() && !this.top() && !this.bottom()) {
            result.push('None');
        }
        else {
            this.left() ? result.push('Left') : null;
            this.right() ? result.push('Right') : null;
            this.top() ? result.push('Top') : null;
            this.bottom() ? result.push('Bottom') : null;
        }
        this.value(result.join(','));
    };
    return BordersModel;
}(utils_1.Disposable));
exports.BordersModel = BordersModel;
