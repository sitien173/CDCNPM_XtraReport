/**
* DevExpress Analytics (core\widgets\_requiredNullableEditor.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var editor_1 = require("../../property-grid/widgets/editor");
var _internal_1 = require("../../property-grid/widgets/internal/_internal");
var _valueEditorHelper_1 = require("../../widgets/internal/_valueEditorHelper");
var RequiredNullableEditor = (function (_super) {
    __extends(RequiredNullableEditor, _super);
    function RequiredNullableEditor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RequiredNullableEditor.prototype._getEditorValidationRules = function () {
        return (_super.prototype._getEditorValidationRules.call(this) || []).concat(this.editorOptions && this.editorOptions.showClearButton && ko.unwrap(this.editorOptions.showClearButton) ? [] : _internal_1.requiredValidationRules);
    };
    return RequiredNullableEditor;
}(editor_1.Editor));
exports.RequiredNullableEditor = RequiredNullableEditor;
function createNumericEditor(dotNetTypeFullName, specifics) {
    var DynamicNumberEditor = (function (_super) {
        __extends(DynamicNumberEditor, _super);
        function DynamicNumberEditor(info, level, parentDisabled, textToSearch) {
            return _super.call(this, info, level, parentDisabled, textToSearch) || this;
        }
        DynamicNumberEditor.prototype.getOptions = function (templateOptions) {
            var options = _super.prototype.getOptions.call(this, templateOptions);
            return _valueEditorHelper_1.ValueEditorHelper.getNumberEditorOptions(dotNetTypeFullName, specifics, options);
        };
        return DynamicNumberEditor;
    }(RequiredNullableEditor));
    return {
        header: 'dx-number-editor',
        editorType: DynamicNumberEditor
    };
}
exports.createNumericEditor = createNumericEditor;
