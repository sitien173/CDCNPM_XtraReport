/**
* DevExpress Analytics (core\utils\_fieldListProvider.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { IPathRequest } from '../../widgets/common/pathRequest';
import { IDataMemberInfo, IItemsProvider } from '../../widgets/utils';
export interface IDataSourceInfo {
    name: string;
    specifics?: string;
    id?: string;
    ref?: string;
    data: any;
    hasErrors?: boolean;
    dataSerializer?: string;
    isSqlDataSource?: boolean;
    isJsonDataSource?: boolean;
    isObjectDataSource?: boolean;
}
export interface IItemsExtender {
    beforeItemsFilled: (request: IPathRequest, items: IDataMemberInfo[]) => boolean;
    afterItemsFilled?: (request: IPathRequest, items: IDataMemberInfo[]) => void;
}
export declare class FieldListProvider implements IItemsProvider {
    private _extenders;
    private _patchRequest;
    private _beforeFieldListCallback;
    private _afterFieldListCallBack;
    constructor(fieldListCallback: (pathRequest: IPathRequest) => JQueryPromise<IDataMemberInfo[]>, rootItems: ko.ObservableArray<IDataSourceInfo>, extenders?: IItemsExtender[]);
    getItems: (IPathRequest: any) => JQueryPromise<IDataMemberInfo[]>;
}
