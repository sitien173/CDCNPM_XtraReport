/**
* DevExpress Analytics (core\utils\_infoMessageHelpers.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var $ = require("jquery");
var _utils_1 = require("./_utils");
var _surfaceHelpers_1 = require("../internal/_surfaceHelpers");
var notify_1 = require("devextreme/ui/notify");
exports.NotifyType = {
    info: 'info',
    warning: 'warning',
    error: 'error',
    success: 'success'
};
var wrappedConsole = (function (console) {
    var getWrappedMethod = function (methodName) { return (function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (console && $.isFunction(console[methodName])) {
            console[methodName].apply(console, arguments);
        }
    }); };
    return {
        info: getWrappedMethod('info'),
        warn: getWrappedMethod('warn'),
        error: getWrappedMethod('error')
    };
})(window.console);
function NotifyAboutWarning(msg, showForUser) {
    if (showForUser === void 0) { showForUser = false; }
    if (showForUser) {
        exports.ShowMessage(msg);
    }
    if (_utils_1.DEBUG) {
        throw new Error(msg);
    }
    else {
        wrappedConsole.warn(msg);
    }
}
exports.NotifyAboutWarning = NotifyAboutWarning;
function getErrorMessage(jqXHR) {
    return jqXHR && jqXHR.responseJSON && jqXHR.responseJSON.error ? jqXHR.responseJSON.error : '';
}
exports.getErrorMessage = getErrorMessage;
var _showMessage = function (msg, type, displayTime, debugInfo, contentTemplate) {
    if (type === void 0) { type = 'error'; }
    var containerElement = $('.dx-designer-viewport')[0];
    notify_1.default({
        message: msg,
        type: type,
        maxWidth: containerElement ? containerElement.clientWidth : undefined,
        position: { boundary: containerElement, collision: 'fit', of: _surfaceHelpers_1.chooseBetterPositionOf(document.documentElement, containerElement), my: 'bottom', at: 'bottom', offset: '0 -10' },
        container: containerElement,
        closeOnOutsideClick: true,
        closeOnSwipe: false,
        displayTime: displayTime || (type === 'error' ? 60000 : 3000),
        contentTemplate: contentTemplate
    });
};
exports.ShowMessage = _showMessage;
exports._setShowMessageFunc = function (func) { return exports.ShowMessage = func; };
exports._resetShowMessageFunc = function () { return exports.ShowMessage = _showMessage; };
