/**
* DevExpress Analytics (core\utils\_designerCreator.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var undoengine_1 = require("../../undo-engine/undoengine");
var utils_1 = require("../../serializer/utils");
var _controlProperties_1 = require("../widgets/propertygrid/_controlProperties");
var propertygrid_1 = require("../../property-grid/propertygrid");
var _controlsHelper_1 = require("../internal/_controlsHelper");
var _stores_1 = require("../internal/_stores");
var tabPanel_1 = require("../tools/tabPanel");
var _actionList_1 = require("../tools/_actionList");
var _utils_1 = require("./_utils");
var _utils_2 = require("../../serializer/_utils");
var DesignerContextGeneratorInternal = (function () {
    function DesignerContextGeneratorInternal(_context, _rtl) {
        this._context = _context;
        this._rtl = _rtl;
    }
    DesignerContextGeneratorInternal.prototype.addElement = function (propertyName, model) {
        this._context[propertyName] = model;
        return this;
    };
    DesignerContextGeneratorInternal.prototype.addUndoEngine = function (undoEngine) {
        if (undoEngine === void 0) { undoEngine = ko.observable(new undoengine_1.UndoEngine(this._context.model)); }
        this._context.undoEngine = undoEngine;
        return this;
    };
    DesignerContextGeneratorInternal.prototype.addSurface = function (surface) {
        this._context.surface = surface;
        return this;
    };
    DesignerContextGeneratorInternal.prototype.getContext = function () {
        return this._context;
    };
    return DesignerContextGeneratorInternal;
}());
exports.DesignerContextGeneratorInternal = DesignerContextGeneratorInternal;
var DesignerContextGenerator = (function () {
    function DesignerContextGenerator(_rtl) {
        this._rtl = _rtl;
    }
    DesignerContextGenerator.prototype.addModel = function (model) {
        return new DesignerContextGeneratorInternal({ model: model }, this._rtl);
    };
    return DesignerContextGenerator;
}());
exports.DesignerContextGenerator = DesignerContextGenerator;
var ResizeSettings = (function (_super) {
    __extends(ResizeSettings, _super);
    function ResizeSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ResizeSettings.prototype, "handler", {
        get: function () { return this._handler; },
        set: function (newVal) {
            this._disposables.push(newVal);
            this._handler = newVal;
        },
        enumerable: true,
        configurable: true
    });
    ResizeSettings.prototype.generate = function () {
        var result = {};
        if (this.handler)
            result['resizeHandler'] = this.handler;
        return result;
    };
    return ResizeSettings;
}(utils_1.Disposable));
exports.ResizeSettings = ResizeSettings;
var ContextActionsSettings = (function (_super) {
    __extends(ContextActionsSettings, _super);
    function ContextActionsSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ContextActionsSettings.prototype._actionUndoEngineWrappingFunction = function (contextActions, undoEngine) {
        return _utils_1.createActionWrappingFunction('WrapWithUndoEngine', function (model, handler) {
            undoEngine().start();
            handler(model);
            undoEngine().end();
        })(contextActions);
    };
    ContextActionsSettings.prototype._collectActions = function (editableObj, undoEngine) {
        var editable = editableObj(), contextActions = [];
        this.actionProviders.forEach(function (actionProvider) {
            contextActions.push.apply(contextActions, actionProvider.getActions(editable));
        });
        this._actionUndoEngineWrappingFunction(contextActions, undoEngine);
        return contextActions;
    };
    Object.defineProperty(ContextActionsSettings.prototype, "actionProviders", {
        get: function () {
            return this._actionProviders;
        },
        set: function (val) {
            this._disposables.push.apply(this._disposables, val);
            this._actionProviders = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ContextActionsSettings.prototype, "actions", {
        get: function () {
            return this._actions;
        },
        set: function (val) {
            this._disposables.push(val);
            this._actions = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ContextActionsSettings.prototype, "groupActions", {
        get: function () {
            return this._groupActions;
        },
        set: function (val) {
            this._disposables.push(val);
            this._groupActions = val;
        },
        enumerable: true,
        configurable: true
    });
    ContextActionsSettings.prototype.createDefaultActions = function (editableObj, undoEngine) {
        var _this = this;
        this.actions = ko.computed(function () {
            return _this._collectActions(editableObj, undoEngine);
        });
    };
    ContextActionsSettings.prototype.createDefaultGroupAction = function (editableObj, undoEngine) {
        var _this = this;
        this.groupActions = ko.computed(function () {
            return _utils_1.collectGroupsFromFlatList(_this._collectActions(editableObj, undoEngine), function (x) { return x.group && x.group(); });
        });
    };
    ContextActionsSettings.prototype.generate = function () {
        var result = {};
        if (this.actionProviders)
            result['contextActionProviders'] = this.actionProviders;
        if (this.actions)
            result['contextActions'] = this.actions;
        if (this.groupActions)
            result['contextGroupActions'] = this.groupActions;
        return result;
    };
    return ContextActionsSettings;
}(utils_1.Disposable));
exports.ContextActionsSettings = ContextActionsSettings;
var DragDropSettings = (function (_super) {
    __extends(DragDropSettings, _super);
    function DragDropSettings() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._model = {};
        return _this;
    }
    Object.defineProperty(DragDropSettings.prototype, "dragHelperContent", {
        get: function () {
            return this._dragHelperContent;
        },
        set: function (val) {
            this._disposables.push(val);
            this._dragHelperContent = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DragDropSettings.prototype, "dragDropStarted", {
        get: function () {
            return this._dragDropStarted;
        },
        set: function (val) {
            this._disposables.push(val);
            this._dragDropStarted = val;
        },
        enumerable: true,
        configurable: true
    });
    DragDropSettings.prototype.addDragDropHandler = function (propertyName, handler) {
        this._disposables.push(handler);
        this._model[propertyName] = handler;
    };
    DragDropSettings.prototype.generate = function () {
        var result = this._model;
        if (this.dragHelperContent)
            result['dragHelperContent'] = this.dragHelperContent;
        if (this.dragDropStarted)
            result['dragDropStarted'] = this.dragDropStarted;
        return result;
    };
    return DragDropSettings;
}(utils_1.Disposable));
exports.DragDropSettings = DragDropSettings;
var ControlsHelperSettings = (function (_super) {
    __extends(ControlsHelperSettings, _super);
    function ControlsHelperSettings(_selection, _context) {
        var _this = _super.call(this) || this;
        _this._selection = _selection;
        _this._context = _context;
        _this._model = {};
        return _this;
    }
    ControlsHelperSettings.prototype.generate = function () {
        var result = this._model;
        if (this.controlsHelper)
            result['controlsHelper'] = this.controlsHelper;
        return result;
    };
    ControlsHelperSettings.prototype.addControlsHelper = function (helper) {
        var _this = this;
        this.controlsHelper = helper || new _controlsHelper_1.DesignControlsHelper(this._context.model, [{
                added: function (control) { },
                deleted: function (control) { control.surface === _this._selection.focused() && _this._selection.focused(control.surface.findNextSelection()); }
            }]);
        this._disposables.push(this.controlsHelper);
        return this;
    };
    ControlsHelperSettings.prototype.addControlsStore = function (store) {
        store = store || new _stores_1.ControlsStore(this.controlsHelper.allControls);
        this._disposables.push(store);
        this._model['controlsStore'] = store;
        return this;
    };
    return ControlsHelperSettings;
}(utils_1.Disposable));
exports.ControlsHelperSettings = ControlsHelperSettings;
var MenuSettings = (function (_super) {
    __extends(MenuSettings, _super);
    function MenuSettings() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.stopPropagation = false;
        return _this;
    }
    MenuSettings.prototype.generate = function () {
        var result = {};
        if (this.appMenuVisible)
            result['appMenuVisible'] = this.appMenuVisible;
        if (this.toggleAppMenu)
            result['toggleAppMenu'] = this.toggleAppMenu;
        if (this.getMenuPopupContainer)
            result['getMenuPopupContainer'] = this.getMenuPopupContainer;
        if (this.getMenuPopupTarget)
            result['getMenuPopupTarget'] = this.getMenuPopupTarget;
        result['stopPropagation'] = this.stopPropagation;
        return result;
    };
    Object.defineProperty(MenuSettings.prototype, "appMenuVisible", {
        get: function () {
            return this._appMenuVisible;
        },
        set: function (val) {
            this._disposables.push(val);
            this._appMenuVisible = val;
        },
        enumerable: true,
        configurable: true
    });
    return MenuSettings;
}(utils_1.Disposable));
exports.MenuSettings = MenuSettings;
var SelectionSettings = (function (_super) {
    __extends(SelectionSettings, _super);
    function SelectionSettings() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._dragDropSettings = new DragDropSettings();
        _this._resizeSettings = new ResizeSettings();
        return _this;
    }
    SelectionSettings.prototype.dispose = function () {
        this._editableObject(null);
        _super.prototype.dispose.call(this);
        this.removeProperties();
    };
    Object.defineProperty(SelectionSettings.prototype, "selection", {
        get: function () {
            return this._selection;
        },
        set: function (val) {
            this._disposables.push(val);
            this._selection = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SelectionSettings.prototype, "snapHelper", {
        get: function () {
            return this._snapHelper;
        },
        set: function (val) {
            this._disposables.push(val);
            this._snapHelper = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SelectionSettings.prototype, "editableObject", {
        get: function () {
            return this._editableObject;
        },
        set: function (val) {
            this._disposables.push(val);
            this._editableObject = val;
        },
        enumerable: true,
        configurable: true
    });
    SelectionSettings.prototype.addDragDrop = function (func) {
        func(this._dragDropSettings);
        this._disposables.push(this._dragDropSettings);
    };
    SelectionSettings.prototype.addResize = function (func) {
        func(this._resizeSettings);
        this._disposables.push(this._resizeSettings);
    };
    SelectionSettings.prototype.generate = function () {
        var result = {};
        if (this.selection)
            result['selection'] = this.selection;
        if (this.snapHelper)
            result['snapHelper'] = this.snapHelper;
        if (this.editableObject)
            result['editableObject'] = this.editableObject;
        return _utils_2.extend(result, this._dragDropSettings.generate(), this._resizeSettings.generate());
    };
    return SelectionSettings;
}(utils_1.Disposable));
exports.SelectionSettings = SelectionSettings;
var CommonDesignerGenerator = (function (_super) {
    __extends(CommonDesignerGenerator, _super);
    function CommonDesignerGenerator(_context, _rtl) {
        var _this = _super.call(this) || this;
        _this._context = _context;
        _this._rtl = _rtl;
        _this._model = {};
        _this._selectionSettings = new SelectionSettings();
        _this._model.rtl = _this._rtl;
        _this._model.dispose = function () {
            _this.dispose();
        };
        return _this;
    }
    CommonDesignerGenerator.prototype._createPopularProperties = function (info, popularProperties) {
        var properties = [];
        popularProperties.forEach(function (name) {
            var property = info.filter(function (propertyInfo) { return propertyInfo.propertyName === name; })[0];
            if (property) {
                properties.push(property);
            }
        });
        return properties;
    };
    CommonDesignerGenerator.prototype._resetModel = function () {
        var _this = this;
        Object.keys(this._model).forEach(function (propertyName) {
            if (propertyName !== 'dispose')
                delete _this._model[propertyName];
        });
    };
    Object.defineProperty(CommonDesignerGenerator.prototype, "rtl", {
        get: function () {
            return this._rtl;
        },
        set: function (newVal) {
            this._rtl = newVal;
            this._model.rtl = newVal;
        },
        enumerable: true,
        configurable: true
    });
    CommonDesignerGenerator.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._resetModel();
    };
    CommonDesignerGenerator.prototype.initializeContext = function (context) {
        this._context = context;
        return this;
    };
    CommonDesignerGenerator.prototype.getPropertyByName = function (propertyName) {
        return this._model[propertyName];
    };
    CommonDesignerGenerator.prototype.addElement = function (propertyName, elementFunc) {
        this._model[propertyName] = elementFunc();
        this._disposables.push(this._model[propertyName]);
        return this;
    };
    CommonDesignerGenerator.prototype.mapOnContext = function () {
        this._model.model = this._context.model;
        this._model.surface = this._context.surface;
        this._model.undoEngine = this._context.undoEngine;
        return this;
    };
    CommonDesignerGenerator.prototype.addSelection = function (func) {
        func(this._selectionSettings);
        this._disposables.push(this._selectionSettings);
        _utils_2.extend(this._model, this._selectionSettings.generate());
        return this;
    };
    CommonDesignerGenerator.prototype.addPropertyGrid = function (propertyGrid, propertyName) {
        if (propertyName === void 0) { propertyName = 'propertyGrid'; }
        this._model[propertyName] = propertyGrid && propertyGrid();
        this._disposables.push(this._model[propertyName]);
        return this;
    };
    CommonDesignerGenerator.prototype.addControlProperties = function (editors, groups, groupLocalizationIDs, accessibilityProvider) {
        var _this = this;
        return this.addPropertyGrid(function () { return _this.createControlProperties(editors, groups, accessibilityProvider); });
    };
    CommonDesignerGenerator.prototype.createControlProperties = function (editors, groups, accessibilityProvider) {
        var properties = new _controlProperties_1.ControlProperties(this._model.editableObject, { groups: groups, editors: editors }, null);
        if (accessibilityProvider)
            properties.registerAccessibilityProvider(accessibilityProvider);
        return properties;
    };
    CommonDesignerGenerator.prototype.addPopularProperties = function (controlsFactory, accessibilityProvider) {
        var _this = this;
        return this.addPropertyGrid(function () {
            var properties = new propertygrid_1.ObjectProperties(ko.pureComputed(function () {
                var popularPropertiesObject = { getInfo: function () { return []; } }, editable = _this._model.editableObject();
                if (editable) {
                    var controlInfo = controlsFactory.controlsMap[editable.controlType], propertiesInfo = _this._createPopularProperties(controlInfo && controlInfo.info || [], controlInfo && controlInfo.popularProperties || []);
                    (propertiesInfo).forEach(function (item) {
                        if (item.propertyName in editable)
                            popularPropertiesObject[item.propertyName] = editable[item.propertyName];
                    });
                    popularPropertiesObject.getInfo = function () {
                        return propertiesInfo;
                    };
                    popularPropertiesObject['root'] = editable.root;
                    popularPropertiesObject['actions'] = editable.actions;
                    popularPropertiesObject['actionProviders'] = editable.actionProviders;
                    popularPropertiesObject['getPath'] = function (propertyName) { return editable.getPath && editable.getPath(propertyName) || ''; };
                    popularPropertiesObject['getModel'] = function () { return editable; };
                    popularPropertiesObject['isPropertyModified'] = function (name) {
                        return editable.isPropertyModified ? editable.isPropertyModified(name) : false;
                    };
                    popularPropertiesObject['getActionClassName'] = function (name) {
                        return editable['getActionClassName'] ? editable['getActionClassName'](name) : '';
                    };
                    popularPropertiesObject['getMenuBoxTemplate'] = function (name) {
                        return editable['getMenuBoxTemplate'] ? editable['getMenuBoxTemplate'](name) : '';
                    };
                    popularPropertiesObject['isPropertyVisible'] = function (propertyName) {
                        return editable['isPropertyVisible'] ? editable['isPropertyVisible'](propertyName) : true;
                    };
                    popularPropertiesObject['isPropertyHighlighted'] = function (propertyName) {
                        return editable['isPropertyHighlighted'] ? editable['isPropertyHighlighted'](propertyName) : false;
                    };
                    popularPropertiesObject['isPropertyDisabled'] = function (name) {
                        return editable.isPropertyDisabled ? editable.isPropertyDisabled(name) : false;
                    };
                    popularPropertiesObject['isSame'] = function (x) { return x === editable; };
                    ['name', 'displayName'].forEach(function (propertyName) {
                        if (propertyName in editable) {
                            popularPropertiesObject[propertyName] = editable[propertyName];
                        }
                    });
                }
                return popularPropertiesObject;
            }), undefined, undefined, undefined);
            if (accessibilityProvider)
                properties.registerAccessibilityProvider(accessibilityProvider);
            return properties;
        }, 'popularProperties');
    };
    CommonDesignerGenerator.prototype.addToolboxItems = function (items) {
        this._model.toolboxItems = items && items();
        return this;
    };
    CommonDesignerGenerator.prototype.addGroupedToolboxItems = function () {
        this._model.groupedToolboxItems = _utils_1.collectGroupsFromFlatList(this._model.toolboxItems, function (item) { return item.info.group; });
        return this;
    };
    CommonDesignerGenerator.prototype.addTabPanel = function (panel, addTabInfo) {
        if (addTabInfo === void 0) { addTabInfo = function () { return []; }; }
        var panelModel = panel && panel() || new tabPanel_1.TabPanel({ tabs: addTabInfo(), rtl: this._rtl, width: 375 });
        this._model.tabPanel = panelModel;
        this._disposables.push(panelModel);
        return this;
    };
    CommonDesignerGenerator.prototype.addIsLoading = function (isLoadingFunc) {
        if (isLoadingFunc === void 0) { isLoadingFunc = function () { return ko.observable(true); }; }
        this._model.isLoading = isLoadingFunc();
        this._disposables.push(this._model.isLoading);
        return this;
    };
    CommonDesignerGenerator.prototype.addControlsHelper = function (func) {
        var settings = new ControlsHelperSettings(this._selectionSettings.selection, this._context);
        func(settings);
        this._disposables.push(settings);
        _utils_2.extend(this._model, settings.generate());
        return this;
    };
    CommonDesignerGenerator.prototype.addMenu = function (func) {
        var settings = new MenuSettings();
        func(settings);
        this._disposables.push(settings);
        _utils_2.extend(this._model, settings.generate());
        return this;
    };
    CommonDesignerGenerator.prototype.addContextActions = function (func) {
        var settings = new ContextActionsSettings();
        func(settings);
        this._disposables.push(settings);
        _utils_2.extend(this._model, settings.generate());
        return this;
    };
    CommonDesignerGenerator.prototype.addParts = function (func, useDefaults) {
        if (func === void 0) { func = function (parts) { return parts; }; }
        if (useDefaults === void 0) { useDefaults = true; }
        var parts = [];
        if (useDefaults)
            parts = _utils_1.generateDefaultParts(this._model);
        this._model.parts = func(parts);
        return this;
    };
    CommonDesignerGenerator.prototype.getModel = function () {
        return this._model;
    };
    CommonDesignerGenerator.prototype.addActionList = function (actionListsFunc) {
        var actionLists = actionListsFunc && actionListsFunc() || new _actionList_1.ActionLists(this._context.surface, this._selectionSettings.selection, this._context.undoEngine, function () { });
        this._disposables.push(actionLists);
        this._model.actionLists = actionLists;
        return this;
    };
    return CommonDesignerGenerator;
}(utils_1.Disposable));
exports.CommonDesignerGenerator = CommonDesignerGenerator;
