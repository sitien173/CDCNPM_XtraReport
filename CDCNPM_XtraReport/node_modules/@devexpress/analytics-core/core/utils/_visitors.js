/**
* DevExpress Analytics (core\utils\_visitors.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
function objectsVisitor(target, visitor, visited, skip) {
    if (visited === void 0) { visited = []; }
    if (skip === void 0) { skip = ['surface', 'reportSource']; }
    if (visited.indexOf(target) !== -1) {
        return;
    }
    if (target && target !== undefined) {
        var properties = [];
        Object.keys(target).forEach(function (propertyName) {
            if (visited.indexOf(target[propertyName]) === -1 && propertyName.indexOf('_') !== 0 && skip.indexOf(propertyName) === -1) {
                properties.push(target[propertyName]);
            }
        });
        visitor(target);
        visited.push(target);
        for (var i = 0; i < properties.length; i++) {
            properties[i] = ko.unwrap(properties[i]);
            if (typeof properties[i] === 'object') {
                objectsVisitor(properties[i], visitor, visited, skip);
            }
        }
    }
}
exports.objectsVisitor = objectsVisitor;
function collectionsVisitor(target, visitor, collectionsToProcess, visited) {
    if (collectionsToProcess === void 0) { collectionsToProcess = ['controls', 'bands', 'subBands', 'crossBandControls', 'rows', 'cells', 'fields']; }
    if (visited === void 0) { visited = []; }
    if (target && target !== undefined) {
        visited.push(target);
        for (var i = 0, len = collectionsToProcess.length; i < len; i++) {
            if (target[collectionsToProcess[i]]) {
                visitor(target[collectionsToProcess[i]], target);
                (target[collectionsToProcess[i]]() || []).forEach(function (item) { return collectionsVisitor(item, visitor, collectionsToProcess, visited); });
            }
        }
    }
}
exports.collectionsVisitor = collectionsVisitor;
