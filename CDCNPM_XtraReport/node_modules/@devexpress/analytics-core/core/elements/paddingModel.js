/**
* DevExpress Analytics (core\elements\paddingModel.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var utils_1 = require("../../serializer/utils");
var paddingModelMetaData_1 = require("./paddingModelMetaData");
var PaddingModel = (function (_super) {
    __extends(PaddingModel, _super);
    function PaddingModel(left, right, top, bottom, dpi) {
        if (left === void 0) { left = ko.observable(null); }
        if (right === void 0) { right = ko.observable(null); }
        if (top === void 0) { top = ko.observable(null); }
        if (bottom === void 0) { bottom = ko.observable(null); }
        if (dpi === void 0) { dpi = ko.observable(100); }
        var _this = _super.call(this) || this;
        _this.left = left;
        _this.right = right;
        _this.top = top;
        _this.bottom = bottom;
        _this.dpi = dpi;
        ['left', 'right', 'top', 'bottom'].forEach(function (propertyName) {
            _this['_' + propertyName] = ko.observable(_this[propertyName]());
            _this._disposables.push(_this[propertyName] = ko.computed({
                read: function () {
                    return _this['_' + propertyName]() || 0;
                },
                write: function (newVal) {
                    _this['_' + propertyName](newVal);
                }
            }));
        });
        var isUpdating = ko.observable(false);
        var oldValue = null;
        _this._disposables.push(_this.all = ko.computed({
            read: function () {
                if (isUpdating())
                    return oldValue;
                if (['right', 'top', 'bottom'].every(function (propertyName) { return _this[propertyName]() === _this.left(); }))
                    oldValue = _this.left();
                else
                    oldValue = null;
                return oldValue;
            },
            write: function (newVal) {
                isUpdating(true);
                ['left', 'right', 'top', 'bottom'].forEach(function (propertyName) { return _this[propertyName](newVal); });
                isUpdating(false);
            }
        }));
        return _this;
    }
    PaddingModel.prototype.getInfo = function () {
        return paddingModelMetaData_1.paddingSerializationsInfo;
    };
    PaddingModel.prototype.resetValue = function () {
        var _this = this;
        ['left', 'right', 'top', 'bottom'].forEach(function (name) { return _this['_' + name](null); });
    };
    PaddingModel.prototype.isEmpty = function () {
        var _this = this;
        return ['left', 'right', 'top', 'bottom'].map(function (x) { return ko.unwrap(_this['_' + x]); }).every(function (x) { return x === null; });
    };
    PaddingModel.prototype.applyFromString = function (value) {
        if (value) {
            var components = (value || '').split(',');
            this.left(parseInt(components[0]) || 0);
            this.right(parseInt(components[1]) || 0);
            this.top(parseInt(components[2]) || 0);
            this.bottom(parseInt(components[3]) || 0);
        }
        return this;
    };
    PaddingModel.from = function (val) {
        return new PaddingModel().applyFromString(val);
    };
    PaddingModel.prototype.toString = function () {
        if (this.isEmpty())
            return;
        return this._toString();
    };
    PaddingModel.prototype._toString = function (inner) {
        var _this = this;
        if (inner === void 0) { inner = false; }
        return ['left', 'right', 'top', 'bottom'].map(function (x) { return parseInt(ko.unwrap(_this[x])); }).concat(this.dpi()).join(', ');
    };
    PaddingModel.defaultVal = '0, 0, 0, 0, 100';
    PaddingModel.unitProperties = ['left', 'right', 'top', 'bottom'];
    return PaddingModel;
}(utils_1.Disposable));
exports.PaddingModel = PaddingModel;
