/**
* DevExpress Analytics (widgets\criteria\criteriaOperatorPreprocessor.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { CriteriaOperator } from './operators/criteriaOperator';
import { IBinaryOperatorOptions, BinaryOperator } from './operators/binary';
import { IFunctionOperatorProperties, FunctionOperator } from './operators/function';
import { IAggregateOperandOptions, AggregateOperand } from './operators/aggregate';
import { IGroupOperatorOptions, GroupOperator } from './operators/group';
import { IInOperatorOptions, InOperator } from './operators/in';
import { IOperandValueOptions, OperandValue } from './operators/value';
import { ConstantValue } from './operators/constant';
import { IOperandParameterOptions, OperandParameter } from './operators/parameter';
import { IOperandPropertyOptions, OperandProperty } from './operators/property';
import { IUnaryOperatorOptions, UnaryOperator } from './operators/unary';
import { IBetweenOperatorOptions, BetweenOperator } from './operators/between';
import { IJoinOperandOptions, JoinOperand } from './operators/join';
export declare class CriteriaOperatorPreprocessor {
    _func: Array<(currentOperand: CriteriaOperator, options: {
        operatorType: string;
        options: any;
    }) => CriteriaOperator>;
    CriteriaOperator(): CriteriaOperator;
    BinaryOperator(options: IBinaryOperatorOptions): BinaryOperator;
    FunctionOperator(options: IFunctionOperatorProperties): FunctionOperator;
    AggregateOperand(options: IAggregateOperandOptions): AggregateOperand;
    GroupOperator(options: IGroupOperatorOptions): GroupOperator;
    InOperator(options: IInOperatorOptions): InOperator;
    ConstantValue(options: IOperandValueOptions): ConstantValue;
    OperandValue(options: IOperandValueOptions): OperandValue;
    OperandParameter(options: IOperandParameterOptions): OperandParameter;
    OperandProperty(options: IOperandPropertyOptions): OperandProperty;
    UnaryOperator(options: IUnaryOperatorOptions): UnaryOperator;
    BetweenOperator(options: IBetweenOperatorOptions): BetweenOperator;
    JoinOperator(options: IJoinOperandOptions): JoinOperand;
    addListener(func: (currentOperand: CriteriaOperator, options: {
        operatorType: string;
        options: any;
    }) => CriteriaOperator): void;
    removeListener(func: (currentOperand: CriteriaOperator, options: {
        operatorType: string;
        options: any;
    }) => CriteriaOperator): void;
    process(operatorType: string, options: any): CriteriaOperator;
}
export declare var criteriaCreator: CriteriaOperatorPreprocessor;
