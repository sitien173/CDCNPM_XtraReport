/**
* DevExpress Analytics (widgets\criteria\operators\binary.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { CriteriaOperator } from './criteriaOperator';
import { ICriteriaOperatorVisitor } from '../utils';
export declare enum BinaryOperatorType {
    Equal = 0,
    NotEqual = 1,
    Greater = 2,
    Less = 3,
    LessOrEqual = 4,
    GreaterOrEqual = 5,
    Like = 6,
    BitwiseAnd = 7,
    BitwiseOr = 8,
    BitwiseXor = 9,
    Divide = 10,
    Modulo = 11,
    Multiply = 12,
    Plus = 13,
    Minus = 14
}
export interface IBinaryOperatorOptions {
    left: CriteriaOperator;
    right: CriteriaOperator;
    operatorType: BinaryOperatorType;
}
export declare class BinaryOperator extends CriteriaOperator {
    constructor(left: CriteriaOperator, right: CriteriaOperator, operatorType: BinaryOperatorType);
    readonly leftPart: CriteriaOperator;
    readonly rightPart: CriteriaOperator;
    assignLeftPart: (criteriaOperator: any) => void;
    assignRightPart: (criteriaOperator: any) => void;
    leftOperand: CriteriaOperator;
    rightOperand: CriteriaOperator;
    operatorType: BinaryOperatorType;
    readonly displayType: any;
    readonly enumType: typeof BinaryOperatorType;
    type: string;
    accept(visitor: ICriteriaOperatorVisitor): CriteriaOperator | BinaryOperator;
}
