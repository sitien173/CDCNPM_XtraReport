/**
* DevExpress Analytics (widgets\criteria\operators\aggregate.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { CriteriaOperator } from './criteriaOperator';
import { ICriteriaOperatorVisitor } from '../utils';
export declare enum Aggregate {
    Count = 0,
    Exists = 1,
    Min = 2,
    Max = 3,
    Avg = 4,
    Sum = 5,
    Single = 6
}
export interface IAggregateOperandOptions {
    property: CriteriaOperator;
    aggregatedExpression: CriteriaOperator;
    aggregateType: Aggregate;
    condition: any;
}
export declare class AggregateOperand extends CriteriaOperator {
    constructor(property: CriteriaOperator, aggregatedExpression: CriteriaOperator, aggregateType: Aggregate, condition: any);
    readonly displayType: string;
    readonly enumType: typeof Aggregate;
    readonly leftPart: CriteriaOperator;
    children(): any[];
    change: (operationType: any, item: CriteriaOperator) => any;
    assignLeftPart: (criteriaOperator: any) => void;
    property: CriteriaOperator;
    condition: CriteriaOperator;
    operatorType: Aggregate;
    aggregatedExpression: any;
    type: string;
    accept(visitor: ICriteriaOperatorVisitor): CriteriaOperator | AggregateOperand;
}
