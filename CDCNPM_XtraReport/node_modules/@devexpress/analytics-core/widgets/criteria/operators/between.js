/**
* DevExpress Analytics (widgets\criteria\operators\between.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var criteriaOperator_1 = require("./criteriaOperator");
var value_1 = require("./value");
var BetweenOperator = (function (_super) {
    __extends(BetweenOperator, _super);
    function BetweenOperator(property, begin, end) {
        var _this = _super.call(this) || this;
        _this.resetRightPart = function (newVal) {
            _this.begin = new value_1.OperandValue(newVal);
            _this.end = new value_1.OperandValue(newVal);
        };
        _this.assignLeftPart = function (criteriaOperator) {
            _this.property = criteriaOperator.leftPart;
        };
        _this.assignRightPart = function (criteriaOperator) {
            if (criteriaOperator.rightPart.length !== null && criteriaOperator.rightPart.length !== undefined) {
                if (criteriaOperator.rightPart.length) {
                    _this.begin = criteriaOperator.rightPart[0];
                    _this.end = criteriaOperator.rightPart.length > 1 ? criteriaOperator.rightPart[1] : new value_1.OperandValue();
                }
                else {
                    _this.begin = new value_1.OperandValue();
                    _this.end = new value_1.OperandValue();
                }
            }
            else {
                _this.begin = criteriaOperator.rightPart;
                _this.end = new value_1.OperandValue();
            }
        };
        _this.operatorType = 'Between';
        _this.type = 'Between';
        _this.property = property;
        _this.begin = begin || new value_1.OperandValue();
        _this.end = end || new value_1.OperandValue();
        return _this;
    }
    Object.defineProperty(BetweenOperator.prototype, "leftPart", {
        get: function () {
            return this.property;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BetweenOperator.prototype, "rightPart", {
        get: function () {
            return [this.begin, this.end];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BetweenOperator.prototype, "displayType", {
        get: function () {
            return 'Between';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BetweenOperator.prototype, "enumType", {
        get: function () {
            return BetweenOperator;
        },
        enumerable: true,
        configurable: true
    });
    BetweenOperator.prototype.accept = function (visitor) {
        return visitor.visitBetweenOperator
            ? visitor.visitBetweenOperator(this)
            : new BetweenOperator(this.property && this.property.accept(visitor), this.begin && this.begin.accept(visitor), this.end && this.end.accept(visitor));
    };
    return BetweenOperator;
}(criteriaOperator_1.CriteriaOperator));
exports.BetweenOperator = BetweenOperator;
