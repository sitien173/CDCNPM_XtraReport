/**
* DevExpress Analytics (widgets\expressioneditor\bindings.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var $ = require("jquery");
var expressioneditor_1 = require("./expressioneditor");
var _internal_1 = require("../../serializer/_internal");
ko.bindingHandlers['dxExpressionEditor'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var $element = $(element);
        $element.children().remove();
        var values = valueAccessor();
        $(element).addClass(values.wrapper ? 'dx-expressioneditor-content' : 'dx-popup-general');
        var templateName = values.editorTemplateName || 'dx-expressioneditor';
        var optionSubscription = null;
        var editor = new expressioneditor_1.ExpressionEditor(ko.unwrap(values.options), values.fieldListProvider, viewModel.disabled, $(element).closest('.dx-rtl').length > 0, values.displayNameProvider, values.popupVisible);
        if (ko.isSubscribable(values.options)) {
            optionSubscription = values.options.subscribe(function (newOptions) {
                newOptions && editor.koOptions(newOptions);
            });
        }
        values.wrapper && values.wrapper.editor(editor);
        var childContext = bindingContext.createChildContext(editor);
        var child = document.createElement('div'), $element = $element.append(child);
        ko.renderTemplate(templateName, childContext, {}, child, 'replaceNode');
        var callback = function () {
            editor.dispose();
            editor = null;
            values.wrapper && values.wrapper.editor(null);
            optionSubscription && optionSubscription.dispose();
        };
        _internal_1.addDisposeCallback(element, callback);
        return { controlsDescendantBindings: true };
    }
};
