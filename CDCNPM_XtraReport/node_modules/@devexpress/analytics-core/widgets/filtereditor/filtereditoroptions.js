/**
* DevExpress Analytics (widgets\filtereditor\filtereditoroptions.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var helper_1 = require("./helpers/helper");
var localization_utils_1 = require("../../property-grid/localization/localization_utils");
var FilterStringOptions = (function () {
    function FilterStringOptions(filterString, dataMember, disabled, title) {
        var _this = this;
        this.popupContainer = '.dx-designer-viewport';
        this.itemsProvider = null;
        this.resetValue = function () {
            _this.value('');
        };
        this.title = ko.pureComputed({
            read: function () {
                var title = _this._title();
                return localization_utils_1.getLocalization(title.text, title.localizationId);
            },
            write: function (value) {
                _this._title({ text: value });
            }
        });
        this.value = filterString;
        this.path = dataMember || ko.observable('');
        this.disabled = disabled || ko.observable(false);
        var filterEditorHelperType = helper_1.DefaultFilterEditorHelper();
        this.helper = new filterEditorHelperType();
        this._title = ko.observable(title || { text: localization_utils_1.getLocalization('Filter Editor', 'DataAccessUIStringId.FiltersView') });
    }
    return FilterStringOptions;
}());
exports.FilterStringOptions = FilterStringOptions;
