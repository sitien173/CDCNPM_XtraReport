/**
* DevExpress Analytics (widgets\filtereditor\filtereditoroptions.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { FilterEditorHelper } from './helpers/helper';
export interface IFilterEditorOptions {
    value: ko.Observable<string> | ko.Computed<string>;
    path: ko.Observable<string> | ko.Computed<string>;
    helper?: FilterEditorHelper;
    disabled?: ko.Observable<boolean> | ko.Computed<boolean>;
}
export declare class FilterStringOptions implements IFilterEditorOptions {
    private _title;
    constructor(filterString: ko.Observable<string> | ko.Computed<string>, dataMember?: ko.Observable | ko.Computed, disabled?: ko.Observable<boolean> | ko.Computed<boolean>, title?: {
        text: string;
        localizationId?: string;
    });
    popupContainer: string;
    itemsProvider: any;
    disabled: ko.Observable<boolean> | ko.Computed<boolean>;
    resetValue: () => void;
    helper: FilterEditorHelper;
    value: ko.Observable<string> | ko.Computed<string>;
    path: ko.Observable<string> | ko.Computed<string>;
    title: ko.PureComputed<string>;
}
