/**
* DevExpress Analytics (widgets\filtereditor\helpers\_treelistController.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _treelistController_1 = require("../../treelist/_treelistController");
var FilterEditorTreeListController = (function (_super) {
    __extends(FilterEditorTreeListController, _super);
    function FilterEditorTreeListController(selectedItem) {
        var _this = _super.call(this) || this;
        _this.selectedItem = selectedItem;
        return _this;
    }
    FilterEditorTreeListController.prototype.itemsFilter = function (item) {
        return true;
    };
    FilterEditorTreeListController.prototype.hasItems = function (item) {
        return item.specifics !== 'none' && (item.specifics !== 'List' && item.isList === true);
    };
    FilterEditorTreeListController.prototype.canSelect = function (value) {
        return !value.data.isList || (value.data.isList === true && value.data.specifics === 'List');
    };
    FilterEditorTreeListController.prototype.select = function (value) {
        if (this.canSelect(value)) {
            this.selectedItem(value.data);
            value.isSelected(true);
        }
    };
    return FilterEditorTreeListController;
}(_treelistController_1.TreeListController));
exports.FilterEditorTreeListController = FilterEditorTreeListController;
