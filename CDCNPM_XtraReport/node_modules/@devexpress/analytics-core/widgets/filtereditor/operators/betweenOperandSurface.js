/**
* DevExpress Analytics (widgets\filtereditor\operators\betweenOperandSurface.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var criteriaOperatorSurface_1 = require("./criteriaOperatorSurface");
var BetweenOperandSurface = (function (_super) {
    __extends(BetweenOperandSurface, _super);
    function BetweenOperandSurface(operator, parent, fieldListProvider, path) {
        var _this = _super.call(this, operator, parent, fieldListProvider, path) || this;
        _this.property = ko.observable(null);
        _this.end = ko.observable(null);
        _this.begin = ko.observable(null);
        _this.contentTemplateName = 'dx-filtereditor-between';
        _this.property(_this._createLeftPartProperty(operator.property));
        _this.begin(_this.createChildSurface(operator.begin));
        _this.end(_this.createChildSurface(operator.end));
        return _this;
    }
    Object.defineProperty(BetweenOperandSurface.prototype, "leftPart", {
        get: function () {
            return this.property && this.property();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BetweenOperandSurface.prototype, "rightPart", {
        get: function () {
            return [this.begin(), this.end()];
        },
        enumerable: true,
        configurable: true
    });
    BetweenOperandSurface.prototype.dispose = function () {
        this.property().dispose();
        this.begin().dispose();
        this.end().dispose();
        _super.prototype.dispose.call(this);
    };
    return BetweenOperandSurface;
}(criteriaOperatorSurface_1.CriteriaOperatorSurface));
exports.BetweenOperandSurface = BetweenOperandSurface;
