/**
* DevExpress Analytics (widgets\filtereditor\operators\operandValueSurface.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { OperandSurfaceBase } from './operandSurfaceBase';
import { OperandValue } from '../../criteria/operators/value';
import { CriteriaOperatorSurface } from './criteriaOperatorSurface';
import { CriteriaOperator } from '../../criteria/operators/criteriaOperator';
import { IItemsProvider } from '../../utils';
import DataSource from 'devextreme/data/data_source';
export declare class OperandValueSurface extends OperandSurfaceBase<OperandValue> {
    private static _defaultValue;
    private _value;
    private _updateDate;
    readonly items: any[];
    constructor(operator: OperandValue, parent: CriteriaOperatorSurface<CriteriaOperator>, fieldListProvider: IItemsProvider, path: any);
    readonly displayType: any;
    changeValue: () => void;
    isDefaultDisplay(): boolean;
    getDefaultValue(): any;
    dataType: ko.Observable<string> | ko.Computed<string>;
    values: ko.Observable<any[]>;
    value: ko.Observable<string> | ko.Computed<string>;
    dataSource: ko.Observable<DataSource> | ko.Computed<DataSource>;
    isEditable: ko.Observable<boolean> | ko.Computed<boolean>;
    templateName: string;
    getNumberEditorOptions: () => any;
}
