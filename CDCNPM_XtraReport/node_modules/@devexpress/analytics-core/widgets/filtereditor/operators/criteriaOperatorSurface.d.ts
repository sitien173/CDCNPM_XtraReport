/**
* DevExpress Analytics (widgets\filtereditor\operators\criteriaOperatorSurface.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { CriteriaOperator } from '../../criteria/operators/criteriaOperator';
import { Disposable } from '../../../serializer/utils';
import { IFilterEditorOperator, FilterEditorHelper } from '../helpers/helper';
import { IItemsProvider } from '../../utils';
export declare class CriteriaOperatorSurface<T extends CriteriaOperator> extends Disposable {
    _createLeftPartProperty(value: any): CriteriaOperatorSurface<CriteriaOperator>;
    createChildSurface(item: any, path?: any, actions?: any): CriteriaOperatorSurface<CriteriaOperator>;
    protected getDisplayType(): string;
    constructor(operator: T, parent: any, fieldListProvider: any, path: any);
    specifics: ko.Observable<string> | ko.Computed<string>;
    dataType: ko.Observable<string> | ko.Computed<string>;
    readonly items: Array<IFilterEditorOperator>;
    readonly displayType: string;
    readonly leftPart: CriteriaOperatorSurface<CriteriaOperator>;
    readonly rightPart: any;
    readonly css: string;
    change(type: any, surface: any): void;
    remove(surface: any): void;
    isUpdated: ko.Observable<boolean>;
    popupService: any;
    canRemove: boolean;
    operatorType: ko.Observable<any>;
    parent: any;
    templateName: string;
    isSelected: ko.Observable<boolean> | ko.Computed<boolean>;
    operatorClass: string;
    helper: FilterEditorHelper;
    reverse: any;
    path: ko.Observable<string> | ko.Computed<string>;
    fieldListProvider: ko.Observable<IItemsProvider>;
    model: T;
}
