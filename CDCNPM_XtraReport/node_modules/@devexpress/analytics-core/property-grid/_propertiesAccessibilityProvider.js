/**
* DevExpress Analytics (property-grid\_propertiesAccessibilityProvider.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var PropertiesAccessibilityProvider = (function () {
    function PropertiesAccessibilityProvider() {
    }
    PropertiesAccessibilityProvider.prototype.isPropertyVisible = function (editor) {
        if (!editor._model())
            return false;
        var model = editor._model();
        var visible = model.isPropertyVisible ? model.isPropertyVisible(editor.name) : true;
        if (visible) {
            visible = this._calculateAccessibilityByPropertyInfo(model, editor.info().visible, true);
        }
        return visible;
    };
    PropertiesAccessibilityProvider.prototype.isPropertyDisabled = function (editor) {
        if (!editor._model())
            return true;
        var model = editor._model();
        return model.isPropertyDisabled && model.isPropertyDisabled(editor.name) || this._calculateAccessibilityByPropertyInfo(model, editor.info().disabled, false);
    };
    PropertiesAccessibilityProvider.prototype._calculateAccessibilityByPropertyInfo = function (model, propertyInfo, defaultValue) {
        var result;
        if (ko.isObservable(propertyInfo)) {
            result = propertyInfo();
        }
        else if (typeof propertyInfo === 'function') {
            result = propertyInfo(model);
        }
        else {
            result = propertyInfo !== undefined ? propertyInfo : defaultValue;
        }
        return result;
    };
    return PropertiesAccessibilityProvider;
}());
exports.PropertiesAccessibilityProvider = PropertiesAccessibilityProvider;
exports.defaultAccessibilityProvider = new PropertiesAccessibilityProvider();
