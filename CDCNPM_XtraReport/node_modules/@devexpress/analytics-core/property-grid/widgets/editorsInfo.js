/**
* DevExpress Analytics (property-grid\widgets\editorsInfo.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = require("../../serializer/_utils");
var EditorTemplates = (function () {
    function EditorTemplates(_useDeferredRegistration) {
        if (_useDeferredRegistration === void 0) { _useDeferredRegistration = true; }
        this._useDeferredRegistration = _useDeferredRegistration;
        this._editorTemplates = {};
    }
    EditorTemplates.prototype.register = function (name, editorInfo) {
        if (!!this._editorTemplates[name] && !this._editorTemplates[name]._deferred) {
            throw Error("Editor with name " + name + " is already exists");
        }
        else if (!this._editorTemplates[name]) {
            this._editorTemplates[name] = editorInfo;
        }
        else {
            delete this._editorTemplates[name]._deferred;
            _utils_1.extend(this._editorTemplates[name], editorInfo);
        }
    };
    EditorTemplates.prototype.unregister = function (name) {
        delete this._editorTemplates[name];
    };
    EditorTemplates.prototype.registerEditors = function (editors) {
        for (var name in editors)
            this.register(name, editors[name]);
    };
    EditorTemplates.prototype.getEditor = function (name) {
        if (!this._editorTemplates[name] && this._useDeferredRegistration) {
            this._editorTemplates[name] = { _deferred: true };
        }
        return this._editorTemplates[name];
    };
    return EditorTemplates;
}());
exports.EditorTemplates = EditorTemplates;
exports.editorTemplates = new EditorTemplates();
