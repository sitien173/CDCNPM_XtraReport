/**
* DevExpress Analytics (property-grid\widgets\editor.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var $ = require("jquery");
var utils_1 = require("../../serializer/utils");
var _utils_1 = require("./internal/_utils");
var _propertiesAccessibilityProvider_1 = require("../_propertiesAccessibilityProvider");
var editorValidator_1 = require("./editorValidator");
var localization_utils_1 = require("../localization/localization_utils");
var _internal_1 = require("./internal/_internal");
var editorsInfo_1 = require("./editorsInfo");
var config_1 = require("devextreme/core/config");
var _utils_2 = require("../../serializer/_utils");
var _validation_1 = require("../../core/internal/_validation");
var _units_1 = require("../../core/utils/_units");
var Editor = (function (_super) {
    __extends(Editor, _super);
    function Editor(modelPropertyInfo, level, parentDisabled, textToSearch) {
        if (parentDisabled === void 0) { parentDisabled = ko.observable(false); }
        if (textToSearch === void 0) { textToSearch = undefined; }
        var _this = _super.call(this) || this;
        _this._model = ko.observable();
        _this._parent = ko.observable(null);
        _this.isSearchedProperty = ko.observable(true);
        _this.isParentSearched = ko.observable(false);
        _this.rtl = config_1.default().rtlEnabled;
        _this._accessibilityProvider = ko.observable(_propertiesAccessibilityProvider_1.defaultAccessibilityProvider);
        _this._validator = new editorValidator_1.EditorValidator(_this);
        _this._cachedValue = undefined;
        _this.isEditorSelected = ko.observable(false);
        _this.isRequired = false;
        _this.isRendered = ko.observable(false);
        _this.collapsed = ko.observable(true);
        _this.info = ko.observable(modelPropertyInfo);
        _this._disposables.push(_this.displayName = ko.computed(function () {
            var info = _this.info();
            return info && localization_utils_1.getLocalization(info.displayName, info['localizationId']);
        }));
        if (textToSearch) {
            _this.textToSearch = textToSearch;
            _this._disposables.push(_this.isSearchedProperty = ko.computed(function () {
                return _this.isParentSearched() || !!_utils_1.findMatchesInString(_this.displayName(), textToSearch());
            }));
        }
        _this.padding = _this._setPadding(_this.rtl ? 'right' : 'left', level * _internal_1.propertiesGridEditorsPaddingLeft());
        var defaultValue = ko.observable(null), propertyName = modelPropertyInfo.propertyName;
        _this.editorOptions = modelPropertyInfo.editorOptions;
        _this.validatorOptions = modelPropertyInfo.validatorOptions;
        _this.isRequired = modelPropertyInfo.isRequired;
        if (modelPropertyInfo.defaultVal !== undefined) {
            defaultValue = ko.observable(modelPropertyInfo.defaultVal);
        }
        if (modelPropertyInfo.from) {
            defaultValue = modelPropertyInfo.from(modelPropertyInfo.defaultVal);
        }
        if (modelPropertyInfo.array) {
            defaultValue = ko.observableArray();
        }
        _this._disposables.push(_this.values = ko.computed(function () {
            var _values = _this.info().valueStore || _this.info().valuesArray;
            if (_values) {
                return _values;
            }
            _values = ko.unwrap(_this.info().values);
            if (_values) {
                return $.map(_values, function (displayValue, value) {
                    return { value: value, displayValue: displayValue };
                });
            }
        }));
        _this.level = level;
        _this._init(modelPropertyInfo.editor, defaultValue, propertyName);
        _this._disposables.push(_this.disabled = ko.computed(function () {
            return parentDisabled() || _this._accessibilityProvider() && _this._accessibilityProvider().isPropertyDisabled(_this);
        }));
        _this._disposables.push(_this.visible = ko.computed(function () {
            return _this.isSearchedProperty() && _this._accessibilityProvider() && _this._accessibilityProvider().isPropertyVisible(_this);
        }));
        _this._disposables.push(_this.isPropertyModified = ko.computed(function () {
            return !!(_this._model() && _this._model().isPropertyModified && _this._model().isPropertyModified(_this.name));
        }));
        _this._disposables.push(_this.isPropertyHighlighted = ko.pureComputed(function () {
            if (_this._shouldSkipHighlighting(_this.name))
                return false;
            var controlModel = _this._model();
            return !!(controlModel && controlModel.isPropertyHighlighted && controlModel.isPropertyHighlighted(_this.name));
        }));
        return _this;
    }
    Editor.prototype._setPadding = function (position, value) {
        var obj = {};
        obj['padding-' + position] = value;
        return obj;
    };
    Editor.prototype.dispose = function () {
        this._validator && this._validator.dispose();
        this._validator = null;
        _super.prototype.dispose.call(this);
        this._cachedValue = null;
        this._model(null);
    };
    Editor.prototype._shouldSkipHighlighting = function (propertyName) {
        return this.isComplexEditor;
    };
    Editor.prototype._assignValue = function (modelValue, model, newValue, name) {
        if (ko.isObservable(modelValue)) {
            modelValue(newValue);
        }
        else {
            model[name] = newValue;
        }
    };
    Editor.prototype._roundTwoDesemialsForUnitProperties = function (value, model, propertyName) {
        var properties = model && model['constructor'] && model['constructor'].unitProperties;
        if (!properties || properties.indexOf(propertyName) === -1)
            return value;
        return _units_1.roundingXDecimals(value);
    };
    Editor.prototype._init = function (editorTemplate, value, name) {
        var _this = this;
        editorTemplate = editorTemplate || editorsInfo_1.editorTemplates.getEditor('text');
        this.templateName = editorTemplate.header;
        this.contentTemplateName = editorTemplate.content;
        this._cachedValue = undefined;
        this._disposables.push(this.value = ko.computed({
            read: function () {
                var model = _this._model();
                if (!model && _this._cachedValue) {
                    return _this._cachedValue;
                }
                var modelValue = model && model[name] !== undefined ? model[name] : value;
                if (ko.isObservable(modelValue) && !modelValue['push']) {
                    var hasValueInModel = modelValue() !== undefined && modelValue() !== null;
                    _this._cachedValue = hasValueInModel ? _this._roundTwoDesemialsForUnitProperties(modelValue(), model, name) : _this.defaultValue;
                    return _this._cachedValue;
                }
                else {
                    _this._cachedValue = modelValue;
                    return _this._cachedValue;
                }
            },
            write: function (newValue) {
                var model = _this._model();
                if (!model) {
                    return;
                }
                var modelValue = model[name];
                _this._validator.assignWithValidation(newValue, function () {
                    _this._assignValue(modelValue, model, newValue, name);
                });
            }
        }));
        this.name = name;
        this.editorTemplate = editorTemplate && editorTemplate.custom || 'dx-property-editor';
    };
    Editor.prototype._getInfoFromModel = function (viewModel) {
        var _this = this;
        if (!viewModel)
            return null;
        var modelInfo = viewModel['getInfo'] && viewModel['getInfo']();
        if (modelInfo) {
            return modelInfo.filter(function (property) { return property.propertyName === _this.name; })[0];
        }
        return null;
    };
    Editor.prototype.update = function (viewModel) {
        if (!!viewModel) {
            var propertyInfo = this._getInfoFromModel(viewModel);
            var isSameEditorType = propertyInfo && _utils_1.compareEditorInfo(propertyInfo.editor, this.info().editor);
            if (isSameEditorType && this.info() !== propertyInfo) {
                this.info(propertyInfo);
            }
            this._model(this.name in viewModel && (isSameEditorType || !propertyInfo) ? viewModel : null);
        }
        else {
            this._model(null);
        }
    };
    Editor.prototype.getOptions = function (templateOptions) {
        var extendedOptions = this.info.peek().editor.extendedOptions;
        return _utils_2.extend(true, {}, templateOptions, this.editorOptions, extendedOptions);
    };
    Editor.prototype.getValidatorOptions = function (templateValidatorOptions) {
        return this._validator && this._validator.getValidatorOptions(templateValidatorOptions);
    };
    Editor.prototype.registerAccessibilityProvider = function (accessibilityProvider) {
        if (this._accessibilityProvider() != accessibilityProvider)
            this._accessibilityProvider(accessibilityProvider);
    };
    Editor.prototype.assingParent = function (parent) {
        if (this._parent() != parent)
            this._parent(parent);
    };
    Editor.prototype._getEditorValidationRules = function () {
        var info = ko.unwrap(this.info);
        if (!info)
            return;
        var validationRules = info.validationRules;
        return validationRules || (validationRules === null ? null : []);
    };
    Editor.prototype.getValidationRules = function () {
        return this._validator && this._validator.getValidationRules();
    };
    Object.defineProperty(Editor.prototype, "validationRules", {
        get: function () {
            return this.getValidationRules();
        },
        enumerable: true,
        configurable: true
    });
    Editor.prototype.getIdByDisplayName = function (preffix) {
        return preffix + '-' + _validation_1.replaceInvalidSymbols(this.displayName());
    };
    Editor.prototype.getPopupServiceActions = function () {
        var _this = this;
        if (!this._model()) {
            return;
        }
        var actions = (this._model().actions || []).concat();
        (this._model().actionProviders || [])
            .forEach(function (provider) {
            var additionalActions = provider && provider.getActions(_this.name) || [];
            additionalActions.forEach(function (action) { return actions.push(action); });
        });
        return actions;
    };
    Object.defineProperty(Editor.prototype, "isComplexEditor", {
        get: function () { return !!this.contentTemplateName; },
        enumerable: true,
        configurable: true
    });
    return Editor;
}(utils_1.Disposable));
exports.Editor = Editor;
