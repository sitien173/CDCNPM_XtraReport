/**
* DevExpress Analytics (property-grid\widgets\collectioneditor\_bindings.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var $ = require("jquery");
var _editor_1 = require("./_editor");
var _internal_1 = require("../../../serializer/_internal");
var templateUtils_1 = require("../templateUtils");
ko.bindingHandlers['dxCollectionEditor'] = {
    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
        var values = valueAccessor(), gridViewModel = new _editor_1.CollectionEditorViewModel(values, viewModel.disabled), templateHtml = templateUtils_1.getTemplate(values.editorTemplate || '#dx-collectioneditor'), $templateHtml = $(templateHtml), itemTemplateName = values.info && values.info() && values.info()['template'] || values.template;
        if (itemTemplateName) {
            var itemTemplateHtml = templateUtils_1.getTemplate(itemTemplateName);
            $templateHtml.find('.dx-collection-item').append($(itemTemplateHtml));
        }
        else {
            $templateHtml.find('.dx-collection-item').append($(element).children());
        }
        var $element = $(element).append($templateHtml);
        var childContext = bindingContext.createChildContext(gridViewModel);
        ko.applyBindings(childContext, $element.children()[0]);
        _internal_1.addDisposeCallback(element, function () { return gridViewModel.dispose(); });
        return { controlsDescendantBindings: true };
    }
};
