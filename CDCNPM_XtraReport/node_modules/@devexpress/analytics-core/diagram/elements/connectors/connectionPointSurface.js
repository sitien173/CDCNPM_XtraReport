/**
* DevExpress Analytics (diagram\elements\connectors\connectionPointSurface.js)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var baseSurface_1 = require("../../../core/elements/baseSurface");
var ConnectionPointSurface = (function (_super) {
    __extends(ConnectionPointSurface, _super);
    function ConnectionPointSurface(control, context) {
        var _this = _super.call(this, control, context, ConnectionPointSurface._unitProperties) || this;
        _this.template = 'dx-diagram-connection-point';
        _this.selectiontemplate = 'dx-diagram-connection-point';
        _this.relativeX = ko.pureComputed(function () {
            return _this.rect().left - _this.parent.rect().left;
        });
        _this.relativeY = ko.pureComputed(function () {
            return _this.rect().top - _this.parent.rect().top;
        });
        return _this;
    }
    ConnectionPointSurface.prototype.container = function () {
        return this.getRoot();
    };
    ConnectionPointSurface._unitProperties = {
        _x: function (o) {
            return o.location.x;
        },
        _y: function (o) {
            return o.location.y;
        }
    };
    return ConnectionPointSurface;
}(baseSurface_1.SurfaceElementBase));
exports.ConnectionPointSurface = ConnectionPointSurface;
