/**
* DevExpress Analytics (diagram\elements\diagramSurface.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { SurfaceElementBase, ISurfaceContext } from '../../core/elements/baseSurface';
import { DiagramViewModel } from './diagramModel';
import { ISelectionTarget } from '../../core/selection/_selection';
import { IUnitProperties } from '../../core/utils/_units';
import { DiagramElementSurface } from './diagramElementSurface';
import { IHoverInfo } from '../../core/internal/_hoverInfo';
import { IMargins } from '../../core/elements/margins';
export declare class DiagramSurface extends SurfaceElementBase<DiagramViewModel> implements ISelectionTarget, ISurfaceContext {
    static _unitProperties: IUnitProperties<DiagramViewModel>;
    constructor(diagram: DiagramViewModel, zoom?: ko.Observable<number>);
    measureUnit: ko.Observable<string>;
    dpi: ko.Observable<number>;
    zoom: ko.Observable<number> | ko.Computed<number>;
    controls: ko.ObservableArray<DiagramElementSurface>;
    allowMultiselect: boolean;
    focused: ko.Observable<boolean>;
    selected: ko.Observable<boolean>;
    underCursor: ko.Observable<IHoverInfo>;
    checkParent(surfaceParent: ISelectionTarget): boolean;
    parent: ISelectionTarget;
    templateName: string;
    getChildrenCollection(): ko.ObservableArray<any>;
    margins: IMargins;
}
