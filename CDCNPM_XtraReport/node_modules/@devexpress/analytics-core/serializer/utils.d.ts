/**
* DevExpress Analytics (serializer\utils.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
export declare type DisposableType = ko.Subscription | ko.ComputedFunctions | IDisposable;
export interface IDisposable {
    dispose: () => void;
    _disposables?: Array<DisposableType>;
}
export declare class Disposable implements IDisposable {
    _disposables: Array<DisposableType>;
    isDisposing: boolean;
    constructor();
    disposeObservableArray(array: ko.ObservableArray<IDisposable>): void;
    resetObservableArray(array: ko.ObservableArray<any>): void;
    disposeArray(array: IDisposable[]): void;
    dispose(): void;
    removeProperties(): void;
}
export declare function deserializeArray<T>(model: any, creator: (item: any) => any): ko.ObservableArray<T>;
export declare function serializeDate(date: Date): string;
export declare function deserializeDate(dateTime: string): Date;
