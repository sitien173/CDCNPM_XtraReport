/**
* DevExpress Analytics (serializer\serializer.d.ts)
* Version:  21.2.7
* Build date: Apr 13, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ISerializableModel, ISerializationInfoArray, ISerializationInfo } from './serializationInfo';
export interface IModelSerializerOptions {
    useRefs?: boolean;
    serializeDate?: (date: Date) => string;
}
export interface IModelSerializer {
    deserialize(viewModel: ISerializableModel, model: any, serializationsInfo?: ISerializationInfoArray): any;
    serialize(viewModel: ISerializableModel, serializationsInfo?: ISerializationInfoArray, refs?: any): any;
}
export interface IModelSerializerRef {
    linkObjTable: {
        setRef: (ref: number) => void;
        obj: any;
    }[];
    objects: any[];
}
export declare class ModelSerializer implements IModelSerializer {
    private _options;
    private _refTable;
    private _linkTable;
    private linkObjects;
    private _getModel;
    private _collectLinks;
    private _enumRefs;
    _collectLinksAndEnumRefs(model: any, internalModel?: any, propertyPath?: any[]): void;
    constructor(options?: IModelSerializerOptions);
    setLinks(refs: IModelSerializerRef): void;
    deserializeProperty(modelPropertyInfo: ISerializationInfo, model: any): any;
    deserializeDefaultValue(modelPropertyInfo: ISerializationInfo): any;
    deserializePropertyValue(modelPropertyInfo: ISerializationInfo, modelValue: any, strict?: boolean): any;
    deserialize(viewModel: ISerializableModel, model: any, serializationsInfo?: ISerializationInfoArray): void;
    serialize(viewModel: ISerializableModel, serializationsInfo?: ISerializationInfoArray, refs?: IModelSerializerRef): any;
    private _isSerializableValue;
    protected serializeProperty(modelPropertyInfo: ISerializationInfo, viewModel: ISerializableModel, serializationsInfo: ISerializationInfoArray, refs: IModelSerializerRef, result: any): void;
    private _serialize;
}
